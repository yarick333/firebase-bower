/*!
 * @license Firebase v4.6.2
 * Build: rev-61e817a
 * Terms: https://firebase.google.com/terms/
 */
var firebase = (function() {
          var window = typeof window === 'undefined' ? self : window;
        return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonpFirebase"];
/******/ 	window["webpackJsonpFirebase"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/ 		if(executeModules) {
/******/ 			for(i=0; i < executeModules.length; i++) {
/******/ 				result = __webpack_require__(__webpack_require__.s = executeModules[i]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		5: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 57);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(28));
__export(__webpack_require__(29));
__export(__webpack_require__(20));
__export(__webpack_require__(65));
__export(__webpack_require__(66));
__export(__webpack_require__(67));
__export(__webpack_require__(68));
__export(__webpack_require__(30));
__export(__webpack_require__(69));
__export(__webpack_require__(31));
__export(__webpack_require__(70));
__export(__webpack_require__(71));
__export(__webpack_require__(73));
__export(__webpack_require__(74));
__export(__webpack_require__(75));

//# sourceMappingURL=index.js.map


/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ../util/dist/cjs/index.js
var cjs = __webpack_require__(0);
var cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);

// CONCATENATED MODULE: ../app/dist/esm/src/firebaseApp.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var contains = function (obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
};
var DEFAULT_ENTRY_NAME = '[DEFAULT]';
// An array to capture listeners before the true auth functions
// exist
var tokenListeners = [];
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var firebaseApp_FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, name, firebase_) {
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.services_ = {};
        this.name_ = name;
        this.options_ = Object(cjs["deepCopy"])(options);
        this.INTERNAL = {
            getUid: function () { return null; },
            getToken: function () { return Promise.resolve(null); },
            addAuthTokenListener: function (callback) {
                tokenListeners.push(callback);
                // Make sure callback is called, asynchronously, in the absence of the auth module
                setTimeout(function () { return callback(null); }, 0);
            },
            removeAuthTokenListener: function (callback) {
                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });
            }
        };
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: true,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            var services = [];
            Object.keys(_this.services_).forEach(function (serviceKey) {
                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {
                    services.push(_this.services_[serviceKey][instanceKey]);
                });
            });
            return Promise.all(services.map(function (service) {
                return service.INTERNAL.delete();
            }));
        })
            .then(function () {
            _this.isDeleted_ = true;
            _this.services_ = {};
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage is the only one that is leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        if (!this.services_[name]) {
            this.services_[name] = {};
        }
        if (!this.services_[name][instanceIdentifier]) {
            /**
             * If a custom instance has been defined (i.e. not '[DEFAULT]')
             * then we will pass that instance on, otherwise we pass `null`
             */
            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME
                ? instanceIdentifier
                : undefined;
            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
            this.services_[name][instanceIdentifier] = service;
        }
        return this.services_[name][instanceIdentifier];
    };
    /**
     * Callback function used to extend an App instance at the time
     * of service instance creation.
     */
    FirebaseAppImpl.prototype.extendApp = function (props) {
        var _this = this;
        // Copy the object onto the FirebaseAppImpl prototype
        Object(cjs["deepExtend"])(this, props);
        /**
         * If the app has overwritten the addAuthTokenListener stub, forward
         * the active token listeners on to the true fxn.
         *
         * TODO: This function is required due to our current module
         * structure. Once we are able to rely strictly upon a single module
         * implementation, this code should be refactored and Auth should
         * provide these stubs and the upgrade logic
         */
        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {
            tokenListeners.forEach(function (listener) {
                _this.INTERNAL.addAuthTokenListener(listener);
            });
            tokenListeners = [];
        }
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            error('app-deleted', { name: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(firebaseApp_FirebaseAppImpl.prototype.name && firebaseApp_FirebaseAppImpl.prototype.options) ||
    firebaseApp_FirebaseAppImpl.prototype.delete ||
    console.log('dc');
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var apps_ = {};
    var factories = {};
    var appHooks = {};
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        __esModule: true,
        initializeApp: initializeApp,
        app: app,
        apps: null,
        Promise: Promise,
        SDK_VERSION: '4.6.2',
        INTERNAL: {
            registerService: registerService,
            createFirebaseNamespace: createFirebaseNamespace,
            extendNamespace: extendNamespace,
            createSubscribe: cjs["createSubscribe"],
            ErrorFactory: cjs["ErrorFactory"],
            removeApp: removeApp,
            factories: factories,
            useAsService: useAsService,
            Promise: Promise,
            deepExtend: cjs["deepExtend"]
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    Object(cjs["patchProperty"])(namespace, 'default', namespace);
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        var app = apps_[name];
        callAppHooks(app, 'delete');
        delete apps_[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!contains(apps_, name)) {
            error('no-app', { name: name });
        }
        return apps_[name];
    }
    Object(cjs["patchProperty"])(app, 'App', firebaseApp_FirebaseAppImpl);
    /**
     * Create a new App instance (name must be unique).
     */
    function initializeApp(options, name) {
        if (name === undefined) {
            name = DEFAULT_ENTRY_NAME;
        }
        else {
            if (typeof name !== 'string' || name === '') {
                error('bad-app-name', { name: name + '' });
            }
        }
        if (contains(apps_, name)) {
            error('duplicate-app', { name: name });
        }
        var app = new firebaseApp_FirebaseAppImpl(options, name, namespace);
        apps_[name] = app;
        callAppHooks(app, 'create');
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps_).map(function (name) { return apps_[name]; });
    }
    /*
     * Register a Firebase Service.
     *
     * firebase.INTERNAL.registerService()
     *
     * TODO: Implement serviceProperties.
     */
    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
        // Cannot re-register a service that already exists
        if (factories[name]) {
            error('duplicate-service', { name: name });
        }
        // Capture the service factory for later service instantiation
        factories[name] = createService;
        // Capture the appHook, if passed
        if (appHook) {
            appHooks[name] = appHook;
            // Run the **new** app hook on all existing apps
            getApps().forEach(function (app) {
                appHook('create', app);
            });
        }
        // The Service namespace is an accessor function ...
        var serviceNamespace = function (appArg) {
            if (appArg === void 0) { appArg = app(); }
            if (typeof appArg[name] !== 'function') {
                // Invalid argument.
                // This happens in the following case: firebase.storage('gs:/')
                error('invalid-app-argument', { name: name });
            }
            // Forward service instance lookup to the FirebaseApp.
            return appArg[name]();
        };
        // ... and a container for service-level properties.
        if (serviceProperties !== undefined) {
            Object(cjs["deepExtend"])(serviceNamespace, serviceProperties);
        }
        // Monkey-patch the serviceNamespace onto the firebase namespace
        namespace[name] = serviceNamespace;
        // Patch the FirebaseAppImpl prototype
        firebaseApp_FirebaseAppImpl.prototype[name] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var serviceFxn = this._getService.bind(this, name);
            return serviceFxn.apply(this, allowMultipleInstances ? args : []);
        };
        return serviceNamespace;
    }
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        Object(cjs["deepExtend"])(namespace, props);
    }
    function callAppHooks(app, eventName) {
        Object.keys(factories).forEach(function (serviceName) {
            // Ignore virtual services
            var factoryName = useAsService(app, serviceName);
            if (factoryName === null) {
                return;
            }
            if (appHooks[factoryName]) {
                appHooks[factoryName](eventName, app);
            }
        });
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        var options = app.options;
        return useService;
    }
    return namespace;
}
function error(code, args) {
    throw appErrors.create(code, args);
}
// TypeScript does not support non-string indexes!
// let errors: {[code: AppError: string} = {
var errors = {
    'no-app': "No Firebase App '{$name}' has been created - " +
        'call Firebase App.initializeApp()',
    'bad-app-name': "Illegal App name: '{$name}",
    'duplicate-app': "Firebase App named '{$name}' already exists",
    'app-deleted': "Firebase App named '{$name}' already deleted",
    'duplicate-service': "Firebase service named '{$name}' already registered",
    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +
        'account is only allowed in a Node.js environment. On client ' +
        'devices, you should instead initialize the SDK with an api key and ' +
        'auth domain',
    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +
        'Firebase App instance.'
};
var appErrors = new cjs["ErrorFactory"]('app', 'Firebase', errors);


//# sourceMappingURL=firebaseApp.js.map

// CONCATENATED MODULE: ../app/dist/esm/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firebase", function() { return firebase; });
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var firebase = createFirebaseNamespace();
/* harmony default export */ var esm = __webpack_exports__["default"] = (firebase);


//# sourceMappingURL=index.js.map


/***/ }),
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
exports.CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

//# sourceMappingURL=constants.js.map


/***/ }),
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = __webpack_require__(20);
/**
 * Throws an error if the provided assertion is falsy
 * @param {*} assertion The assertion to be tested for falsiness
 * @param {!string} message The message to display if the check fails
 */
exports.assert = function (assertion, message) {
    if (!assertion) {
        throw exports.assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 * @param {string} message
 * @return {!Error}
 */
exports.assertionError = function (message) {
    return new Error('Firebase Database (' +
        constants_1.CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

//# sourceMappingURL=assert.js.map


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var stringToByteArray = function (str) {
    var output = [], p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        while (c > 255) {
            output[p++] = c & 255;
            c >>= 8;
        }
        output[p++] = c;
    }
    return output;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param {Array<number>} bytes Array of numbers representing characters.
 * @return {string} Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    var CHUNK_SIZE = 8192;
    // Special-case the simple case for speed's sake.
    if (bytes.length < CHUNK_SIZE) {
        return String.fromCharCode.apply(null, bytes);
    }
    // The remaining logic splits conversion by chunks since
    // Function#apply() has a maximum parameter count.
    // See discussion: http://goo.gl/LrWmZ9
    var str = '';
    for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {
        var chunk = bytes.slice(i, i + CHUNK_SIZE);
        str += String.fromCharCode.apply(null, chunk);
    }
    return str;
};
// Static lookup maps, lazily populated by init_()
exports.base64 = {
    /**
     * Maps bytes to characters.
     * @type {Object}
     * @private
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     * @type {Object}
     * @private
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @type {Object}
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @type {Object}
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     * @type {string}
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     * @type {string}
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     * @type {string}
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     * @type {boolean}
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param {boolean=} opt_webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return {string} The base64 encoded string.
     */
    encodeByteArray: function (input, opt_webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = opt_webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param {string} input A string to encode.
     * @param {boolean=} opt_webSafe If true, we should use the
     *     alternative alphabet.
     * @return {string} The base64 encoded string.
     */
    encodeString: function (input, opt_webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param {string} input to decode.
     * @param {boolean=} opt_webSafe True if we should use the
     *     alternative alphabet.
     * @return {string} string representing the decoded value.
     */
    decodeString: function (input, opt_webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param {string} input Input to decode.
     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.
     * @return {!Array<number>} bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, opt_webSafe) {
        this.init_();
        var charToByteMap = opt_webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 != 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 != 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 * @param {!string} str
 * @return {!string}
 */
exports.base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return exports.base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param {string} str To be decoded
 * @return {?string} Decoded result, if possible
 */
exports.base64Decode = function (str) {
    try {
        return exports.base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

//# sourceMappingURL=crypt.js.map


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
exports.jsonEval = jsonEval;
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}
exports.stringify = stringify;

//# sourceMappingURL=json.js.map


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/
exports.contains = function (obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
};
exports.safeGet = function (obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key))
        return obj[key];
    // else return undefined.
};
/**
 * Enumerates the keys/values in an object, excluding keys defined on the prototype.
 *
 * @param {?Object.<K,V>} obj Object to enumerate.
 * @param {!function(K, V)} fn Function to call for each key and value.
 * @template K,V
 */
exports.forEach = function (obj, fn) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn(key, obj[key]);
        }
    }
};
/**
 * Copies all the (own) properties from one object to another.
 * @param {!Object} objTo
 * @param {!Object} objFrom
 * @return {!Object} objTo
 */
exports.extend = function (objTo, objFrom) {
    exports.forEach(objFrom, function (key, value) {
        objTo[key] = value;
    });
    return objTo;
};
/**
 * Returns a clone of the specified object.
 * @param {!Object} obj
 * @return {!Object} cloned obj.
 */
exports.clone = function (obj) {
    return exports.extend({}, obj);
};
/**
 * Returns true if obj has typeof "object" and is not null.  Unlike goog.isObject(), does not return true
 * for functions.
 *
 * @param obj {*} A potential object.
 * @returns {boolean} True if it's an object.
 */
exports.isNonNullObject = function (obj) {
    return typeof obj === 'object' && obj !== null;
};
exports.isEmpty = function (obj) {
    for (var key in obj) {
        return false;
    }
    return true;
};
exports.getCount = function (obj) {
    var rv = 0;
    for (var key in obj) {
        rv++;
    }
    return rv;
};
exports.map = function (obj, f, opt_obj) {
    var res = {};
    for (var key in obj) {
        res[key] = f.call(opt_obj, obj[key], key, obj);
    }
    return res;
};
exports.findKey = function (obj, fn, opt_this) {
    for (var key in obj) {
        if (fn.call(opt_this, obj[key], key, obj)) {
            return key;
        }
    }
    return undefined;
};
exports.findValue = function (obj, fn, opt_this) {
    var key = exports.findKey(obj, fn, opt_this);
    return key && obj[key];
};
exports.getAnyKey = function (obj) {
    for (var key in obj) {
        return key;
    }
};
exports.getValues = function (obj) {
    var res = [];
    var i = 0;
    for (var key in obj) {
        res[i++] = obj[key];
    }
    return res;
};
/**
 * Tests whether every key/value pair in an object pass the test implemented
 * by the provided function
 *
 * @param {?Object.<K,V>} obj Object to test.
 * @param {!function(K, V)} fn Function to call for each key and value.
 * @template K,V
 */
exports.every = function (obj, fn) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            if (!fn(key, obj[key])) {
                return false;
            }
        }
    }
    return true;
};

//# sourceMappingURL=obj.js.map


/***/ }),
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

__webpack_require__(58);
module.exports = __webpack_require__(6).default;


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_shims_find__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_shims_find___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__src_shims_find__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex__);
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




//# sourceMappingURL=index.js.map


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __global = (function () {
    if (typeof global !== 'undefined') {
        return global;
    }
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof self !== 'undefined') {
        return self;
    }
    throw new Error('unable to locate global object');
})();
// Polyfill Promise
if (typeof Promise === 'undefined') {
    // HACK: TS throws an error if I attempt to use 'dot-notation'
    __global['Promise'] = Promise = __webpack_require__(60);
}

//# sourceMappingURL=promise.js.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {

  // Store setTimeout reference so promise-polyfill will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var setTimeoutFunc = setTimeout;

  function noop() {}
  
  // Polyfill for Function.prototype.bind
  function bind(fn, thisArg) {
    return function () {
      fn.apply(thisArg, arguments);
    };
  }

  function Promise(fn) {
    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
    if (typeof fn !== 'function') throw new TypeError('not a function');
    this._state = 0;
    this._handled = false;
    this._value = undefined;
    this._deferreds = [];

    doResolve(fn, this);
  }

  function handle(self, deferred) {
    while (self._state === 3) {
      self = self._value;
    }
    if (self._state === 0) {
      self._deferreds.push(deferred);
      return;
    }
    self._handled = true;
    Promise._immediateFn(function () {
      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
        return;
      }
      var ret;
      try {
        ret = cb(self._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }

  function resolve(self, newValue) {
    try {
      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then;
        if (newValue instanceof Promise) {
          self._state = 3;
          self._value = newValue;
          finale(self);
          return;
        } else if (typeof then === 'function') {
          doResolve(bind(then, newValue), self);
          return;
        }
      }
      self._state = 1;
      self._value = newValue;
      finale(self);
    } catch (e) {
      reject(self, e);
    }
  }

  function reject(self, newValue) {
    self._state = 2;
    self._value = newValue;
    finale(self);
  }

  function finale(self) {
    if (self._state === 2 && self._deferreds.length === 0) {
      Promise._immediateFn(function() {
        if (!self._handled) {
          Promise._unhandledRejectionFn(self._value);
        }
      });
    }

    for (var i = 0, len = self._deferreds.length; i < len; i++) {
      handle(self, self._deferreds[i]);
    }
    self._deferreds = null;
  }

  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  /**
   * Take a potentially misbehaving resolver function and make sure
   * onFulfilled and onRejected are only called once.
   *
   * Makes no guarantees about asynchrony.
   */
  function doResolve(fn, self) {
    var done = false;
    try {
      fn(function (value) {
        if (done) return;
        done = true;
        resolve(self, value);
      }, function (reason) {
        if (done) return;
        done = true;
        reject(self, reason);
      });
    } catch (ex) {
      if (done) return;
      done = true;
      reject(self, ex);
    }
  }

  Promise.prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };

  Promise.prototype.then = function (onFulfilled, onRejected) {
    var prom = new (this.constructor)(noop);

    handle(this, new Handler(onFulfilled, onRejected, prom));
    return prom;
  };

  Promise.all = function (arr) {
    var args = Array.prototype.slice.call(arr);

    return new Promise(function (resolve, reject) {
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        try {
          if (val && (typeof val === 'object' || typeof val === 'function')) {
            var then = val.then;
            if (typeof then === 'function') {
              then.call(val, function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
          args[i] = val;
          if (--remaining === 0) {
            resolve(args);
          }
        } catch (ex) {
          reject(ex);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise.resolve = function (value) {
    if (value && typeof value === 'object' && value.constructor === Promise) {
      return value;
    }

    return new Promise(function (resolve) {
      resolve(value);
    });
  };

  Promise.reject = function (value) {
    return new Promise(function (resolve, reject) {
      reject(value);
    });
  };

  Promise.race = function (values) {
    return new Promise(function (resolve, reject) {
      for (var i = 0, len = values.length; i < len; i++) {
        values[i].then(resolve, reject);
      }
    });
  };

  // Use polyfill for setImmediate for performance gains
  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
    function (fn) {
      setTimeoutFunc(fn, 0);
    };

  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
    if (typeof console !== 'undefined' && console) {
      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
    }
  };

  /**
   * Set the immediate function to execute callbacks
   * @param fn {function} Function to execute
   * @deprecated
   */
  Promise._setImmediateFn = function _setImmediateFn(fn) {
    Promise._immediateFn = fn;
  };

  /**
   * Change the function to execute on unhandled rejection
   * @param {function} fn Function to execute on unhandled rejection
   * @deprecated
   */
  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
    Promise._unhandledRejectionFn = fn;
  };
  
  if (typeof module !== 'undefined' && module.exports) {
    module.exports = Promise;
  } else if (!root.Promise) {
    root.Promise = Promise;
  }

})(this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61).setImmediate))

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(62);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19), __webpack_require__(27)))

/***/ }),
/* 63 */
/***/ (function(module, exports) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * This is the Array.prototype.find polyfill from MDN
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
 * https://tc39.github.io/ecma262/#sec-array.prototype.find
 */
if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
        value: function (predicate) {
            // 1. Let O be ? ToObject(this value).
            if (this == null) {
                throw new TypeError('"this" is null or not defined');
            }
            var o = Object(this);
            // 2. Let len be ? ToLength(? Get(O, "length")).
            var len = o.length >>> 0;
            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }
            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
            var thisArg = arguments[1];
            // 5. Let k be 0.
            var k = 0;
            // 6. Repeat, while k < len
            while (k < len) {
                // a. Let Pk be ! ToString(k).
                // b. Let kValue be ? Get(O, Pk).
                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
                // d. If testResult is true, return kValue.
                var kValue = o[k];
                if (predicate.call(thisArg, kValue, k, o)) {
                    return kValue;
                }
                // e. Increase k by 1.
                k++;
            }
            // 7. Return undefined.
            return undefined;
        }
    });
}

//# sourceMappingURL=find.js.map


/***/ }),
/* 64 */
/***/ (function(module, exports) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * This is the Array.prototype.findIndex polyfill from MDN
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex
 * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
 */
if (!Array.prototype.findIndex) {
    Object.defineProperty(Array.prototype, 'findIndex', {
        value: function (predicate) {
            // 1. Let O be ? ToObject(this value).
            if (this == null) {
                throw new TypeError('"this" is null or not defined');
            }
            var o = Object(this);
            // 2. Let len be ? ToLength(? Get(O, "length")).
            var len = o.length >>> 0;
            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }
            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
            var thisArg = arguments[1];
            // 5. Let k be 0.
            var k = 0;
            // 6. Repeat, while k < len
            while (k < len) {
                // a. Let Pk be ! ToString(k).
                // b. Let kValue be ? Get(O, Pk).
                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
                // d. If testResult is true, return k.
                var kValue = o[k];
                if (predicate.call(thisArg, kValue, k, o)) {
                    return k;
                }
                // e. Increase k by 1.
                k++;
            }
            // 7. Return -1.
            return -1;
        }
    });
}

//# sourceMappingURL=findIndex.js.map


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
exports.deepCopy = deepCopy;
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}
exports.deepExtend = deepExtend;
// TODO: Really needed (for JSCompiler type checking)?
function patchProperty(obj, prop, value) {
    obj[prop] = value;
}
exports.patchProperty = patchProperty;

//# sourceMappingURL=deepCopy.js.map


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback
     * @return {!function(?(Error), ?=)}
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());
exports.Deferred = Deferred;

//# sourceMappingURL=deferred.js.map


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = __webpack_require__(20);
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return {string} user agent string
 */
exports.getUA = function () {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
};
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor
 * Cordova `onDeviceReady`, which would normally wait for a callback.
 *
 * @return {boolean} isMobileCordova
 */
exports.isMobileCordova = function () {
    return (typeof window !== 'undefined' &&
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA()));
};
/**
 * Detect React Native.
 *
 * @return {boolean} True if ReactNative environment is detected.
 */
exports.isReactNative = function () {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
};
/**
 * Detect Node.js.
 *
 * @return {boolean} True if Node.js environment is detected.
 */
exports.isNodeSdk = function () {
    return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;
};

//# sourceMappingURL=environment.js.map


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_NAME = 'FirebaseError';
var captureStackTrace = Error
    .captureStackTrace;
// Export for faking in tests
function patchCapture(captureFake) {
    var result = captureStackTrace;
    captureStackTrace = captureFake;
    return result;
}
exports.patchCapture = patchCapture;
var FirebaseError = /** @class */ (function () {
    function FirebaseError(code, message) {
        this.code = code;
        this.message = message;
        var stack;
        // We want the stack value, if implemented by Error
        if (captureStackTrace) {
            // Patches this.stack, omitted calls above ErrorFactory#create
            captureStackTrace(this, ErrorFactory.prototype.create);
        }
        else {
            var err_1 = Error.apply(this, arguments);
            this.name = ERROR_NAME;
            // Make non-enumerable getter for the property.
            Object.defineProperty(this, 'stack', {
                get: function () {
                    return err_1.stack;
                }
            });
        }
    }
    return FirebaseError;
}());
exports.FirebaseError = FirebaseError;
// Back-door inheritance
FirebaseError.prototype = Object.create(Error.prototype);
FirebaseError.prototype.constructor = FirebaseError;
FirebaseError.prototype.name = ERROR_NAME;
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
        // Matches {$name}, by default.
        this.pattern = /\{\$([^}]+)}/g;
        // empty
    }
    ErrorFactory.prototype.create = function (code, data) {
        if (data === undefined) {
            data = {};
        }
        var template = this.errors[code];
        var fullCode = this.service + '/' + code;
        var message;
        if (template === undefined) {
            message = 'Error';
        }
        else {
            message = template.replace(this.pattern, function (match, key) {
                var value = data[key];
                return value !== undefined ? value.toString() : '<' + key + '?>';
            });
        }
        // Service: Error message (service/code).
        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';
        var err = new FirebaseError(fullCode, message);
        // Populate the Error object with message parts for programmatic
        // accesses (e.g., e.file).
        for (var prop in data) {
            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {
                continue;
            }
            err[prop] = data[prop];
        }
        return err;
    };
    return ErrorFactory;
}());
exports.ErrorFactory = ErrorFactory;

//# sourceMappingURL=errors.js.map


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var crypt_1 = __webpack_require__(29);
var json_1 = __webpack_require__(30);
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 *
 * @param {?string} token
 * @return {{header: *, claims: *, data: *, signature: string}}
 */
exports.decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = json_1.jsonEval(crypt_1.base64Decode(parts[0]) || '');
        claims = json_1.jsonEval(crypt_1.base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 *
 * @param {?string} token
 * @return {boolean}
 */
exports.isValidTimestamp = function (token) {
    var claims = exports.decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (now && validSince && validUntil && now >= validSince && now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 *
 * @param {?string} token
 * @return {?number}
 */
exports.issuedAtTime = function (token) {
    var claims = exports.decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty
 * signature.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 *
 * @param {?string} token
 * @return {boolean}
 */
exports.isValidFormat = function (token) {
    var decoded = exports.decode(token), claims = decoded.claims;
    return (!!decoded.signature &&
        !!claims &&
        typeof claims === 'object' &&
        claims.hasOwnProperty('iat'));
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 *
 * @param {?string} token
 * @return {boolean}
 */
exports.isAdmin = function (token) {
    var claims = exports.decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

//# sourceMappingURL=jwt.js.map


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var obj_1 = __webpack_require__(31);
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params
 * object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 *
 * @param {!Object} querystringParams
 * @return {string}
 */
exports.querystring = function (querystringParams) {
    var params = [];
    obj_1.forEach(querystringParams, function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    });
    return params.length ? '&' + params.join('&') : '';
};
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})
 *
 * @param {string} querystring
 * @return {!Object}
 */
exports.querystringDecode = function (querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
};

//# sourceMappingURL=query.js.map


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var hash_1 = __webpack_require__(72);
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @extends {Hash}
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function (_super) {
    __extends(Sha1, _super);
    function Sha1() {
        var _this = _super.call(this) || this;
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @type {!Array<number>}
         * @private
         */
        _this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @type {!Array<number>}
         * @private
         */
        _this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @type {!Array<number>}
         * @private
         */
        _this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @type {!Array<number>}
         * @private
         */
        _this.pad_ = [];
        /**
         * @private {number}
         */
        _this.inbuf_ = 0;
        /**
         * @private {number}
         */
        _this.total_ = 0;
        _this.blockSize = 512 / 8;
        _this.pad_[0] = 128;
        for (var i = 1; i < _this.blockSize; ++i) {
            _this.pad_[i] = 0;
        }
        _this.reset();
        return _this;
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.
     * @param {number=} opt_offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, opt_offset) {
        if (!opt_offset) {
            opt_offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(opt_offset) << 24) |
                        (buf.charCodeAt(opt_offset + 1) << 16) |
                        (buf.charCodeAt(opt_offset + 2) << 8) |
                        buf.charCodeAt(opt_offset + 3);
                opt_offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[opt_offset] << 24) |
                        (buf[opt_offset + 1] << 16) |
                        (buf[opt_offset + 2] << 8) |
                        buf[opt_offset + 3];
                opt_offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, opt_length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (opt_length === undefined) {
            opt_length = bytes.length;
        }
        var lengthMinusBlock = opt_length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < opt_length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf == 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < opt_length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf == this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < opt_length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf == this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += opt_length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}(hash_1.Hash));
exports.Sha1 = Sha1;

//# sourceMappingURL=sha1.js.map


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright 2011 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Abstract cryptographic hash interface.
 *
 * See Sha1 and Md5 for sample implementations.
 *
 */
/**
 * Create a cryptographic hash instance.
 *
 * @constructor
 * @struct
 */
var Hash = /** @class */ (function () {
    function Hash() {
        /**
         * The block size for the hasher.
         * @type {number}
         */
        this.blockSize = -1;
    }
    return Hash;
}());
exports.Hash = Hash;

//# sourceMappingURL=hash.js.map


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
exports.createSubscribe = createSubscribe;
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
exports.async = async;
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

//# sourceMappingURL=subscribe.js.map


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param {!string} fnName The function name
 * @param {!number} minCount The minimum number of arguments to allow for the function call
 * @param {!number} maxCount The maximum number of argument to allow for the function call
 * @param {!number} argCount The actual number of arguments provided.
 */
exports.validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param {!string} fnName The function name
 * @param {!number} argumentNumber The index of the argument
 * @param {boolean} optional Whether or not the argument is optional
 * @return {!string} The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
exports.errorPrefix = errorPrefix;
/**
 * @param {!string} fnName
 * @param {!number} argumentNumber
 * @param {!string} namespace
 * @param {boolean} optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace)
        return;
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid firebase namespace.');
    }
}
exports.validateNamespace = validateNamespace;
function validateCallback(fnName, argumentNumber, callback, optional) {
    if (optional && !callback)
        return;
    if (typeof callback !== 'function')
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid function.');
}
exports.validateCallback = validateCallback;
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context)
        return;
    if (typeof context !== 'object' || context === null)
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid context object.');
}
exports.validateContextObject = validateContextObject;

//# sourceMappingURL=validation.js.map


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __webpack_require__(28);
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
exports.stringToByteArray = function (str) {
    var out = [], p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert_1.assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
exports.stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

//# sourceMappingURL=utf8.js.map


/***/ })
/******/ ]);
        })().default;
//# sourceMappingURL=firebase-app.js.map
/*!
 * @license Firebase v4.6.2
 * Build: rev-61e817a
 * Terms: https://firebase.google.com/terms/
 */
try {
        webpackJsonpFirebase([4],{

/***/ 76:
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

__webpack_require__(77);


/***/ }),

/***/ 77:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var require;(function() {
  var firebase = __webpack_require__(6).default;
  var COMPILED=false;var goog=goog||{};goog.global=this;goog.global.CLOSURE_UNCOMPILED_DEFINES;goog.global.CLOSURE_DEFINES;goog.isDef=function(val){return val!==void 0};goog.isString=function(val){return typeof val=="string"};goog.isBoolean=function(val){return typeof val=="boolean"};goog.isNumber=function(val){return typeof val=="number"};
goog.exportPath_=function(name,opt_object,opt_objectToExportTo){var parts=name.split(".");var cur=opt_objectToExportTo||goog.global;if(!(parts[0]in cur)&&cur.execScript)cur.execScript("var "+parts[0]);for(var part;parts.length&&(part=parts.shift());)if(!parts.length&&goog.isDef(opt_object))cur[part]=opt_object;else if(cur[part]&&cur[part]!==Object.prototype[part])cur=cur[part];else cur=cur[part]={}};
goog.define=function(name,defaultValue){var value=defaultValue;if(!COMPILED)if(goog.global.CLOSURE_UNCOMPILED_DEFINES&&goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType===undefined&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,name))value=goog.global.CLOSURE_UNCOMPILED_DEFINES[name];else if(goog.global.CLOSURE_DEFINES&&goog.global.CLOSURE_DEFINES.nodeType===undefined&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,name))value=goog.global.CLOSURE_DEFINES[name];
goog.exportPath_(name,value)};goog.define("goog.DEBUG",true);goog.define("goog.LOCALE","en");goog.define("goog.TRUSTED_SITE",true);goog.define("goog.STRICT_MODE_COMPATIBLE",false);goog.define("goog.DISALLOW_TEST_ONLY_CODE",COMPILED&&!goog.DEBUG);goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING",false);
goog.provide=function(name){if(goog.isInModuleLoader_())throw new Error("goog.provide can not be used within a goog.module.");if(!COMPILED)if(goog.isProvided_(name))throw new Error('Namespace "'+name+'" already declared.');goog.constructNamespace_(name)};
goog.constructNamespace_=function(name,opt_obj){if(!COMPILED){delete goog.implicitNamespaces_[name];var namespace=name;while(namespace=namespace.substring(0,namespace.lastIndexOf("."))){if(goog.getObjectByName(namespace))break;goog.implicitNamespaces_[namespace]=true}}goog.exportPath_(name,opt_obj)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(name){if(!goog.isString(name)||!name||name.search(goog.VALID_MODULE_RE_)==-1)throw new Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw new Error("Module "+name+" has been loaded incorrectly. Note, "+"modules cannot be loaded as normal scripts. They require some kind of "+"pre-processing step. You're likely trying to load a module via a "+"script tag or as a part of a concatenated bundle without rewriting the "+"module. For more info see: "+"https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw new Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=name;if(!COMPILED){if(goog.isProvided_(name))throw new Error('Namespace "'+name+'" already declared.');delete goog.implicitNamespaces_[name]}};goog.module.get=function(name){return goog.module.getInternal_(name)};
goog.module.getInternal_=function(name){if(!COMPILED)if(name in goog.loadedModules_)return goog.loadedModules_[name];else if(!goog.implicitNamespaces_[name]){var ns=goog.getObjectByName(name);return ns!=null?ns:null}return null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.moduleLoaderState_!=null};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw new Error("goog.module.declareLegacyNamespace must be called from "+"within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw new Error("goog.module must be called prior to "+"goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=true};
goog.setTestOnly=function(opt_message){if(goog.DISALLOW_TEST_ONLY_CODE){opt_message=opt_message||"";throw new Error("Importing test-only code into non-debug environment"+(opt_message?": "+opt_message:"."));}};goog.forwardDeclare=function(name){};goog.forwardDeclare("Document");goog.forwardDeclare("HTMLScriptElement");goog.forwardDeclare("XMLHttpRequest");
if(!COMPILED){goog.isProvided_=function(name){return name in goog.loadedModules_||!goog.implicitNamespaces_[name]&&goog.isDefAndNotNull(goog.getObjectByName(name))};goog.implicitNamespaces_={"goog.module":true}}goog.getObjectByName=function(name,opt_obj){var parts=name.split(".");var cur=opt_obj||goog.global;for(var i=0;i<parts.length;i++){cur=cur[parts[i]];if(!goog.isDefAndNotNull(cur))return null}return cur};
goog.globalize=function(obj,opt_global){var global=opt_global||goog.global;for(var x in obj)global[x]=obj[x]};
goog.addDependency=function(relPath,provides,requires,opt_loadFlags){if(goog.DEPENDENCIES_ENABLED){var provide,require;var path=relPath.replace(/\\/g,"/");var deps=goog.dependencies_;if(!opt_loadFlags||typeof opt_loadFlags==="boolean")opt_loadFlags=opt_loadFlags?{"module":"goog"}:{};for(var i=0;provide=provides[i];i++){deps.nameToPath[provide]=path;deps.loadFlags[path]=opt_loadFlags}for(var j=0;require=requires[j];j++){if(!(path in deps.requires))deps.requires[path]={};deps.requires[path][require]=
true}}};goog.define("goog.ENABLE_DEBUG_LOADER",true);goog.logToConsole_=function(msg){if(goog.global.console)goog.global.console["error"](msg)};
goog.require=function(name){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_)goog.maybeProcessDeferredDep_(name);if(goog.isProvided_(name)){if(goog.isInModuleLoader_())return goog.module.getInternal_(name)}else if(goog.ENABLE_DEBUG_LOADER){var path=goog.getPathFromDeps_(name);if(path)goog.writeScripts_(path);else{var errorMessage="goog.require could not find: "+name;goog.logToConsole_(errorMessage);throw new Error(errorMessage);}}return null}};goog.basePath="";goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;goog.global.CLOSURE_IMPORT_SCRIPT;goog.nullFunction=function(){};goog.abstractMethod=function(){throw new Error("unimplemented abstract method");};goog.addSingletonGetter=function(ctor){ctor.instance_=undefined;ctor.getInstance=function(){if(ctor.instance_)return ctor.instance_;if(goog.DEBUG)goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=ctor;return ctor.instance_=new ctor}};goog.instantiatedSingletons_=[];goog.define("goog.LOAD_MODULE_USING_EVAL",true);
goog.define("goog.SEAL_MODULE_EXPORTS",goog.DEBUG);goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.define("goog.TRANSPILE","detect");goog.define("goog.TRANSPILER","transpile.js");
if(goog.DEPENDENCIES_ENABLED){goog.dependencies_={loadFlags:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}};goog.inHtmlDocument_=function(){var doc=goog.global.document;return doc!=null&&"write"in doc};goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH)){goog.basePath=goog.global.CLOSURE_BASE_PATH;return}else if(!goog.inHtmlDocument_())return;var doc=goog.global.document;var currentScript=doc.currentScript;if(currentScript)var scripts=
[currentScript];else var scripts=doc.getElementsByTagName("SCRIPT");for(var i=scripts.length-1;i>=0;--i){var script=scripts[i];var src=script.src;var qmark=src.lastIndexOf("?");var l=qmark==-1?src.length:qmark;if(src.substr(l-7,7)=="base.js"){goog.basePath=src.substr(0,l-7);return}}};goog.importScript_=function(src,opt_sourceText){var importScript=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_;if(importScript(src,opt_sourceText))goog.dependencies_.written[src]=true};goog.IS_OLD_IE_=!!(!goog.global.atob&&
goog.global.document&&goog.global.document.all);goog.oldIeWaiting_=false;goog.importProcessedScript_=function(src,isModule,needsTranspile){var bootstrap='goog.retrieveAndExec_("'+src+'", '+isModule+", "+needsTranspile+");";goog.importScript_("",bootstrap)};goog.queuedModules_=[];goog.wrapModule_=function(srcUrl,scriptText){if(!goog.LOAD_MODULE_USING_EVAL||!goog.isDef(goog.global.JSON))return""+"goog.loadModule(function(exports) {"+'"use strict";'+scriptText+"\n"+";return exports"+"});"+"\n//# sourceURL="+
srcUrl+"\n";else return""+"goog.loadModule("+goog.global.JSON.stringify(scriptText+"\n//# sourceURL="+srcUrl+"\n")+");"};goog.loadQueuedModules_=function(){var count=goog.queuedModules_.length;if(count>0){var queue=goog.queuedModules_;goog.queuedModules_=[];for(var i=0;i<count;i++){var path=queue[i];goog.maybeProcessDeferredPath_(path)}}goog.oldIeWaiting_=false};goog.maybeProcessDeferredDep_=function(name){if(goog.isDeferredModule_(name)&&goog.allDepsAreAvailable_(name)){var path=goog.getPathFromDeps_(name);
goog.maybeProcessDeferredPath_(goog.basePath+path)}};goog.isDeferredModule_=function(name){var path=goog.getPathFromDeps_(name);var loadFlags=path&&goog.dependencies_.loadFlags[path]||{};var languageLevel=loadFlags["lang"]||"es3";if(path&&(loadFlags["module"]=="goog"||goog.needsTranspile_(languageLevel))){var abspath=goog.basePath+path;return abspath in goog.dependencies_.deferred}return false};goog.allDepsAreAvailable_=function(name){var path=goog.getPathFromDeps_(name);if(path&&path in goog.dependencies_.requires)for(var requireName in goog.dependencies_.requires[path])if(!goog.isProvided_(requireName)&&
!goog.isDeferredModule_(requireName))return false;return true};goog.maybeProcessDeferredPath_=function(abspath){if(abspath in goog.dependencies_.deferred){var src=goog.dependencies_.deferred[abspath];delete goog.dependencies_.deferred[abspath];goog.globalEval(src)}};goog.loadModuleFromUrl=function(url){goog.retrieveAndExec_(url,true,false)};goog.writeScriptSrcNode_=function(src){goog.global.document.write('<script type="text/javascript" src="'+src+'"></'+"script>")};goog.appendScriptSrcNode_=function(src){var doc=
goog.global.document;var scriptEl=doc.createElement("script");scriptEl.type="text/javascript";scriptEl.src=src;scriptEl.defer=false;scriptEl.async=false;doc.head.appendChild(scriptEl)};goog.writeScriptTag_=function(src,opt_sourceText){if(goog.inHtmlDocument_()){var doc=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&doc.readyState=="complete"){var isDeps=/\bdeps.js$/.test(src);if(isDeps)return false;else throw new Error('Cannot write "'+src+'" after document load');}if(opt_sourceText===
undefined)if(!goog.IS_OLD_IE_)if(goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING)goog.appendScriptSrcNode_(src);else goog.writeScriptSrcNode_(src);else{goog.oldIeWaiting_=true;var state=" onreadystatechange='goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ";doc.write('<script type="text/javascript" src="'+src+'"'+state+"></"+"script>")}else doc.write('<script type="text/javascript">'+goog.protectScriptTag_(opt_sourceText)+"</"+"script>");return true}else return false};goog.protectScriptTag_=
function(str){return str.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")};goog.needsTranspile_=function(lang){if(goog.TRANSPILE=="always")return true;else if(goog.TRANSPILE=="never")return false;else if(!goog.requiresTranspilation_)goog.requiresTranspilation_=goog.createRequiresTranspilation_();if(lang in goog.requiresTranspilation_)return goog.requiresTranspilation_[lang];else throw new Error("Unknown language mode: "+lang);};goog.requiresTranspilation_=null;goog.lastNonModuleScriptIndex_=0;goog.onScriptLoad_=
function(script,scriptIndex){if(script.readyState=="complete"&&goog.lastNonModuleScriptIndex_==scriptIndex)goog.loadQueuedModules_();return true};goog.writeScripts_=function(pathToLoad){var scripts=[];var seenScript={};var deps=goog.dependencies_;function visitNode(path){if(path in deps.written)return;if(path in deps.visited)return;deps.visited[path]=true;if(path in deps.requires)for(var requireName in deps.requires[path])if(!goog.isProvided_(requireName))if(requireName in deps.nameToPath)visitNode(deps.nameToPath[requireName]);
else throw new Error("Undefined nameToPath for "+requireName);if(!(path in seenScript)){seenScript[path]=true;scripts.push(path)}}visitNode(pathToLoad);for(var i=0;i<scripts.length;i++){var path=scripts[i];goog.dependencies_.written[path]=true}var moduleState=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(var i=0;i<scripts.length;i++){var path=scripts[i];if(path){var loadFlags=deps.loadFlags[path]||{};var languageLevel=loadFlags["lang"]||"es3";var needsTranspile=goog.needsTranspile_(languageLevel);
if(loadFlags["module"]=="goog"||needsTranspile)goog.importProcessedScript_(goog.basePath+path,loadFlags["module"]=="goog",needsTranspile);else goog.importScript_(goog.basePath+path)}else{goog.moduleLoaderState_=moduleState;throw new Error("Undefined script input");}}goog.moduleLoaderState_=moduleState};goog.getPathFromDeps_=function(rule){if(rule in goog.dependencies_.nameToPath)return goog.dependencies_.nameToPath[rule];else return null};goog.findBasePath_();if(!goog.global.CLOSURE_NO_DEPS)goog.importScript_(goog.basePath+
"deps.js")}goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(goog.hasBadLetScoping==null){var hasBadLetScoping;try{hasBadLetScoping=!eval('"use strict";'+"let x = 1; function f() { return typeof x; };"+'f() == "number";')}catch(e){hasBadLetScoping=false}goog.hasBadLetScoping=hasBadLetScoping}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(moduleDef){return"(function(){"+moduleDef+"\n"+";"+"})();\n"};
goog.loadModule=function(moduleDef){var previousState=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:undefined,declareLegacyNamespace:false};var exports;if(goog.isFunction(moduleDef))exports=moduleDef.call(undefined,{});else if(goog.isString(moduleDef)){if(goog.useSafari10Workaround())moduleDef=goog.workaroundSafari10EvalBug(moduleDef);exports=goog.loadModuleFromSource_.call(undefined,moduleDef)}else throw new Error("Invalid module definition");var moduleName=goog.moduleLoaderState_.moduleName;
if(!goog.isString(moduleName)||!moduleName)throw new Error('Invalid module name "'+moduleName+'"');if(goog.moduleLoaderState_.declareLegacyNamespace)goog.constructNamespace_(moduleName,exports);else if(goog.SEAL_MODULE_EXPORTS&&Object.seal&&typeof exports=="object"&&exports!=null)Object.seal(exports);goog.loadedModules_[moduleName]=exports}finally{goog.moduleLoaderState_=previousState}};goog.loadModuleFromSource_=function(){var exports={};eval(arguments[0]);return exports};
goog.normalizePath_=function(path){var components=path.split("/");var i=0;while(i<components.length)if(components[i]==".")components.splice(i,1);else if(i&&components[i]==".."&&components[i-1]&&components[i-1]!="..")components.splice(--i,2);else i++;return components.join("/")};goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_=function(src){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(src);else try{var xhr=new goog.global["XMLHttpRequest"];xhr.open("get",src,false);xhr.send();return xhr.status==0||xhr.status==200?xhr.responseText:null}catch(err){return null}};
goog.retrieveAndExec_=function(src,isModule,needsTranspile){if(!COMPILED){var originalPath=src;src=goog.normalizePath_(src);var importScript=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_;var scriptText=goog.loadFileSync_(src);if(scriptText==null)throw new Error('Load of "'+src+'" failed');if(needsTranspile)scriptText=goog.transpile_.call(goog.global,scriptText,src);if(isModule)scriptText=goog.wrapModule_(src,scriptText);else scriptText+="\n//# sourceURL="+src;var isOldIE=goog.IS_OLD_IE_;
if(isOldIE&&goog.oldIeWaiting_){goog.dependencies_.deferred[originalPath]=scriptText;goog.queuedModules_.push(originalPath)}else importScript(src,scriptText)}};
goog.transpile_=function(code,path){var jscomp=goog.global["$jscomp"];if(!jscomp)goog.global["$jscomp"]=jscomp={};var transpile=jscomp.transpile;if(!transpile){var transpilerPath=goog.basePath+goog.TRANSPILER;var transpilerCode=goog.loadFileSync_(transpilerPath);if(transpilerCode){eval(transpilerCode+"\n//# sourceURL="+transpilerPath);if(goog.global["$gwtExport"]&&goog.global["$gwtExport"]["$jscomp"]&&!goog.global["$gwtExport"]["$jscomp"]["transpile"])throw new Error('The transpiler did not properly export the "transpile" '+
"method. $gwtExport: "+JSON.stringify(goog.global["$gwtExport"]));goog.global["$jscomp"].transpile=goog.global["$gwtExport"]["$jscomp"]["transpile"];jscomp=goog.global["$jscomp"];transpile=jscomp.transpile}}if(!transpile){var suffix=" requires transpilation but no transpiler was found.";transpile=jscomp.transpile=function(code,path){goog.logToConsole_(path+suffix);return code}}return transpile(code,path)};
goog.typeOf=function(value){var s=typeof value;if(s=="object")if(value){if(value instanceof Array)return"array";else if(value instanceof Object)return s;var className=Object.prototype.toString.call(value);if(className=="[object Window]")return"object";if(className=="[object Array]"||typeof value.length=="number"&&typeof value.splice!="undefined"&&typeof value.propertyIsEnumerable!="undefined"&&!value.propertyIsEnumerable("splice"))return"array";if(className=="[object Function]"||typeof value.call!=
"undefined"&&typeof value.propertyIsEnumerable!="undefined"&&!value.propertyIsEnumerable("call"))return"function"}else return"null";else if(s=="function"&&typeof value.call=="undefined")return"object";return s};goog.isNull=function(val){return val===null};goog.isDefAndNotNull=function(val){return val!=null};goog.isArray=function(val){return goog.typeOf(val)=="array"};goog.isArrayLike=function(val){var type=goog.typeOf(val);return type=="array"||type=="object"&&typeof val.length=="number"};
goog.isDateLike=function(val){return goog.isObject(val)&&typeof val.getFullYear=="function"};goog.isFunction=function(val){return goog.typeOf(val)=="function"};goog.isObject=function(val){var type=typeof val;return type=="object"&&val!=null||type=="function"};goog.getUid=function(obj){return obj[goog.UID_PROPERTY_]||(obj[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(obj){return!!obj[goog.UID_PROPERTY_]};
goog.removeUid=function(obj){if(obj!==null&&"removeAttribute"in obj)obj.removeAttribute(goog.UID_PROPERTY_);try{delete obj[goog.UID_PROPERTY_]}catch(ex){}};goog.UID_PROPERTY_="closure_uid_"+(Math.random()*1E9>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;
goog.cloneObject=function(obj){var type=goog.typeOf(obj);if(type=="object"||type=="array"){if(obj.clone)return obj.clone();var clone=type=="array"?[]:{};for(var key in obj)clone[key]=goog.cloneObject(obj[key]);return clone}return obj};goog.bindNative_=function(fn,selfObj,var_args){return fn.call.apply(fn.bind,arguments)};
goog.bindJs_=function(fn,selfObj,var_args){if(!fn)throw new Error;if(arguments.length>2){var boundArgs=Array.prototype.slice.call(arguments,2);return function(){var newArgs=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(newArgs,boundArgs);return fn.apply(selfObj,newArgs)}}else return function(){return fn.apply(selfObj,arguments)}};
goog.bind=function(fn,selfObj,var_args){if(Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1)goog.bind=goog.bindNative_;else goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};goog.partial=function(fn,var_args){var args=Array.prototype.slice.call(arguments,1);return function(){var newArgs=args.slice();newArgs.push.apply(newArgs,arguments);return fn.apply(this,newArgs)}};goog.mixin=function(target,source){for(var x in source)target[x]=source[x]};
goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(script){if(goog.global.execScript)goog.global.execScript(script,"JavaScript");else if(goog.global.eval){if(goog.evalWorksForGlobals_==null){goog.global.eval("var _evalTest_ = 1;");if(typeof goog.global["_evalTest_"]!="undefined"){try{delete goog.global["_evalTest_"]}catch(ignore){}goog.evalWorksForGlobals_=true}else goog.evalWorksForGlobals_=false}if(goog.evalWorksForGlobals_)goog.global.eval(script);else{var doc=goog.global.document;var scriptElt=doc.createElement("SCRIPT");
scriptElt.type="text/javascript";scriptElt.defer=false;scriptElt.appendChild(doc.createTextNode(script));doc.body.appendChild(scriptElt);doc.body.removeChild(scriptElt)}}else throw new Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;goog.cssNameMapping_;goog.cssNameMappingStyle_;goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName=function(className,opt_modifier){if(String(className).charAt(0)==".")throw new Error('className passed in goog.getCssName must not start with ".".'+" You passed: "+className);var getMapping=function(cssName){return goog.cssNameMapping_[cssName]||cssName};var renameByParts=function(cssName){var parts=cssName.split("-");var mapped=[];for(var i=0;i<parts.length;i++)mapped.push(getMapping(parts[i]));return mapped.join("-")};var rename;if(goog.cssNameMapping_)rename=goog.cssNameMappingStyle_==
"BY_WHOLE"?getMapping:renameByParts;else rename=function(a){return a};var result=opt_modifier?className+"-"+rename(opt_modifier):rename(className);if(goog.global.CLOSURE_CSS_NAME_MAP_FN)return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);return result};goog.setCssNameMapping=function(mapping,opt_style){goog.cssNameMapping_=mapping;goog.cssNameMappingStyle_=opt_style};goog.global.CLOSURE_CSS_NAME_MAPPING;if(!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING)goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING;
goog.getMsg=function(str,opt_values){if(opt_values)str=str.replace(/\{\$([^}]+)}/g,function(match,key){return opt_values!=null&&key in opt_values?opt_values[key]:match});return str};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(publicPath,object,opt_objectToExportTo){goog.exportPath_(publicPath,object,opt_objectToExportTo)};goog.exportProperty=function(object,publicName,symbol){object[publicName]=symbol};
goog.inherits=function(childCtor,parentCtor){function tempCtor(){}tempCtor.prototype=parentCtor.prototype;childCtor.superClass_=parentCtor.prototype;childCtor.prototype=new tempCtor;childCtor.prototype.constructor=childCtor;childCtor.base=function(me,methodName,var_args){var args=new Array(arguments.length-2);for(var i=2;i<arguments.length;i++)args[i-2]=arguments[i];return parentCtor.prototype[methodName].apply(me,args)}};
goog.base=function(me,opt_methodName,var_args){var caller=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!caller)throw new Error("arguments.caller not defined.  goog.base() cannot be used "+"with strict mode code. See "+"http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(caller.superClass_){var ctorArgs=new Array(arguments.length-1);for(var i=1;i<arguments.length;i++)ctorArgs[i-1]=arguments[i];return caller.superClass_.constructor.apply(me,ctorArgs)}var args=new Array(arguments.length-
2);for(var i=2;i<arguments.length;i++)args[i-2]=arguments[i];var foundCaller=false;for(var ctor=me.constructor;ctor;ctor=ctor.superClass_&&ctor.superClass_.constructor)if(ctor.prototype[opt_methodName]===caller)foundCaller=true;else if(foundCaller)return ctor.prototype[opt_methodName].apply(me,args);if(me[opt_methodName]===caller)return me.constructor.prototype[opt_methodName].apply(me,args);else throw new Error("goog.base called from a method of one name "+"to a method of a different name");};
goog.scope=function(fn){if(goog.isInModuleLoader_())throw new Error("goog.scope is not supported within a goog.module.");fn.call(goog.global)};if(!COMPILED)goog.global["COMPILED"]=COMPILED;
goog.defineClass=function(superClass,def){var constructor=def.constructor;var statics=def.statics;if(!constructor||constructor==Object.prototype.constructor)constructor=function(){throw new Error("cannot instantiate an interface (no constructor defined).");};var cls=goog.defineClass.createSealingConstructor_(constructor,superClass);if(superClass)goog.inherits(cls,superClass);delete def.constructor;delete def.statics;goog.defineClass.applyProperties_(cls.prototype,def);if(statics!=null)if(statics instanceof
Function)statics(cls);else goog.defineClass.applyProperties_(cls,statics);return cls};goog.defineClass.ClassDescriptor;goog.define("goog.defineClass.SEAL_CLASS_INSTANCES",goog.DEBUG);
goog.defineClass.createSealingConstructor_=function(ctr,superClass){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return ctr;var superclassSealable=!goog.defineClass.isUnsealable_(superClass);var wrappedCtr=function(){var instance=ctr.apply(this,arguments)||this;instance[goog.UID_PROPERTY_]=instance[goog.UID_PROPERTY_];if(this.constructor===wrappedCtr&&superclassSealable&&Object.seal instanceof Function)Object.seal(instance);return instance};return wrappedCtr};
goog.defineClass.isUnsealable_=function(ctr){return ctr&&ctr.prototype&&ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];
goog.defineClass.applyProperties_=function(target,source){var key;for(key in source)if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key];for(var i=0;i<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++){key=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}};goog.tagUnsealableClass=function(ctr){if(!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES)ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=true};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_=function(){var requiresTranspilation={"es3":false};var transpilationRequiredForAllLaterModes=false;function addNewerLanguageTranspilationCheck(modeName,isSupported){if(transpilationRequiredForAllLaterModes)requiresTranspilation[modeName]=true;else if(isSupported())requiresTranspilation[modeName]=false;else{requiresTranspilation[modeName]=true;transpilationRequiredForAllLaterModes=true}}function evalCheck(code){try{return!!eval(code)}catch(ignored){return false}}var userAgent=
goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";addNewerLanguageTranspilationCheck("es5",function(){return evalCheck("[1,].length==1")});addNewerLanguageTranspilationCheck("es6",function(){var re=/Edge\/(\d+)(\.\d)*/i;var edgeUserAgent=userAgent.match(re);if(edgeUserAgent&&Number(edgeUserAgent[1])<15)return false;var es6fullTest="class X{constructor(){if(new.target!=String)throw 1;this.x=42}}"+"let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof "+
"String))throw 1;for(const a of[2,3]){if(a==2)continue;function "+"f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()"+"==3}";return evalCheck('(()=>{"use strict";'+es6fullTest+"})()")});addNewerLanguageTranspilationCheck("es6-impl",function(){return true});addNewerLanguageTranspilationCheck("es7",function(){return evalCheck("2 ** 2 == 4")});addNewerLanguageTranspilationCheck("es8",function(){return evalCheck("async () => 1, true")});return requiresTranspilation};goog.provide("goog.functions");goog.functions.constant=function(retValue){return function(){return retValue}};goog.functions.FALSE=goog.functions.constant(false);goog.functions.TRUE=goog.functions.constant(true);goog.functions.NULL=goog.functions.constant(null);goog.functions.identity=function(opt_returnValue,var_args){return opt_returnValue};goog.functions.error=function(message){return function(){throw new Error(message);}};goog.functions.fail=function(err){return function(){throw err;}};
goog.functions.lock=function(f,opt_numArgs){opt_numArgs=opt_numArgs||0;return function(){return f.apply(this,Array.prototype.slice.call(arguments,0,opt_numArgs))}};goog.functions.nth=function(n){return function(){return arguments[n]}};goog.functions.partialRight=function(fn,var_args){var rightArgs=Array.prototype.slice.call(arguments,1);return function(){var newArgs=Array.prototype.slice.call(arguments);newArgs.push.apply(newArgs,rightArgs);return fn.apply(this,newArgs)}};
goog.functions.withReturnValue=function(f,retValue){return goog.functions.sequence(f,goog.functions.constant(retValue))};goog.functions.equalTo=function(value,opt_useLooseComparison){return function(other){return opt_useLooseComparison?value==other:value===other}};
goog.functions.compose=function(fn,var_args){var functions=arguments;var length=functions.length;return function(){var result;if(length)result=functions[length-1].apply(this,arguments);for(var i=length-2;i>=0;i--)result=functions[i].call(this,result);return result}};goog.functions.sequence=function(var_args){var functions=arguments;var length=functions.length;return function(){var result;for(var i=0;i<length;i++)result=functions[i].apply(this,arguments);return result}};
goog.functions.and=function(var_args){var functions=arguments;var length=functions.length;return function(){for(var i=0;i<length;i++)if(!functions[i].apply(this,arguments))return false;return true}};goog.functions.or=function(var_args){var functions=arguments;var length=functions.length;return function(){for(var i=0;i<length;i++)if(functions[i].apply(this,arguments))return true;return false}};goog.functions.not=function(f){return function(){return!f.apply(this,arguments)}};
goog.functions.create=function(constructor,var_args){var temp=function(){};temp.prototype=constructor.prototype;var obj=new temp;constructor.apply(obj,Array.prototype.slice.call(arguments,1));return obj};goog.define("goog.functions.CACHE_RETURN_VALUE",true);goog.functions.cacheReturnValue=function(fn){var called=false;var value;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return fn();if(!called){value=fn();called=true}return value}};
goog.functions.once=function(f){var inner=f;return function(){if(inner){var tmp=inner;inner=null;tmp()}}};goog.functions.debounce=function(f,interval,opt_scope){var timeout=0;return function(var_args){goog.global.clearTimeout(timeout);var args=arguments;timeout=goog.global.setTimeout(function(){f.apply(opt_scope,args)},interval)}};
goog.functions.throttle=function(f,interval,opt_scope){var timeout=0;var shouldFire=false;var args=[];var handleTimeout=function(){timeout=0;if(shouldFire){shouldFire=false;fire()}};var fire=function(){timeout=goog.global.setTimeout(handleTimeout,interval);f.apply(opt_scope,args)};return function(var_args){args=arguments;if(!timeout)fire();else shouldFire=true}};
goog.functions.rateLimit=function(f,interval,opt_scope){var timeout=0;var handleTimeout=function(){timeout=0};return function(var_args){if(!timeout){timeout=goog.global.setTimeout(handleTimeout,interval);f.apply(opt_scope,arguments)}}};goog.provide("goog.debug.Error");goog.debug.Error=function(opt_msg){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var stack=(new Error).stack;if(stack)this.stack=stack}if(opt_msg)this.message=String(opt_msg);this.reportErrorToServer=true};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.provide("goog.dom.NodeType");goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.provide("goog.string");goog.provide("goog.string.Unicode");goog.define("goog.string.DETECT_DOUBLE_ESCAPING",false);goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING",false);goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=function(str,prefix){return str.lastIndexOf(prefix,0)==0};goog.string.endsWith=function(str,suffix){var l=str.length-suffix.length;return l>=0&&str.indexOf(suffix,l)==l};
goog.string.caseInsensitiveStartsWith=function(str,prefix){return goog.string.caseInsensitiveCompare(prefix,str.substr(0,prefix.length))==0};goog.string.caseInsensitiveEndsWith=function(str,suffix){return goog.string.caseInsensitiveCompare(suffix,str.substr(str.length-suffix.length,suffix.length))==0};goog.string.caseInsensitiveEquals=function(str1,str2){return str1.toLowerCase()==str2.toLowerCase()};
goog.string.subs=function(str,var_args){var splitParts=str.split("%s");var returnString="";var subsArguments=Array.prototype.slice.call(arguments,1);while(subsArguments.length&&splitParts.length>1)returnString+=splitParts.shift()+subsArguments.shift();return returnString+splitParts.join("%s")};goog.string.collapseWhitespace=function(str){return str.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=function(str){return/^[\s\xa0]*$/.test(str)};
goog.string.isEmptyString=function(str){return str.length==0};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(str){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(str){return!/[^\t\n\r ]/.test(str)};goog.string.isAlpha=function(str){return!/[^a-zA-Z]/.test(str)};goog.string.isNumeric=function(str){return!/[^0-9]/.test(str)};
goog.string.isAlphaNumeric=function(str){return!/[^a-zA-Z0-9]/.test(str)};goog.string.isSpace=function(ch){return ch==" "};goog.string.isUnicodeChar=function(ch){return ch.length==1&&ch>=" "&&ch<="~"||ch>="\u0080"&&ch<="\ufffd"};goog.string.stripNewlines=function(str){return str.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(str){return str.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(str){return str.replace(/\xa0|\s/g," ")};
goog.string.normalizeSpaces=function(str){return str.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(str){return str.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(str){return str.trim()}:function(str){return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")};goog.string.trimLeft=function(str){return str.replace(/^[\s\xa0]+/,"")};
goog.string.trimRight=function(str){return str.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=function(str1,str2){var test1=String(str1).toLowerCase();var test2=String(str2).toLowerCase();if(test1<test2)return-1;else if(test1==test2)return 0;else return 1};
goog.string.numberAwareCompare_=function(str1,str2,tokenizerRegExp){if(str1==str2)return 0;if(!str1)return-1;if(!str2)return 1;var tokens1=str1.toLowerCase().match(tokenizerRegExp);var tokens2=str2.toLowerCase().match(tokenizerRegExp);var count=Math.min(tokens1.length,tokens2.length);for(var i=0;i<count;i++){var a=tokens1[i];var b=tokens2[i];if(a!=b){var num1=parseInt(a,10);if(!isNaN(num1)){var num2=parseInt(b,10);if(!isNaN(num2)&&num1-num2)return num1-num2}return a<b?-1:1}}if(tokens1.length!=tokens2.length)return tokens1.length-
tokens2.length;return str1<str2?-1:1};goog.string.intAwareCompare=function(str1,str2){return goog.string.numberAwareCompare_(str1,str2,/\d+|\D+/g)};goog.string.floatAwareCompare=function(str1,str2){return goog.string.numberAwareCompare_(str1,str2,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(str){return encodeURIComponent(String(str))};goog.string.urlDecode=function(str){return decodeURIComponent(str.replace(/\+/g," "))};
goog.string.newLineToBr=function(str,opt_xml){return str.replace(/(\r\n|\r|\n)/g,opt_xml?"<br />":"<br>")};
goog.string.htmlEscape=function(str,opt_isLikelyToContainHtmlChars){if(opt_isLikelyToContainHtmlChars){str=str.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;");if(goog.string.DETECT_DOUBLE_ESCAPING)str=str.replace(goog.string.E_RE_,"&#101;");return str}else{if(!goog.string.ALL_RE_.test(str))return str;if(str.indexOf("&")!=
-1)str=str.replace(goog.string.AMP_RE_,"&amp;");if(str.indexOf("<")!=-1)str=str.replace(goog.string.LT_RE_,"&lt;");if(str.indexOf(">")!=-1)str=str.replace(goog.string.GT_RE_,"&gt;");if(str.indexOf('"')!=-1)str=str.replace(goog.string.QUOT_RE_,"&quot;");if(str.indexOf("'")!=-1)str=str.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;");if(str.indexOf("\x00")!=-1)str=str.replace(goog.string.NULL_RE_,"&#0;");if(goog.string.DETECT_DOUBLE_ESCAPING&&str.indexOf("e")!=-1)str=str.replace(goog.string.E_RE_,"&#101;");
return str}};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/"/g;goog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/;
goog.string.unescapeEntities=function(str){if(goog.string.contains(str,"&"))if(!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global)return goog.string.unescapeEntitiesUsingDom_(str);else return goog.string.unescapePureXmlEntities_(str);return str};goog.string.unescapeEntitiesWithDocument=function(str,document){if(goog.string.contains(str,"&"))return goog.string.unescapeEntitiesUsingDom_(str,document);return str};
goog.string.unescapeEntitiesUsingDom_=function(str,opt_document){var seen={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var div;if(opt_document)div=opt_document.createElement("div");else div=goog.global.document.createElement("div");return str.replace(goog.string.HTML_ENTITY_PATTERN_,function(s,entity){var value=seen[s];if(value)return value;if(entity.charAt(0)=="#"){var n=Number("0"+entity.substr(1));if(!isNaN(n))value=String.fromCharCode(n)}if(!value){div.innerHTML=s+" ";value=div.firstChild.nodeValue.slice(0,
-1)}return seen[s]=value})};goog.string.unescapePureXmlEntities_=function(str){return str.replace(/&([^;]+);/g,function(s,entity){switch(entity){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:if(entity.charAt(0)=="#"){var n=Number("0"+entity.substr(1));if(!isNaN(n))return String.fromCharCode(n)}return s}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;
goog.string.whitespaceEscape=function(str,opt_xml){return goog.string.newLineToBr(str.replace(/  /g," &#160;"),opt_xml)};goog.string.preserveSpaces=function(str){return str.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(str,quoteChars){var length=quoteChars.length;for(var i=0;i<length;i++){var quoteChar=length==1?quoteChars:quoteChars.charAt(i);if(str.charAt(0)==quoteChar&&str.charAt(str.length-1)==quoteChar)return str.substring(1,str.length-1)}return str};
goog.string.truncate=function(str,chars,opt_protectEscapedCharacters){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(str.length>chars)str=str.substring(0,chars-3)+"...";if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};
goog.string.truncateMiddle=function(str,chars,opt_protectEscapedCharacters,opt_trailingChars){if(opt_protectEscapedCharacters)str=goog.string.unescapeEntities(str);if(opt_trailingChars&&str.length>chars){if(opt_trailingChars>chars)opt_trailingChars=chars;var endPoint=str.length-opt_trailingChars;var startPoint=chars-opt_trailingChars;str=str.substring(0,startPoint)+"..."+str.substring(endPoint)}else if(str.length>chars){var half=Math.floor(chars/2);var endPos=str.length-half;half+=chars%2;str=str.substring(0,
half)+"..."+str.substring(endPos)}if(opt_protectEscapedCharacters)str=goog.string.htmlEscape(str);return str};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(s){s=String(s);var sb=['"'];for(var i=0;i<s.length;i++){var ch=s.charAt(i);var cc=ch.charCodeAt(0);sb[i+1]=goog.string.specialEscapeChars_[ch]||(cc>31&&cc<127?ch:goog.string.escapeChar(ch))}sb.push('"');return sb.join("")};goog.string.escapeString=function(str){var sb=[];for(var i=0;i<str.length;i++)sb[i]=goog.string.escapeChar(str.charAt(i));return sb.join("")};
goog.string.escapeChar=function(c){if(c in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[c];if(c in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[c]=goog.string.specialEscapeChars_[c];var rv=c;var cc=c.charCodeAt(0);if(cc>31&&cc<127)rv=c;else{if(cc<256){rv="\\x";if(cc<16||cc>256)rv+="0"}else{rv="\\u";if(cc<4096)rv+="0"}rv+=cc.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[c]=rv};
goog.string.contains=function(str,subString){return str.indexOf(subString)!=-1};goog.string.caseInsensitiveContains=function(str,subString){return goog.string.contains(str.toLowerCase(),subString.toLowerCase())};goog.string.countOf=function(s,ss){return s&&ss?s.split(ss).length-1:0};goog.string.removeAt=function(s,index,stringLength){var resultStr=s;if(index>=0&&index<s.length&&stringLength>0)resultStr=s.substr(0,index)+s.substr(index+stringLength,s.length-index-stringLength);return resultStr};
goog.string.remove=function(str,substr){return str.replace(substr,"")};goog.string.removeAll=function(s,ss){var re=new RegExp(goog.string.regExpEscape(ss),"g");return s.replace(re,"")};goog.string.replaceAll=function(s,ss,replacement){var re=new RegExp(goog.string.regExpEscape(ss),"g");return s.replace(re,replacement.replace(/\$/g,"$$$$"))};goog.string.regExpEscape=function(s){return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};
goog.string.repeat=String.prototype.repeat?function(string,length){return string.repeat(length)}:function(string,length){return(new Array(length+1)).join(string)};goog.string.padNumber=function(num,length,opt_precision){var s=goog.isDef(opt_precision)?num.toFixed(opt_precision):String(num);var index=s.indexOf(".");if(index==-1)index=s.length;return goog.string.repeat("0",Math.max(0,length-index))+s};goog.string.makeSafe=function(obj){return obj==null?"":String(obj)};
goog.string.buildString=function(var_args){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){var x=2147483648;return Math.floor(Math.random()*x).toString(36)+Math.abs(Math.floor(Math.random()*x)^goog.now()).toString(36)};
goog.string.compareVersions=function(version1,version2){var order=0;var v1Subs=goog.string.trim(String(version1)).split(".");var v2Subs=goog.string.trim(String(version2)).split(".");var subCount=Math.max(v1Subs.length,v2Subs.length);for(var subIdx=0;order==0&&subIdx<subCount;subIdx++){var v1Sub=v1Subs[subIdx]||"";var v2Sub=v2Subs[subIdx]||"";do{var v1Comp=/(\d*)(\D*)(.*)/.exec(v1Sub)||["","","",""];var v2Comp=/(\d*)(\D*)(.*)/.exec(v2Sub)||["","","",""];if(v1Comp[0].length==0&&v2Comp[0].length==0)break;
var v1CompNum=v1Comp[1].length==0?0:parseInt(v1Comp[1],10);var v2CompNum=v2Comp[1].length==0?0:parseInt(v2Comp[1],10);order=goog.string.compareElements_(v1CompNum,v2CompNum)||goog.string.compareElements_(v1Comp[2].length==0,v2Comp[2].length==0)||goog.string.compareElements_(v1Comp[2],v2Comp[2]);v1Sub=v1Comp[3];v2Sub=v2Comp[3]}while(order==0)}return order};goog.string.compareElements_=function(left,right){if(left<right)return-1;else if(left>right)return 1;return 0};
goog.string.hashCode=function(str){var result=0;for(var i=0;i<str.length;++i)result=31*result+str.charCodeAt(i)>>>0;return result};goog.string.uniqueStringCounter_=Math.random()*2147483648|0;goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(str){var num=Number(str);if(num==0&&goog.string.isEmptyOrWhitespace(str))return NaN;return num};goog.string.isLowerCamelCase=function(str){return/^[a-z]+([A-Z][a-z]*)*$/.test(str)};
goog.string.isUpperCamelCase=function(str){return/^([A-Z][a-z]*)+$/.test(str)};goog.string.toCamelCase=function(str){return String(str).replace(/\-([a-z])/g,function(all,match){return match.toUpperCase()})};goog.string.toSelectorCase=function(str){return String(str).replace(/([A-Z])/g,"-$1").toLowerCase()};
goog.string.toTitleCase=function(str,opt_delimiters){var delimiters=goog.isString(opt_delimiters)?goog.string.regExpEscape(opt_delimiters):"\\s";delimiters=delimiters?"|["+delimiters+"]+":"";var regexp=new RegExp("(^"+delimiters+")([a-z])","g");return str.replace(regexp,function(all,p1,p2){return p1+p2.toUpperCase()})};goog.string.capitalize=function(str){return String(str.charAt(0)).toUpperCase()+String(str.substr(1)).toLowerCase()};
goog.string.parseInt=function(value){if(isFinite(value))value=String(value);if(goog.isString(value))return/^\s*-?0x/i.test(value)?parseInt(value,16):parseInt(value,10);return NaN};goog.string.splitLimit=function(str,separator,limit){var parts=str.split(separator);var returnVal=[];while(limit>0&&parts.length){returnVal.push(parts.shift());limit--}if(parts.length)returnVal.push(parts.join(separator));return returnVal};
goog.string.lastComponent=function(str,separators){if(!separators)return str;else if(typeof separators=="string")separators=[separators];var lastSeparatorIndex=-1;for(var i=0;i<separators.length;i++){if(separators[i]=="")continue;var currentSeparatorIndex=str.lastIndexOf(separators[i]);if(currentSeparatorIndex>lastSeparatorIndex)lastSeparatorIndex=currentSeparatorIndex}if(lastSeparatorIndex==-1)return str;return str.slice(lastSeparatorIndex+1)};
goog.string.editDistance=function(a,b){var v0=[];var v1=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var i=0;i<b.length+1;i++)v0[i]=i;for(var i=0;i<a.length;i++){v1[0]=i+1;for(var j=0;j<b.length;j++){var cost=Number(a[i]!=b[j]);v1[j+1]=Math.min(v1[j]+1,v0[j+1]+1,v0[j]+cost)}for(var j=0;j<v0.length;j++)v0[j]=v1[j]}return v1[b.length]};goog.provide("goog.asserts");goog.provide("goog.asserts.AssertionError");goog.require("goog.debug.Error");goog.require("goog.dom.NodeType");goog.require("goog.string");goog.define("goog.asserts.ENABLE_ASSERTS",goog.DEBUG);goog.asserts.AssertionError=function(messagePattern,messageArgs){messageArgs.unshift(messagePattern);goog.debug.Error.call(this,goog.string.subs.apply(null,messageArgs));messageArgs.shift();this.messagePattern=messagePattern};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);
goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;goog.asserts.doAssertFailure_=function(defaultMessage,defaultArgs,givenMessage,givenArgs){var message="Assertion failed";if(givenMessage){message+=": "+givenMessage;var args=givenArgs}else if(defaultMessage){message+=": "+defaultMessage;args=defaultArgs}var e=new goog.asserts.AssertionError(""+message,args||[]);goog.asserts.errorHandler_(e)};
goog.asserts.setErrorHandler=function(errorHandler){if(goog.asserts.ENABLE_ASSERTS)goog.asserts.errorHandler_=errorHandler};goog.asserts.assert=function(condition,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!condition)goog.asserts.doAssertFailure_("",null,opt_message,Array.prototype.slice.call(arguments,2));return condition};
goog.asserts.fail=function(opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS)goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(opt_message?": "+opt_message:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(value))goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertString=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isString(value))goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertFunction=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(value))goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertObject=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isObject(value))goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertArray=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isArray(value))goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertBoolean=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(value))goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertElement=function(value,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&(!goog.isObject(value)||value.nodeType!=goog.dom.NodeType.ELEMENT))goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(value),value],opt_message,Array.prototype.slice.call(arguments,2));return value};
goog.asserts.assertInstanceof=function(value,type,opt_message,var_args){if(goog.asserts.ENABLE_ASSERTS&&!(value instanceof type))goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(type),goog.asserts.getType_(value)],opt_message,Array.prototype.slice.call(arguments,3));return value};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var key in Object.prototype)goog.asserts.fail(key+" should not be enumerable in Object.prototype.")};
goog.asserts.getType_=function(value){if(value instanceof Function)return value.displayName||value.name||"unknown type name";else if(value instanceof Object)return value.constructor.displayName||value.constructor.name||Object.prototype.toString.call(value);else return value===null?"null":typeof value};goog.provide("goog.array");goog.require("goog.asserts");goog.define("goog.NATIVE_ARRAY_PROTOTYPES",goog.TRUSTED_SITE);goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS",false);goog.array.peek=function(array){return array[array.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(arr,obj,opt_fromIndex){goog.asserts.assert(arr.length!=null);return Array.prototype.indexOf.call(arr,obj,opt_fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?0:opt_fromIndex<0?Math.max(0,arr.length+opt_fromIndex):opt_fromIndex;if(goog.isString(arr)){if(!goog.isString(obj)||obj.length!=1)return-1;return arr.indexOf(obj,fromIndex)}for(var i=fromIndex;i<
arr.length;i++)if(i in arr&&arr[i]===obj)return i;return-1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(arr,obj,opt_fromIndex){goog.asserts.assert(arr.length!=null);var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;return Array.prototype.lastIndexOf.call(arr,obj,fromIndex)}:function(arr,obj,opt_fromIndex){var fromIndex=opt_fromIndex==null?arr.length-1:opt_fromIndex;if(fromIndex<0)fromIndex=Math.max(0,arr.length+fromIndex);if(goog.isString(arr)){if(!goog.isString(obj)||
obj.length!=1)return-1;return arr.lastIndexOf(obj,fromIndex)}for(var i=fromIndex;i>=0;i--)if(i in arr&&arr[i]===obj)return i;return-1};goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);Array.prototype.forEach.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.forEachRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;--i)if(i in arr2)f.call(opt_obj,arr2[i],i,arr)};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.filter.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=[];var resLength=0;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2){var val=arr2[i];if(f.call(opt_obj,val,i,arr))res[resLength++]=val}return res};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.map.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var res=new Array(l);var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2)res[i]=f.call(opt_obj,arr2[i],i,arr);return res};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(arr,f,val,opt_obj){goog.asserts.assert(arr.length!=null);if(opt_obj)f=goog.bind(f,opt_obj);return Array.prototype.reduce.call(arr,f,val)}:function(arr,f,val,opt_obj){var rval=val;goog.array.forEach(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(arr,f,val,opt_obj){goog.asserts.assert(arr.length!=null);goog.asserts.assert(f!=null);if(opt_obj)f=goog.bind(f,opt_obj);return Array.prototype.reduceRight.call(arr,f,val)}:function(arr,f,val,opt_obj){var rval=val;goog.array.forEachRight(arr,function(val,index){rval=f.call(opt_obj,rval,val,index,arr)});return rval};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.some.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return true;return false};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(arr,f,opt_obj){goog.asserts.assert(arr.length!=null);return Array.prototype.every.call(arr,f,opt_obj)}:function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&!f.call(opt_obj,arr2[i],i,arr))return false;return true};
goog.array.count=function(arr,f,opt_obj){var count=0;goog.array.forEach(arr,function(element,index,arr){if(f.call(opt_obj,element,index,arr))++count},opt_obj);return count};goog.array.find=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};goog.array.findIndex=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=0;i<l;i++)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};
goog.array.findRight=function(arr,f,opt_obj){var i=goog.array.findIndexRight(arr,f,opt_obj);return i<0?null:goog.isString(arr)?arr.charAt(i):arr[i]};goog.array.findIndexRight=function(arr,f,opt_obj){var l=arr.length;var arr2=goog.isString(arr)?arr.split(""):arr;for(var i=l-1;i>=0;i--)if(i in arr2&&f.call(opt_obj,arr2[i],i,arr))return i;return-1};goog.array.contains=function(arr,obj){return goog.array.indexOf(arr,obj)>=0};goog.array.isEmpty=function(arr){return arr.length==0};
goog.array.clear=function(arr){if(!goog.isArray(arr))for(var i=arr.length-1;i>=0;i--)delete arr[i];arr.length=0};goog.array.insert=function(arr,obj){if(!goog.array.contains(arr,obj))arr.push(obj)};goog.array.insertAt=function(arr,obj,opt_i){goog.array.splice(arr,opt_i,0,obj)};goog.array.insertArrayAt=function(arr,elementsToAdd,opt_i){goog.partial(goog.array.splice,arr,opt_i,0).apply(null,elementsToAdd)};
goog.array.insertBefore=function(arr,obj,opt_obj2){var i;if(arguments.length==2||(i=goog.array.indexOf(arr,opt_obj2))<0)arr.push(obj);else goog.array.insertAt(arr,obj,i)};goog.array.remove=function(arr,obj){var i=goog.array.indexOf(arr,obj);var rv;if(rv=i>=0)goog.array.removeAt(arr,i);return rv};goog.array.removeLast=function(arr,obj){var i=goog.array.lastIndexOf(arr,obj);if(i>=0){goog.array.removeAt(arr,i);return true}return false};
goog.array.removeAt=function(arr,i){goog.asserts.assert(arr.length!=null);return Array.prototype.splice.call(arr,i,1).length==1};goog.array.removeIf=function(arr,f,opt_obj){var i=goog.array.findIndex(arr,f,opt_obj);if(i>=0){goog.array.removeAt(arr,i);return true}return false};goog.array.removeAllIf=function(arr,f,opt_obj){var removedCount=0;goog.array.forEachRight(arr,function(val,index){if(f.call(opt_obj,val,index,arr))if(goog.array.removeAt(arr,index))removedCount++});return removedCount};
goog.array.concat=function(var_args){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(var_args){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(object){var length=object.length;if(length>0){var rv=new Array(length);for(var i=0;i<length;i++)rv[i]=object[i];return rv}return[]};goog.array.clone=goog.array.toArray;
goog.array.extend=function(arr1,var_args){for(var i=1;i<arguments.length;i++){var arr2=arguments[i];if(goog.isArrayLike(arr2)){var len1=arr1.length||0;var len2=arr2.length||0;arr1.length=len1+len2;for(var j=0;j<len2;j++)arr1[len1+j]=arr2[j]}else arr1.push(arr2)}};goog.array.splice=function(arr,index,howMany,var_args){goog.asserts.assert(arr.length!=null);return Array.prototype.splice.apply(arr,goog.array.slice(arguments,1))};
goog.array.slice=function(arr,start,opt_end){goog.asserts.assert(arr.length!=null);if(arguments.length<=2)return Array.prototype.slice.call(arr,start);else return Array.prototype.slice.call(arr,start,opt_end)};
goog.array.removeDuplicates=function(arr,opt_rv,opt_hashFn){var returnArray=opt_rv||arr;var defaultHashFn=function(item){return goog.isObject(item)?"o"+goog.getUid(item):(typeof item).charAt(0)+item};var hashFn=opt_hashFn||defaultHashFn;var seen={},cursorInsert=0,cursorRead=0;while(cursorRead<arr.length){var current=arr[cursorRead++];var key=hashFn(current);if(!Object.prototype.hasOwnProperty.call(seen,key)){seen[key]=true;returnArray[cursorInsert++]=current}}returnArray.length=cursorInsert};
goog.array.binarySearch=function(arr,target,opt_compareFn){return goog.array.binarySearch_(arr,opt_compareFn||goog.array.defaultCompare,false,target)};goog.array.binarySelect=function(arr,evaluator,opt_obj){return goog.array.binarySearch_(arr,evaluator,true,undefined,opt_obj)};
goog.array.binarySearch_=function(arr,compareFn,isEvaluator,opt_target,opt_selfObj){var left=0;var right=arr.length;var found;while(left<right){var middle=left+right>>1;var compareResult;if(isEvaluator)compareResult=compareFn.call(opt_selfObj,arr[middle],middle,arr);else compareResult=compareFn(opt_target,arr[middle]);if(compareResult>0)left=middle+1;else{right=middle;found=!compareResult}}return found?left:~left};goog.array.sort=function(arr,opt_compareFn){arr.sort(opt_compareFn||goog.array.defaultCompare)};
goog.array.stableSort=function(arr,opt_compareFn){var compArr=new Array(arr.length);for(var i=0;i<arr.length;i++)compArr[i]={index:i,value:arr[i]};var valueCompareFn=opt_compareFn||goog.array.defaultCompare;function stableCompareFn(obj1,obj2){return valueCompareFn(obj1.value,obj2.value)||obj1.index-obj2.index}goog.array.sort(compArr,stableCompareFn);for(var i=0;i<arr.length;i++)arr[i]=compArr[i].value};
goog.array.sortByKey=function(arr,keyFn,opt_compareFn){var keyCompareFn=opt_compareFn||goog.array.defaultCompare;goog.array.sort(arr,function(a,b){return keyCompareFn(keyFn(a),keyFn(b))})};goog.array.sortObjectsByKey=function(arr,key,opt_compareFn){goog.array.sortByKey(arr,function(obj){return obj[key]},opt_compareFn)};
goog.array.isSorted=function(arr,opt_compareFn,opt_strict){var compare=opt_compareFn||goog.array.defaultCompare;for(var i=1;i<arr.length;i++){var compareResult=compare(arr[i-1],arr[i]);if(compareResult>0||compareResult==0&&opt_strict)return false}return true};
goog.array.equals=function(arr1,arr2,opt_equalsFn){if(!goog.isArrayLike(arr1)||!goog.isArrayLike(arr2)||arr1.length!=arr2.length)return false;var l=arr1.length;var equalsFn=opt_equalsFn||goog.array.defaultCompareEquality;for(var i=0;i<l;i++)if(!equalsFn(arr1[i],arr2[i]))return false;return true};
goog.array.compare3=function(arr1,arr2,opt_compareFn){var compare=opt_compareFn||goog.array.defaultCompare;var l=Math.min(arr1.length,arr2.length);for(var i=0;i<l;i++){var result=compare(arr1[i],arr2[i]);if(result!=0)return result}return goog.array.defaultCompare(arr1.length,arr2.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};goog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};
goog.array.binaryInsert=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);if(index<0){goog.array.insertAt(array,value,-(index+1));return true}return false};goog.array.binaryRemove=function(array,value,opt_compareFn){var index=goog.array.binarySearch(array,value,opt_compareFn);return index>=0?goog.array.removeAt(array,index):false};
goog.array.bucket=function(array,sorter,opt_obj){var buckets={};for(var i=0;i<array.length;i++){var value=array[i];var key=sorter.call(opt_obj,value,i,array);if(goog.isDef(key)){var bucket=buckets[key]||(buckets[key]=[]);bucket.push(value)}}return buckets};goog.array.toObject=function(arr,keyFunc,opt_obj){var ret={};goog.array.forEach(arr,function(element,index){ret[keyFunc.call(opt_obj,element,index,arr)]=element});return ret};
goog.array.range=function(startOrEnd,opt_end,opt_step){var array=[];var start=0;var end=startOrEnd;var step=opt_step||1;if(opt_end!==undefined){start=startOrEnd;end=opt_end}if(step*(end-start)<0)return[];if(step>0)for(var i=start;i<end;i+=step)array.push(i);else for(var i=start;i>end;i+=step)array.push(i);return array};goog.array.repeat=function(value,n){var array=[];for(var i=0;i<n;i++)array[i]=value;return array};
goog.array.flatten=function(var_args){var CHUNK_SIZE=8192;var result=[];for(var i=0;i<arguments.length;i++){var element=arguments[i];if(goog.isArray(element))for(var c=0;c<element.length;c+=CHUNK_SIZE){var chunk=goog.array.slice(element,c,c+CHUNK_SIZE);var recurseResult=goog.array.flatten.apply(null,chunk);for(var r=0;r<recurseResult.length;r++)result.push(recurseResult[r])}else result.push(element)}return result};
goog.array.rotate=function(array,n){goog.asserts.assert(array.length!=null);if(array.length){n%=array.length;if(n>0)Array.prototype.unshift.apply(array,array.splice(-n,n));else if(n<0)Array.prototype.push.apply(array,array.splice(0,-n))}return array};
goog.array.moveItem=function(arr,fromIndex,toIndex){goog.asserts.assert(fromIndex>=0&&fromIndex<arr.length);goog.asserts.assert(toIndex>=0&&toIndex<arr.length);var removedItems=Array.prototype.splice.call(arr,fromIndex,1);Array.prototype.splice.call(arr,toIndex,0,removedItems[0])};
goog.array.zip=function(var_args){if(!arguments.length)return[];var result=[];var minLen=arguments[0].length;for(var i=1;i<arguments.length;i++)if(arguments[i].length<minLen)minLen=arguments[i].length;for(var i=0;i<minLen;i++){var value=[];for(var j=0;j<arguments.length;j++)value.push(arguments[j][i]);result.push(value)}return result};
goog.array.shuffle=function(arr,opt_randFn){var randFn=opt_randFn||Math.random;for(var i=arr.length-1;i>0;i--){var j=Math.floor(randFn()*(i+1));var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp}};goog.array.copyByIndex=function(arr,index_arr){var result=[];goog.array.forEach(index_arr,function(index){result.push(arr[index])});return result};goog.array.concatMap=function(arr,f,opt_obj){return goog.array.concat.apply([],goog.array.map(arr,f,opt_obj))};goog.provide("goog.labs.userAgent.util");goog.require("goog.string");goog.labs.userAgent.util.getNativeUserAgentString_=function(){var navigator=goog.labs.userAgent.util.getNavigator_();if(navigator){var userAgent=navigator.userAgent;if(userAgent)return userAgent}return""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent=function(opt_userAgent){goog.labs.userAgent.util.userAgent_=opt_userAgent||goog.labs.userAgent.util.getNativeUserAgentString_()};goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(str){var userAgent=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(userAgent,str)};
goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(str){var userAgent=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(userAgent,str)};goog.labs.userAgent.util.extractVersionTuples=function(userAgent){var versionRegExp=new RegExp("(\\w[\\w ]+)"+"/"+"([^\\s]+)"+"\\s*"+"(?:\\((.*?)\\))?","g");var data=[];var match;while(match=versionRegExp.exec(userAgent))data.push([match[1],match[2],match[3]||undefined]);return data};goog.provide("goog.object");goog.object.is=function(v,v2){if(v===v2)return v!==0||1/v===1/v2;return v!==v&&v2!==v2};goog.object.forEach=function(obj,f,opt_obj){for(var key in obj)f.call(opt_obj,obj[key],key,obj)};goog.object.filter=function(obj,f,opt_obj){var res={};for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))res[key]=obj[key];return res};goog.object.map=function(obj,f,opt_obj){var res={};for(var key in obj)res[key]=f.call(opt_obj,obj[key],key,obj);return res};
goog.object.some=function(obj,f,opt_obj){for(var key in obj)if(f.call(opt_obj,obj[key],key,obj))return true;return false};goog.object.every=function(obj,f,opt_obj){for(var key in obj)if(!f.call(opt_obj,obj[key],key,obj))return false;return true};goog.object.getCount=function(obj){var rv=0;for(var key in obj)rv++;return rv};goog.object.getAnyKey=function(obj){for(var key in obj)return key};goog.object.getAnyValue=function(obj){for(var key in obj)return obj[key]};
goog.object.contains=function(obj,val){return goog.object.containsValue(obj,val)};goog.object.getValues=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=obj[key];return res};goog.object.getKeys=function(obj){var res=[];var i=0;for(var key in obj)res[i++]=key;return res};goog.object.getValueByKeys=function(obj,var_args){var isArrayLike=goog.isArrayLike(var_args);var keys=isArrayLike?var_args:arguments;for(var i=isArrayLike?0:1;i<keys.length;i++){if(obj==null)return undefined;obj=obj[keys[i]]}return obj};
goog.object.containsKey=function(obj,key){return obj!==null&&key in obj};goog.object.containsValue=function(obj,val){for(var key in obj)if(obj[key]==val)return true;return false};goog.object.findKey=function(obj,f,opt_this){for(var key in obj)if(f.call(opt_this,obj[key],key,obj))return key;return undefined};goog.object.findValue=function(obj,f,opt_this){var key=goog.object.findKey(obj,f,opt_this);return key&&obj[key]};goog.object.isEmpty=function(obj){for(var key in obj)return false;return true};
goog.object.clear=function(obj){for(var i in obj)delete obj[i]};goog.object.remove=function(obj,key){var rv;if(rv=key in obj)delete obj[key];return rv};goog.object.add=function(obj,key,val){if(obj!==null&&key in obj)throw new Error('The object already contains the key "'+key+'"');goog.object.set(obj,key,val)};goog.object.get=function(obj,key,opt_val){if(obj!==null&&key in obj)return obj[key];return opt_val};goog.object.set=function(obj,key,value){obj[key]=value};
goog.object.setIfUndefined=function(obj,key,value){return key in obj?obj[key]:obj[key]=value};goog.object.setWithReturnValueIfNotSet=function(obj,key,f){if(key in obj)return obj[key];var val=f();obj[key]=val;return val};goog.object.equals=function(a,b){for(var k in a)if(!(k in b)||a[k]!==b[k])return false;for(var k in b)if(!(k in a))return false;return true};goog.object.clone=function(obj){var res={};for(var key in obj)res[key]=obj[key];return res};
goog.object.unsafeClone=function(obj){var type=goog.typeOf(obj);if(type=="object"||type=="array"){if(goog.isFunction(obj.clone))return obj.clone();var clone=type=="array"?[]:{};for(var key in obj)clone[key]=goog.object.unsafeClone(obj[key]);return clone}return obj};goog.object.transpose=function(obj){var transposed={};for(var key in obj)transposed[obj[key]]=key;return transposed};
goog.object.PROTOTYPE_FIELDS_=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"];goog.object.extend=function(target,var_args){var key,source;for(var i=1;i<arguments.length;i++){source=arguments[i];for(key in source)target[key]=source[key];for(var j=0;j<goog.object.PROTOTYPE_FIELDS_.length;j++){key=goog.object.PROTOTYPE_FIELDS_[j];if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}}};
goog.object.create=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(argLength%2)throw new Error("Uneven number of arguments");var rv={};for(var i=0;i<argLength;i+=2)rv[arguments[i]]=arguments[i+1];return rv};
goog.object.createSet=function(var_args){var argLength=arguments.length;if(argLength==1&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);var rv={};for(var i=0;i<argLength;i++)rv[arguments[i]]=true;return rv};goog.object.createImmutableView=function(obj){var result=obj;if(Object.isFrozen&&!Object.isFrozen(obj)){result=Object.create(obj);Object.freeze(result)}return result};goog.object.isImmutableView=function(obj){return!!Object.isFrozen&&Object.isFrozen(obj)};
goog.object.getAllPropertyNames=function(obj,opt_includeObjectPrototype,opt_includeFunctionPrototype){if(!obj)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(obj);var visitedSet={};var proto=obj;while(proto&&(proto!==Object.prototype||!!opt_includeObjectPrototype)&&(proto!==Function.prototype||!!opt_includeFunctionPrototype)){var names=Object.getOwnPropertyNames(proto);for(var i=0;i<names.length;i++)visitedSet[names[i]]=true;proto=Object.getPrototypeOf(proto)}return goog.object.getKeys(visitedSet)};goog.provide("goog.labs.userAgent.browser");goog.require("goog.array");goog.require("goog.labs.userAgent.util");goog.require("goog.object");goog.require("goog.string");goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")};goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};
goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdge_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){var userAgentString=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(userAgentString);var versionTuples=goog.labs.userAgent.util.extractVersionTuples(userAgentString);var versionMap={};goog.array.forEach(versionTuples,function(tuple){var key=tuple[0];var value=tuple[1];versionMap[key]=value});var versionMapHasKey=goog.partial(goog.object.containsKey,versionMap);function lookUpValueWithKeys(keys){var key=
goog.array.find(keys,versionMapHasKey);return versionMap[key]||""}if(goog.labs.userAgent.browser.isOpera())return lookUpValueWithKeys(["Version","Opera"]);if(goog.labs.userAgent.browser.isEdge())return lookUpValueWithKeys(["Edge"]);if(goog.labs.userAgent.browser.isChrome())return lookUpValueWithKeys(["Chrome","CriOS"]);var tuple=versionTuples[2];return tuple&&tuple[1]||""};
goog.labs.userAgent.browser.isVersionOrHigher=function(version){return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),version)>=0};
goog.labs.userAgent.browser.getIEVersion_=function(userAgent){var rv=/rv: *([\d\.]*)/.exec(userAgent);if(rv&&rv[1])return rv[1];var version="";var msie=/MSIE +([\d\.]+)/.exec(userAgent);if(msie&&msie[1]){var tridentVersion=/Trident\/(\d.\d)/.exec(userAgent);if(msie[1]=="7.0")if(tridentVersion&&tridentVersion[1])switch(tridentVersion[1]){case "4.0":version="8.0";break;case "5.0":version="9.0";break;case "6.0":version="10.0";break;case "7.0":version="11.0";break}else version="7.0";else version=msie[1]}return version};goog.provide("goog.labs.userAgent.engine");goog.require("goog.array");goog.require("goog.labs.userAgent.util");goog.require("goog.string");goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var userAgentString=goog.labs.userAgent.util.getUserAgent();if(userAgentString){var tuples=goog.labs.userAgent.util.extractVersionTuples(userAgentString);var engineTuple=goog.labs.userAgent.engine.getEngineTuple_(tuples);if(engineTuple){if(engineTuple[0]=="Gecko")return goog.labs.userAgent.engine.getVersionForKey_(tuples,"Firefox");return engineTuple[1]}var browserTuple=tuples[0];var info;if(browserTuple&&(info=browserTuple[2])){var match=/Trident\/([^\s;]+)/.exec(info);
if(match)return match[1]}}return""};goog.labs.userAgent.engine.getEngineTuple_=function(tuples){if(!goog.labs.userAgent.engine.isEdge())return tuples[1];for(var i=0;i<tuples.length;i++){var tuple=tuples[i];if(tuple[0]=="Edge")return tuple}};goog.labs.userAgent.engine.isVersionOrHigher=function(version){return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),version)>=0};
goog.labs.userAgent.engine.getVersionForKey_=function(tuples,key){var pair=goog.array.find(tuples,function(pair){return key==pair[0]});return pair&&pair[1]||""};goog.provide("goog.labs.userAgent.platform");goog.require("goog.labs.userAgent.util");goog.require("goog.string");goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};
goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};
goog.labs.userAgent.platform.getVersion=function(){var userAgentString=goog.labs.userAgent.util.getUserAgent();var version="",re;if(goog.labs.userAgent.platform.isWindows()){re=/Windows (?:NT|Phone) ([0-9.]+)/;var match=re.exec(userAgentString);if(match)version=match[1];else version="0.0"}else if(goog.labs.userAgent.platform.isIos()){re=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;var match=re.exec(userAgentString);version=match&&match[1].replace(/_/g,".")}else if(goog.labs.userAgent.platform.isMacintosh()){re=
/Mac OS X ([0-9_.]+)/;var match=re.exec(userAgentString);version=match?match[1].replace(/_/g,"."):"10"}else if(goog.labs.userAgent.platform.isAndroid()){re=/Android\s+([^\);]+)(\)|;)/;var match=re.exec(userAgentString);version=match&&match[1]}else if(goog.labs.userAgent.platform.isChromeOS()){re=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;var match=re.exec(userAgentString);version=match&&match[1]}return version||""};
goog.labs.userAgent.platform.isVersionOrHigher=function(version){return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),version)>=0};goog.provide("goog.reflect");goog.reflect.object=function(type,object){return object};goog.reflect.objectProperty=function(prop,object){return prop};goog.reflect.sinkValue=function(x){goog.reflect.sinkValue[" "](x);return x};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(obj,prop){try{goog.reflect.sinkValue(obj[prop]);return true}catch(e){}return false};
goog.reflect.cache=function(cacheObj,key,valueFn,opt_keyFn){var storedKey=opt_keyFn?opt_keyFn(key):key;if(Object.prototype.hasOwnProperty.call(cacheObj,storedKey))return cacheObj[storedKey];return cacheObj[storedKey]=valueFn(key)};goog.provide("goog.userAgent");goog.require("goog.labs.userAgent.browser");goog.require("goog.labs.userAgent.engine");goog.require("goog.labs.userAgent.platform");goog.require("goog.labs.userAgent.util");goog.require("goog.reflect");goog.require("goog.string");goog.define("goog.userAgent.ASSUME_IE",false);goog.define("goog.userAgent.ASSUME_EDGE",false);goog.define("goog.userAgent.ASSUME_GECKO",false);goog.define("goog.userAgent.ASSUME_WEBKIT",false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT",false);goog.define("goog.userAgent.ASSUME_OPERA",false);goog.define("goog.userAgent.ASSUME_ANY_VERSION",false);goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigator=function(){return goog.global["navigator"]||null};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;
goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_=function(){var navigator=goog.userAgent.getNavigator();return navigator&&navigator.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.define("goog.userAgent.ASSUME_MAC",false);goog.define("goog.userAgent.ASSUME_WINDOWS",false);goog.define("goog.userAgent.ASSUME_LINUX",false);goog.define("goog.userAgent.ASSUME_X11",false);goog.define("goog.userAgent.ASSUME_ANDROID",false);goog.define("goog.userAgent.ASSUME_IPHONE",false);
goog.define("goog.userAgent.ASSUME_IPAD",false);goog.define("goog.userAgent.ASSUME_IPOD",false);goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_=function(){var navigator=goog.userAgent.getNavigator();return!!navigator&&goog.string.contains(navigator["appVersion"]||"","X11")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();
goog.userAgent.determineVersion_=function(){var version="";var arr=goog.userAgent.getVersionRegexResult_();if(arr)version=arr?arr[1]:"";if(goog.userAgent.IE){var docMode=goog.userAgent.getDocumentMode_();if(docMode!=null&&docMode>parseFloat(version))return String(docMode)}return version};
goog.userAgent.getVersionRegexResult_=function(){var userAgent=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv\:([^\);]+)(\)|;)/.exec(userAgent);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(userAgent);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(userAgent);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(userAgent);return undefined};
goog.userAgent.getDocumentMode_=function(){var doc=goog.global["document"];return doc?doc["documentMode"]:undefined};goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(v1,v2){return goog.string.compareVersions(v1,v2)};goog.userAgent.isVersionOrHigherCache_={};
goog.userAgent.isVersionOrHigher=function(version){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,version,function(){return goog.string.compareVersions(goog.userAgent.VERSION,version)>=0})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;goog.userAgent.isDocumentModeOrHigher=function(documentMode){return Number(goog.userAgent.DOCUMENT_MODE)>=documentMode};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE=function(){var doc=goog.global["document"];var mode=goog.userAgent.getDocumentMode_();if(!doc||!goog.userAgent.IE)return undefined;return mode||(doc["compatMode"]=="CSS1Compat"?parseInt(goog.userAgent.VERSION,10):5)}();goog.provide("goog.dom.HtmlElement");goog.dom.HtmlElement=function(){};goog.provide("goog.dom.TagName");goog.require("goog.dom.HtmlElement");goog.dom.TagName=function(tagName){this.tagName_=tagName};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY=new goog.dom.TagName("BODY");goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");
goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");goog.dom.TagName.META=new goog.dom.TagName("META");
goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.provide("goog.Thenable");goog.forwardDeclare("goog.Promise");goog.Thenable=function(){};goog.Thenable.prototype.then=function(opt_onFulfilled,opt_onRejected,opt_context){};goog.Thenable.IMPLEMENTED_BY_PROP="$goog_Thenable";goog.Thenable.addImplementation=function(ctor){ctor.prototype["then"]=ctor.prototype.then;if(COMPILED)ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP]=true;else ctor.prototype.$goog_Thenable=true};
goog.Thenable.isImplementedBy=function(object){if(!object)return false;try{if(COMPILED)return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];return!!object.$goog_Thenable}catch(e){return false}};goog.provide("goog.async.FreeList");goog.async.FreeList=goog.defineClass(null,{constructor:function(create,reset,limit){this.limit_=limit;this.create_=create;this.reset_=reset;this.occupants_=0;this.head_=null},get:function(){var item;if(this.occupants_>0){this.occupants_--;item=this.head_;this.head_=item.next;item.next=null}else item=this.create_();return item},put:function(item){this.reset_(item);if(this.occupants_<this.limit_){this.occupants_++;item.next=this.head_;this.head_=item}},occupants:function(){return this.occupants_}});goog.provide("goog.async.WorkItem");goog.provide("goog.async.WorkQueue");goog.require("goog.asserts");goog.require("goog.async.FreeList");goog.async.WorkQueue=function(){this.workHead_=null;this.workTail_=null};goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED",100);goog.async.WorkQueue.freelist_=new goog.async.FreeList(function(){return new goog.async.WorkItem},function(item){item.reset()},goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add=function(fn,scope){var item=this.getUnusedItem_();item.set(fn,scope);if(this.workTail_){this.workTail_.next=item;this.workTail_=item}else{goog.asserts.assert(!this.workHead_);this.workHead_=item;this.workTail_=item}};goog.async.WorkQueue.prototype.remove=function(){var item=null;if(this.workHead_){item=this.workHead_;this.workHead_=this.workHead_.next;if(!this.workHead_)this.workTail_=null;item.next=null}return item};goog.async.WorkQueue.prototype.returnUnused=function(item){goog.async.WorkQueue.freelist_.put(item)};
goog.async.WorkQueue.prototype.getUnusedItem_=function(){return goog.async.WorkQueue.freelist_.get()};goog.async.WorkItem=function(){this.fn=null;this.scope=null;this.next=null};goog.async.WorkItem.prototype.set=function(fn,scope){this.fn=fn;this.scope=scope;this.next=null};goog.async.WorkItem.prototype.reset=function(){this.fn=null;this.scope=null;this.next=null};goog.provide("goog.debug.EntryPointMonitor");goog.provide("goog.debug.entryPointRegistry");goog.require("goog.asserts");goog.debug.EntryPointMonitor=function(){};goog.debug.EntryPointMonitor.prototype.wrap;goog.debug.EntryPointMonitor.prototype.unwrap;goog.debug.entryPointRegistry.refList_=[];goog.debug.entryPointRegistry.monitors_=[];goog.debug.entryPointRegistry.monitorsMayExist_=false;
goog.debug.entryPointRegistry.register=function(callback){goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length]=callback;if(goog.debug.entryPointRegistry.monitorsMayExist_){var monitors=goog.debug.entryPointRegistry.monitors_;for(var i=0;i<monitors.length;i++)callback(goog.bind(monitors[i].wrap,monitors[i]))}};
goog.debug.entryPointRegistry.monitorAll=function(monitor){goog.debug.entryPointRegistry.monitorsMayExist_=true;var transformer=goog.bind(monitor.wrap,monitor);for(var i=0;i<goog.debug.entryPointRegistry.refList_.length;i++)goog.debug.entryPointRegistry.refList_[i](transformer);goog.debug.entryPointRegistry.monitors_.push(monitor)};
goog.debug.entryPointRegistry.unmonitorAllIfPossible=function(monitor){var monitors=goog.debug.entryPointRegistry.monitors_;goog.asserts.assert(monitor==monitors[monitors.length-1],"Only the most recent monitor can be unwrapped.");var transformer=goog.bind(monitor.unwrap,monitor);for(var i=0;i<goog.debug.entryPointRegistry.refList_.length;i++)goog.debug.entryPointRegistry.refList_[i](transformer);monitors.length--};goog.provide("goog.async.nextTick");goog.provide("goog.async.throwException");goog.require("goog.debug.entryPointRegistry");goog.require("goog.dom.TagName");goog.require("goog.functions");goog.require("goog.labs.userAgent.browser");goog.require("goog.labs.userAgent.engine");goog.async.throwException=function(exception){goog.global.setTimeout(function(){throw exception;},0)};
goog.async.nextTick=function(callback,opt_context,opt_useSetImmediate){var cb=callback;if(opt_context)cb=goog.bind(callback,opt_context);cb=goog.async.nextTick.wrapCallback_(cb);if(goog.isFunction(goog.global.setImmediate)&&(opt_useSetImmediate||goog.async.nextTick.useSetImmediate_())){goog.global.setImmediate(cb);return}if(!goog.async.nextTick.setImmediate_)goog.async.nextTick.setImmediate_=goog.async.nextTick.getSetImmediateEmulator_();goog.async.nextTick.setImmediate_(cb)};
goog.async.nextTick.useSetImmediate_=function(){if(!goog.global.Window||!goog.global.Window.prototype)return true;if(goog.labs.userAgent.browser.isEdge()||goog.global.Window.prototype.setImmediate!=goog.global.setImmediate)return true;return false};goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_=function(){var Channel=goog.global["MessageChannel"];if(typeof Channel==="undefined"&&typeof window!=="undefined"&&window.postMessage&&window.addEventListener&&!goog.labs.userAgent.engine.isPresto())Channel=function(){var iframe=document.createElement(String(goog.dom.TagName.IFRAME));iframe.style.display="none";iframe.src="";document.documentElement.appendChild(iframe);var win=iframe.contentWindow;var doc=win.document;doc.open();doc.write("");doc.close();
var message="callImmediate"+Math.random();var origin=win.location.protocol=="file:"?"*":win.location.protocol+"//"+win.location.host;var onmessage=goog.bind(function(e){if(origin!="*"&&e.origin!=origin||e.data!=message)return;this["port1"].onmessage()},this);win.addEventListener("message",onmessage,false);this["port1"]={};this["port2"]={postMessage:function(){win.postMessage(message,origin)}}};if(typeof Channel!=="undefined"&&!goog.labs.userAgent.browser.isIE()){var channel=new Channel;var head={};
var tail=head;channel["port1"].onmessage=function(){if(goog.isDef(head.next)){head=head.next;var cb=head.cb;head.cb=null;cb()}};return function(cb){tail.next={cb:cb};tail=tail.next;channel["port2"].postMessage(0)}}if(typeof document!=="undefined"&&"onreadystatechange"in document.createElement(String(goog.dom.TagName.SCRIPT)))return function(cb){var script=document.createElement(String(goog.dom.TagName.SCRIPT));script.onreadystatechange=function(){script.onreadystatechange=null;script.parentNode.removeChild(script);
script=null;cb();cb=null};document.documentElement.appendChild(script)};return function(cb){goog.global.setTimeout(cb,0)}};goog.async.nextTick.wrapCallback_=goog.functions.identity;goog.debug.entryPointRegistry.register(function(transformer){goog.async.nextTick.wrapCallback_=transformer});goog.provide("goog.async.run");goog.require("goog.async.WorkQueue");goog.require("goog.async.nextTick");goog.require("goog.async.throwException");goog.async.run=function(callback,opt_context){if(!goog.async.run.schedule_)goog.async.run.initializeRunner_();if(!goog.async.run.workQueueScheduled_){goog.async.run.schedule_();goog.async.run.workQueueScheduled_=true}goog.async.run.workQueue_.add(callback,opt_context)};
goog.async.run.initializeRunner_=function(){if(String(goog.global.Promise).indexOf("[native code]")!=-1){var promise=goog.global.Promise.resolve(undefined);goog.async.run.schedule_=function(){promise.then(goog.async.run.processWorkQueue)}}else goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue)}};goog.async.run.forceNextTick=function(opt_realSetTimeout){goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue);if(opt_realSetTimeout)opt_realSetTimeout(goog.async.run.processWorkQueue)}};
goog.async.run.schedule_;goog.async.run.workQueueScheduled_=false;goog.async.run.workQueue_=new goog.async.WorkQueue;if(goog.DEBUG)goog.async.run.resetQueue=function(){goog.async.run.workQueueScheduled_=false;goog.async.run.workQueue_=new goog.async.WorkQueue};
goog.async.run.processWorkQueue=function(){var item=null;while(item=goog.async.run.workQueue_.remove()){try{item.fn.call(item.scope)}catch(e){goog.async.throwException(e)}goog.async.run.workQueue_.returnUnused(item)}goog.async.run.workQueueScheduled_=false};goog.provide("goog.promise.Resolver");goog.promise.Resolver=function(){};goog.promise.Resolver.prototype.promise;goog.promise.Resolver.prototype.resolve;goog.promise.Resolver.prototype.reject;goog.provide("goog.Promise");goog.require("goog.Thenable");goog.require("goog.asserts");goog.require("goog.async.FreeList");goog.require("goog.async.run");goog.require("goog.async.throwException");goog.require("goog.debug.Error");goog.require("goog.promise.Resolver");
goog.Promise=function(resolver,opt_context){this.state_=goog.Promise.State_.PENDING;this.result_=undefined;this.parent_=null;this.callbackEntries_=null;this.callbackEntriesTail_=null;this.executing_=false;if(goog.Promise.UNHANDLED_REJECTION_DELAY>0)this.unhandledRejectionId_=0;else if(goog.Promise.UNHANDLED_REJECTION_DELAY==0)this.hadUnhandledRejection_=false;if(goog.Promise.LONG_STACK_TRACES){this.stack_=[];this.addStackTrace_(new Error("created"));this.currentStep_=0}if(resolver!=goog.nullFunction)try{var self=
this;resolver.call(opt_context,function(value){self.resolve_(goog.Promise.State_.FULFILLED,value)},function(reason){if(goog.DEBUG&&!(reason instanceof goog.Promise.CancellationError))try{if(reason instanceof Error)throw reason;else throw new Error("Promise rejected.");}catch(e){}self.resolve_(goog.Promise.State_.REJECTED,reason)})}catch(e){this.resolve_(goog.Promise.State_.REJECTED,e)}};goog.define("goog.Promise.LONG_STACK_TRACES",false);goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY",0);
goog.Promise.State_={PENDING:0,BLOCKED:1,FULFILLED:2,REJECTED:3};goog.Promise.CallbackEntry_=function(){this.child=null;this.onFulfilled=null;this.onRejected=null;this.context=null;this.next=null;this.always=false};goog.Promise.CallbackEntry_.prototype.reset=function(){this.child=null;this.onFulfilled=null;this.onRejected=null;this.context=null;this.always=false};goog.define("goog.Promise.DEFAULT_MAX_UNUSED",100);
goog.Promise.freelist_=new goog.async.FreeList(function(){return new goog.Promise.CallbackEntry_},function(item){item.reset()},goog.Promise.DEFAULT_MAX_UNUSED);goog.Promise.getCallbackEntry_=function(onFulfilled,onRejected,context){var entry=goog.Promise.freelist_.get();entry.onFulfilled=onFulfilled;entry.onRejected=onRejected;entry.context=context;return entry};goog.Promise.returnEntry_=function(entry){goog.Promise.freelist_.put(entry)};
goog.Promise.resolve=function(opt_value){if(opt_value instanceof goog.Promise)return opt_value;var promise=new goog.Promise(goog.nullFunction);promise.resolve_(goog.Promise.State_.FULFILLED,opt_value);return promise};goog.Promise.reject=function(opt_reason){return new goog.Promise(function(resolve,reject){reject(opt_reason)})};
goog.Promise.resolveThen_=function(value,onFulfilled,onRejected){var isThenable=goog.Promise.maybeThen_(value,onFulfilled,onRejected,null);if(!isThenable)goog.async.run(goog.partial(onFulfilled,value))};goog.Promise.race=function(promises){return new goog.Promise(function(resolve,reject){if(!promises.length)resolve(undefined);for(var i=0,promise;i<promises.length;i++){promise=promises[i];goog.Promise.resolveThen_(promise,resolve,reject)}})};
goog.Promise.all=function(promises){return new goog.Promise(function(resolve,reject){var toFulfill=promises.length;var values=[];if(!toFulfill){resolve(values);return}var onFulfill=function(index,value){toFulfill--;values[index]=value;if(toFulfill==0)resolve(values)};var onReject=function(reason){reject(reason)};for(var i=0,promise;i<promises.length;i++){promise=promises[i];goog.Promise.resolveThen_(promise,goog.partial(onFulfill,i),onReject)}})};
goog.Promise.allSettled=function(promises){return new goog.Promise(function(resolve,reject){var toSettle=promises.length;var results=[];if(!toSettle){resolve(results);return}var onSettled=function(index,fulfilled,result){toSettle--;results[index]=fulfilled?{fulfilled:true,value:result}:{fulfilled:false,reason:result};if(toSettle==0)resolve(results)};for(var i=0,promise;i<promises.length;i++){promise=promises[i];goog.Promise.resolveThen_(promise,goog.partial(onSettled,i,true),goog.partial(onSettled,
i,false))}})};goog.Promise.firstFulfilled=function(promises){return new goog.Promise(function(resolve,reject){var toReject=promises.length;var reasons=[];if(!toReject){resolve(undefined);return}var onFulfill=function(value){resolve(value)};var onReject=function(index,reason){toReject--;reasons[index]=reason;if(toReject==0)reject(reasons)};for(var i=0,promise;i<promises.length;i++){promise=promises[i];goog.Promise.resolveThen_(promise,onFulfill,goog.partial(onReject,i))}})};
goog.Promise.withResolver=function(){var resolve,reject;var promise=new goog.Promise(function(rs,rj){resolve=rs;reject=rj});return new goog.Promise.Resolver_(promise,resolve,reject)};
goog.Promise.prototype.then=function(opt_onFulfilled,opt_onRejected,opt_context){if(opt_onFulfilled!=null)goog.asserts.assertFunction(opt_onFulfilled,"opt_onFulfilled should be a function.");if(opt_onRejected!=null)goog.asserts.assertFunction(opt_onRejected,"opt_onRejected should be a function. Did you pass opt_context "+"as the second argument instead of the third?");if(goog.Promise.LONG_STACK_TRACES)this.addStackTrace_(new Error("then"));return this.addChildPromise_(goog.isFunction(opt_onFulfilled)?
opt_onFulfilled:null,goog.isFunction(opt_onRejected)?opt_onRejected:null,opt_context)};goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid=function(opt_onFulfilled,opt_onRejected,opt_context){if(opt_onFulfilled!=null)goog.asserts.assertFunction(opt_onFulfilled,"opt_onFulfilled should be a function.");if(opt_onRejected!=null)goog.asserts.assertFunction(opt_onRejected,"opt_onRejected should be a function. Did you pass opt_context "+"as the second argument instead of the third?");if(goog.Promise.LONG_STACK_TRACES)this.addStackTrace_(new Error("then"));this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled||
goog.nullFunction,opt_onRejected||null,opt_context))};goog.Promise.prototype.thenAlways=function(onSettled,opt_context){if(goog.Promise.LONG_STACK_TRACES)this.addStackTrace_(new Error("thenAlways"));var entry=goog.Promise.getCallbackEntry_(onSettled,onSettled,opt_context);entry.always=true;this.addCallbackEntry_(entry);return this};
goog.Promise.prototype.thenCatch=function(onRejected,opt_context){if(goog.Promise.LONG_STACK_TRACES)this.addStackTrace_(new Error("thenCatch"));return this.addChildPromise_(null,onRejected,opt_context)};goog.Promise.prototype.cancel=function(opt_message){if(this.state_==goog.Promise.State_.PENDING)goog.async.run(function(){var err=new goog.Promise.CancellationError(opt_message);this.cancelInternal_(err)},this)};
goog.Promise.prototype.cancelInternal_=function(err){if(this.state_==goog.Promise.State_.PENDING)if(this.parent_){this.parent_.cancelChild_(this,err);this.parent_=null}else this.resolve_(goog.Promise.State_.REJECTED,err)};
goog.Promise.prototype.cancelChild_=function(childPromise,err){if(!this.callbackEntries_)return;var childCount=0;var childEntry=null;var beforeChildEntry=null;for(var entry=this.callbackEntries_;entry;entry=entry.next){if(!entry.always){childCount++;if(entry.child==childPromise)childEntry=entry;if(childEntry&&childCount>1)break}if(!childEntry)beforeChildEntry=entry}if(childEntry)if(this.state_==goog.Promise.State_.PENDING&&childCount==1)this.cancelInternal_(err);else{if(beforeChildEntry)this.removeEntryAfter_(beforeChildEntry);
else this.popEntry_();this.executeCallback_(childEntry,goog.Promise.State_.REJECTED,err)}};goog.Promise.prototype.addCallbackEntry_=function(callbackEntry){if(!this.hasEntry_()&&(this.state_==goog.Promise.State_.FULFILLED||this.state_==goog.Promise.State_.REJECTED))this.scheduleCallbacks_();this.queueEntry_(callbackEntry)};
goog.Promise.prototype.addChildPromise_=function(onFulfilled,onRejected,opt_context){var callbackEntry=goog.Promise.getCallbackEntry_(null,null,null);callbackEntry.child=new goog.Promise(function(resolve,reject){callbackEntry.onFulfilled=onFulfilled?function(value){try{var result=onFulfilled.call(opt_context,value);resolve(result)}catch(err){reject(err)}}:resolve;callbackEntry.onRejected=onRejected?function(reason){try{var result=onRejected.call(opt_context,reason);if(!goog.isDef(result)&&reason instanceof
goog.Promise.CancellationError)reject(reason);else resolve(result)}catch(err){reject(err)}}:reject});callbackEntry.child.parent_=this;this.addCallbackEntry_(callbackEntry);return callbackEntry.child};goog.Promise.prototype.unblockAndFulfill_=function(value){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.FULFILLED,value)};
goog.Promise.prototype.unblockAndReject_=function(reason){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.REJECTED,reason)};
goog.Promise.prototype.resolve_=function(state,x){if(this.state_!=goog.Promise.State_.PENDING)return;if(this===x){state=goog.Promise.State_.REJECTED;x=new TypeError("Promise cannot resolve to itself")}this.state_=goog.Promise.State_.BLOCKED;var isThenable=goog.Promise.maybeThen_(x,this.unblockAndFulfill_,this.unblockAndReject_,this);if(isThenable)return;this.result_=x;this.state_=state;this.parent_=null;this.scheduleCallbacks_();if(state==goog.Promise.State_.REJECTED&&!(x instanceof goog.Promise.CancellationError))goog.Promise.addUnhandledRejection_(this,
x)};goog.Promise.maybeThen_=function(value,onFulfilled,onRejected,context){if(value instanceof goog.Promise){value.thenVoid(onFulfilled,onRejected,context);return true}else if(goog.Thenable.isImplementedBy(value)){value=value;value.then(onFulfilled,onRejected,context);return true}else if(goog.isObject(value))try{var then=value["then"];if(goog.isFunction(then)){goog.Promise.tryThen_(value,then,onFulfilled,onRejected,context);return true}}catch(e){onRejected.call(context,e);return true}return false};
goog.Promise.tryThen_=function(thenable,then,onFulfilled,onRejected,context){var called=false;var resolve=function(value){if(!called){called=true;onFulfilled.call(context,value)}};var reject=function(reason){if(!called){called=true;onRejected.call(context,reason)}};try{then.call(thenable,resolve,reject)}catch(e){reject(e)}};goog.Promise.prototype.scheduleCallbacks_=function(){if(!this.executing_){this.executing_=true;goog.async.run(this.executeCallbacks_,this)}};goog.Promise.prototype.hasEntry_=function(){return!!this.callbackEntries_};
goog.Promise.prototype.queueEntry_=function(entry){goog.asserts.assert(entry.onFulfilled!=null);if(this.callbackEntriesTail_){this.callbackEntriesTail_.next=entry;this.callbackEntriesTail_=entry}else{this.callbackEntries_=entry;this.callbackEntriesTail_=entry}};
goog.Promise.prototype.popEntry_=function(){var entry=null;if(this.callbackEntries_){entry=this.callbackEntries_;this.callbackEntries_=entry.next;entry.next=null}if(!this.callbackEntries_)this.callbackEntriesTail_=null;if(entry!=null)goog.asserts.assert(entry.onFulfilled!=null);return entry};
goog.Promise.prototype.removeEntryAfter_=function(previous){goog.asserts.assert(this.callbackEntries_);goog.asserts.assert(previous!=null);if(previous.next==this.callbackEntriesTail_)this.callbackEntriesTail_=previous;previous.next=previous.next.next};goog.Promise.prototype.executeCallbacks_=function(){var entry=null;while(entry=this.popEntry_()){if(goog.Promise.LONG_STACK_TRACES)this.currentStep_++;this.executeCallback_(entry,this.state_,this.result_)}this.executing_=false};
goog.Promise.prototype.executeCallback_=function(callbackEntry,state,result){if(state==goog.Promise.State_.REJECTED&&callbackEntry.onRejected&&!callbackEntry.always)this.removeUnhandledRejection_();if(callbackEntry.child){callbackEntry.child.parent_=null;goog.Promise.invokeCallback_(callbackEntry,state,result)}else try{callbackEntry.always?callbackEntry.onFulfilled.call(callbackEntry.context):goog.Promise.invokeCallback_(callbackEntry,state,result)}catch(err){goog.Promise.handleRejection_.call(null,
err)}goog.Promise.returnEntry_(callbackEntry)};goog.Promise.invokeCallback_=function(callbackEntry,state,result){if(state==goog.Promise.State_.FULFILLED)callbackEntry.onFulfilled.call(callbackEntry.context,result);else if(callbackEntry.onRejected)callbackEntry.onRejected.call(callbackEntry.context,result)};
goog.Promise.prototype.addStackTrace_=function(err){if(goog.Promise.LONG_STACK_TRACES&&goog.isString(err.stack)){var trace=err.stack.split("\n",4)[3];var message=err.message;message+=Array(11-message.length).join(" ");this.stack_.push(message+trace)}};
goog.Promise.prototype.appendLongStack_=function(err){if(goog.Promise.LONG_STACK_TRACES&&err&&goog.isString(err.stack)&&this.stack_.length){var longTrace=["Promise trace:"];for(var promise=this;promise;promise=promise.parent_){for(var i=this.currentStep_;i>=0;i--)longTrace.push(promise.stack_[i]);longTrace.push("Value: "+"["+(promise.state_==goog.Promise.State_.REJECTED?"REJECTED":"FULFILLED")+"] "+"<"+String(promise.result_)+">")}err.stack+="\n\n"+longTrace.join("\n")}};
goog.Promise.prototype.removeUnhandledRejection_=function(){if(goog.Promise.UNHANDLED_REJECTION_DELAY>0)for(var p=this;p&&p.unhandledRejectionId_;p=p.parent_){goog.global.clearTimeout(p.unhandledRejectionId_);p.unhandledRejectionId_=0}else if(goog.Promise.UNHANDLED_REJECTION_DELAY==0)for(var p=this;p&&p.hadUnhandledRejection_;p=p.parent_)p.hadUnhandledRejection_=false};
goog.Promise.addUnhandledRejection_=function(promise,reason){if(goog.Promise.UNHANDLED_REJECTION_DELAY>0)promise.unhandledRejectionId_=goog.global.setTimeout(function(){promise.appendLongStack_(reason);goog.Promise.handleRejection_.call(null,reason)},goog.Promise.UNHANDLED_REJECTION_DELAY);else if(goog.Promise.UNHANDLED_REJECTION_DELAY==0){promise.hadUnhandledRejection_=true;goog.async.run(function(){if(promise.hadUnhandledRejection_){promise.appendLongStack_(reason);goog.Promise.handleRejection_.call(null,
reason)}})}};goog.Promise.handleRejection_=goog.async.throwException;goog.Promise.setUnhandledRejectionHandler=function(handler){goog.Promise.handleRejection_=handler};goog.Promise.CancellationError=function(opt_message){goog.Promise.CancellationError.base(this,"constructor",opt_message)};goog.inherits(goog.Promise.CancellationError,goog.debug.Error);goog.Promise.CancellationError.prototype.name="cancel";
goog.Promise.Resolver_=function(promise,resolve,reject){this.promise=promise;this.resolve=resolve;this.reject=reject};goog.provide("goog.dom.BrowserFeature");goog.require("goog.userAgent");
goog.dom.BrowserFeature={CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO&&!goog.userAgent.IE||goog.userAgent.IE&&goog.userAgent.isDocumentModeOrHigher(9)||goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9.1"),CAN_USE_INNER_TEXT:goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE||goog.userAgent.OPERA||goog.userAgent.WEBKIT,INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE,
LEGACY_IE_RANGES:goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)};goog.provide("goog.dom.asserts");goog.require("goog.asserts");goog.dom.asserts.assertIsLocation=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.Location!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.Location||!(o instanceof win.Element)),"Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLAnchorElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLAnchorElement!="undefined"&&typeof win.Location!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLAnchorElement||!(o instanceof win.Location||o instanceof win.Element)),"Argument is not a HTMLAnchorElement (or a non-Element mock); "+"got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLLinkElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLLinkElement!="undefined"&&typeof win.Location!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLLinkElement||!(o instanceof win.Location||o instanceof win.Element)),"Argument is not a HTMLLinkElement (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLImageElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLImageElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLImageElement||!(o instanceof win.Element)),"Argument is not a HTMLImageElement (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLEmbedElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLEmbedElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLEmbedElement||!(o instanceof win.Element)),"Argument is not a HTMLEmbedElement (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLFrameElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLFrameElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLFrameElement||!(o instanceof win.Element)),"Argument is not a HTMLFrameElement (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLIFrameElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLIFrameElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLIFrameElement||!(o instanceof win.Element)),"Argument is not a HTMLIFrameElement (or a non-Element mock); "+"got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLObjectElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLObjectElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLObjectElement||!(o instanceof win.Element)),"Argument is not a HTMLObjectElement (or a non-Element mock); "+"got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.assertIsHTMLScriptElement=function(o){if(goog.asserts.ENABLE_ASSERTS){var win=goog.dom.asserts.getWindow_(o);if(typeof win.HTMLScriptElement!="undefined"&&typeof win.Element!="undefined")goog.asserts.assert(o&&(o instanceof win.HTMLScriptElement||!(o instanceof win.Element)),"Argument is not a HTMLScriptElement (or a non-Element mock); "+"got: %s",goog.dom.asserts.debugStringForType_(o))}return o};
goog.dom.asserts.debugStringForType_=function(value){if(goog.isObject(value))return value.constructor.displayName||value.constructor.name||Object.prototype.toString.call(value);else return value===undefined?"undefined":value===null?"null":typeof value};goog.dom.asserts.getWindow_=function(o){var doc=o&&o.ownerDocument;var win=doc&&(doc.defaultView||doc.parentWindow);return win||goog.global};goog.provide("goog.dom.tags");goog.require("goog.object");goog.dom.tags.VOID_TAGS_=goog.object.createSet("area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr");goog.dom.tags.isVoidTag=function(tagName){return goog.dom.tags.VOID_TAGS_[tagName]===true};goog.provide("goog.string.TypedString");goog.string.TypedString=function(){};goog.string.TypedString.prototype.implementsGoogStringTypedString;goog.string.TypedString.prototype.getTypedStringValue;goog.provide("goog.string.Const");goog.require("goog.asserts");goog.require("goog.string.TypedString");goog.string.Const=function(){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_="";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=true;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};
goog.string.Const.unwrap=function(stringConst){if(stringConst instanceof goog.string.Const&&stringConst.constructor===goog.string.Const&&stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;else{goog.asserts.fail("expected object of type Const, got '"+stringConst+"'");return"type_error:Const"}};goog.string.Const.from=function(s){return goog.string.Const.create__googStringSecurityPrivate_(s)};
goog.string.Const.TYPE_MARKER_={};goog.string.Const.create__googStringSecurityPrivate_=function(s){var stringConst=new goog.string.Const;stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_=s;return stringConst};goog.string.Const.EMPTY=goog.string.Const.from("");goog.provide("goog.html.SafeScript");goog.require("goog.asserts");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="";this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeScript.prototype.implementsGoogStringTypedString=true;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeScript.fromConstant=function(script){var scriptString=goog.string.Const.unwrap(script);if(scriptString.length===0)return goog.html.SafeScript.EMPTY;return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString)};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_};
if(goog.DEBUG)goog.html.SafeScript.prototype.toString=function(){return"SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"};
goog.html.SafeScript.unwrap=function(safeScript){if(safeScript instanceof goog.html.SafeScript&&safeScript.constructor===goog.html.SafeScript&&safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;else{goog.asserts.fail("expected object of type SafeScript, got '"+safeScript+"' of type "+goog.typeOf(safeScript));return"type_error:SafeScript"}};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(script){return(new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script)};goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(script){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=script;return this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.provide("goog.fs.url");goog.fs.url.createObjectUrl=function(blob){return goog.fs.url.getUrlObject_().createObjectURL(blob)};goog.fs.url.revokeObjectUrl=function(url){goog.fs.url.getUrlObject_().revokeObjectURL(url)};goog.fs.url.UrlObject_;goog.fs.url.getUrlObject_=function(){var urlObject=goog.fs.url.findUrlObject_();if(urlObject!=null)return urlObject;else throw new Error("This browser doesn't seem to support blob URLs");};
goog.fs.url.findUrlObject_=function(){if(goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL))return goog.global.URL;else if(goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL))return goog.global.webkitURL;else if(goog.isDef(goog.global.createObjectURL))return goog.global;else return null};goog.fs.url.browserSupportsObjectUrls=function(){return goog.fs.url.findUrlObject_()!=null};goog.provide("goog.i18n.bidi");goog.provide("goog.i18n.bidi.Dir");goog.provide("goog.i18n.bidi.DirectionalString");goog.provide("goog.i18n.bidi.Format");goog.define("goog.i18n.bidi.FORCE_RTL",false);
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||(goog.LOCALE.substring(0,2).toLowerCase()=="ar"||goog.LOCALE.substring(0,2).toLowerCase()=="fa"||goog.LOCALE.substring(0,2).toLowerCase()=="he"||goog.LOCALE.substring(0,2).toLowerCase()=="iw"||goog.LOCALE.substring(0,2).toLowerCase()=="ps"||goog.LOCALE.substring(0,2).toLowerCase()=="sd"||goog.LOCALE.substring(0,2).toLowerCase()=="ug"||goog.LOCALE.substring(0,2).toLowerCase()=="ur"||goog.LOCALE.substring(0,2).toLowerCase()=="yi")&&(goog.LOCALE.length==
2||goog.LOCALE.substring(2,3)=="-"||goog.LOCALE.substring(2,3)=="_")||goog.LOCALE.length>=3&&goog.LOCALE.substring(0,3).toLowerCase()=="ckb"&&(goog.LOCALE.length==3||goog.LOCALE.substring(3,4)=="-"||goog.LOCALE.substring(3,4)=="_");goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;goog.i18n.bidi.toDir=function(givenDir,opt_noNeutral){if(typeof givenDir=="number")return givenDir>0?goog.i18n.bidi.Dir.LTR:givenDir<0?goog.i18n.bidi.Dir.RTL:opt_noNeutral?null:goog.i18n.bidi.Dir.NEUTRAL;else if(givenDir==null)return null;else return givenDir?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff"+"\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(str,opt_isStripNeeded){return opt_isStripNeeded?str.replace(goog.i18n.bidi.htmlSkipReg_,""):str};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");
goog.i18n.bidi.hasAnyRtl=function(str,opt_isHtml){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;goog.i18n.bidi.hasAnyLtr=function(str,opt_isHtml){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(str){return goog.i18n.bidi.rtlRe_.test(str)};
goog.i18n.bidi.isLtrChar=function(str){return goog.i18n.bidi.ltrRe_.test(str)};goog.i18n.bidi.isNeutralChar=function(str){return!goog.i18n.bidi.isLtrChar(str)&&!goog.i18n.bidi.isRtlChar(str)};goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");
goog.i18n.bidi.startsWithRtl=function(str,opt_isHtml){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;goog.i18n.bidi.startsWithLtr=function(str,opt_isHtml){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;
goog.i18n.bidi.isNeutralText=function(str,opt_isHtml){str=goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml);return goog.i18n.bidi.isRequiredLtrRe_.test(str)||!goog.i18n.bidi.hasAnyLtr(str)&&!goog.i18n.bidi.hasAnyRtl(str)};goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");
goog.i18n.bidi.endsWithLtr=function(str,opt_isHtml){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;goog.i18n.bidi.endsWithRtl=function(str,opt_isHtml){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_=new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|"+".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))"+"(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)","i");goog.i18n.bidi.isRtlLanguage=function(lang){return goog.i18n.bidi.rtlLocalesRe_.test(lang)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(s,opt_isRtlContext){var useRtl=opt_isRtlContext===undefined?goog.i18n.bidi.hasAnyRtl(s):opt_isRtlContext;var mark=useRtl?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return s.replace(goog.i18n.bidi.bracketGuardTextRe_,mark+"$&"+mark)};goog.i18n.bidi.enforceRtlInHtml=function(html){if(html.charAt(0)=="<")return html.replace(/<\w+/,"$& dir=rtl");return"\n<span dir=rtl>"+html+"</span>"};
goog.i18n.bidi.enforceRtlInText=function(text){return goog.i18n.bidi.Format.RLE+text+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.enforceLtrInHtml=function(html){if(html.charAt(0)=="<")return html.replace(/<\w+/,"$& dir=ltr");return"\n<span dir=ltr>"+html+"</span>"};goog.i18n.bidi.enforceLtrInText=function(text){return goog.i18n.bidi.Format.LRE+text+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;
goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;goog.i18n.bidi.mirrorCSS=function(cssStr){return cssStr.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(str){return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(str,opt_isHtml){var rtlCount=0;var totalCount=0;var hasWeaklyLtr=false;var tokens=goog.i18n.bidi.stripHtmlIfNeeded_(str,opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);for(var i=0;i<tokens.length;i++){var token=tokens[i];if(goog.i18n.bidi.startsWithRtl(token)){rtlCount++;totalCount++}else if(goog.i18n.bidi.isRequiredLtrRe_.test(token))hasWeaklyLtr=true;else if(goog.i18n.bidi.hasAnyLtr(token))totalCount++;else if(goog.i18n.bidi.hasNumeralsRe_.test(token))hasWeaklyLtr=
true}return totalCount==0?hasWeaklyLtr?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:rtlCount/totalCount>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.detectRtlDirectionality=function(str,opt_isHtml){return goog.i18n.bidi.estimateDirection(str,opt_isHtml)==goog.i18n.bidi.Dir.RTL};
goog.i18n.bidi.setElementDirAndAlign=function(element,dir){if(element){dir=goog.i18n.bidi.toDir(dir);if(dir){element.style.textAlign=dir==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;element.dir=dir==goog.i18n.bidi.Dir.RTL?"rtl":"ltr"}}};goog.i18n.bidi.setElementDirByTextDirectionality=function(element,text){switch(goog.i18n.bidi.estimateDirection(text)){case goog.i18n.bidi.Dir.LTR:element.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:element.dir="rtl";break;default:element.removeAttribute("dir")}};
goog.i18n.bidi.DirectionalString=function(){};goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;goog.i18n.bidi.DirectionalString.prototype.getDirection;goog.provide("goog.html.TrustedResourceUrl");goog.require("goog.asserts");goog.require("goog.i18n.bidi.Dir");goog.require("goog.i18n.bidi.DirectionalString");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="";this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=true;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_};goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=true;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};
if(goog.DEBUG)goog.html.TrustedResourceUrl.prototype.toString=function(){return"TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"};
goog.html.TrustedResourceUrl.unwrap=function(trustedResourceUrl){if(trustedResourceUrl instanceof goog.html.TrustedResourceUrl&&trustedResourceUrl.constructor===goog.html.TrustedResourceUrl&&trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;else{goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+trustedResourceUrl+
"' of type "+goog.typeOf(trustedResourceUrl));return"type_error:TrustedResourceUrl"}};goog.html.TrustedResourceUrl.format=function(format,args){var result=goog.html.TrustedResourceUrl.format_(format,args);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result)};
goog.html.TrustedResourceUrl.format_=function(format,args){var formatStr=goog.string.Const.unwrap(format);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr))throw new Error("Invalid TrustedResourceUrl format: "+formatStr);return formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(match,id){if(!Object.prototype.hasOwnProperty.call(args,id))throw new Error('Found marker, "'+id+'", in format string, "'+formatStr+'", but no valid label mapping found '+"in args: "+JSON.stringify(args));
var arg=args[id];if(arg instanceof goog.string.Const)return goog.string.Const.unwrap(arg);else return encodeURIComponent(String(arg))})};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank(#|$)/i;
goog.html.TrustedResourceUrl.formatWithParams=function(format,args,params){var url=goog.html.TrustedResourceUrl.format_(format,args);var separator=/\?/.test(url)?"&":"?";for(var key in params){var values=goog.isArray(params[key])?params[key]:[params[key]];for(var i=0;i<values.length;i++){if(values[i]==null)continue;url+=separator+encodeURIComponent(key)+"="+encodeURIComponent(String(values[i]));separator="&"}}return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url)};
goog.html.TrustedResourceUrl.fromConstant=function(url){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url))};goog.html.TrustedResourceUrl.fromConstants=function(parts){var unwrapped="";for(var i=0;i<parts.length;i++)unwrapped+=goog.string.Const.unwrap(parts[i]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped)};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(url){var trustedResourceUrl=new goog.html.TrustedResourceUrl;trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=url;return trustedResourceUrl};goog.provide("goog.html.SafeUrl");goog.require("goog.asserts");goog.require("goog.fs.url");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.i18n.bidi.Dir");goog.require("goog.i18n.bidi.DirectionalString");goog.require("goog.string");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};
goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=true;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_};goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=true;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};
if(goog.DEBUG)goog.html.SafeUrl.prototype.toString=function(){return"SafeUrl{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"};
goog.html.SafeUrl.unwrap=function(safeUrl){if(safeUrl instanceof goog.html.SafeUrl&&safeUrl.constructor===goog.html.SafeUrl&&safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;else{goog.asserts.fail("expected object of type SafeUrl, got '"+safeUrl+"' of type "+goog.typeOf(safeUrl));return"type_error:SafeUrl"}};goog.html.SafeUrl.fromConstant=function(url){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url))};
goog.html.SAFE_MIME_TYPE_PATTERN_=new RegExp("^(?:audio/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|"+"image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|"+"text/csv|"+"video/(?:mpeg|mp4|ogg|webm))$","i");goog.html.SafeUrl.fromBlob=function(blob){var url=goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type)?goog.fs.url.createObjectUrl(blob):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url)};goog.html.DATA_URL_PATTERN_=/^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl=function(dataUrl){var match=dataUrl.match(goog.html.DATA_URL_PATTERN_);var valid=match&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid?dataUrl:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(telUrl){if(!goog.string.caseInsensitiveStartsWith(telUrl,"tel:"))telUrl=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl)};
goog.html.SafeUrl.fromTrustedResourceUrl=function(trustedResourceUrl){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl))};goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize=function(url){if(url instanceof goog.html.SafeUrl)return url;else if(url.implementsGoogStringTypedString)url=url.getTypedStringValue();else url=String(url);if(!goog.html.SAFE_URL_PATTERN_.test(url))url=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url)};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(url){if(url instanceof goog.html.SafeUrl)return url;else if(url.implementsGoogStringTypedString)url=url.getTypedStringValue();else url=String(url);if(!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url)))url=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url)};goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(url){var safeUrl=new goog.html.SafeUrl;safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_=url;return safeUrl};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.provide("goog.html.SafeStyle");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.html.SafeUrl");goog.require("goog.string");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="";this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyle.fromConstant=function(style){var styleString=goog.string.Const.unwrap(style);if(styleString.length===0)return goog.html.SafeStyle.EMPTY;goog.html.SafeStyle.checkStyle_(styleString);goog.asserts.assert(goog.string.endsWith(styleString,";"),"Last character of style string is not ';': "+styleString);goog.asserts.assert(goog.string.contains(styleString,":"),"Style string must contain at least one ':', to "+'specify a "name: value" pair: '+styleString);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString)};
goog.html.SafeStyle.checkStyle_=function(style){goog.asserts.assert(!/[<>]/.test(style),"Forbidden characters in style string: "+style)};goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};if(goog.DEBUG)goog.html.SafeStyle.prototype.toString=function(){return"SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"};
goog.html.SafeStyle.unwrap=function(safeStyle){if(safeStyle instanceof goog.html.SafeStyle&&safeStyle.constructor===goog.html.SafeStyle&&safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;else{goog.asserts.fail("expected object of type SafeStyle, got '"+safeStyle+"' of type "+goog.typeOf(safeStyle));return"type_error:SafeStyle"}};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(style){return(new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style)};goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(style){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=style;return this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";goog.html.SafeStyle.PropertyValue;goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create=function(map){var style="";for(var name in map){if(!/^[-_a-zA-Z0-9]+$/.test(name))throw new Error("Name allows only [-_a-zA-Z0-9], got: "+name);var value=map[name];if(value==null)continue;if(goog.isArray(value))value=goog.array.map(value,goog.html.SafeStyle.sanitizePropertyValue_).join(" ");else value=goog.html.SafeStyle.sanitizePropertyValue_(value);style+=name+":"+value+";"}if(!style)return goog.html.SafeStyle.EMPTY;goog.html.SafeStyle.checkStyle_(style);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style)};
goog.html.SafeStyle.sanitizePropertyValue_=function(value){if(value instanceof goog.html.SafeUrl){var url=goog.html.SafeUrl.unwrap(value);return'url("'+url.replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")'}var result=value instanceof goog.string.Const?goog.string.Const.unwrap(value):goog.html.SafeStyle.sanitizePropertyValueString_(String(value));goog.asserts.assert(!/[{;}]/.test(result),"Value does not allow [{;}].");return result};
goog.html.SafeStyle.sanitizePropertyValueString_=function(value){var valueWithoutFunctions=value.replace(goog.html.SafeUrl.FUNCTIONS_RE_,"$1").replace(goog.html.SafeUrl.URL_RE_,"url");if(!goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)){goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+value);return goog.html.SafeStyle.INNOCUOUS_STRING}else if(!goog.html.SafeStyle.hasBalancedQuotes_(value)){goog.asserts.fail("String value requires balanced quotes, got: "+
value);return goog.html.SafeStyle.INNOCUOUS_STRING}return goog.html.SafeStyle.sanitizeUrl_(value)};goog.html.SafeStyle.hasBalancedQuotes_=function(value){var outsideSingle=true;var outsideDouble=true;for(var i=0;i<value.length;i++){var c=value.charAt(i);if(c=="'"&&outsideDouble)outsideSingle=!outsideSingle;else if(c=='"'&&outsideSingle)outsideDouble=!outsideDouble}return outsideSingle&&outsideDouble};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9]";
goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeUrl.URL_RE_=new RegExp("\\b(url\\([ \t\n]*)("+"'[ -&(-\\[\\]-~]*'"+'|"[ !#-\\[\\]-~]*"'+"|[!#-&*-\\[\\]-~]*"+")([ \t\n]*\\))","g");goog.html.SafeUrl.FUNCTIONS_RE_=new RegExp("\\b(hsl|hsla|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?)"+"\\([-0-9a-z.%, ]+\\)","g");
goog.html.SafeStyle.sanitizeUrl_=function(value){return value.replace(goog.html.SafeUrl.URL_RE_,function(match,before,url,after){var quote="";url=url.replace(/^(['"])(.*)\1$/,function(match,start,inside){quote=start;return inside});var sanitized=goog.html.SafeUrl.sanitize(url).getTypedStringValue();return before+quote+sanitized+quote+after})};
goog.html.SafeStyle.concat=function(var_args){var style="";var addArgument=function(argument){if(goog.isArray(argument))goog.array.forEach(argument,addArgument);else style+=goog.html.SafeStyle.unwrap(argument)};goog.array.forEach(arguments,addArgument);if(!style)return goog.html.SafeStyle.EMPTY;return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style)};goog.provide("goog.html.SafeStyleSheet");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.html.SafeStyle");goog.require("goog.object");goog.require("goog.string");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="";this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=true;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyleSheet.createRule=function(selector,style){if(goog.string.contains(selector,"<"))throw new Error("Selector does not allow '<', got: "+selector);var selectorToCheck=selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck))throw new Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and "+"strings, got: "+selector);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck))throw new Error("() and [] in selector must be balanced, got: "+
selector);if(!(style instanceof goog.html.SafeStyle))style=goog.html.SafeStyle.create(style);var styleSheet=selector+"{"+goog.html.SafeStyle.unwrap(style)+"}";return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet)};
goog.html.SafeStyleSheet.hasBalancedBrackets_=function(s){var brackets={"(":")","[":"]"};var expectedBrackets=[];for(var i=0;i<s.length;i++){var ch=s[i];if(brackets[ch])expectedBrackets.push(brackets[ch]);else if(goog.object.contains(brackets,ch))if(expectedBrackets.pop()!=ch)return false}return expectedBrackets.length==0};
goog.html.SafeStyleSheet.concat=function(var_args){var result="";var addArgument=function(argument){if(goog.isArray(argument))goog.array.forEach(argument,addArgument);else result+=goog.html.SafeStyleSheet.unwrap(argument)};goog.array.forEach(arguments,addArgument);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result)};
goog.html.SafeStyleSheet.fromConstant=function(styleSheet){var styleSheetString=goog.string.Const.unwrap(styleSheet);if(styleSheetString.length===0)return goog.html.SafeStyleSheet.EMPTY;goog.asserts.assert(!goog.string.contains(styleSheetString,"<"),"Forbidden '<' character in style sheet string: "+styleSheetString);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString)};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};
if(goog.DEBUG)goog.html.SafeStyleSheet.prototype.toString=function(){return"SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"};
goog.html.SafeStyleSheet.unwrap=function(safeStyleSheet){if(safeStyleSheet instanceof goog.html.SafeStyleSheet&&safeStyleSheet.constructor===goog.html.SafeStyleSheet&&safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;else{goog.asserts.fail("expected object of type SafeStyleSheet, got '"+safeStyleSheet+"' of type "+goog.typeOf(safeStyleSheet));
return"type_error:SafeStyleSheet"}};goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(styleSheet){return(new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(styleSheet){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=styleSheet;return this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.provide("goog.html.SafeHtml");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.dom.TagName");goog.require("goog.dom.tags");goog.require("goog.html.SafeScript");goog.require("goog.html.SafeStyle");goog.require("goog.html.SafeStyleSheet");goog.require("goog.html.SafeUrl");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.i18n.bidi.Dir");goog.require("goog.i18n.bidi.DirectionalString");goog.require("goog.labs.userAgent.browser");goog.require("goog.object");
goog.require("goog.string");goog.require("goog.string.Const");goog.require("goog.string.TypedString");goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;this.dir_=null};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=true;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString=true;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_};if(goog.DEBUG)goog.html.SafeHtml.prototype.toString=function(){return"SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"};
goog.html.SafeHtml.unwrap=function(safeHtml){if(safeHtml instanceof goog.html.SafeHtml&&safeHtml.constructor===goog.html.SafeHtml&&safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;else{goog.asserts.fail("expected object of type SafeHtml, got '"+safeHtml+"' of type "+goog.typeOf(safeHtml));return"type_error:SafeHtml"}};goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape=function(textOrHtml){if(textOrHtml instanceof goog.html.SafeHtml)return textOrHtml;var dir=null;if(textOrHtml.implementsGoogI18nBidiDirectionalString)dir=textOrHtml.getDirection();var textAsString;if(textOrHtml.implementsGoogStringTypedString)textAsString=textOrHtml.getTypedStringValue();else textAsString=String(textOrHtml);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString),dir)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(textOrHtml){if(textOrHtml instanceof goog.html.SafeHtml)return textOrHtml;var html=goog.html.SafeHtml.htmlEscape(textOrHtml);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)),html.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(textOrHtml){if(textOrHtml instanceof goog.html.SafeHtml)return textOrHtml;var html=goog.html.SafeHtml.htmlEscape(textOrHtml);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),html.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_=goog.object.createSet("action","cite","data","formaction","href","manifest","poster","src");goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_=goog.object.createSet(goog.dom.TagName.APPLET,goog.dom.TagName.BASE,goog.dom.TagName.EMBED,goog.dom.TagName.IFRAME,goog.dom.TagName.LINK,goog.dom.TagName.MATH,goog.dom.TagName.META,goog.dom.TagName.OBJECT,goog.dom.TagName.SCRIPT,goog.dom.TagName.STYLE,goog.dom.TagName.SVG,goog.dom.TagName.TEMPLATE);goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create=function(tagName,opt_attributes,opt_content){goog.html.SafeHtml.verifyTagName(String(tagName));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName),opt_attributes,opt_content)};
goog.html.SafeHtml.verifyTagName=function(tagName){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName))throw new Error("Invalid tag name <"+tagName+">.");if(tagName.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw new Error("Tag name <"+tagName+"> is not allowed for SafeHtml.");};
goog.html.SafeHtml.createIframe=function(opt_src,opt_srcdoc,opt_attributes,opt_content){if(opt_src)goog.html.TrustedResourceUrl.unwrap(opt_src);var fixedAttributes={};fixedAttributes["src"]=opt_src||null;fixedAttributes["srcdoc"]=opt_srcdoc&&goog.html.SafeHtml.unwrap(opt_srcdoc);var defaultAttributes={"sandbox":""};var attributes=goog.html.SafeHtml.combineAttributes(fixedAttributes,defaultAttributes,opt_attributes);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",
attributes,opt_content)};
goog.html.SafeHtml.createSandboxIframe=function(opt_src,opt_srcdoc,opt_attributes,opt_content){if(!goog.html.SafeHtml.canUseSandboxIframe())throw new Error("The browser does not support sandboxed iframes.");var fixedAttributes={};if(opt_src)fixedAttributes["src"]=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));else fixedAttributes["src"]=null;fixedAttributes["srcdoc"]=opt_srcdoc||null;fixedAttributes["sandbox"]="";var attributes=goog.html.SafeHtml.combineAttributes(fixedAttributes,{},
opt_attributes);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",attributes,opt_content)};goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global["HTMLIFrameElement"]&&"sandbox"in goog.global["HTMLIFrameElement"].prototype};
goog.html.SafeHtml.createScriptSrc=function(src,opt_attributes){goog.html.TrustedResourceUrl.unwrap(src);var fixedAttributes={"src":src};var defaultAttributes={};var attributes=goog.html.SafeHtml.combineAttributes(fixedAttributes,defaultAttributes,opt_attributes);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",attributes)};
goog.html.SafeHtml.createScript=function(script,opt_attributes){for(var attr in opt_attributes){var attrLower=attr.toLowerCase();if(attrLower=="language"||attrLower=="src"||attrLower=="text"||attrLower=="type")throw new Error('Cannot set "'+attrLower+'" attribute');}var content="";script=goog.array.concat(script);for(var i=0;i<script.length;i++)content+=goog.html.SafeScript.unwrap(script[i]);var htmlContent=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content,goog.i18n.bidi.Dir.NEUTRAL);
return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",opt_attributes,htmlContent)};
goog.html.SafeHtml.createStyle=function(styleSheet,opt_attributes){var fixedAttributes={"type":"text/css"};var defaultAttributes={};var attributes=goog.html.SafeHtml.combineAttributes(fixedAttributes,defaultAttributes,opt_attributes);var content="";styleSheet=goog.array.concat(styleSheet);for(var i=0;i<styleSheet.length;i++)content+=goog.html.SafeStyleSheet.unwrap(styleSheet[i]);var htmlContent=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",
attributes,htmlContent)};
goog.html.SafeHtml.createMetaRefresh=function(url,opt_secs){var unwrappedUrl=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));if(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())if(goog.string.contains(unwrappedUrl,";"))unwrappedUrl="'"+unwrappedUrl.replace(/'/g,"%27")+"'";var attributes={"http-equiv":"refresh","content":(opt_secs||0)+"; url="+unwrappedUrl};return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",attributes)};
goog.html.SafeHtml.getAttrNameAndValue_=function(tagName,name,value){if(value instanceof goog.string.Const)value=goog.string.Const.unwrap(value);else if(name.toLowerCase()=="style")value=goog.html.SafeHtml.getStyleValue_(value);else if(/^on/i.test(name))throw new Error('Attribute "'+name+'" requires goog.string.Const value, "'+value+'" given.');else if(name.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(value instanceof goog.html.TrustedResourceUrl)value=goog.html.TrustedResourceUrl.unwrap(value);
else if(value instanceof goog.html.SafeUrl)value=goog.html.SafeUrl.unwrap(value);else if(goog.isString(value))value=goog.html.SafeUrl.sanitize(value).getTypedStringValue();else throw new Error('Attribute "'+name+'" on tag "'+tagName+'" requires goog.html.SafeUrl, goog.string.Const, or string,'+' value "'+value+'" given.');if(value.implementsGoogStringTypedString)value=value.getTypedStringValue();goog.asserts.assert(goog.isString(value)||goog.isNumber(value),"String or number value expected, got "+
typeof value+" with value: "+value);return name+'="'+goog.string.htmlEscape(String(value))+'"'};goog.html.SafeHtml.getStyleValue_=function(value){if(!goog.isObject(value))throw new Error('The "style" attribute requires goog.html.SafeStyle or map '+"of style properties, "+typeof value+" given: "+value);if(!(value instanceof goog.html.SafeStyle))value=goog.html.SafeStyle.create(value);return goog.html.SafeStyle.unwrap(value)};
goog.html.SafeHtml.createWithDir=function(dir,tagName,opt_attributes,opt_content){var html=goog.html.SafeHtml.create(tagName,opt_attributes,opt_content);html.dir_=dir;return html};
goog.html.SafeHtml.concat=function(var_args){var dir=goog.i18n.bidi.Dir.NEUTRAL;var content="";var addArgument=function(argument){if(goog.isArray(argument))goog.array.forEach(argument,addArgument);else{var html=goog.html.SafeHtml.htmlEscape(argument);content+=goog.html.SafeHtml.unwrap(html);var htmlDir=html.getDirection();if(dir==goog.i18n.bidi.Dir.NEUTRAL)dir=htmlDir;else if(htmlDir!=goog.i18n.bidi.Dir.NEUTRAL&&dir!=htmlDir)dir=null}};goog.array.forEach(arguments,addArgument);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content,
dir)};goog.html.SafeHtml.concatWithDir=function(dir,var_args){var html=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));html.dir_=dir;return html};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(html,dir){return(new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html,dir)};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(html,dir){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=html;this.dir_=dir;return this};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(tagName,opt_attributes,opt_content){var dir=null;var result="<"+tagName;result+=goog.html.SafeHtml.stringifyAttributes(tagName,opt_attributes);var content=opt_content;if(!goog.isDefAndNotNull(content))content=[];else if(!goog.isArray(content))content=[content];if(goog.dom.tags.isVoidTag(tagName.toLowerCase())){goog.asserts.assert(!content.length,"Void tag <"+tagName+"> does not allow content.");result+=">"}else{var html=
goog.html.SafeHtml.concat(content);result+=">"+goog.html.SafeHtml.unwrap(html)+"</"+tagName+">";dir=html.getDirection()}var dirAttribute=opt_attributes&&opt_attributes["dir"];if(dirAttribute)if(/^(ltr|rtl|auto)$/i.test(dirAttribute))dir=goog.i18n.bidi.Dir.NEUTRAL;else dir=null;return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result,dir)};
goog.html.SafeHtml.stringifyAttributes=function(tagName,opt_attributes){var result="";if(opt_attributes)for(var name in opt_attributes){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name))throw new Error('Invalid attribute name "'+name+'".');var value=opt_attributes[name];if(!goog.isDefAndNotNull(value))continue;result+=" "+goog.html.SafeHtml.getAttrNameAndValue_(tagName,name,value)}return result};
goog.html.SafeHtml.combineAttributes=function(fixedAttributes,defaultAttributes,opt_attributes){var combinedAttributes={};var name;for(name in fixedAttributes){goog.asserts.assert(name.toLowerCase()==name,"Must be lower case");combinedAttributes[name]=fixedAttributes[name]}for(name in defaultAttributes){goog.asserts.assert(name.toLowerCase()==name,"Must be lower case");combinedAttributes[name]=defaultAttributes[name]}for(name in opt_attributes){var nameLower=name.toLowerCase();if(nameLower in fixedAttributes)throw new Error('Cannot override "'+
nameLower+'" attribute, got "'+name+'" with value "'+opt_attributes[name]+'"');if(nameLower in defaultAttributes)delete combinedAttributes[nameLower];combinedAttributes[name]=opt_attributes[name]}return combinedAttributes};goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.provide("goog.dom.safe");goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");goog.require("goog.asserts");goog.require("goog.dom.asserts");goog.require("goog.html.SafeHtml");goog.require("goog.html.SafeScript");goog.require("goog.html.SafeStyle");goog.require("goog.html.SafeUrl");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.string");goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(node,position,html){node.insertAdjacentHTML(position,goog.html.SafeHtml.unwrap(html))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={"MATH":true,"SCRIPT":true,"STYLE":true,"SVG":true,"TEMPLATE":true};
goog.dom.safe.setInnerHtml=function(elem,html){if(goog.asserts.ENABLE_ASSERTS){var tagName=elem.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName])throw new Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+elem.tagName+".");}elem.innerHTML=goog.html.SafeHtml.unwrap(html)};goog.dom.safe.setOuterHtml=function(elem,html){elem.outerHTML=goog.html.SafeHtml.unwrap(html)};goog.dom.safe.setStyle=function(elem,style){elem.style.cssText=goog.html.SafeStyle.unwrap(style)};
goog.dom.safe.documentWrite=function(doc,html){doc.write(goog.html.SafeHtml.unwrap(html))};goog.dom.safe.setAnchorHref=function(anchor,url){goog.dom.asserts.assertIsHTMLAnchorElement(anchor);var safeUrl;if(url instanceof goog.html.SafeUrl)safeUrl=url;else safeUrl=goog.html.SafeUrl.sanitizeAssertUnchanged(url);anchor.href=goog.html.SafeUrl.unwrap(safeUrl)};
goog.dom.safe.setImageSrc=function(imageElement,url){goog.dom.asserts.assertIsHTMLImageElement(imageElement);var safeUrl;if(url instanceof goog.html.SafeUrl)safeUrl=url;else safeUrl=goog.html.SafeUrl.sanitizeAssertUnchanged(url);imageElement.src=goog.html.SafeUrl.unwrap(safeUrl)};goog.dom.safe.setEmbedSrc=function(embed,url){goog.dom.asserts.assertIsHTMLEmbedElement(embed);embed.src=goog.html.TrustedResourceUrl.unwrap(url)};
goog.dom.safe.setFrameSrc=function(frame,url){goog.dom.asserts.assertIsHTMLFrameElement(frame);frame.src=goog.html.TrustedResourceUrl.unwrap(url)};goog.dom.safe.setIframeSrc=function(iframe,url){goog.dom.asserts.assertIsHTMLIFrameElement(iframe);iframe.src=goog.html.TrustedResourceUrl.unwrap(url)};goog.dom.safe.setIframeSrcdoc=function(iframe,html){goog.dom.asserts.assertIsHTMLIFrameElement(iframe);iframe.srcdoc=goog.html.SafeHtml.unwrap(html)};
goog.dom.safe.setLinkHrefAndRel=function(link,url,rel){goog.dom.asserts.assertIsHTMLLinkElement(link);link.rel=rel;if(goog.string.caseInsensitiveContains(rel,"stylesheet")){goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');link.href=goog.html.TrustedResourceUrl.unwrap(url)}else if(url instanceof goog.html.TrustedResourceUrl)link.href=goog.html.TrustedResourceUrl.unwrap(url);else if(url instanceof goog.html.SafeUrl)link.href=
goog.html.SafeUrl.unwrap(url);else link.href=goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue()};goog.dom.safe.setObjectData=function(object,url){goog.dom.asserts.assertIsHTMLObjectElement(object);object.data=goog.html.TrustedResourceUrl.unwrap(url)};goog.dom.safe.setScriptSrc=function(script,url){goog.dom.asserts.assertIsHTMLScriptElement(script);script.src=goog.html.TrustedResourceUrl.unwrap(url)};
goog.dom.safe.setScriptContent=function(script,content){goog.dom.asserts.assertIsHTMLScriptElement(script);script.text=goog.html.SafeScript.unwrap(content)};goog.dom.safe.setLocationHref=function(loc,url){goog.dom.asserts.assertIsLocation(loc);var safeUrl;if(url instanceof goog.html.SafeUrl)safeUrl=url;else safeUrl=goog.html.SafeUrl.sanitizeAssertUnchanged(url);loc.href=goog.html.SafeUrl.unwrap(safeUrl)};
goog.dom.safe.openInWindow=function(url,opt_openerWin,opt_name,opt_specs,opt_replace){var safeUrl;if(url instanceof goog.html.SafeUrl)safeUrl=url;else safeUrl=goog.html.SafeUrl.sanitizeAssertUnchanged(url);var win=opt_openerWin||window;return win.open(goog.html.SafeUrl.unwrap(safeUrl),opt_name?goog.string.Const.unwrap(opt_name):"",opt_specs,opt_replace)};goog.provide("goog.html.uncheckedconversions");goog.require("goog.asserts");goog.require("goog.html.SafeHtml");goog.require("goog.html.SafeScript");goog.require("goog.html.SafeStyle");goog.require("goog.html.SafeStyleSheet");goog.require("goog.html.SafeUrl");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.string");goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(justification,html,opt_dir){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html,opt_dir||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(justification,script){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(justification,style){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(justification,styleSheet){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(justification,url){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(justification,url){goog.asserts.assertString(goog.string.Const.unwrap(justification),"must provide justification");goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url)};goog.provide("goog.math");goog.require("goog.array");goog.require("goog.asserts");goog.math.randomInt=function(a){return Math.floor(Math.random()*a)};goog.math.uniformRandom=function(a,b){return a+Math.random()*(b-a)};goog.math.clamp=function(value,min,max){return Math.min(Math.max(value,min),max)};goog.math.modulo=function(a,b){var r=a%b;return r*b<0?r+b:r};goog.math.lerp=function(a,b,x){return a+x*(b-a)};goog.math.nearlyEquals=function(a,b,opt_tolerance){return Math.abs(a-b)<=(opt_tolerance||1E-6)};
goog.math.standardAngle=function(angle){return goog.math.modulo(angle,360)};goog.math.standardAngleInRadians=function(angle){return goog.math.modulo(angle,2*Math.PI)};goog.math.toRadians=function(angleDegrees){return angleDegrees*Math.PI/180};goog.math.toDegrees=function(angleRadians){return angleRadians*180/Math.PI};goog.math.angleDx=function(degrees,radius){return radius*Math.cos(goog.math.toRadians(degrees))};goog.math.angleDy=function(degrees,radius){return radius*Math.sin(goog.math.toRadians(degrees))};
goog.math.angle=function(x1,y1,x2,y2){return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2-y1,x2-x1)))};goog.math.angleDifference=function(startAngle,endAngle){var d=goog.math.standardAngle(endAngle)-goog.math.standardAngle(startAngle);if(d>180)d=d-360;else if(d<=-180)d=360+d;return d};goog.math.sign=function(x){if(x>0)return 1;if(x<0)return-1;return x};
goog.math.longestCommonSubsequence=function(array1,array2,opt_compareFn,opt_collectorFn){var compare=opt_compareFn||function(a,b){return a==b};var collect=opt_collectorFn||function(i1,i2){return array1[i1]};var length1=array1.length;var length2=array2.length;var arr=[];for(var i=0;i<length1+1;i++){arr[i]=[];arr[i][0]=0}for(var j=0;j<length2+1;j++)arr[0][j]=0;for(i=1;i<=length1;i++)for(j=1;j<=length2;j++)if(compare(array1[i-1],array2[j-1]))arr[i][j]=arr[i-1][j-1]+1;else arr[i][j]=Math.max(arr[i-1][j],
arr[i][j-1]);var result=[];var i=length1,j=length2;while(i>0&&j>0)if(compare(array1[i-1],array2[j-1])){result.unshift(collect(i-1,j-1));i--;j--}else if(arr[i-1][j]>arr[i][j-1])i--;else j--;return result};goog.math.sum=function(var_args){return goog.array.reduce(arguments,function(sum,value){return sum+value},0)};goog.math.average=function(var_args){return goog.math.sum.apply(null,arguments)/arguments.length};
goog.math.sampleVariance=function(var_args){var sampleSize=arguments.length;if(sampleSize<2)return 0;var mean=goog.math.average.apply(null,arguments);var variance=goog.math.sum.apply(null,goog.array.map(arguments,function(val){return Math.pow(val-mean,2)}))/(sampleSize-1);return variance};goog.math.standardDeviation=function(var_args){return Math.sqrt(goog.math.sampleVariance.apply(null,arguments))};goog.math.isInt=function(num){return isFinite(num)&&num%1==0};goog.math.isFiniteNumber=function(num){return isFinite(num)};
goog.math.isNegativeZero=function(num){return num==0&&1/num<0};goog.math.log10Floor=function(num){if(num>0){var x=Math.round(Math.log(num)*Math.LOG10E);return x-(parseFloat("1e"+x)>num?1:0)}return num==0?-Infinity:NaN};goog.math.safeFloor=function(num,opt_epsilon){goog.asserts.assert(!goog.isDef(opt_epsilon)||opt_epsilon>0);return Math.floor(num+(opt_epsilon||2E-15))};
goog.math.safeCeil=function(num,opt_epsilon){goog.asserts.assert(!goog.isDef(opt_epsilon)||opt_epsilon>0);return Math.ceil(num-(opt_epsilon||2E-15))};goog.provide("goog.math.Coordinate");goog.require("goog.math");goog.math.Coordinate=function(opt_x,opt_y){this.x=goog.isDef(opt_x)?opt_x:0;this.y=goog.isDef(opt_y)?opt_y:0};goog.math.Coordinate.prototype.clone=function(){return new goog.math.Coordinate(this.x,this.y)};if(goog.DEBUG)goog.math.Coordinate.prototype.toString=function(){return"("+this.x+", "+this.y+")"};
goog.math.Coordinate.prototype.equals=function(other){return other instanceof goog.math.Coordinate&&goog.math.Coordinate.equals(this,other)};goog.math.Coordinate.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.x==b.x&&a.y==b.y};goog.math.Coordinate.distance=function(a,b){var dx=a.x-b.x;var dy=a.y-b.y;return Math.sqrt(dx*dx+dy*dy)};goog.math.Coordinate.magnitude=function(a){return Math.sqrt(a.x*a.x+a.y*a.y)};
goog.math.Coordinate.azimuth=function(a){return goog.math.angle(0,0,a.x,a.y)};goog.math.Coordinate.squaredDistance=function(a,b){var dx=a.x-b.x;var dy=a.y-b.y;return dx*dx+dy*dy};goog.math.Coordinate.difference=function(a,b){return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};goog.math.Coordinate.sum=function(a,b){return new goog.math.Coordinate(a.x+b.x,a.y+b.y)};goog.math.Coordinate.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};
goog.math.Coordinate.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};goog.math.Coordinate.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};goog.math.Coordinate.prototype.translate=function(tx,opt_ty){if(tx instanceof goog.math.Coordinate){this.x+=tx.x;this.y+=tx.y}else{this.x+=Number(tx);if(goog.isNumber(opt_ty))this.y+=opt_ty}return this};
goog.math.Coordinate.prototype.scale=function(sx,opt_sy){var sy=goog.isNumber(opt_sy)?opt_sy:sx;this.x*=sx;this.y*=sy;return this};goog.math.Coordinate.prototype.rotateRadians=function(radians,opt_center){var center=opt_center||new goog.math.Coordinate(0,0);var x=this.x;var y=this.y;var cos=Math.cos(radians);var sin=Math.sin(radians);this.x=(x-center.x)*cos-(y-center.y)*sin+center.x;this.y=(x-center.x)*sin+(y-center.y)*cos+center.y};
goog.math.Coordinate.prototype.rotateDegrees=function(degrees,opt_center){this.rotateRadians(goog.math.toRadians(degrees),opt_center)};goog.provide("goog.math.Size");goog.math.Size=function(width,height){this.width=width;this.height=height};goog.math.Size.equals=function(a,b){if(a==b)return true;if(!a||!b)return false;return a.width==b.width&&a.height==b.height};goog.math.Size.prototype.clone=function(){return new goog.math.Size(this.width,this.height)};if(goog.DEBUG)goog.math.Size.prototype.toString=function(){return"("+this.width+" x "+this.height+")"};goog.math.Size.prototype.getLongest=function(){return Math.max(this.width,this.height)};
goog.math.Size.prototype.getShortest=function(){return Math.min(this.width,this.height)};goog.math.Size.prototype.area=function(){return this.width*this.height};goog.math.Size.prototype.perimeter=function(){return(this.width+this.height)*2};goog.math.Size.prototype.aspectRatio=function(){return this.width/this.height};goog.math.Size.prototype.isEmpty=function(){return!this.area()};goog.math.Size.prototype.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};
goog.math.Size.prototype.fitsInside=function(target){return this.width<=target.width&&this.height<=target.height};goog.math.Size.prototype.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};goog.math.Size.prototype.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Size.prototype.scale=function(sx,opt_sy){var sy=goog.isNumber(opt_sy)?opt_sy:sx;this.width*=sx;this.height*=sy;return this};
goog.math.Size.prototype.scaleToCover=function(target){var s=this.aspectRatio()<=target.aspectRatio()?target.width/this.width:target.height/this.height;return this.scale(s)};goog.math.Size.prototype.scaleToFit=function(target){var s=this.aspectRatio()>target.aspectRatio()?target.width/this.width:target.height/this.height;return this.scale(s)};goog.provide("goog.dom");goog.provide("goog.dom.Appendable");goog.provide("goog.dom.DomHelper");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.dom.BrowserFeature");goog.require("goog.dom.NodeType");goog.require("goog.dom.TagName");goog.require("goog.dom.safe");goog.require("goog.html.SafeHtml");goog.require("goog.html.uncheckedconversions");goog.require("goog.math.Coordinate");goog.require("goog.math.Size");goog.require("goog.object");goog.require("goog.string");goog.require("goog.string.Unicode");
goog.require("goog.userAgent");goog.define("goog.dom.ASSUME_QUIRKS_MODE",false);goog.define("goog.dom.ASSUME_STANDARDS_MODE",false);goog.dom.COMPAT_MODE_KNOWN_=goog.dom.ASSUME_QUIRKS_MODE||goog.dom.ASSUME_STANDARDS_MODE;goog.dom.getDomHelper=function(opt_element){return opt_element?new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)):goog.dom.defaultDomHelper_||(goog.dom.defaultDomHelper_=new goog.dom.DomHelper)};goog.dom.defaultDomHelper_;goog.dom.getDocument=function(){return document};
goog.dom.getElement=function(element){return goog.dom.getElementHelper_(document,element)};goog.dom.getElementHelper_=function(doc,element){return goog.isString(element)?doc.getElementById(element):element};goog.dom.getRequiredElement=function(id){return goog.dom.getRequiredElementHelper_(document,id)};
goog.dom.getRequiredElementHelper_=function(doc,id){goog.asserts.assertString(id);var element=goog.dom.getElementHelper_(doc,id);element=goog.asserts.assertElement(element,"No element found with id: "+id);return element};goog.dom.$=goog.dom.getElement;goog.dom.getElementsByTagName=function(tagName,opt_parent){var parent=opt_parent||document;return parent.getElementsByTagName(String(tagName))};
goog.dom.getElementsByTagNameAndClass=function(opt_tag,opt_class,opt_el){return goog.dom.getElementsByTagNameAndClass_(document,opt_tag,opt_class,opt_el)};goog.dom.getElementByTagNameAndClass=function(opt_tag,opt_class,opt_el){return goog.dom.getElementByTagNameAndClass_(document,opt_tag,opt_class,opt_el)};
goog.dom.getElementsByClass=function(className,opt_el){var parent=opt_el||document;if(goog.dom.canUseQuerySelector_(parent))return parent.querySelectorAll("."+className);return goog.dom.getElementsByTagNameAndClass_(document,"*",className,opt_el)};
goog.dom.getElementByClass=function(className,opt_el){var parent=opt_el||document;var retVal=null;if(parent.getElementsByClassName)retVal=parent.getElementsByClassName(className)[0];else retVal=goog.dom.getElementByTagNameAndClass_(document,"*",className,opt_el);return retVal||null};goog.dom.getRequiredElementByClass=function(className,opt_root){var retValue=goog.dom.getElementByClass(className,opt_root);return goog.asserts.assert(retValue,"No element found with className: "+className)};
goog.dom.canUseQuerySelector_=function(parent){return!!(parent.querySelectorAll&&parent.querySelector)};
goog.dom.getElementsByTagNameAndClass_=function(doc,opt_tag,opt_class,opt_el){var parent=opt_el||doc;var tagName=opt_tag&&opt_tag!="*"?String(opt_tag).toUpperCase():"";if(goog.dom.canUseQuerySelector_(parent)&&(tagName||opt_class)){var query=tagName+(opt_class?"."+opt_class:"");return parent.querySelectorAll(query)}if(opt_class&&parent.getElementsByClassName){var els=parent.getElementsByClassName(opt_class);if(tagName){var arrayLike={};var len=0;for(var i=0,el;el=els[i];i++)if(tagName==el.nodeName)arrayLike[len++]=
el;arrayLike.length=len;return arrayLike}else return els}var els=parent.getElementsByTagName(tagName||"*");if(opt_class){var arrayLike={};var len=0;for(var i=0,el;el=els[i];i++){var className=el.className;if(typeof className.split=="function"&&goog.array.contains(className.split(/\s+/),opt_class))arrayLike[len++]=el}arrayLike.length=len;return arrayLike}else return els};
goog.dom.getElementByTagNameAndClass_=function(doc,opt_tag,opt_class,opt_el){var parent=opt_el||doc;var tag=opt_tag&&opt_tag!="*"?String(opt_tag).toUpperCase():"";if(goog.dom.canUseQuerySelector_(parent)&&(tag||opt_class))return parent.querySelector(tag+(opt_class?"."+opt_class:""));var elements=goog.dom.getElementsByTagNameAndClass_(doc,opt_tag,opt_class,opt_el);return elements[0]||null};goog.dom.$$=goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties=function(element,properties){goog.object.forEach(properties,function(val,key){if(val&&val.implementsGoogStringTypedString)val=val.getTypedStringValue();if(key=="style")element.style.cssText=val;else if(key=="class")element.className=val;else if(key=="for")element.htmlFor=val;else if(goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key))element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key],val);else if(goog.string.startsWith(key,"aria-")||goog.string.startsWith(key,"data-"))element.setAttribute(key,
val);else element[key]=val})};goog.dom.DIRECT_ATTRIBUTE_MAP_={"cellpadding":"cellPadding","cellspacing":"cellSpacing","colspan":"colSpan","frameborder":"frameBorder","height":"height","maxlength":"maxLength","nonce":"nonce","role":"role","rowspan":"rowSpan","type":"type","usemap":"useMap","valign":"vAlign","width":"width"};goog.dom.getViewportSize=function(opt_window){return goog.dom.getViewportSize_(opt_window||window)};
goog.dom.getViewportSize_=function(win){var doc=win.document;var el=goog.dom.isCss1CompatMode_(doc)?doc.documentElement:doc.body;return new goog.math.Size(el.clientWidth,el.clientHeight)};goog.dom.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(window)};goog.dom.getDocumentHeightForWindow=function(win){return goog.dom.getDocumentHeight_(win)};
goog.dom.getDocumentHeight_=function(win){var doc=win.document;var height=0;if(doc){var body=doc.body;var docEl=doc.documentElement;if(!(docEl&&body))return 0;var vh=goog.dom.getViewportSize_(win).height;if(goog.dom.isCss1CompatMode_(doc)&&docEl.scrollHeight)height=docEl.scrollHeight!=vh?docEl.scrollHeight:docEl.offsetHeight;else{var sh=docEl.scrollHeight;var oh=docEl.offsetHeight;if(docEl.clientHeight!=oh){sh=body.scrollHeight;oh=body.offsetHeight}if(sh>vh)height=sh>oh?sh:oh;else height=sh<oh?sh:
oh}}return height};goog.dom.getPageScroll=function(opt_window){var win=opt_window||goog.global||window;return goog.dom.getDomHelper(win.document).getDocumentScroll()};goog.dom.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(document)};
goog.dom.getDocumentScroll_=function(doc){var el=goog.dom.getDocumentScrollElement_(doc);var win=goog.dom.getWindow_(doc);if(goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("10")&&win.pageYOffset!=el.scrollTop)return new goog.math.Coordinate(el.scrollLeft,el.scrollTop);return new goog.math.Coordinate(win.pageXOffset||el.scrollLeft,win.pageYOffset||el.scrollTop)};goog.dom.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(document)};
goog.dom.getDocumentScrollElement_=function(doc){if(doc.scrollingElement)return doc.scrollingElement;if(!goog.userAgent.WEBKIT&&goog.dom.isCss1CompatMode_(doc))return doc.documentElement;return doc.body||doc.documentElement};goog.dom.getWindow=function(opt_doc){return opt_doc?goog.dom.getWindow_(opt_doc):window};goog.dom.getWindow_=function(doc){return doc.parentWindow||doc.defaultView};goog.dom.createDom=function(tagName,opt_attributes,var_args){return goog.dom.createDom_(document,arguments)};
goog.dom.createDom_=function(doc,args){var tagName=String(args[0]);var attributes=args[1];if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES&&attributes&&(attributes.name||attributes.type)){var tagNameArr=["<",tagName];if(attributes.name)tagNameArr.push(' name="',goog.string.htmlEscape(attributes.name),'"');if(attributes.type){tagNameArr.push(' type="',goog.string.htmlEscape(attributes.type),'"');var clone={};goog.object.extend(clone,attributes);delete clone["type"];attributes=clone}tagNameArr.push(">");
tagName=tagNameArr.join("")}var element=doc.createElement(tagName);if(attributes)if(goog.isString(attributes))element.className=attributes;else if(goog.isArray(attributes))element.className=attributes.join(" ");else goog.dom.setProperties(element,attributes);if(args.length>2)goog.dom.append_(doc,element,args,2);return element};
goog.dom.append_=function(doc,parent,args,startIndex){function childHandler(child){if(child)parent.appendChild(goog.isString(child)?doc.createTextNode(child):child)}for(var i=startIndex;i<args.length;i++){var arg=args[i];if(goog.isArrayLike(arg)&&!goog.dom.isNodeLike(arg))goog.array.forEach(goog.dom.isNodeList(arg)?goog.array.toArray(arg):arg,childHandler);else childHandler(arg)}};goog.dom.$dom=goog.dom.createDom;goog.dom.createElement=function(name){return goog.dom.createElement_(document,name)};
goog.dom.createElement_=function(doc,name){return doc.createElement(String(name))};goog.dom.createTextNode=function(content){return document.createTextNode(String(content))};goog.dom.createTable=function(rows,columns,opt_fillWithNbsp){return goog.dom.createTable_(document,rows,columns,!!opt_fillWithNbsp)};
goog.dom.createTable_=function(doc,rows,columns,fillWithNbsp){var table=goog.dom.createElement_(doc,goog.dom.TagName.TABLE);var tbody=table.appendChild(goog.dom.createElement_(doc,goog.dom.TagName.TBODY));for(var i=0;i<rows;i++){var tr=goog.dom.createElement_(doc,goog.dom.TagName.TR);for(var j=0;j<columns;j++){var td=goog.dom.createElement_(doc,goog.dom.TagName.TD);if(fillWithNbsp)goog.dom.setTextContent(td,goog.string.Unicode.NBSP);tr.appendChild(td)}tbody.appendChild(tr)}return table};
goog.dom.constHtmlToNode=function(var_args){var stringArray=goog.array.map(arguments,goog.string.Const.unwrap);var safeHtml=goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a "+"Node later, so it will be automatically balanced."),stringArray.join(""));return goog.dom.safeHtmlToNode(safeHtml)};goog.dom.safeHtmlToNode=function(html){return goog.dom.safeHtmlToNode_(document,html)};
goog.dom.safeHtmlToNode_=function(doc,html){var tempDiv=goog.dom.createElement_(doc,goog.dom.TagName.DIV);if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT){goog.dom.safe.setInnerHtml(tempDiv,goog.html.SafeHtml.concat(goog.html.SafeHtml.BR,html));tempDiv.removeChild(tempDiv.firstChild)}else goog.dom.safe.setInnerHtml(tempDiv,html);return goog.dom.childrenToNode_(doc,tempDiv)};
goog.dom.childrenToNode_=function(doc,tempDiv){if(tempDiv.childNodes.length==1)return tempDiv.removeChild(tempDiv.firstChild);else{var fragment=doc.createDocumentFragment();while(tempDiv.firstChild)fragment.appendChild(tempDiv.firstChild);return fragment}};goog.dom.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(document)};goog.dom.isCss1CompatMode_=function(doc){if(goog.dom.COMPAT_MODE_KNOWN_)return goog.dom.ASSUME_STANDARDS_MODE;return doc.compatMode=="CSS1Compat"};
goog.dom.canHaveChildren=function(node){if(node.nodeType!=goog.dom.NodeType.ELEMENT)return false;switch(node.tagName){case String(goog.dom.TagName.APPLET):case String(goog.dom.TagName.AREA):case String(goog.dom.TagName.BASE):case String(goog.dom.TagName.BR):case String(goog.dom.TagName.COL):case String(goog.dom.TagName.COMMAND):case String(goog.dom.TagName.EMBED):case String(goog.dom.TagName.FRAME):case String(goog.dom.TagName.HR):case String(goog.dom.TagName.IMG):case String(goog.dom.TagName.INPUT):case String(goog.dom.TagName.IFRAME):case String(goog.dom.TagName.ISINDEX):case String(goog.dom.TagName.KEYGEN):case String(goog.dom.TagName.LINK):case String(goog.dom.TagName.NOFRAMES):case String(goog.dom.TagName.NOSCRIPT):case String(goog.dom.TagName.META):case String(goog.dom.TagName.OBJECT):case String(goog.dom.TagName.PARAM):case String(goog.dom.TagName.SCRIPT):case String(goog.dom.TagName.SOURCE):case String(goog.dom.TagName.STYLE):case String(goog.dom.TagName.TRACK):case String(goog.dom.TagName.WBR):return false}return true};
goog.dom.appendChild=function(parent,child){parent.appendChild(child)};goog.dom.append=function(parent,var_args){goog.dom.append_(goog.dom.getOwnerDocument(parent),parent,arguments,1)};goog.dom.removeChildren=function(node){var child;while(child=node.firstChild)node.removeChild(child)};goog.dom.insertSiblingBefore=function(newNode,refNode){if(refNode.parentNode)refNode.parentNode.insertBefore(newNode,refNode)};
goog.dom.insertSiblingAfter=function(newNode,refNode){if(refNode.parentNode)refNode.parentNode.insertBefore(newNode,refNode.nextSibling)};goog.dom.insertChildAt=function(parent,child,index){parent.insertBefore(child,parent.childNodes[index]||null)};goog.dom.removeNode=function(node){return node&&node.parentNode?node.parentNode.removeChild(node):null};goog.dom.replaceNode=function(newNode,oldNode){var parent=oldNode.parentNode;if(parent)parent.replaceChild(newNode,oldNode)};
goog.dom.flattenElement=function(element){var child,parent=element.parentNode;if(parent&&parent.nodeType!=goog.dom.NodeType.DOCUMENT_FRAGMENT)if(element.removeNode)return element.removeNode(false);else{while(child=element.firstChild)parent.insertBefore(child,element);return goog.dom.removeNode(element)}};
goog.dom.getChildren=function(element){if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE&&element.children!=undefined)return element.children;return goog.array.filter(element.childNodes,function(node){return node.nodeType==goog.dom.NodeType.ELEMENT})};goog.dom.getFirstElementChild=function(node){if(goog.isDef(node.firstElementChild))return node.firstElementChild;return goog.dom.getNextElementNode_(node.firstChild,true)};
goog.dom.getLastElementChild=function(node){if(goog.isDef(node.lastElementChild))return node.lastElementChild;return goog.dom.getNextElementNode_(node.lastChild,false)};goog.dom.getNextElementSibling=function(node){if(goog.isDef(node.nextElementSibling))return node.nextElementSibling;return goog.dom.getNextElementNode_(node.nextSibling,true)};
goog.dom.getPreviousElementSibling=function(node){if(goog.isDef(node.previousElementSibling))return node.previousElementSibling;return goog.dom.getNextElementNode_(node.previousSibling,false)};goog.dom.getNextElementNode_=function(node,forward){while(node&&node.nodeType!=goog.dom.NodeType.ELEMENT)node=forward?node.nextSibling:node.previousSibling;return node};
goog.dom.getNextNode=function(node){if(!node)return null;if(node.firstChild)return node.firstChild;while(node&&!node.nextSibling)node=node.parentNode;return node?node.nextSibling:null};goog.dom.getPreviousNode=function(node){if(!node)return null;if(!node.previousSibling)return node.parentNode;node=node.previousSibling;while(node&&node.lastChild)node=node.lastChild;return node};goog.dom.isNodeLike=function(obj){return goog.isObject(obj)&&obj.nodeType>0};
goog.dom.isElement=function(obj){return goog.isObject(obj)&&obj.nodeType==goog.dom.NodeType.ELEMENT};goog.dom.isWindow=function(obj){return goog.isObject(obj)&&obj["window"]==obj};
goog.dom.getParentElement=function(element){var parent;if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY){var isIe9=goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("9")&&!goog.userAgent.isVersionOrHigher("10");if(!(isIe9&&goog.global["SVGElement"]&&element instanceof goog.global["SVGElement"])){parent=element.parentElement;if(parent)return parent}}parent=element.parentNode;return goog.dom.isElement(parent)?parent:null};
goog.dom.contains=function(parent,descendant){if(!parent||!descendant)return false;if(parent.contains&&descendant.nodeType==goog.dom.NodeType.ELEMENT)return parent==descendant||parent.contains(descendant);if(typeof parent.compareDocumentPosition!="undefined")return parent==descendant||Boolean(parent.compareDocumentPosition(descendant)&16);while(descendant&&parent!=descendant)descendant=descendant.parentNode;return descendant==parent};
goog.dom.compareNodeOrder=function(node1,node2){if(node1==node2)return 0;if(node1.compareDocumentPosition)return node1.compareDocumentPosition(node2)&2?1:-1;if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)){if(node1.nodeType==goog.dom.NodeType.DOCUMENT)return-1;if(node2.nodeType==goog.dom.NodeType.DOCUMENT)return 1}if("sourceIndex"in node1||node1.parentNode&&"sourceIndex"in node1.parentNode){var isElement1=node1.nodeType==goog.dom.NodeType.ELEMENT;var isElement2=node2.nodeType==goog.dom.NodeType.ELEMENT;
if(isElement1&&isElement2)return node1.sourceIndex-node2.sourceIndex;else{var parent1=node1.parentNode;var parent2=node2.parentNode;if(parent1==parent2)return goog.dom.compareSiblingOrder_(node1,node2);if(!isElement1&&goog.dom.contains(parent1,node2))return-1*goog.dom.compareParentsDescendantNodeIe_(node1,node2);if(!isElement2&&goog.dom.contains(parent2,node1))return goog.dom.compareParentsDescendantNodeIe_(node2,node1);return(isElement1?node1.sourceIndex:parent1.sourceIndex)-(isElement2?node2.sourceIndex:
parent2.sourceIndex)}}var doc=goog.dom.getOwnerDocument(node1);var range1,range2;range1=doc.createRange();range1.selectNode(node1);range1.collapse(true);range2=doc.createRange();range2.selectNode(node2);range2.collapse(true);return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END,range2)};
goog.dom.compareParentsDescendantNodeIe_=function(textNode,node){var parent=textNode.parentNode;if(parent==node)return-1;var sibling=node;while(sibling.parentNode!=parent)sibling=sibling.parentNode;return goog.dom.compareSiblingOrder_(sibling,textNode)};goog.dom.compareSiblingOrder_=function(node1,node2){var s=node2;while(s=s.previousSibling)if(s==node1)return-1;return 1};
goog.dom.findCommonAncestor=function(var_args){var i,count=arguments.length;if(!count)return null;else if(count==1)return arguments[0];var paths=[];var minLength=Infinity;for(i=0;i<count;i++){var ancestors=[];var node=arguments[i];while(node){ancestors.unshift(node);node=node.parentNode}paths.push(ancestors);minLength=Math.min(minLength,ancestors.length)}var output=null;for(i=0;i<minLength;i++){var first=paths[0][i];for(var j=1;j<count;j++)if(first!=paths[j][i])return output;output=first}return output};
goog.dom.getOwnerDocument=function(node){goog.asserts.assert(node,"Node cannot be null or undefined.");return node.nodeType==goog.dom.NodeType.DOCUMENT?node:node.ownerDocument||node.document};goog.dom.getFrameContentDocument=function(frame){return frame.contentDocument||frame.contentWindow.document};goog.dom.getFrameContentWindow=function(frame){try{return frame.contentWindow||(frame.contentDocument?goog.dom.getWindow(frame.contentDocument):null)}catch(e){}return null};
goog.dom.setTextContent=function(node,text){goog.asserts.assert(node!=null,"goog.dom.setTextContent expects a non-null value for node");if("textContent"in node)node.textContent=text;else if(node.nodeType==goog.dom.NodeType.TEXT)node.data=String(text);else if(node.firstChild&&node.firstChild.nodeType==goog.dom.NodeType.TEXT){while(node.lastChild!=node.firstChild)node.removeChild(node.lastChild);node.firstChild.data=String(text)}else{goog.dom.removeChildren(node);var doc=goog.dom.getOwnerDocument(node);
node.appendChild(doc.createTextNode(String(text)))}};goog.dom.getOuterHtml=function(element){goog.asserts.assert(element!==null,"goog.dom.getOuterHtml expects a non-null value for element");if("outerHTML"in element)return element.outerHTML;else{var doc=goog.dom.getOwnerDocument(element);var div=goog.dom.createElement_(doc,goog.dom.TagName.DIV);div.appendChild(element.cloneNode(true));return div.innerHTML}};
goog.dom.findNode=function(root,p){var rv=[];var found=goog.dom.findNodes_(root,p,rv,true);return found?rv[0]:undefined};goog.dom.findNodes=function(root,p){var rv=[];goog.dom.findNodes_(root,p,rv,false);return rv};goog.dom.findNodes_=function(root,p,rv,findOne){if(root!=null){var child=root.firstChild;while(child){if(p(child)){rv.push(child);if(findOne)return true}if(goog.dom.findNodes_(child,p,rv,findOne))return true;child=child.nextSibling}}return false};
goog.dom.TAGS_TO_IGNORE_={"SCRIPT":1,"STYLE":1,"HEAD":1,"IFRAME":1,"OBJECT":1};goog.dom.PREDEFINED_TAG_VALUES_={"IMG":" ","BR":"\n"};goog.dom.isFocusableTabIndex=function(element){return goog.dom.hasSpecifiedTabIndex_(element)&&goog.dom.isTabIndexFocusable_(element)};goog.dom.setFocusableTabIndex=function(element,enable){if(enable)element.tabIndex=0;else{element.tabIndex=-1;element.removeAttribute("tabIndex")}};
goog.dom.isFocusable=function(element){var focusable;if(goog.dom.nativelySupportsFocus_(element))focusable=!element.disabled&&(!goog.dom.hasSpecifiedTabIndex_(element)||goog.dom.isTabIndexFocusable_(element));else focusable=goog.dom.isFocusableTabIndex(element);return focusable&&goog.userAgent.IE?goog.dom.hasNonZeroBoundingRect_(element):focusable};
goog.dom.hasSpecifiedTabIndex_=function(element){if(goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9")){var attrNode=element.getAttributeNode("tabindex");return goog.isDefAndNotNull(attrNode)&&attrNode.specified}else return element.hasAttribute("tabindex")};goog.dom.isTabIndexFocusable_=function(element){var index=element.tabIndex;return goog.isNumber(index)&&index>=0&&index<32768};
goog.dom.nativelySupportsFocus_=function(element){return element.tagName==goog.dom.TagName.A||element.tagName==goog.dom.TagName.INPUT||element.tagName==goog.dom.TagName.TEXTAREA||element.tagName==goog.dom.TagName.SELECT||element.tagName==goog.dom.TagName.BUTTON};
goog.dom.hasNonZeroBoundingRect_=function(element){var rect;if(!goog.isFunction(element["getBoundingClientRect"])||goog.userAgent.IE&&element.parentElement==null)rect={"height":element.offsetHeight,"width":element.offsetWidth};else rect=element.getBoundingClientRect();return goog.isDefAndNotNull(rect)&&rect.height>0&&rect.width>0};
goog.dom.getTextContent=function(node){var textContent;if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT&&node!==null&&"innerText"in node)textContent=goog.string.canonicalizeNewlines(node.innerText);else{var buf=[];goog.dom.getTextContent_(node,buf,true);textContent=buf.join("")}textContent=textContent.replace(/ \xAD /g," ").replace(/\xAD/g,"");textContent=textContent.replace(/\u200B/g,"");if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT)textContent=textContent.replace(/ +/g," ");if(textContent!=" ")textContent=
textContent.replace(/^\s*/,"");return textContent};goog.dom.getRawTextContent=function(node){var buf=[];goog.dom.getTextContent_(node,buf,false);return buf.join("")};
goog.dom.getTextContent_=function(node,buf,normalizeWhitespace){if(node.nodeName in goog.dom.TAGS_TO_IGNORE_);else if(node.nodeType==goog.dom.NodeType.TEXT)if(normalizeWhitespace)buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g,""));else buf.push(node.nodeValue);else if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);else{var child=node.firstChild;while(child){goog.dom.getTextContent_(child,buf,normalizeWhitespace);child=child.nextSibling}}};
goog.dom.getNodeTextLength=function(node){return goog.dom.getTextContent(node).length};goog.dom.getNodeTextOffset=function(node,opt_offsetParent){var root=opt_offsetParent||goog.dom.getOwnerDocument(node).body;var buf=[];while(node&&node!=root){var cur=node;while(cur=cur.previousSibling)buf.unshift(goog.dom.getTextContent(cur));node=node.parentNode}return goog.string.trimLeft(buf.join("")).replace(/ +/g," ").length};
goog.dom.getNodeAtOffset=function(parent,offset,opt_result){var stack=[parent],pos=0,cur=null;while(stack.length>0&&pos<offset){cur=stack.pop();if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_);else if(cur.nodeType==goog.dom.NodeType.TEXT){var text=cur.nodeValue.replace(/(\r\n|\r|\n)/g,"").replace(/ +/g," ");pos+=text.length}else if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)pos+=goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;else for(var i=cur.childNodes.length-1;i>=0;i--)stack.push(cur.childNodes[i])}if(goog.isObject(opt_result)){opt_result.remainder=
cur?cur.nodeValue.length+offset-pos-1:0;opt_result.node=cur}return cur};goog.dom.isNodeList=function(val){if(val&&typeof val.length=="number")if(goog.isObject(val))return typeof val.item=="function"||typeof val.item=="string";else if(goog.isFunction(val))return typeof val.item=="function";return false};
goog.dom.getAncestorByTagNameAndClass=function(element,opt_tag,opt_class,opt_maxSearchSteps){if(!opt_tag&&!opt_class)return null;var tagName=opt_tag?String(opt_tag).toUpperCase():null;return goog.dom.getAncestor(element,function(node){return(!tagName||node.nodeName==tagName)&&(!opt_class||goog.isString(node.className)&&goog.array.contains(node.className.split(/\s+/),opt_class))},true,opt_maxSearchSteps)};
goog.dom.getAncestorByClass=function(element,className,opt_maxSearchSteps){return goog.dom.getAncestorByTagNameAndClass(element,null,className,opt_maxSearchSteps)};goog.dom.getAncestor=function(element,matcher,opt_includeNode,opt_maxSearchSteps){if(element&&!opt_includeNode)element=element.parentNode;var steps=0;while(element&&(opt_maxSearchSteps==null||steps<=opt_maxSearchSteps)){goog.asserts.assert(element.name!="parentNode");if(matcher(element))return element;element=element.parentNode;steps++}return null};
goog.dom.getActiveElement=function(doc){try{return doc&&doc.activeElement}catch(e){}return null};goog.dom.getPixelRatio=function(){var win=goog.dom.getWindow();if(goog.isDef(win.devicePixelRatio))return win.devicePixelRatio;else if(win.matchMedia)return goog.dom.matchesPixelRatio_(3)||goog.dom.matchesPixelRatio_(2)||goog.dom.matchesPixelRatio_(1.5)||goog.dom.matchesPixelRatio_(1)||.75;return 1};
goog.dom.matchesPixelRatio_=function(pixelRatio){var win=goog.dom.getWindow();var dpiPerDppx=96;var query="(min-resolution: "+pixelRatio+"dppx),"+"(min--moz-device-pixel-ratio: "+pixelRatio+"),"+"(min-resolution: "+pixelRatio*dpiPerDppx+"dpi)";return win.matchMedia(query).matches?pixelRatio:0};goog.dom.getCanvasContext2D=function(canvas){return canvas.getContext("2d")};goog.dom.DomHelper=function(opt_document){this.document_=opt_document||goog.global.document||document};
goog.dom.DomHelper.prototype.getDomHelper=goog.dom.getDomHelper;goog.dom.DomHelper.prototype.setDocument=function(document){this.document_=document};goog.dom.DomHelper.prototype.getDocument=function(){return this.document_};goog.dom.DomHelper.prototype.getElement=function(element){return goog.dom.getElementHelper_(this.document_,element)};goog.dom.DomHelper.prototype.getRequiredElement=function(id){return goog.dom.getRequiredElementHelper_(this.document_,id)};goog.dom.DomHelper.prototype.$=goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagName=function(tagName,opt_parent){var parent=opt_parent||this.document_;return parent.getElementsByTagName(String(tagName))};goog.dom.DomHelper.prototype.getElementsByTagNameAndClass=function(opt_tag,opt_class,opt_el){return goog.dom.getElementsByTagNameAndClass_(this.document_,opt_tag,opt_class,opt_el)};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass=function(opt_tag,opt_class,opt_el){return goog.dom.getElementByTagNameAndClass_(this.document_,opt_tag,opt_class,opt_el)};goog.dom.DomHelper.prototype.getElementsByClass=function(className,opt_el){var doc=opt_el||this.document_;return goog.dom.getElementsByClass(className,doc)};goog.dom.DomHelper.prototype.getElementByClass=function(className,opt_el){var doc=opt_el||this.document_;return goog.dom.getElementByClass(className,doc)};
goog.dom.DomHelper.prototype.getRequiredElementByClass=function(className,opt_root){var root=opt_root||this.document_;return goog.dom.getRequiredElementByClass(className,root)};goog.dom.DomHelper.prototype.$$=goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;goog.dom.DomHelper.prototype.setProperties=goog.dom.setProperties;goog.dom.DomHelper.prototype.getViewportSize=function(opt_window){return goog.dom.getViewportSize(opt_window||this.getWindow())};
goog.dom.DomHelper.prototype.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(this.getWindow())};goog.dom.Appendable;goog.dom.DomHelper.prototype.createDom=function(tagName,opt_attributes,var_args){return goog.dom.createDom_(this.document_,arguments)};goog.dom.DomHelper.prototype.$dom=goog.dom.DomHelper.prototype.createDom;goog.dom.DomHelper.prototype.createElement=function(name){return goog.dom.createElement_(this.document_,name)};goog.dom.DomHelper.prototype.createTextNode=function(content){return this.document_.createTextNode(String(content))};
goog.dom.DomHelper.prototype.createTable=function(rows,columns,opt_fillWithNbsp){return goog.dom.createTable_(this.document_,rows,columns,!!opt_fillWithNbsp)};goog.dom.DomHelper.prototype.safeHtmlToNode=function(html){return goog.dom.safeHtmlToNode_(this.document_,html)};goog.dom.DomHelper.prototype.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(this.document_)};goog.dom.DomHelper.prototype.getWindow=function(){return goog.dom.getWindow_(this.document_)};
goog.dom.DomHelper.prototype.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(this.document_)};goog.dom.DomHelper.prototype.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(this.document_)};goog.dom.DomHelper.prototype.getActiveElement=function(opt_doc){return goog.dom.getActiveElement(opt_doc||this.document_)};goog.dom.DomHelper.prototype.appendChild=goog.dom.appendChild;goog.dom.DomHelper.prototype.append=goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren=goog.dom.canHaveChildren;goog.dom.DomHelper.prototype.removeChildren=goog.dom.removeChildren;goog.dom.DomHelper.prototype.insertSiblingBefore=goog.dom.insertSiblingBefore;goog.dom.DomHelper.prototype.insertSiblingAfter=goog.dom.insertSiblingAfter;goog.dom.DomHelper.prototype.insertChildAt=goog.dom.insertChildAt;goog.dom.DomHelper.prototype.removeNode=goog.dom.removeNode;goog.dom.DomHelper.prototype.replaceNode=goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement=goog.dom.flattenElement;goog.dom.DomHelper.prototype.getChildren=goog.dom.getChildren;goog.dom.DomHelper.prototype.getFirstElementChild=goog.dom.getFirstElementChild;goog.dom.DomHelper.prototype.getLastElementChild=goog.dom.getLastElementChild;goog.dom.DomHelper.prototype.getNextElementSibling=goog.dom.getNextElementSibling;goog.dom.DomHelper.prototype.getPreviousElementSibling=goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode=goog.dom.getNextNode;goog.dom.DomHelper.prototype.getPreviousNode=goog.dom.getPreviousNode;goog.dom.DomHelper.prototype.isNodeLike=goog.dom.isNodeLike;goog.dom.DomHelper.prototype.isElement=goog.dom.isElement;goog.dom.DomHelper.prototype.isWindow=goog.dom.isWindow;goog.dom.DomHelper.prototype.getParentElement=goog.dom.getParentElement;goog.dom.DomHelper.prototype.contains=goog.dom.contains;goog.dom.DomHelper.prototype.compareNodeOrder=goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor=goog.dom.findCommonAncestor;goog.dom.DomHelper.prototype.getOwnerDocument=goog.dom.getOwnerDocument;goog.dom.DomHelper.prototype.getFrameContentDocument=goog.dom.getFrameContentDocument;goog.dom.DomHelper.prototype.getFrameContentWindow=goog.dom.getFrameContentWindow;goog.dom.DomHelper.prototype.setTextContent=goog.dom.setTextContent;goog.dom.DomHelper.prototype.getOuterHtml=goog.dom.getOuterHtml;goog.dom.DomHelper.prototype.findNode=goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes=goog.dom.findNodes;goog.dom.DomHelper.prototype.isFocusableTabIndex=goog.dom.isFocusableTabIndex;goog.dom.DomHelper.prototype.setFocusableTabIndex=goog.dom.setFocusableTabIndex;goog.dom.DomHelper.prototype.isFocusable=goog.dom.isFocusable;goog.dom.DomHelper.prototype.getTextContent=goog.dom.getTextContent;goog.dom.DomHelper.prototype.getNodeTextLength=goog.dom.getNodeTextLength;goog.dom.DomHelper.prototype.getNodeTextOffset=goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset=goog.dom.getNodeAtOffset;goog.dom.DomHelper.prototype.isNodeList=goog.dom.isNodeList;goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass=goog.dom.getAncestorByTagNameAndClass;goog.dom.DomHelper.prototype.getAncestorByClass=goog.dom.getAncestorByClass;goog.dom.DomHelper.prototype.getAncestor=goog.dom.getAncestor;goog.dom.DomHelper.prototype.getCanvasContext2D=goog.dom.getCanvasContext2D;goog.provide("goog.json");goog.provide("goog.json.Replacer");goog.provide("goog.json.Reviver");goog.provide("goog.json.Serializer");goog.define("goog.json.USE_NATIVE_JSON",false);goog.define("goog.json.TRY_NATIVE_JSON",false);
goog.json.isValid=function(s){if(/^\s*$/.test(s))return false;var backslashesRe=/\\["\\\/bfnrtu]/g;var simpleValuesRe=/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;var openBracketsRe=/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;var remainderRe=/^[\],:{}\s\u2028\u2029]*$/;return remainderRe.test(s.replace(backslashesRe,"@").replace(simpleValuesRe,"]").replace(openBracketsRe,""))};goog.json.errorLogger_=goog.nullFunction;
goog.json.setErrorLogger=function(errorLogger){goog.json.errorLogger_=errorLogger};goog.json.parse=goog.json.USE_NATIVE_JSON?goog.global["JSON"]["parse"]:function(s){var error;if(goog.json.TRY_NATIVE_JSON)try{return goog.global["JSON"]["parse"](s)}catch(ex){error=ex}var o=String(s);if(goog.json.isValid(o))try{var result=eval("("+o+")");if(error)goog.json.errorLogger_("Invalid JSON: "+o,error);return result}catch(ex$0){}throw new Error("Invalid JSON string: "+o);};goog.json.Replacer;goog.json.Reviver;
goog.json.serialize=goog.json.USE_NATIVE_JSON?goog.global["JSON"]["stringify"]:function(object,opt_replacer){return(new goog.json.Serializer(opt_replacer)).serialize(object)};goog.json.Serializer=function(opt_replacer){this.replacer_=opt_replacer};goog.json.Serializer.prototype.serialize=function(object){var sb=[];this.serializeInternal(object,sb);return sb.join("")};
goog.json.Serializer.prototype.serializeInternal=function(object,sb){if(object==null){sb.push("null");return}if(typeof object=="object")if(goog.isArray(object)){this.serializeArray(object,sb);return}else if(object instanceof String||object instanceof Number||object instanceof Boolean)object=object.valueOf();else{this.serializeObject_(object,sb);return}switch(typeof object){case "string":this.serializeString_(object,sb);break;case "number":this.serializeNumber_(object,sb);break;case "boolean":sb.push(String(object));
break;case "function":sb.push("null");break;default:throw new Error("Unknown type: "+typeof object);}};goog.json.Serializer.charToJsonCharCache_={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"};goog.json.Serializer.charsToReplace_=/\uffff/.test("\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_=function(s,sb){sb.push('"',s.replace(goog.json.Serializer.charsToReplace_,function(c){var rv=goog.json.Serializer.charToJsonCharCache_[c];if(!rv){rv="\\u"+(c.charCodeAt(0)|65536).toString(16).substr(1);goog.json.Serializer.charToJsonCharCache_[c]=rv}return rv}),'"')};goog.json.Serializer.prototype.serializeNumber_=function(n,sb){sb.push(isFinite(n)&&!isNaN(n)?String(n):"null")};
goog.json.Serializer.prototype.serializeArray=function(arr,sb){var l=arr.length;sb.push("[");var sep="";for(var i=0;i<l;i++){sb.push(sep);var value=arr[i];this.serializeInternal(this.replacer_?this.replacer_.call(arr,String(i),value):value,sb);sep=","}sb.push("]")};
goog.json.Serializer.prototype.serializeObject_=function(obj,sb){sb.push("{");var sep="";for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var value=obj[key];if(typeof value!="function"){sb.push(sep);this.serializeString_(key,sb);sb.push(":");this.serializeInternal(this.replacer_?this.replacer_.call(obj,key,value):value,sb);sep=","}}sb.push("}")};goog.provide("goog.disposable.IDisposable");goog.disposable.IDisposable=function(){};goog.disposable.IDisposable.prototype.dispose=goog.abstractMethod;goog.disposable.IDisposable.prototype.isDisposed=goog.abstractMethod;goog.provide("goog.Disposable");goog.provide("goog.dispose");goog.provide("goog.disposeAll");goog.require("goog.disposable.IDisposable");goog.Disposable=function(){this.creationStack;if(goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF){if(goog.Disposable.INCLUDE_STACK_ON_CREATION)this.creationStack=(new Error).stack;goog.Disposable.instances_[goog.getUid(this)]=this}this.disposed_=this.disposed_;this.onDisposeCallbacks_=this.onDisposeCallbacks_};
goog.Disposable.MonitoringMode={OFF:0,PERMANENT:1,INTERACTIVE:2};goog.define("goog.Disposable.MONITORING_MODE",0);goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION",true);goog.Disposable.instances_={};goog.Disposable.getUndisposedObjects=function(){var ret=[];for(var id in goog.Disposable.instances_)if(goog.Disposable.instances_.hasOwnProperty(id))ret.push(goog.Disposable.instances_[Number(id)]);return ret};goog.Disposable.clearUndisposedObjects=function(){goog.Disposable.instances_={}};
goog.Disposable.prototype.disposed_=false;goog.Disposable.prototype.onDisposeCallbacks_;goog.Disposable.prototype.isDisposed=function(){return this.disposed_};goog.Disposable.prototype.getDisposed=goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose=function(){if(!this.disposed_){this.disposed_=true;this.disposeInternal();if(goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF){var uid=goog.getUid(this);if(goog.Disposable.MONITORING_MODE==goog.Disposable.MonitoringMode.PERMANENT&&!goog.Disposable.instances_.hasOwnProperty(uid))throw new Error(this+" did not call the goog.Disposable base "+"constructor or was disposed of after a clearUndisposedObjects "+"call");delete goog.Disposable.instances_[uid]}}};
goog.Disposable.prototype.registerDisposable=function(disposable){this.addOnDisposeCallback(goog.partial(goog.dispose,disposable))};goog.Disposable.prototype.addOnDisposeCallback=function(callback,opt_scope){if(this.disposed_){goog.isDef(opt_scope)?callback.call(opt_scope):callback();return}if(!this.onDisposeCallbacks_)this.onDisposeCallbacks_=[];this.onDisposeCallbacks_.push(goog.isDef(opt_scope)?goog.bind(callback,opt_scope):callback)};goog.Disposable.prototype.disposeInternal=function(){if(this.onDisposeCallbacks_)while(this.onDisposeCallbacks_.length)this.onDisposeCallbacks_.shift()()};
goog.Disposable.isDisposed=function(obj){if(obj&&typeof obj.isDisposed=="function")return obj.isDisposed();return false};goog.dispose=function(obj){if(obj&&typeof obj.dispose=="function")obj.dispose()};goog.disposeAll=function(var_args){for(var i=0,len=arguments.length;i<len;++i){var disposable=arguments[i];if(goog.isArrayLike(disposable))goog.disposeAll.apply(null,disposable);else goog.dispose(disposable)}};goog.provide("goog.debug.errorcontext");goog.debug.errorcontext.addErrorContext=function(err,contextKey,contextValue){if(!err[goog.debug.errorcontext.CONTEXT_KEY_])err[goog.debug.errorcontext.CONTEXT_KEY_]={};err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey]=contextValue};goog.debug.errorcontext.getErrorContext=function(err){return err[goog.debug.errorcontext.CONTEXT_KEY_]||{}};goog.debug.errorcontext.CONTEXT_KEY_="__closure__error__context__984382";goog.provide("goog.debug");goog.require("goog.array");goog.require("goog.debug.errorcontext");goog.require("goog.userAgent");goog.define("goog.debug.LOGGING_ENABLED",goog.DEBUG);goog.define("goog.debug.FORCE_SLOPPY_STACKS",false);
goog.debug.catchErrors=function(logFunc,opt_cancel,opt_target){var target=opt_target||goog.global;var oldErrorHandler=target.onerror;var retVal=!!opt_cancel;if(goog.userAgent.WEBKIT&&!goog.userAgent.isVersionOrHigher("535.3"))retVal=!retVal;target.onerror=function(message,url,line,opt_col,opt_error){if(oldErrorHandler)oldErrorHandler(message,url,line,opt_col,opt_error);logFunc({message:message,fileName:url,line:line,col:opt_col,error:opt_error});return retVal}};
goog.debug.expose=function(obj,opt_showFn){if(typeof obj=="undefined")return"undefined";if(obj==null)return"NULL";var str=[];for(var x in obj){if(!opt_showFn&&goog.isFunction(obj[x]))continue;var s=x+" = ";try{s+=obj[x]}catch(e){s+="*** "+e+" ***"}str.push(s)}return str.join("\n")};
goog.debug.deepExpose=function(obj,opt_showFn){var str=[];var uidsToCleanup=[];var ancestorUids={};var helper=function(obj,space){var nestspace=space+"  ";var indentMultiline=function(str){return str.replace(/\n/g,"\n"+space)};try{if(!goog.isDef(obj))str.push("undefined");else if(goog.isNull(obj))str.push("NULL");else if(goog.isString(obj))str.push('"'+indentMultiline(obj)+'"');else if(goog.isFunction(obj))str.push(indentMultiline(String(obj)));else if(goog.isObject(obj)){if(!goog.hasUid(obj))uidsToCleanup.push(obj);
var uid=goog.getUid(obj);if(ancestorUids[uid])str.push("*** reference loop detected (id="+uid+") ***");else{ancestorUids[uid]=true;str.push("{");for(var x in obj){if(!opt_showFn&&goog.isFunction(obj[x]))continue;str.push("\n");str.push(nestspace);str.push(x+" = ");helper(obj[x],nestspace)}str.push("\n"+space+"}");delete ancestorUids[uid]}}else str.push(obj)}catch(e){str.push("*** "+e+" ***")}};helper(obj,"");for(var i=0;i<uidsToCleanup.length;i++)goog.removeUid(uidsToCleanup[i]);return str.join("")};
goog.debug.exposeArray=function(arr){var str=[];for(var i=0;i<arr.length;i++)if(goog.isArray(arr[i]))str.push(goog.debug.exposeArray(arr[i]));else str.push(arr[i]);return"[ "+str.join(", ")+" ]"};
goog.debug.normalizeErrorObject=function(err){var href=goog.getObjectByName("window.location.href");if(goog.isString(err))return{"message":err,"name":"Unknown error","lineNumber":"Not available","fileName":href,"stack":"Not available"};var lineNumber,fileName;var threwError=false;try{lineNumber=err.lineNumber||err.line||"Not available"}catch(e){lineNumber="Not available";threwError=true}try{fileName=err.fileName||err.filename||err.sourceURL||goog.global["$googDebugFname"]||href}catch(e$1){fileName=
"Not available";threwError=true}if(threwError||!err.lineNumber||!err.fileName||!err.stack||!err.message||!err.name)return{"message":err.message||"Not available","name":err.name||"UnknownError","lineNumber":lineNumber,"fileName":fileName,"stack":err.stack||"Not available"};return err};
goog.debug.enhanceError=function(err,opt_message){var error;if(!(err instanceof Error)){error=Error(err);if(Error.captureStackTrace)Error.captureStackTrace(error,goog.debug.enhanceError)}else error=err;if(!error.stack)error.stack=goog.debug.getStacktrace(goog.debug.enhanceError);if(opt_message){var x=0;while(error["message"+x])++x;error["message"+x]=String(opt_message)}return error};
goog.debug.enhanceErrorWithContext=function(err,opt_context){var error=goog.debug.enhanceError(err);if(opt_context)for(var key in opt_context)goog.debug.errorcontext.addErrorContext(error,key,opt_context[key]);return error};
goog.debug.getStacktraceSimple=function(opt_depth){if(!goog.debug.FORCE_SLOPPY_STACKS){var stack=goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);if(stack)return stack}var sb=[];var fn=arguments.callee.caller;var depth=0;while(fn&&(!opt_depth||depth<opt_depth)){sb.push(goog.debug.getFunctionName(fn));sb.push("()\n");try{fn=fn.caller}catch(e){sb.push("[exception trying to get caller]\n");break}depth++;if(depth>=goog.debug.MAX_STACK_DEPTH){sb.push("[...long stack...]");break}}if(opt_depth&&
depth>=opt_depth)sb.push("[...reached max depth limit...]");else sb.push("[end]");return sb.join("")};goog.debug.MAX_STACK_DEPTH=50;goog.debug.getNativeStackTrace_=function(fn){var tempErr=new Error;if(Error.captureStackTrace){Error.captureStackTrace(tempErr,fn);return String(tempErr.stack)}else{try{throw tempErr;}catch(e){tempErr=e}var stack=tempErr.stack;if(stack)return String(stack)}return null};
goog.debug.getStacktrace=function(fn){var stack;if(!goog.debug.FORCE_SLOPPY_STACKS){var contextFn=fn||goog.debug.getStacktrace;stack=goog.debug.getNativeStackTrace_(contextFn)}if(!stack)stack=goog.debug.getStacktraceHelper_(fn||arguments.callee.caller,[]);return stack};
goog.debug.getStacktraceHelper_=function(fn,visited){var sb=[];if(goog.array.contains(visited,fn))sb.push("[...circular reference...]");else if(fn&&visited.length<goog.debug.MAX_STACK_DEPTH){sb.push(goog.debug.getFunctionName(fn)+"(");var args=fn.arguments;for(var i=0;args&&i<args.length;i++){if(i>0)sb.push(", ");var argDesc;var arg=args[i];switch(typeof arg){case "object":argDesc=arg?"object":"null";break;case "string":argDesc=arg;break;case "number":argDesc=String(arg);break;case "boolean":argDesc=
arg?"true":"false";break;case "function":argDesc=goog.debug.getFunctionName(arg);argDesc=argDesc?argDesc:"[fn]";break;case "undefined":default:argDesc=typeof arg;break}if(argDesc.length>40)argDesc=argDesc.substr(0,40)+"...";sb.push(argDesc)}visited.push(fn);sb.push(")\n");try{sb.push(goog.debug.getStacktraceHelper_(fn.caller,visited))}catch(e){sb.push("[exception trying to get caller]\n")}}else if(fn)sb.push("[...long stack...]");else sb.push("[end]");return sb.join("")};
goog.debug.setFunctionResolver=function(resolver){goog.debug.fnNameResolver_=resolver};
goog.debug.getFunctionName=function(fn){if(goog.debug.fnNameCache_[fn])return goog.debug.fnNameCache_[fn];if(goog.debug.fnNameResolver_){var name=goog.debug.fnNameResolver_(fn);if(name){goog.debug.fnNameCache_[fn]=name;return name}}var functionSource=String(fn);if(!goog.debug.fnNameCache_[functionSource]){var matches=/function ([^\(]+)/.exec(functionSource);if(matches){var method=matches[1];goog.debug.fnNameCache_[functionSource]=method}else goog.debug.fnNameCache_[functionSource]="[Anonymous]"}return goog.debug.fnNameCache_[functionSource]};
goog.debug.makeWhitespaceVisible=function(string){return string.replace(/ /g,"[_]").replace(/\f/g,"[f]").replace(/\n/g,"[n]\n").replace(/\r/g,"[r]").replace(/\t/g,"[t]")};goog.debug.runtimeType=function(value){if(value instanceof Function)return value.displayName||value.name||"unknown type name";else if(value instanceof Object)return value.constructor.displayName||value.constructor.name||Object.prototype.toString.call(value);else return value===null?"null":typeof value};goog.debug.fnNameCache_={};
goog.debug.fnNameResolver_;goog.debug.freezeInternal_=goog.DEBUG&&Object.freeze||function(arg){return arg};goog.debug.freeze=function(arg){return{valueOf:function(){return goog.debug.freezeInternal_(arg)}}.valueOf()};goog.provide("goog.events.BrowserFeature");goog.require("goog.userAgent");
goog.scope(function(){goog.events.BrowserFeature={HAS_W3C_BUTTON:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9),SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT||goog.userAgent.isVersionOrHigher("528"),HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9b")||goog.userAgent.IE&&
goog.userAgent.isVersionOrHigher("8")||goog.userAgent.OPERA&&goog.userAgent.isVersionOrHigher("9.5")||goog.userAgent.WEBKIT&&goog.userAgent.isVersionOrHigher("528"),HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO&&!goog.userAgent.isVersionOrHigher("8")||goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9"),TOUCH_ENABLED:"ontouchstart"in goog.global||!!(goog.global["document"]&&document.documentElement&&"ontouchstart"in document.documentElement)||!!(goog.global["navigator"]&&(goog.global["navigator"]["maxTouchPoints"]||
goog.global["navigator"]["msMaxTouchPoints"])),POINTER_EVENTS:"PointerEvent"in goog.global,MSPOINTER_EVENTS:"MSPointerEvent"in goog.global&&!!(goog.global["navigator"]&&goog.global["navigator"]["msPointerEnabled"]),PASSIVE_EVENTS:purify(function(){if(!goog.global.addEventListener||!Object.defineProperty)return false;var passive=false;var options=Object.defineProperty({},"passive",{get:function(){passive=true}});goog.global.addEventListener("test",goog.nullFunction,options);goog.global.removeEventListener("test",
goog.nullFunction,options);return passive})};function purify(fn){return{valueOf:fn}.valueOf()}});goog.provide("goog.events.EventId");goog.events.EventId=function(eventId){this.id=eventId};goog.events.EventId.prototype.toString=function(){return this.id};goog.provide("goog.events.Event");goog.provide("goog.events.EventLike");goog.require("goog.Disposable");goog.require("goog.events.EventId");goog.events.EventLike;goog.events.Event=function(type,opt_target){this.type=type instanceof goog.events.EventId?String(type):type;this.target=opt_target;this.currentTarget=this.target;this.propagationStopped_=false;this.defaultPrevented=false;this.returnValue_=true};goog.events.Event.prototype.stopPropagation=function(){this.propagationStopped_=true};
goog.events.Event.prototype.preventDefault=function(){this.defaultPrevented=true;this.returnValue_=false};goog.events.Event.stopPropagation=function(e){e.stopPropagation()};goog.events.Event.preventDefault=function(e){e.preventDefault()};goog.provide("goog.events.EventType");goog.provide("goog.events.PointerFallbackEventType");goog.require("goog.events.BrowserFeature");goog.require("goog.userAgent");goog.events.getVendorPrefixedName_=function(eventName){return goog.userAgent.WEBKIT?"webkit"+eventName:goog.userAgent.OPERA?"o"+eventName.toLowerCase():eventName.toLowerCase()};
goog.events.EventType={CLICK:"click",RIGHTCLICK:"rightclick",DBLCLICK:"dblclick",MOUSEDOWN:"mousedown",MOUSEUP:"mouseup",MOUSEOVER:"mouseover",MOUSEOUT:"mouseout",MOUSEMOVE:"mousemove",MOUSEENTER:"mouseenter",MOUSELEAVE:"mouseleave",SELECTIONCHANGE:"selectionchange",SELECTSTART:"selectstart",WHEEL:"wheel",KEYPRESS:"keypress",KEYDOWN:"keydown",KEYUP:"keyup",BLUR:"blur",FOCUS:"focus",DEACTIVATE:"deactivate",FOCUSIN:goog.userAgent.IE?"focusin":"DOMFocusIn",FOCUSOUT:goog.userAgent.IE?"focusout":"DOMFocusOut",
CHANGE:"change",RESET:"reset",SELECT:"select",SUBMIT:"submit",INPUT:"input",PROPERTYCHANGE:"propertychange",DRAGSTART:"dragstart",DRAG:"drag",DRAGENTER:"dragenter",DRAGOVER:"dragover",DRAGLEAVE:"dragleave",DROP:"drop",DRAGEND:"dragend",TOUCHSTART:"touchstart",TOUCHMOVE:"touchmove",TOUCHEND:"touchend",TOUCHCANCEL:"touchcancel",BEFOREUNLOAD:"beforeunload",CONSOLEMESSAGE:"consolemessage",CONTEXTMENU:"contextmenu",DEVICEMOTION:"devicemotion",DEVICEORIENTATION:"deviceorientation",DOMCONTENTLOADED:"DOMContentLoaded",
ERROR:"error",HELP:"help",LOAD:"load",LOSECAPTURE:"losecapture",ORIENTATIONCHANGE:"orientationchange",READYSTATECHANGE:"readystatechange",RESIZE:"resize",SCROLL:"scroll",UNLOAD:"unload",CANPLAY:"canplay",CANPLAYTHROUGH:"canplaythrough",DURATIONCHANGE:"durationchange",EMPTIED:"emptied",ENDED:"ended",LOADEDDATA:"loadeddata",LOADEDMETADATA:"loadedmetadata",PAUSE:"pause",PLAY:"play",PLAYING:"playing",RATECHANGE:"ratechange",SEEKED:"seeked",SEEKING:"seeking",STALLED:"stalled",SUSPEND:"suspend",TIMEUPDATE:"timeupdate",
VOLUMECHANGE:"volumechange",WAITING:"waiting",SOURCEOPEN:"sourceopen",SOURCEENDED:"sourceended",SOURCECLOSED:"sourceclosed",ABORT:"abort",UPDATE:"update",UPDATESTART:"updatestart",UPDATEEND:"updateend",HASHCHANGE:"hashchange",PAGEHIDE:"pagehide",PAGESHOW:"pageshow",POPSTATE:"popstate",COPY:"copy",PASTE:"paste",CUT:"cut",BEFORECOPY:"beforecopy",BEFORECUT:"beforecut",BEFOREPASTE:"beforepaste",ONLINE:"online",OFFLINE:"offline",MESSAGE:"message",CONNECT:"connect",INSTALL:"install",ACTIVATE:"activate",
FETCH:"fetch",FOREIGNFETCH:"foreignfetch",MESSAGEERROR:"messageerror",STATECHANGE:"statechange",UPDATEFOUND:"updatefound",CONTROLLERCHANGE:"controllerchange",ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"),ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"),ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"),TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"),POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTERCANCEL:"pointercancel",
POINTERMOVE:"pointermove",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",GOTPOINTERCAPTURE:"gotpointercapture",LOSTPOINTERCAPTURE:"lostpointercapture",MSGESTURECHANGE:"MSGestureChange",MSGESTUREEND:"MSGestureEnd",MSGESTUREHOLD:"MSGestureHold",MSGESTURESTART:"MSGestureStart",MSGESTURETAP:"MSGestureTap",MSGOTPOINTERCAPTURE:"MSGotPointerCapture",MSINERTIASTART:"MSInertiaStart",MSLOSTPOINTERCAPTURE:"MSLostPointerCapture",MSPOINTERCANCEL:"MSPointerCancel",
MSPOINTERDOWN:"MSPointerDown",MSPOINTERENTER:"MSPointerEnter",MSPOINTERHOVER:"MSPointerHover",MSPOINTERLEAVE:"MSPointerLeave",MSPOINTERMOVE:"MSPointerMove",MSPOINTEROUT:"MSPointerOut",MSPOINTEROVER:"MSPointerOver",MSPOINTERUP:"MSPointerUp",TEXT:"text",TEXTINPUT:goog.userAgent.IE?"textinput":"textInput",COMPOSITIONSTART:"compositionstart",COMPOSITIONUPDATE:"compositionupdate",COMPOSITIONEND:"compositionend",BEFOREINPUT:"beforeinput",EXIT:"exit",LOADABORT:"loadabort",LOADCOMMIT:"loadcommit",LOADREDIRECT:"loadredirect",
LOADSTART:"loadstart",LOADSTOP:"loadstop",RESPONSIVE:"responsive",SIZECHANGED:"sizechanged",UNRESPONSIVE:"unresponsive",VISIBILITYCHANGE:"visibilitychange",STORAGE:"storage",DOMSUBTREEMODIFIED:"DOMSubtreeModified",DOMNODEINSERTED:"DOMNodeInserted",DOMNODEREMOVED:"DOMNodeRemoved",DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument",DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument",DOMATTRMODIFIED:"DOMAttrModified",DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified",BEFOREPRINT:"beforeprint",
AFTERPRINT:"afterprint"};goog.events.getPointerFallbackEventName_=function(pointerEventName,msPointerEventName,mouseEventName){if(goog.events.BrowserFeature.POINTER_EVENTS)return pointerEventName;if(goog.events.BrowserFeature.MSPOINTER_EVENTS)return msPointerEventName;return mouseEventName};
goog.events.PointerFallbackEventType={POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN,goog.events.EventType.MSPOINTERDOWN,goog.events.EventType.MOUSEDOWN),POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP,goog.events.EventType.MSPOINTERUP,goog.events.EventType.MOUSEUP),POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL,goog.events.EventType.MSPOINTERCANCEL,"mousecancel"),POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE,
goog.events.EventType.MSPOINTERMOVE,goog.events.EventType.MOUSEMOVE),POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER,goog.events.EventType.MSPOINTEROVER,goog.events.EventType.MOUSEOVER),POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT,goog.events.EventType.MSPOINTEROUT,goog.events.EventType.MOUSEOUT),POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER,goog.events.EventType.MSPOINTERENTER,
goog.events.EventType.MOUSEENTER),POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE,goog.events.EventType.MSPOINTERLEAVE,goog.events.EventType.MOUSELEAVE)};goog.provide("goog.events.BrowserEvent");goog.provide("goog.events.BrowserEvent.MouseButton");goog.provide("goog.events.BrowserEvent.PointerType");goog.require("goog.debug");goog.require("goog.events.BrowserFeature");goog.require("goog.events.Event");goog.require("goog.events.EventType");goog.require("goog.reflect");goog.require("goog.userAgent");
goog.events.BrowserEvent=function(opt_e,opt_currentTarget){goog.events.BrowserEvent.base(this,"constructor",opt_e?opt_e.type:"");this.target=null;this.currentTarget=null;this.relatedTarget=null;this.offsetX=0;this.offsetY=0;this.clientX=0;this.clientY=0;this.screenX=0;this.screenY=0;this.button=0;this.key="";this.keyCode=0;this.charCode=0;this.ctrlKey=false;this.altKey=false;this.shiftKey=false;this.metaKey=false;this.state=null;this.platformModifierKey=false;this.pointerId=0;this.pointerType="";
this.event_=null;if(opt_e)this.init(opt_e,opt_currentTarget)};goog.inherits(goog.events.BrowserEvent,goog.events.Event);goog.events.BrowserEvent.MouseButton={LEFT:0,MIDDLE:1,RIGHT:2};goog.events.BrowserEvent.PointerType={MOUSE:"mouse",PEN:"pen",TOUCH:"touch"};goog.events.BrowserEvent.IEButtonMap=goog.debug.freeze([1,4,2]);goog.events.BrowserEvent.IE_BUTTON_MAP=goog.events.BrowserEvent.IEButtonMap;
goog.events.BrowserEvent.IE_POINTER_TYPE_MAP=goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH,3:goog.events.BrowserEvent.PointerType.PEN,4:goog.events.BrowserEvent.PointerType.MOUSE});
goog.events.BrowserEvent.prototype.init=function(e,opt_currentTarget){var type=this.type=e.type;var relevantTouch=e.changedTouches?e.changedTouches[0]:null;this.target=e.target||e.srcElement;this.currentTarget=opt_currentTarget;var relatedTarget=e.relatedTarget;if(relatedTarget){if(goog.userAgent.GECKO)if(!goog.reflect.canAccessProperty(relatedTarget,"nodeName"))relatedTarget=null}else if(type==goog.events.EventType.MOUSEOVER)relatedTarget=e.fromElement;else if(type==goog.events.EventType.MOUSEOUT)relatedTarget=
e.toElement;this.relatedTarget=relatedTarget;if(!goog.isNull(relevantTouch)){this.clientX=relevantTouch.clientX!==undefined?relevantTouch.clientX:relevantTouch.pageX;this.clientY=relevantTouch.clientY!==undefined?relevantTouch.clientY:relevantTouch.pageY;this.screenX=relevantTouch.screenX||0;this.screenY=relevantTouch.screenY||0}else{this.offsetX=goog.userAgent.WEBKIT||e.offsetX!==undefined?e.offsetX:e.layerX;this.offsetY=goog.userAgent.WEBKIT||e.offsetY!==undefined?e.offsetY:e.layerY;this.clientX=
e.clientX!==undefined?e.clientX:e.pageX;this.clientY=e.clientY!==undefined?e.clientY:e.pageY;this.screenX=e.screenX||0;this.screenY=e.screenY||0}this.button=e.button;this.keyCode=e.keyCode||0;this.key=e.key||"";this.charCode=e.charCode||(type=="keypress"?e.keyCode:0);this.ctrlKey=e.ctrlKey;this.altKey=e.altKey;this.shiftKey=e.shiftKey;this.metaKey=e.metaKey;this.platformModifierKey=goog.userAgent.MAC?e.metaKey:e.ctrlKey;this.pointerId=e.pointerId||0;this.pointerType=goog.events.BrowserEvent.getPointerType_(e);
this.state=e.state;this.event_=e;if(e.defaultPrevented)this.preventDefault()};goog.events.BrowserEvent.prototype.isButton=function(button){if(!goog.events.BrowserFeature.HAS_W3C_BUTTON)if(this.type=="click")return button==goog.events.BrowserEvent.MouseButton.LEFT;else return!!(this.event_.button&goog.events.BrowserEvent.IE_BUTTON_MAP[button]);else return this.event_.button==button};
goog.events.BrowserEvent.prototype.isMouseActionButton=function(){return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT)&&!(goog.userAgent.WEBKIT&&goog.userAgent.MAC&&this.ctrlKey)};goog.events.BrowserEvent.prototype.stopPropagation=function(){goog.events.BrowserEvent.superClass_.stopPropagation.call(this);if(this.event_.stopPropagation)this.event_.stopPropagation();else this.event_.cancelBubble=true};
goog.events.BrowserEvent.prototype.preventDefault=function(){goog.events.BrowserEvent.superClass_.preventDefault.call(this);var be=this.event_;if(!be.preventDefault){be.returnValue=false;if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT)try{var VK_F1=112;var VK_F12=123;if(be.ctrlKey||be.keyCode>=VK_F1&&be.keyCode<=VK_F12)be.keyCode=-1}catch(ex){}}else be.preventDefault()};goog.events.BrowserEvent.prototype.getBrowserEvent=function(){return this.event_};
goog.events.BrowserEvent.getPointerType_=function(e){if(goog.isString(e.pointerType))return e.pointerType;return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType]||""};goog.provide("goog.events.Listenable");goog.provide("goog.events.ListenableKey");goog.require("goog.events.EventId");goog.forwardDeclare("goog.events.EventLike");goog.forwardDeclare("goog.events.EventTarget");goog.events.Listenable=function(){};goog.events.Listenable.IMPLEMENTED_BY_PROP="closure_listenable_"+(Math.random()*1E6|0);goog.events.Listenable.addImplementation=function(cls){cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP]=true};
goog.events.Listenable.isImplementedBy=function(obj){return!!(obj&&obj[goog.events.Listenable.IMPLEMENTED_BY_PROP])};goog.events.Listenable.prototype.listen;goog.events.Listenable.prototype.listenOnce;goog.events.Listenable.prototype.unlisten;goog.events.Listenable.prototype.unlistenByKey;goog.events.Listenable.prototype.dispatchEvent;goog.events.Listenable.prototype.removeAllListeners;goog.events.Listenable.prototype.getParentEventTarget;goog.events.Listenable.prototype.fireListeners;goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;goog.events.Listenable.prototype.hasListener;goog.events.ListenableKey=function(){};goog.events.ListenableKey.counter_=0;goog.events.ListenableKey.reserveKey=function(){return++goog.events.ListenableKey.counter_};goog.events.ListenableKey.prototype.src;goog.events.ListenableKey.prototype.type;goog.events.ListenableKey.prototype.listener;goog.events.ListenableKey.prototype.capture;goog.events.ListenableKey.prototype.handler;goog.events.ListenableKey.prototype.key;goog.provide("goog.events.Listener");goog.require("goog.events.ListenableKey");goog.events.Listener=function(listener,proxy,src,type,capture,opt_handler){if(goog.events.Listener.ENABLE_MONITORING)this.creationStack=(new Error).stack;this.listener=listener;this.proxy=proxy;this.src=src;this.type=type;this.capture=!!capture;this.handler=opt_handler;this.key=goog.events.ListenableKey.reserveKey();this.callOnce=false;this.removed=false};goog.define("goog.events.Listener.ENABLE_MONITORING",false);goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved=function(){this.removed=true;this.listener=null;this.proxy=null;this.src=null;this.handler=null};goog.provide("goog.events.ListenerMap");goog.require("goog.array");goog.require("goog.events.Listener");goog.require("goog.object");goog.events.ListenerMap=function(src){this.src=src;this.listeners={};this.typeCount_=0};goog.events.ListenerMap.prototype.getTypeCount=function(){return this.typeCount_};goog.events.ListenerMap.prototype.getListenerCount=function(){var count=0;for(var type in this.listeners)count+=this.listeners[type].length;return count};
goog.events.ListenerMap.prototype.add=function(type,listener,callOnce,opt_useCapture,opt_listenerScope){var typeStr=type.toString();var listenerArray=this.listeners[typeStr];if(!listenerArray){listenerArray=this.listeners[typeStr]=[];this.typeCount_++}var listenerObj;var index=goog.events.ListenerMap.findListenerIndex_(listenerArray,listener,opt_useCapture,opt_listenerScope);if(index>-1){listenerObj=listenerArray[index];if(!callOnce)listenerObj.callOnce=false}else{listenerObj=new goog.events.Listener(listener,
null,this.src,typeStr,!!opt_useCapture,opt_listenerScope);listenerObj.callOnce=callOnce;listenerArray.push(listenerObj)}return listenerObj};
goog.events.ListenerMap.prototype.remove=function(type,listener,opt_useCapture,opt_listenerScope){var typeStr=type.toString();if(!(typeStr in this.listeners))return false;var listenerArray=this.listeners[typeStr];var index=goog.events.ListenerMap.findListenerIndex_(listenerArray,listener,opt_useCapture,opt_listenerScope);if(index>-1){var listenerObj=listenerArray[index];listenerObj.markAsRemoved();goog.array.removeAt(listenerArray,index);if(listenerArray.length==0){delete this.listeners[typeStr];
this.typeCount_--}return true}return false};goog.events.ListenerMap.prototype.removeByKey=function(listener){var type=listener.type;if(!(type in this.listeners))return false;var removed=goog.array.remove(this.listeners[type],listener);if(removed){listener.markAsRemoved();if(this.listeners[type].length==0){delete this.listeners[type];this.typeCount_--}}return removed};
goog.events.ListenerMap.prototype.removeAll=function(opt_type){var typeStr=opt_type&&opt_type.toString();var count=0;for(var type in this.listeners)if(!typeStr||type==typeStr){var listenerArray=this.listeners[type];for(var i=0;i<listenerArray.length;i++){++count;listenerArray[i].markAsRemoved()}delete this.listeners[type];this.typeCount_--}return count};
goog.events.ListenerMap.prototype.getListeners=function(type,capture){var listenerArray=this.listeners[type.toString()];var rv=[];if(listenerArray)for(var i=0;i<listenerArray.length;++i){var listenerObj=listenerArray[i];if(listenerObj.capture==capture)rv.push(listenerObj)}return rv};
goog.events.ListenerMap.prototype.getListener=function(type,listener,capture,opt_listenerScope){var listenerArray=this.listeners[type.toString()];var i=-1;if(listenerArray)i=goog.events.ListenerMap.findListenerIndex_(listenerArray,listener,capture,opt_listenerScope);return i>-1?listenerArray[i]:null};
goog.events.ListenerMap.prototype.hasListener=function(opt_type,opt_capture){var hasType=goog.isDef(opt_type);var typeStr=hasType?opt_type.toString():"";var hasCapture=goog.isDef(opt_capture);return goog.object.some(this.listeners,function(listenerArray,type){for(var i=0;i<listenerArray.length;++i)if((!hasType||listenerArray[i].type==typeStr)&&(!hasCapture||listenerArray[i].capture==opt_capture))return true;return false})};
goog.events.ListenerMap.findListenerIndex_=function(listenerArray,listener,opt_useCapture,opt_listenerScope){for(var i=0;i<listenerArray.length;++i){var listenerObj=listenerArray[i];if(!listenerObj.removed&&listenerObj.listener==listener&&listenerObj.capture==!!opt_useCapture&&listenerObj.handler==opt_listenerScope)return i}return-1};goog.provide("goog.events");goog.provide("goog.events.CaptureSimulationMode");goog.provide("goog.events.Key");goog.provide("goog.events.ListenableType");goog.require("goog.asserts");goog.require("goog.debug.entryPointRegistry");goog.require("goog.events.BrowserEvent");goog.require("goog.events.BrowserFeature");goog.require("goog.events.Listenable");goog.require("goog.events.ListenerMap");goog.forwardDeclare("goog.debug.ErrorHandler");goog.forwardDeclare("goog.events.EventWrapper");goog.events.Key;
goog.events.ListenableType;goog.events.LISTENER_MAP_PROP_="closure_lm_"+(Math.random()*1E6|0);goog.events.onString_="on";goog.events.onStringMap_={};goog.events.CaptureSimulationMode={OFF_AND_FAIL:0,OFF_AND_SILENT:1,ON:2};goog.define("goog.events.CAPTURE_SIMULATION_MODE",2);goog.events.listenerCountEstimate_=0;
goog.events.listen=function(src,type,listener,opt_options,opt_handler){if(opt_options&&opt_options.once)return goog.events.listenOnce(src,type,listener,opt_options,opt_handler);if(goog.isArray(type)){for(var i=0;i<type.length;i++)goog.events.listen(src,type[i],listener,opt_options,opt_handler);return null}listener=goog.events.wrapListener(listener);if(goog.events.Listenable.isImplementedBy(src)){var capture=goog.isObject(opt_options)?!!opt_options.capture:!!opt_options;return src.listen(type,listener,
capture,opt_handler)}else return goog.events.listen_(src,type,listener,false,opt_options,opt_handler)};
goog.events.listen_=function(src,type,listener,callOnce,opt_options,opt_handler){if(!type)throw new Error("Invalid event type");var capture=goog.isObject(opt_options)?!!opt_options.capture:!!opt_options;if(capture&&!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT)if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_FAIL){goog.asserts.fail("Can not register capture listener in IE8-.");return null}else if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_SILENT)return null;
var listenerMap=goog.events.getListenerMap_(src);if(!listenerMap)src[goog.events.LISTENER_MAP_PROP_]=listenerMap=new goog.events.ListenerMap(src);var listenerObj=listenerMap.add(type,listener,callOnce,capture,opt_handler);if(listenerObj.proxy)return listenerObj;var proxy=goog.events.getProxy();listenerObj.proxy=proxy;proxy.src=src;proxy.listener=listenerObj;if(src.addEventListener){if(!goog.events.BrowserFeature.PASSIVE_EVENTS)opt_options=capture;if(opt_options===undefined)opt_options=false;src.addEventListener(type.toString(),
proxy,opt_options)}else if(src.attachEvent)src.attachEvent(goog.events.getOnString_(type.toString()),proxy);else throw new Error("addEventListener and attachEvent are unavailable.");goog.events.listenerCountEstimate_++;return listenerObj};
goog.events.getProxy=function(){var proxyCallbackFunction=goog.events.handleBrowserEvent_;var f=goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT?function(eventObject){return proxyCallbackFunction.call(f.src,f.listener,eventObject)}:function(eventObject){var v=proxyCallbackFunction.call(f.src,f.listener,eventObject);if(!v)return v};return f};
goog.events.listenOnce=function(src,type,listener,opt_options,opt_handler){if(goog.isArray(type)){for(var i=0;i<type.length;i++)goog.events.listenOnce(src,type[i],listener,opt_options,opt_handler);return null}listener=goog.events.wrapListener(listener);if(goog.events.Listenable.isImplementedBy(src)){var capture=goog.isObject(opt_options)?!!opt_options.capture:!!opt_options;return src.listenOnce(type,listener,capture,opt_handler)}else return goog.events.listen_(src,type,listener,true,opt_options,opt_handler)};
goog.events.listenWithWrapper=function(src,wrapper,listener,opt_capt,opt_handler){wrapper.listen(src,listener,opt_capt,opt_handler)};
goog.events.unlisten=function(src,type,listener,opt_options,opt_handler){if(goog.isArray(type)){for(var i=0;i<type.length;i++)goog.events.unlisten(src,type[i],listener,opt_options,opt_handler);return null}var capture=goog.isObject(opt_options)?!!opt_options.capture:!!opt_options;listener=goog.events.wrapListener(listener);if(goog.events.Listenable.isImplementedBy(src))return src.unlisten(type,listener,capture,opt_handler);if(!src)return false;var listenerMap=goog.events.getListenerMap_(src);if(listenerMap){var listenerObj=
listenerMap.getListener(type,listener,capture,opt_handler);if(listenerObj)return goog.events.unlistenByKey(listenerObj)}return false};
goog.events.unlistenByKey=function(key){if(goog.isNumber(key))return false;var listener=key;if(!listener||listener.removed)return false;var src=listener.src;if(goog.events.Listenable.isImplementedBy(src))return src.unlistenByKey(listener);var type=listener.type;var proxy=listener.proxy;if(src.removeEventListener)src.removeEventListener(type,proxy,listener.capture);else if(src.detachEvent)src.detachEvent(goog.events.getOnString_(type),proxy);goog.events.listenerCountEstimate_--;var listenerMap=goog.events.getListenerMap_(src);
if(listenerMap){listenerMap.removeByKey(listener);if(listenerMap.getTypeCount()==0){listenerMap.src=null;src[goog.events.LISTENER_MAP_PROP_]=null}}else listener.markAsRemoved();return true};goog.events.unlistenWithWrapper=function(src,wrapper,listener,opt_capt,opt_handler){wrapper.unlisten(src,listener,opt_capt,opt_handler)};
goog.events.removeAll=function(obj,opt_type){if(!obj)return 0;if(goog.events.Listenable.isImplementedBy(obj))return obj.removeAllListeners(opt_type);var listenerMap=goog.events.getListenerMap_(obj);if(!listenerMap)return 0;var count=0;var typeStr=opt_type&&opt_type.toString();for(var type in listenerMap.listeners)if(!typeStr||type==typeStr){var listeners=listenerMap.listeners[type].concat();for(var i=0;i<listeners.length;++i)if(goog.events.unlistenByKey(listeners[i]))++count}return count};
goog.events.getListeners=function(obj,type,capture){if(goog.events.Listenable.isImplementedBy(obj))return obj.getListeners(type,capture);else{if(!obj)return[];var listenerMap=goog.events.getListenerMap_(obj);return listenerMap?listenerMap.getListeners(type,capture):[]}};
goog.events.getListener=function(src,type,listener,opt_capt,opt_handler){type=type;listener=goog.events.wrapListener(listener);var capture=!!opt_capt;if(goog.events.Listenable.isImplementedBy(src))return src.getListener(type,listener,capture,opt_handler);if(!src)return null;var listenerMap=goog.events.getListenerMap_(src);if(listenerMap)return listenerMap.getListener(type,listener,capture,opt_handler);return null};
goog.events.hasListener=function(obj,opt_type,opt_capture){if(goog.events.Listenable.isImplementedBy(obj))return obj.hasListener(opt_type,opt_capture);var listenerMap=goog.events.getListenerMap_(obj);return!!listenerMap&&listenerMap.hasListener(opt_type,opt_capture)};goog.events.expose=function(e){var str=[];for(var key in e)if(e[key]&&e[key].id)str.push(key+" = "+e[key]+" ("+e[key].id+")");else str.push(key+" = "+e[key]);return str.join("\n")};
goog.events.getOnString_=function(type){if(type in goog.events.onStringMap_)return goog.events.onStringMap_[type];return goog.events.onStringMap_[type]=goog.events.onString_+type};goog.events.fireListeners=function(obj,type,capture,eventObject){if(goog.events.Listenable.isImplementedBy(obj))return obj.fireListeners(type,capture,eventObject);return goog.events.fireListeners_(obj,type,capture,eventObject)};
goog.events.fireListeners_=function(obj,type,capture,eventObject){var retval=true;var listenerMap=goog.events.getListenerMap_(obj);if(listenerMap){var listenerArray=listenerMap.listeners[type.toString()];if(listenerArray){listenerArray=listenerArray.concat();for(var i=0;i<listenerArray.length;i++){var listener=listenerArray[i];if(listener&&listener.capture==capture&&!listener.removed){var result=goog.events.fireListener(listener,eventObject);retval=retval&&result!==false}}}}return retval};
goog.events.fireListener=function(listener,eventObject){var listenerFn=listener.listener;var listenerHandler=listener.handler||listener.src;if(listener.callOnce)goog.events.unlistenByKey(listener);return listenerFn.call(listenerHandler,eventObject)};goog.events.getTotalListenerCount=function(){return goog.events.listenerCountEstimate_};
goog.events.dispatchEvent=function(src,e){goog.asserts.assert(goog.events.Listenable.isImplementedBy(src),"Can not use goog.events.dispatchEvent with "+"non-goog.events.Listenable instance.");return src.dispatchEvent(e)};goog.events.protectBrowserEventEntryPoint=function(errorHandler){goog.events.handleBrowserEvent_=errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)};
goog.events.handleBrowserEvent_=function(listener,opt_evt){if(listener.removed)return true;if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT){var ieEvent=opt_evt||goog.getObjectByName("window.event");var evt=new goog.events.BrowserEvent(ieEvent,this);var retval=true;if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.ON){if(!goog.events.isMarkedIeEvent_(ieEvent)){goog.events.markIeEvent_(ieEvent);var ancestors=[];for(var parent=evt.currentTarget;parent;parent=parent.parentNode)ancestors.push(parent);
var type=listener.type;for(var i=ancestors.length-1;!evt.propagationStopped_&&i>=0;i--){evt.currentTarget=ancestors[i];var result=goog.events.fireListeners_(ancestors[i],type,true,evt);retval=retval&&result}for(var i=0;!evt.propagationStopped_&&i<ancestors.length;i++){evt.currentTarget=ancestors[i];var result=goog.events.fireListeners_(ancestors[i],type,false,evt);retval=retval&&result}}}else retval=goog.events.fireListener(listener,evt);return retval}return goog.events.fireListener(listener,new goog.events.BrowserEvent(opt_evt,
this))};goog.events.markIeEvent_=function(e){var useReturnValue=false;if(e.keyCode==0)try{e.keyCode=-1;return}catch(ex){useReturnValue=true}if(useReturnValue||e.returnValue==undefined)e.returnValue=true};goog.events.isMarkedIeEvent_=function(e){return e.keyCode<0||e.returnValue!=undefined};goog.events.uniqueIdCounter_=0;goog.events.getUniqueId=function(identifier){return identifier+"_"+goog.events.uniqueIdCounter_++};
goog.events.getListenerMap_=function(src){var listenerMap=src[goog.events.LISTENER_MAP_PROP_];return listenerMap instanceof goog.events.ListenerMap?listenerMap:null};goog.events.LISTENER_WRAPPER_PROP_="__closure_events_fn_"+(Math.random()*1E9>>>0);
goog.events.wrapListener=function(listener){goog.asserts.assert(listener,"Listener can not be null.");if(goog.isFunction(listener))return listener;goog.asserts.assert(listener.handleEvent,"An object listener must have handleEvent method.");if(!listener[goog.events.LISTENER_WRAPPER_PROP_])listener[goog.events.LISTENER_WRAPPER_PROP_]=function(e){return listener.handleEvent(e)};return listener[goog.events.LISTENER_WRAPPER_PROP_]};
goog.debug.entryPointRegistry.register(function(transformer){goog.events.handleBrowserEvent_=transformer(goog.events.handleBrowserEvent_)});goog.provide("goog.events.EventTarget");goog.require("goog.Disposable");goog.require("goog.asserts");goog.require("goog.events");goog.require("goog.events.Event");goog.require("goog.events.Listenable");goog.require("goog.events.ListenerMap");goog.require("goog.object");goog.events.EventTarget=function(){goog.Disposable.call(this);this.eventTargetListeners_=new goog.events.ListenerMap(this);this.actualEventTarget_=this;this.parentEventTarget_=null};goog.inherits(goog.events.EventTarget,goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);goog.events.EventTarget.MAX_ANCESTORS_=1E3;goog.events.EventTarget.prototype.getParentEventTarget=function(){return this.parentEventTarget_};goog.events.EventTarget.prototype.setParentEventTarget=function(parent){this.parentEventTarget_=parent};goog.events.EventTarget.prototype.addEventListener=function(type,handler,opt_capture,opt_handlerScope){goog.events.listen(this,type,handler,opt_capture,opt_handlerScope)};
goog.events.EventTarget.prototype.removeEventListener=function(type,handler,opt_capture,opt_handlerScope){goog.events.unlisten(this,type,handler,opt_capture,opt_handlerScope)};
goog.events.EventTarget.prototype.dispatchEvent=function(e){this.assertInitialized_();var ancestorsTree,ancestor=this.getParentEventTarget();if(ancestor){ancestorsTree=[];var ancestorCount=1;for(;ancestor;ancestor=ancestor.getParentEventTarget()){ancestorsTree.push(ancestor);goog.asserts.assert(++ancestorCount<goog.events.EventTarget.MAX_ANCESTORS_,"infinite loop")}}return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_,e,ancestorsTree)};
goog.events.EventTarget.prototype.disposeInternal=function(){goog.events.EventTarget.superClass_.disposeInternal.call(this);this.removeAllListeners();this.parentEventTarget_=null};goog.events.EventTarget.prototype.listen=function(type,listener,opt_useCapture,opt_listenerScope){this.assertInitialized_();return this.eventTargetListeners_.add(String(type),listener,false,opt_useCapture,opt_listenerScope)};
goog.events.EventTarget.prototype.listenOnce=function(type,listener,opt_useCapture,opt_listenerScope){return this.eventTargetListeners_.add(String(type),listener,true,opt_useCapture,opt_listenerScope)};goog.events.EventTarget.prototype.unlisten=function(type,listener,opt_useCapture,opt_listenerScope){return this.eventTargetListeners_.remove(String(type),listener,opt_useCapture,opt_listenerScope)};goog.events.EventTarget.prototype.unlistenByKey=function(key){return this.eventTargetListeners_.removeByKey(key)};
goog.events.EventTarget.prototype.removeAllListeners=function(opt_type){if(!this.eventTargetListeners_)return 0;return this.eventTargetListeners_.removeAll(opt_type)};
goog.events.EventTarget.prototype.fireListeners=function(type,capture,eventObject){var listenerArray=this.eventTargetListeners_.listeners[String(type)];if(!listenerArray)return true;listenerArray=listenerArray.concat();var rv=true;for(var i=0;i<listenerArray.length;++i){var listener=listenerArray[i];if(listener&&!listener.removed&&listener.capture==capture){var listenerFn=listener.listener;var listenerHandler=listener.handler||listener.src;if(listener.callOnce)this.unlistenByKey(listener);rv=listenerFn.call(listenerHandler,
eventObject)!==false&&rv}}return rv&&eventObject.returnValue_!=false};goog.events.EventTarget.prototype.getListeners=function(type,capture){return this.eventTargetListeners_.getListeners(String(type),capture)};goog.events.EventTarget.prototype.getListener=function(type,listener,capture,opt_listenerScope){return this.eventTargetListeners_.getListener(String(type),listener,capture,opt_listenerScope)};
goog.events.EventTarget.prototype.hasListener=function(opt_type,opt_capture){var id=goog.isDef(opt_type)?String(opt_type):undefined;return this.eventTargetListeners_.hasListener(id,opt_capture)};goog.events.EventTarget.prototype.setTargetForTesting=function(target){this.actualEventTarget_=target};goog.events.EventTarget.prototype.assertInitialized_=function(){goog.asserts.assert(this.eventTargetListeners_,"Event target is not initialized. Did you call the superclass "+"(goog.events.EventTarget) constructor?")};
goog.events.EventTarget.dispatchEventInternal_=function(target,e,opt_ancestorsTree){var type=e.type||e;if(goog.isString(e))e=new goog.events.Event(e,target);else if(!(e instanceof goog.events.Event)){var oldEvent=e;e=new goog.events.Event(type,target);goog.object.extend(e,oldEvent)}else e.target=e.target||target;var rv=true,currentTarget;if(opt_ancestorsTree)for(var i=opt_ancestorsTree.length-1;!e.propagationStopped_&&i>=0;i--){currentTarget=e.currentTarget=opt_ancestorsTree[i];rv=currentTarget.fireListeners(type,
true,e)&&rv}if(!e.propagationStopped_){currentTarget=e.currentTarget=target;rv=currentTarget.fireListeners(type,true,e)&&rv;if(!e.propagationStopped_)rv=currentTarget.fireListeners(type,false,e)&&rv}if(opt_ancestorsTree)for(i=0;!e.propagationStopped_&&i<opt_ancestorsTree.length;i++){currentTarget=e.currentTarget=opt_ancestorsTree[i];rv=currentTarget.fireListeners(type,false,e)&&rv}return rv};goog.provide("goog.Timer");goog.require("goog.Promise");goog.require("goog.events.EventTarget");goog.Timer=function(opt_interval,opt_timerObject){goog.events.EventTarget.call(this);this.interval_=opt_interval||1;this.timerObject_=opt_timerObject||goog.Timer.defaultTimerObject;this.boundTick_=goog.bind(this.tick_,this);this.last_=goog.now()};goog.inherits(goog.Timer,goog.events.EventTarget);goog.Timer.MAX_TIMEOUT_=2147483647;goog.Timer.INVALID_TIMEOUT_ID_=-1;goog.Timer.prototype.enabled=false;
goog.Timer.defaultTimerObject=goog.global;goog.Timer.intervalScale=.8;goog.Timer.prototype.timer_=null;goog.Timer.prototype.getInterval=function(){return this.interval_};goog.Timer.prototype.setInterval=function(interval){this.interval_=interval;if(this.timer_&&this.enabled){this.stop();this.start()}else if(this.timer_)this.stop()};
goog.Timer.prototype.tick_=function(){if(this.enabled){var elapsed=goog.now()-this.last_;if(elapsed>0&&elapsed<this.interval_*goog.Timer.intervalScale){this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_-elapsed);return}if(this.timer_){this.timerObject_.clearTimeout(this.timer_);this.timer_=null}this.dispatchTick();if(this.enabled){this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_);this.last_=goog.now()}}};goog.Timer.prototype.dispatchTick=function(){this.dispatchEvent(goog.Timer.TICK)};
goog.Timer.prototype.start=function(){this.enabled=true;if(!this.timer_){this.timer_=this.timerObject_.setTimeout(this.boundTick_,this.interval_);this.last_=goog.now()}};goog.Timer.prototype.stop=function(){this.enabled=false;if(this.timer_){this.timerObject_.clearTimeout(this.timer_);this.timer_=null}};goog.Timer.prototype.disposeInternal=function(){goog.Timer.superClass_.disposeInternal.call(this);this.stop();delete this.timerObject_};goog.Timer.TICK="tick";
goog.Timer.callOnce=function(listener,opt_delay,opt_handler){if(goog.isFunction(listener)){if(opt_handler)listener=goog.bind(listener,opt_handler)}else if(listener&&typeof listener.handleEvent=="function")listener=goog.bind(listener.handleEvent,listener);else throw new Error("Invalid listener argument");if(Number(opt_delay)>goog.Timer.MAX_TIMEOUT_)return goog.Timer.INVALID_TIMEOUT_ID_;else return goog.Timer.defaultTimerObject.setTimeout(listener,opt_delay||0)};goog.Timer.clear=function(timerId){goog.Timer.defaultTimerObject.clearTimeout(timerId)};
goog.Timer.promise=function(delay,opt_result){var timerKey=null;return(new goog.Promise(function(resolve,reject){timerKey=goog.Timer.callOnce(function(){resolve(opt_result)},delay);if(timerKey==goog.Timer.INVALID_TIMEOUT_ID_)reject(new Error("Failed to schedule timer."))})).thenCatch(function(error){goog.Timer.clear(timerKey);throw error;})};goog.provide("goog.debug.LogRecord");goog.debug.LogRecord=function(level,msg,loggerName,opt_time,opt_sequenceNumber){this.reset(level,msg,loggerName,opt_time,opt_sequenceNumber)};goog.debug.LogRecord.prototype.time_;goog.debug.LogRecord.prototype.level_;goog.debug.LogRecord.prototype.msg_;goog.debug.LogRecord.prototype.loggerName_;goog.debug.LogRecord.prototype.sequenceNumber_=0;goog.debug.LogRecord.prototype.exception_=null;goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS",true);
goog.debug.LogRecord.nextSequenceNumber_=0;goog.debug.LogRecord.prototype.reset=function(level,msg,loggerName,opt_time,opt_sequenceNumber){if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS)this.sequenceNumber_=typeof opt_sequenceNumber=="number"?opt_sequenceNumber:goog.debug.LogRecord.nextSequenceNumber_++;this.time_=opt_time||goog.now();this.level_=level;this.msg_=msg;this.loggerName_=loggerName;delete this.exception_};goog.debug.LogRecord.prototype.getLoggerName=function(){return this.loggerName_};
goog.debug.LogRecord.prototype.getException=function(){return this.exception_};goog.debug.LogRecord.prototype.setException=function(exception){this.exception_=exception};goog.debug.LogRecord.prototype.setLoggerName=function(loggerName){this.loggerName_=loggerName};goog.debug.LogRecord.prototype.getLevel=function(){return this.level_};goog.debug.LogRecord.prototype.setLevel=function(level){this.level_=level};goog.debug.LogRecord.prototype.getMessage=function(){return this.msg_};
goog.debug.LogRecord.prototype.setMessage=function(msg){this.msg_=msg};goog.debug.LogRecord.prototype.getMillis=function(){return this.time_};goog.debug.LogRecord.prototype.setMillis=function(time){this.time_=time};goog.debug.LogRecord.prototype.getSequenceNumber=function(){return this.sequenceNumber_};goog.provide("goog.debug.LogBuffer");goog.require("goog.asserts");goog.require("goog.debug.LogRecord");goog.debug.LogBuffer=function(){goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(),"Cannot use goog.debug.LogBuffer without defining "+"goog.debug.LogBuffer.CAPACITY.");this.clear()};goog.debug.LogBuffer.getInstance=function(){if(!goog.debug.LogBuffer.instance_)goog.debug.LogBuffer.instance_=new goog.debug.LogBuffer;return goog.debug.LogBuffer.instance_};
goog.define("goog.debug.LogBuffer.CAPACITY",0);goog.debug.LogBuffer.prototype.buffer_;goog.debug.LogBuffer.prototype.curIndex_;goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord=function(level,msg,loggerName){var curIndex=(this.curIndex_+1)%goog.debug.LogBuffer.CAPACITY;this.curIndex_=curIndex;if(this.isFull_){var ret=this.buffer_[curIndex];ret.reset(level,msg,loggerName);return ret}this.isFull_=curIndex==goog.debug.LogBuffer.CAPACITY-1;return this.buffer_[curIndex]=new goog.debug.LogRecord(level,msg,loggerName)};goog.debug.LogBuffer.isBufferingEnabled=function(){return goog.debug.LogBuffer.CAPACITY>0};
goog.debug.LogBuffer.prototype.clear=function(){this.buffer_=new Array(goog.debug.LogBuffer.CAPACITY);this.curIndex_=-1;this.isFull_=false};goog.debug.LogBuffer.prototype.forEachRecord=function(func){var buffer=this.buffer_;if(!buffer[0])return;var curIndex=this.curIndex_;var i=this.isFull_?curIndex:-1;do{i=(i+1)%goog.debug.LogBuffer.CAPACITY;func(buffer[i])}while(i!=curIndex)};goog.provide("goog.debug.LogManager");goog.provide("goog.debug.Loggable");goog.provide("goog.debug.Logger");goog.provide("goog.debug.Logger.Level");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.debug");goog.require("goog.debug.LogBuffer");goog.require("goog.debug.LogRecord");goog.debug.Loggable;goog.debug.Logger=function(name){this.name_=name;this.parent_=null;this.level_=null;this.children_=null;this.handlers_=null};goog.debug.Logger.ROOT_LOGGER_NAME="";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY",true);if(!goog.debug.Logger.ENABLE_HIERARCHY){goog.debug.Logger.rootHandlers_=[];goog.debug.Logger.rootLevel_}goog.debug.Logger.Level=function(name,value){this.name=name;this.value=value};goog.debug.Logger.Level.prototype.toString=function(){return this.name};goog.debug.Logger.Level.OFF=new goog.debug.Logger.Level("OFF",Infinity);goog.debug.Logger.Level.SHOUT=new goog.debug.Logger.Level("SHOUT",1200);
goog.debug.Logger.Level.SEVERE=new goog.debug.Logger.Level("SEVERE",1E3);goog.debug.Logger.Level.WARNING=new goog.debug.Logger.Level("WARNING",900);goog.debug.Logger.Level.INFO=new goog.debug.Logger.Level("INFO",800);goog.debug.Logger.Level.CONFIG=new goog.debug.Logger.Level("CONFIG",700);goog.debug.Logger.Level.FINE=new goog.debug.Logger.Level("FINE",500);goog.debug.Logger.Level.FINER=new goog.debug.Logger.Level("FINER",400);goog.debug.Logger.Level.FINEST=new goog.debug.Logger.Level("FINEST",300);
goog.debug.Logger.Level.ALL=new goog.debug.Logger.Level("ALL",0);goog.debug.Logger.Level.PREDEFINED_LEVELS=[goog.debug.Logger.Level.OFF,goog.debug.Logger.Level.SHOUT,goog.debug.Logger.Level.SEVERE,goog.debug.Logger.Level.WARNING,goog.debug.Logger.Level.INFO,goog.debug.Logger.Level.CONFIG,goog.debug.Logger.Level.FINE,goog.debug.Logger.Level.FINER,goog.debug.Logger.Level.FINEST,goog.debug.Logger.Level.ALL];goog.debug.Logger.Level.predefinedLevelsCache_=null;
goog.debug.Logger.Level.createPredefinedLevelsCache_=function(){goog.debug.Logger.Level.predefinedLevelsCache_={};for(var i=0,level;level=goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++){goog.debug.Logger.Level.predefinedLevelsCache_[level.value]=level;goog.debug.Logger.Level.predefinedLevelsCache_[level.name]=level}};
goog.debug.Logger.Level.getPredefinedLevel=function(name){if(!goog.debug.Logger.Level.predefinedLevelsCache_)goog.debug.Logger.Level.createPredefinedLevelsCache_();return goog.debug.Logger.Level.predefinedLevelsCache_[name]||null};
goog.debug.Logger.Level.getPredefinedLevelByValue=function(value){if(!goog.debug.Logger.Level.predefinedLevelsCache_)goog.debug.Logger.Level.createPredefinedLevelsCache_();if(value in goog.debug.Logger.Level.predefinedLevelsCache_)return goog.debug.Logger.Level.predefinedLevelsCache_[value];for(var i=0;i<goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i){var level=goog.debug.Logger.Level.PREDEFINED_LEVELS[i];if(level.value<=value)return level}return null};goog.debug.Logger.getLogger=function(name){return goog.debug.LogManager.getLogger(name)};
goog.debug.Logger.logToProfilers=function(msg){var console=goog.global["console"];if(console&&console["timeStamp"])console["timeStamp"](msg);var msWriteProfilerMark=goog.global["msWriteProfilerMark"];if(msWriteProfilerMark)msWriteProfilerMark(msg)};goog.debug.Logger.prototype.getName=function(){return this.name_};
goog.debug.Logger.prototype.addHandler=function(handler){if(goog.debug.LOGGING_ENABLED)if(goog.debug.Logger.ENABLE_HIERARCHY){if(!this.handlers_)this.handlers_=[];this.handlers_.push(handler)}else{goog.asserts.assert(!this.name_,"Cannot call addHandler on a non-root logger when "+"goog.debug.Logger.ENABLE_HIERARCHY is false.");goog.debug.Logger.rootHandlers_.push(handler)}};
goog.debug.Logger.prototype.removeHandler=function(handler){if(goog.debug.LOGGING_ENABLED){var handlers=goog.debug.Logger.ENABLE_HIERARCHY?this.handlers_:goog.debug.Logger.rootHandlers_;return!!handlers&&goog.array.remove(handlers,handler)}else return false};goog.debug.Logger.prototype.getParent=function(){return this.parent_};goog.debug.Logger.prototype.getChildren=function(){if(!this.children_)this.children_={};return this.children_};
goog.debug.Logger.prototype.setLevel=function(level){if(goog.debug.LOGGING_ENABLED)if(goog.debug.Logger.ENABLE_HIERARCHY)this.level_=level;else{goog.asserts.assert(!this.name_,"Cannot call setLevel() on a non-root logger when "+"goog.debug.Logger.ENABLE_HIERARCHY is false.");goog.debug.Logger.rootLevel_=level}};goog.debug.Logger.prototype.getLevel=function(){return goog.debug.LOGGING_ENABLED?this.level_:goog.debug.Logger.Level.OFF};
goog.debug.Logger.prototype.getEffectiveLevel=function(){if(!goog.debug.LOGGING_ENABLED)return goog.debug.Logger.Level.OFF;if(!goog.debug.Logger.ENABLE_HIERARCHY)return goog.debug.Logger.rootLevel_;if(this.level_)return this.level_;if(this.parent_)return this.parent_.getEffectiveLevel();goog.asserts.fail("Root logger has no level set.");return null};goog.debug.Logger.prototype.isLoggable=function(level){return goog.debug.LOGGING_ENABLED&&level.value>=this.getEffectiveLevel().value};
goog.debug.Logger.prototype.log=function(level,msg,opt_exception){if(goog.debug.LOGGING_ENABLED&&this.isLoggable(level)){if(goog.isFunction(msg))msg=msg();this.doLogRecord_(this.getLogRecord(level,msg,opt_exception))}};
goog.debug.Logger.prototype.getLogRecord=function(level,msg,opt_exception){if(goog.debug.LogBuffer.isBufferingEnabled())var logRecord=goog.debug.LogBuffer.getInstance().addRecord(level,msg,this.name_);else logRecord=new goog.debug.LogRecord(level,String(msg),this.name_);if(opt_exception)logRecord.setException(opt_exception);return logRecord};goog.debug.Logger.prototype.shout=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.SHOUT,msg,opt_exception)};
goog.debug.Logger.prototype.severe=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.SEVERE,msg,opt_exception)};goog.debug.Logger.prototype.warning=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.WARNING,msg,opt_exception)};goog.debug.Logger.prototype.info=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.INFO,msg,opt_exception)};
goog.debug.Logger.prototype.config=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.CONFIG,msg,opt_exception)};goog.debug.Logger.prototype.fine=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.FINE,msg,opt_exception)};goog.debug.Logger.prototype.finer=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.FINER,msg,opt_exception)};
goog.debug.Logger.prototype.finest=function(msg,opt_exception){if(goog.debug.LOGGING_ENABLED)this.log(goog.debug.Logger.Level.FINEST,msg,opt_exception)};goog.debug.Logger.prototype.logRecord=function(logRecord){if(goog.debug.LOGGING_ENABLED&&this.isLoggable(logRecord.getLevel()))this.doLogRecord_(logRecord)};
goog.debug.Logger.prototype.doLogRecord_=function(logRecord){goog.debug.Logger.logToProfilers("log:"+logRecord.getMessage());if(goog.debug.Logger.ENABLE_HIERARCHY){var target=this;while(target){target.callPublish_(logRecord);target=target.getParent()}}else for(var i=0,handler;handler=goog.debug.Logger.rootHandlers_[i++];)handler(logRecord)};goog.debug.Logger.prototype.callPublish_=function(logRecord){if(this.handlers_)for(var i=0,handler;handler=this.handlers_[i];i++)handler(logRecord)};
goog.debug.Logger.prototype.setParent_=function(parent){this.parent_=parent};goog.debug.Logger.prototype.addChild_=function(name,logger){this.getChildren()[name]=logger};goog.debug.LogManager={};goog.debug.LogManager.loggers_={};goog.debug.LogManager.rootLogger_=null;
goog.debug.LogManager.initialize=function(){if(!goog.debug.LogManager.rootLogger_){goog.debug.LogManager.rootLogger_=new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME]=goog.debug.LogManager.rootLogger_;goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)}};goog.debug.LogManager.getLoggers=function(){return goog.debug.LogManager.loggers_};
goog.debug.LogManager.getRoot=function(){goog.debug.LogManager.initialize();return goog.debug.LogManager.rootLogger_};goog.debug.LogManager.getLogger=function(name){goog.debug.LogManager.initialize();var ret=goog.debug.LogManager.loggers_[name];return ret||goog.debug.LogManager.createLogger_(name)};
goog.debug.LogManager.createFunctionForCatchErrors=function(opt_logger){return function(info){var logger=opt_logger||goog.debug.LogManager.getRoot();logger.severe("Error: "+info.message+" ("+info.fileName+" @ Line: "+info.line+")")}};
goog.debug.LogManager.createLogger_=function(name){var logger=new goog.debug.Logger(name);if(goog.debug.Logger.ENABLE_HIERARCHY){var lastDotIndex=name.lastIndexOf(".");var parentName=name.substr(0,lastDotIndex);var leafName=name.substr(lastDotIndex+1);var parentLogger=goog.debug.LogManager.getLogger(parentName);parentLogger.addChild_(leafName,logger);logger.setParent_(parentLogger)}goog.debug.LogManager.loggers_[name]=logger;return logger};goog.provide("goog.iter");goog.provide("goog.iter.Iterable");goog.provide("goog.iter.Iterator");goog.provide("goog.iter.StopIteration");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.functions");goog.require("goog.math");goog.iter.Iterable;goog.iter.StopIteration="StopIteration"in goog.global?goog.global["StopIteration"]:{message:"StopIteration",stack:""};goog.iter.Iterator=function(){};goog.iter.Iterator.prototype.next=function(){throw goog.iter.StopIteration;};
goog.iter.Iterator.prototype.__iterator__=function(opt_keys){return this};
goog.iter.toIterator=function(iterable){if(iterable instanceof goog.iter.Iterator)return iterable;if(typeof iterable.__iterator__=="function")return iterable.__iterator__(false);if(goog.isArrayLike(iterable)){var i=0;var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){if(i>=iterable.length)throw goog.iter.StopIteration;if(!(i in iterable)){i++;continue}return iterable[i++]}};return newIter}throw new Error("Not implemented");};
goog.iter.forEach=function(iterable,f,opt_obj){if(goog.isArrayLike(iterable))try{goog.array.forEach(iterable,f,opt_obj)}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}else{iterable=goog.iter.toIterator(iterable);try{while(true)f.call(opt_obj,iterable.next(),undefined,iterable)}catch(ex$2){if(ex$2!==goog.iter.StopIteration)throw ex$2;}}};
goog.iter.filter=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){while(true){var val=iterator.next();if(f.call(opt_obj,val,undefined,iterator))return val}};return newIter};goog.iter.filterFalse=function(iterable,f,opt_obj){return goog.iter.filter(iterable,goog.functions.not(f),opt_obj)};
goog.iter.range=function(startOrStop,opt_stop,opt_step){var start=0;var stop=startOrStop;var step=opt_step||1;if(arguments.length>1){start=startOrStop;stop=opt_stop}if(step==0)throw new Error("Range step argument must not be zero");var newIter=new goog.iter.Iterator;newIter.next=function(){if(step>0&&start>=stop||step<0&&start<=stop)throw goog.iter.StopIteration;var rv=start;start+=step;return rv};return newIter};goog.iter.join=function(iterable,deliminator){return goog.iter.toArray(iterable).join(deliminator)};
goog.iter.map=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;newIter.next=function(){var val=iterator.next();return f.call(opt_obj,val,undefined,iterator)};return newIter};goog.iter.reduce=function(iterable,f,val,opt_obj){var rval=val;goog.iter.forEach(iterable,function(val){rval=f.call(opt_obj,rval,val)});return rval};
goog.iter.some=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(f.call(opt_obj,iterable.next(),undefined,iterable))return true}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return false};goog.iter.every=function(iterable,f,opt_obj){iterable=goog.iter.toIterator(iterable);try{while(true)if(!f.call(opt_obj,iterable.next(),undefined,iterable))return false}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;}return true};goog.iter.chain=function(var_args){return goog.iter.chainFromIterable(arguments)};
goog.iter.chainFromIterable=function(iterable){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;var current=null;iter.next=function(){while(true){if(current==null){var it=iterator.next();current=goog.iter.toIterator(it)}try{return current.next()}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;current=null}}};return iter};
goog.iter.dropWhile=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var newIter=new goog.iter.Iterator;var dropping=true;newIter.next=function(){while(true){var val=iterator.next();if(dropping&&f.call(opt_obj,val,undefined,iterator))continue;else dropping=false;return val}};return newIter};
goog.iter.takeWhile=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;iter.next=function(){var val=iterator.next();if(f.call(opt_obj,val,undefined,iterator))return val;throw goog.iter.StopIteration;};return iter};goog.iter.toArray=function(iterable){if(goog.isArrayLike(iterable))return goog.array.toArray(iterable);iterable=goog.iter.toIterator(iterable);var array=[];goog.iter.forEach(iterable,function(val){array.push(val)});return array};
goog.iter.equals=function(iterable1,iterable2,opt_equalsFn){var fillValue={};var pairs=goog.iter.zipLongest(fillValue,iterable1,iterable2);var equalsFn=opt_equalsFn||goog.array.defaultCompareEquality;return goog.iter.every(pairs,function(pair){return equalsFn(pair[0],pair[1])})};goog.iter.nextOrValue=function(iterable,defaultValue){try{return goog.iter.toIterator(iterable).next()}catch(e){if(e!=goog.iter.StopIteration)throw e;return defaultValue}};
goog.iter.product=function(var_args){var someArrayEmpty=goog.array.some(arguments,function(arr){return!arr.length});if(someArrayEmpty||!arguments.length)return new goog.iter.Iterator;var iter=new goog.iter.Iterator;var arrays=arguments;var indicies=goog.array.repeat(0,arrays.length);iter.next=function(){if(indicies){var retVal=goog.array.map(indicies,function(valueIndex,arrayIndex){return arrays[arrayIndex][valueIndex]});for(var i=indicies.length-1;i>=0;i--){goog.asserts.assert(indicies);if(indicies[i]<
arrays[i].length-1){indicies[i]++;break}if(i==0){indicies=null;break}indicies[i]=0}return retVal}throw goog.iter.StopIteration;};return iter};
goog.iter.cycle=function(iterable){var baseIterator=goog.iter.toIterator(iterable);var cache=[];var cacheIndex=0;var iter=new goog.iter.Iterator;var useCache=false;iter.next=function(){var returnElement=null;if(!useCache)try{returnElement=baseIterator.next();cache.push(returnElement);return returnElement}catch(e){if(e!=goog.iter.StopIteration||goog.array.isEmpty(cache))throw e;useCache=true}returnElement=cache[cacheIndex];cacheIndex=(cacheIndex+1)%cache.length;return returnElement};return iter};
goog.iter.count=function(opt_start,opt_step){var counter=opt_start||0;var step=goog.isDef(opt_step)?opt_step:1;var iter=new goog.iter.Iterator;iter.next=function(){var returnValue=counter;counter+=step;return returnValue};return iter};goog.iter.repeat=function(value){var iter=new goog.iter.Iterator;iter.next=goog.functions.constant(value);return iter};
goog.iter.accumulate=function(iterable){var iterator=goog.iter.toIterator(iterable);var total=0;var iter=new goog.iter.Iterator;iter.next=function(){total+=iterator.next();return total};return iter};goog.iter.zip=function(var_args){var args=arguments;var iter=new goog.iter.Iterator;if(args.length>0){var iterators=goog.array.map(args,goog.iter.toIterator);iter.next=function(){var arr=goog.array.map(iterators,function(it){return it.next()});return arr}}return iter};
goog.iter.zipLongest=function(fillValue,var_args){var args=goog.array.slice(arguments,1);var iter=new goog.iter.Iterator;if(args.length>0){var iterators=goog.array.map(args,goog.iter.toIterator);iter.next=function(){var iteratorsHaveValues=false;var arr=goog.array.map(iterators,function(it){var returnValue;try{returnValue=it.next();iteratorsHaveValues=true}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;returnValue=fillValue}return returnValue});if(!iteratorsHaveValues)throw goog.iter.StopIteration;
return arr}}return iter};goog.iter.compress=function(iterable,selectors){var selectorIterator=goog.iter.toIterator(selectors);return goog.iter.filter(iterable,function(){return!!selectorIterator.next()})};goog.iter.GroupByIterator_=function(iterable,opt_keyFunc){this.iterator=goog.iter.toIterator(iterable);this.keyFunc=opt_keyFunc||goog.functions.identity;this.targetKey;this.currentKey;this.currentValue};goog.inherits(goog.iter.GroupByIterator_,goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next=function(){while(this.currentKey==this.targetKey){this.currentValue=this.iterator.next();this.currentKey=this.keyFunc(this.currentValue)}this.targetKey=this.currentKey;return[this.currentKey,this.groupItems_(this.targetKey)]};
goog.iter.GroupByIterator_.prototype.groupItems_=function(targetKey){var arr=[];while(this.currentKey==targetKey){arr.push(this.currentValue);try{this.currentValue=this.iterator.next()}catch(ex){if(ex!==goog.iter.StopIteration)throw ex;break}this.currentKey=this.keyFunc(this.currentValue)}return arr};goog.iter.groupBy=function(iterable,opt_keyFunc){return new goog.iter.GroupByIterator_(iterable,opt_keyFunc)};
goog.iter.starMap=function(iterable,f,opt_obj){var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;iter.next=function(){var args=goog.iter.toArray(iterator.next());return f.apply(opt_obj,goog.array.concat(args,undefined,iterator))};return iter};
goog.iter.tee=function(iterable,opt_num){var iterator=goog.iter.toIterator(iterable);var num=goog.isNumber(opt_num)?opt_num:2;var buffers=goog.array.map(goog.array.range(num),function(){return[]});var addNextIteratorValueToBuffers=function(){var val=iterator.next();goog.array.forEach(buffers,function(buffer){buffer.push(val)})};var createIterator=function(buffer){var iter=new goog.iter.Iterator;iter.next=function(){if(goog.array.isEmpty(buffer))addNextIteratorValueToBuffers();goog.asserts.assert(!goog.array.isEmpty(buffer));
return buffer.shift()};return iter};return goog.array.map(buffers,createIterator)};goog.iter.enumerate=function(iterable,opt_start){return goog.iter.zip(goog.iter.count(opt_start),iterable)};goog.iter.limit=function(iterable,limitSize){goog.asserts.assert(goog.math.isInt(limitSize)&&limitSize>=0);var iterator=goog.iter.toIterator(iterable);var iter=new goog.iter.Iterator;var remaining=limitSize;iter.next=function(){if(remaining-- >0)return iterator.next();throw goog.iter.StopIteration;};return iter};
goog.iter.consume=function(iterable,count){goog.asserts.assert(goog.math.isInt(count)&&count>=0);var iterator=goog.iter.toIterator(iterable);while(count-- >0)goog.iter.nextOrValue(iterator,null);return iterator};goog.iter.slice=function(iterable,start,opt_end){goog.asserts.assert(goog.math.isInt(start)&&start>=0);var iterator=goog.iter.consume(iterable,start);if(goog.isNumber(opt_end)){goog.asserts.assert(goog.math.isInt(opt_end)&&opt_end>=start);iterator=goog.iter.limit(iterator,opt_end-start)}return iterator};
goog.iter.hasDuplicates_=function(arr){var deduped=[];goog.array.removeDuplicates(arr,deduped);return arr.length!=deduped.length};goog.iter.permutations=function(iterable,opt_length){var elements=goog.iter.toArray(iterable);var length=goog.isNumber(opt_length)?opt_length:elements.length;var sets=goog.array.repeat(elements,length);var product=goog.iter.product.apply(undefined,sets);return goog.iter.filter(product,function(arr){return!goog.iter.hasDuplicates_(arr)})};
goog.iter.combinations=function(iterable,length){var elements=goog.iter.toArray(iterable);var indexes=goog.iter.range(elements.length);var indexIterator=goog.iter.permutations(indexes,length);var sortedIndexIterator=goog.iter.filter(indexIterator,function(arr){return goog.array.isSorted(arr)});var iter=new goog.iter.Iterator;function getIndexFromElements(index){return elements[index]}iter.next=function(){return goog.array.map(sortedIndexIterator.next(),getIndexFromElements)};return iter};
goog.iter.combinationsWithReplacement=function(iterable,length){var elements=goog.iter.toArray(iterable);var indexes=goog.array.range(elements.length);var sets=goog.array.repeat(indexes,length);var indexIterator=goog.iter.product.apply(undefined,sets);var sortedIndexIterator=goog.iter.filter(indexIterator,function(arr){return goog.array.isSorted(arr)});var iter=new goog.iter.Iterator;function getIndexFromElements(index){return elements[index]}iter.next=function(){return goog.array.map(sortedIndexIterator.next(),
getIndexFromElements)};return iter};goog.provide("goog.structs.Map");goog.require("goog.iter.Iterator");goog.require("goog.iter.StopIteration");goog.require("goog.object");goog.structs.Map=function(opt_map,var_args){this.map_={};this.keys_=[];this.count_=0;this.version_=0;var argLength=arguments.length;if(argLength>1){if(argLength%2)throw new Error("Uneven number of arguments");for(var i=0;i<argLength;i+=2)this.set(arguments[i],arguments[i+1])}else if(opt_map)this.addAll(opt_map)};goog.structs.Map.prototype.getCount=function(){return this.count_};
goog.structs.Map.prototype.getValues=function(){this.cleanupKeysArray_();var rv=[];for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];rv.push(this.map_[key])}return rv};goog.structs.Map.prototype.getKeys=function(){this.cleanupKeysArray_();return this.keys_.concat()};goog.structs.Map.prototype.containsKey=function(key){return goog.structs.Map.hasKey_(this.map_,key)};
goog.structs.Map.prototype.containsValue=function(val){for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];if(goog.structs.Map.hasKey_(this.map_,key)&&this.map_[key]==val)return true}return false};
goog.structs.Map.prototype.equals=function(otherMap,opt_equalityFn){if(this===otherMap)return true;if(this.count_!=otherMap.getCount())return false;var equalityFn=opt_equalityFn||goog.structs.Map.defaultEquals;this.cleanupKeysArray_();for(var key,i=0;key=this.keys_[i];i++)if(!equalityFn(this.get(key),otherMap.get(key)))return false;return true};goog.structs.Map.defaultEquals=function(a,b){return a===b};goog.structs.Map.prototype.isEmpty=function(){return this.count_==0};
goog.structs.Map.prototype.clear=function(){this.map_={};this.keys_.length=0;this.count_=0;this.version_=0};goog.structs.Map.prototype.remove=function(key){if(goog.structs.Map.hasKey_(this.map_,key)){delete this.map_[key];this.count_--;this.version_++;if(this.keys_.length>2*this.count_)this.cleanupKeysArray_();return true}return false};
goog.structs.Map.prototype.cleanupKeysArray_=function(){if(this.count_!=this.keys_.length){var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(goog.structs.Map.hasKey_(this.map_,key))this.keys_[destIndex++]=key;srcIndex++}this.keys_.length=destIndex}if(this.count_!=this.keys_.length){var seen={};var srcIndex=0;var destIndex=0;while(srcIndex<this.keys_.length){var key=this.keys_[srcIndex];if(!goog.structs.Map.hasKey_(seen,key)){this.keys_[destIndex++]=key;
seen[key]=1}srcIndex++}this.keys_.length=destIndex}};goog.structs.Map.prototype.get=function(key,opt_val){if(goog.structs.Map.hasKey_(this.map_,key))return this.map_[key];return opt_val};goog.structs.Map.prototype.set=function(key,value){if(!goog.structs.Map.hasKey_(this.map_,key)){this.count_++;this.keys_.push(key);this.version_++}this.map_[key]=value};
goog.structs.Map.prototype.addAll=function(map){var keys,values;if(map instanceof goog.structs.Map){keys=map.getKeys();values=map.getValues()}else{keys=goog.object.getKeys(map);values=goog.object.getValues(map)}for(var i=0;i<keys.length;i++)this.set(keys[i],values[i])};goog.structs.Map.prototype.forEach=function(f,opt_obj){var keys=this.getKeys();for(var i=0;i<keys.length;i++){var key=keys[i];var value=this.get(key);f.call(opt_obj,value,key,this)}};goog.structs.Map.prototype.clone=function(){return new goog.structs.Map(this)};
goog.structs.Map.prototype.transpose=function(){var transposed=new goog.structs.Map;for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];var value=this.map_[key];transposed.set(value,key)}return transposed};goog.structs.Map.prototype.toObject=function(){this.cleanupKeysArray_();var obj={};for(var i=0;i<this.keys_.length;i++){var key=this.keys_[i];obj[key]=this.map_[key]}return obj};goog.structs.Map.prototype.getKeyIterator=function(){return this.__iterator__(true)};
goog.structs.Map.prototype.getValueIterator=function(){return this.__iterator__(false)};
goog.structs.Map.prototype.__iterator__=function(opt_keys){this.cleanupKeysArray_();var i=0;var version=this.version_;var selfObj=this;var newIter=new goog.iter.Iterator;newIter.next=function(){if(version!=selfObj.version_)throw new Error("The map has changed since the iterator was created");if(i>=selfObj.keys_.length)throw goog.iter.StopIteration;var key=selfObj.keys_[i++];return opt_keys?key:selfObj.map_[key]};return newIter};
goog.structs.Map.hasKey_=function(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)};goog.provide("goog.log");goog.provide("goog.log.Level");goog.provide("goog.log.LogRecord");goog.provide("goog.log.Logger");goog.require("goog.debug");goog.require("goog.debug.LogManager");goog.require("goog.debug.LogRecord");goog.require("goog.debug.Logger");goog.define("goog.log.ENABLED",goog.debug.LOGGING_ENABLED);goog.log.ROOT_LOGGER_NAME=goog.debug.Logger.ROOT_LOGGER_NAME;goog.log.Logger=goog.debug.Logger;goog.log.Level=goog.debug.Logger.Level;goog.log.LogRecord=goog.debug.LogRecord;
goog.log.getLogger=function(name,opt_level){if(goog.log.ENABLED){var logger=goog.debug.LogManager.getLogger(name);if(opt_level&&logger)logger.setLevel(opt_level);return logger}else return null};goog.log.addHandler=function(logger,handler){if(goog.log.ENABLED&&logger)logger.addHandler(handler)};goog.log.removeHandler=function(logger,handler){if(goog.log.ENABLED&&logger)return logger.removeHandler(handler);else return false};
goog.log.log=function(logger,level,msg,opt_exception){if(goog.log.ENABLED&&logger)logger.log(level,msg,opt_exception)};goog.log.error=function(logger,msg,opt_exception){if(goog.log.ENABLED&&logger)logger.severe(msg,opt_exception)};goog.log.warning=function(logger,msg,opt_exception){if(goog.log.ENABLED&&logger)logger.warning(msg,opt_exception)};goog.log.info=function(logger,msg,opt_exception){if(goog.log.ENABLED&&logger)logger.info(msg,opt_exception)};
goog.log.fine=function(logger,msg,opt_exception){if(goog.log.ENABLED&&logger)logger.fine(msg,opt_exception)};goog.provide("goog.crypt");goog.require("goog.array");goog.require("goog.asserts");goog.crypt.stringToByteArray=function(str){var output=[],p=0;for(var i=0;i<str.length;i++){var c=str.charCodeAt(i);if(c>255){output[p++]=c&255;c>>=8}output[p++]=c}return output};
goog.crypt.byteArrayToString=function(bytes){var CHUNK_SIZE=8192;if(bytes.length<=CHUNK_SIZE)return String.fromCharCode.apply(null,bytes);var str="";for(var i=0;i<bytes.length;i+=CHUNK_SIZE){var chunk=goog.array.slice(bytes,i,i+CHUNK_SIZE);str+=String.fromCharCode.apply(null,chunk)}return str};goog.crypt.byteArrayToHex=function(array){return goog.array.map(array,function(numByte){var hexByte=numByte.toString(16);return hexByte.length>1?hexByte:"0"+hexByte}).join("")};
goog.crypt.hexToByteArray=function(hexString){goog.asserts.assert(hexString.length%2==0,"Key string length must be multiple of 2");var arr=[];for(var i=0;i<hexString.length;i+=2)arr.push(parseInt(hexString.substring(i,i+2),16));return arr};
goog.crypt.stringToUtf8ByteArray=function(str){var out=[],p=0;for(var i=0;i<str.length;i++){var c=str.charCodeAt(i);if(c<128)out[p++]=c;else if(c<2048){out[p++]=c>>6|192;out[p++]=c&63|128}else if((c&64512)==55296&&i+1<str.length&&(str.charCodeAt(i+1)&64512)==56320){c=65536+((c&1023)<<10)+(str.charCodeAt(++i)&1023);out[p++]=c>>18|240;out[p++]=c>>12&63|128;out[p++]=c>>6&63|128;out[p++]=c&63|128}else{out[p++]=c>>12|224;out[p++]=c>>6&63|128;out[p++]=c&63|128}}return out};
goog.crypt.utf8ByteArrayToString=function(bytes){var out=[],pos=0,c=0;while(pos<bytes.length){var c1=bytes[pos++];if(c1<128)out[c++]=String.fromCharCode(c1);else if(c1>191&&c1<224){var c2=bytes[pos++];out[c++]=String.fromCharCode((c1&31)<<6|c2&63)}else if(c1>239&&c1<365){var c2=bytes[pos++];var c3=bytes[pos++];var c4=bytes[pos++];var u=((c1&7)<<18|(c2&63)<<12|(c3&63)<<6|c4&63)-65536;out[c++]=String.fromCharCode(55296+(u>>10));out[c++]=String.fromCharCode(56320+(u&1023))}else{var c2=bytes[pos++];var c3=
bytes[pos++];out[c++]=String.fromCharCode((c1&15)<<12|(c2&63)<<6|c3&63)}}return out.join("")};goog.crypt.xorByteArray=function(bytes1,bytes2){goog.asserts.assert(bytes1.length==bytes2.length,"XOR array lengths must match");var result=[];for(var i=0;i<bytes1.length;i++)result.push(bytes1[i]^bytes2[i]);return result};goog.provide("goog.userAgent.product");goog.require("goog.labs.userAgent.browser");goog.require("goog.labs.userAgent.platform");goog.require("goog.userAgent");goog.define("goog.userAgent.product.ASSUME_FIREFOX",false);goog.define("goog.userAgent.product.ASSUME_IPHONE",false);goog.define("goog.userAgent.product.ASSUME_IPAD",false);goog.define("goog.userAgent.product.ASSUME_ANDROID",false);goog.define("goog.userAgent.product.ASSUME_CHROME",false);goog.define("goog.userAgent.product.ASSUME_SAFARI",false);
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.provide("goog.crypt.base64");goog.require("goog.asserts");goog.require("goog.crypt");goog.require("goog.string");goog.require("goog.userAgent");goog.require("goog.userAgent.product");goog.crypt.base64.byteToCharMap_=null;goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.byteToCharMapWebSafe_=null;goog.crypt.base64.ENCODED_VALS_BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZ"+"abcdefghijklmnopqrstuvwxyz"+"0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+"+/=";
goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+"-_.";goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||typeof goog.global.btoa=="function";goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&typeof goog.global.atob=="function";
goog.crypt.base64.encodeByteArray=function(input,opt_webSafe){goog.asserts.assert(goog.isArrayLike(input),"encodeByteArray takes an array as a parameter");goog.crypt.base64.init_();var byteToCharMap=opt_webSafe?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_;var output=[];for(var i=0;i<input.length;i+=3){var byte1=input[i];var haveByte2=i+1<input.length;var byte2=haveByte2?input[i+1]:0;var haveByte3=i+2<input.length;var byte3=haveByte3?input[i+2]:0;var outByte1=byte1>>2;var outByte2=
(byte1&3)<<4|byte2>>4;var outByte3=(byte2&15)<<2|byte3>>6;var outByte4=byte3&63;if(!haveByte3){outByte4=64;if(!haveByte2)outByte3=64}output.push(byteToCharMap[outByte1],byteToCharMap[outByte2],byteToCharMap[outByte3],byteToCharMap[outByte4])}return output.join("")};goog.crypt.base64.encodeString=function(input,opt_webSafe){if(goog.crypt.base64.HAS_NATIVE_ENCODE_&&!opt_webSafe)return goog.global.btoa(input);return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input),opt_webSafe)};
goog.crypt.base64.decodeString=function(input,opt_webSafe){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!opt_webSafe)return goog.global.atob(input);var output="";function pushByte(b){output+=String.fromCharCode(b)}goog.crypt.base64.decodeStringInternal_(input,pushByte);return output};goog.crypt.base64.decodeStringToByteArray=function(input,opt_ignored){var output=[];function pushByte(b){output.push(b)}goog.crypt.base64.decodeStringInternal_(input,pushByte);return output};
goog.crypt.base64.decodeStringToUint8Array=function(input){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var output=new Uint8Array(Math.ceil(input.length*3/4));var outLen=0;function pushByte(b){output[outLen++]=b}goog.crypt.base64.decodeStringInternal_(input,pushByte);return output.subarray(0,outLen)};
goog.crypt.base64.decodeStringInternal_=function(input,pushByte){goog.crypt.base64.init_();var nextCharIndex=0;function getByte(default_val){while(nextCharIndex<input.length){var ch=input.charAt(nextCharIndex++);var b=goog.crypt.base64.charToByteMap_[ch];if(b!=null)return b;if(!goog.string.isEmptyOrWhitespace(ch))throw new Error("Unknown base64 encoding at char: "+ch);}return default_val}while(true){var byte1=getByte(-1);var byte2=getByte(0);var byte3=getByte(64);var byte4=getByte(64);if(byte4===
64)if(byte1===-1)return;var outByte1=byte1<<2|byte2>>4;pushByte(outByte1);if(byte3!=64){var outByte2=byte2<<4&240|byte3>>2;pushByte(outByte2);if(byte4!=64){var outByte3=byte3<<6&192|byte4;pushByte(outByte3)}}}};
goog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={};goog.crypt.base64.charToByteMap_={};goog.crypt.base64.byteToCharMapWebSafe_={};for(var i=0;i<goog.crypt.base64.ENCODED_VALS.length;i++){goog.crypt.base64.byteToCharMap_[i]=goog.crypt.base64.ENCODED_VALS.charAt(i);goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]]=i;goog.crypt.base64.byteToCharMapWebSafe_[i]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);if(i>=goog.crypt.base64.ENCODED_VALS_BASE.length)goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)]=
i}}};/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");goog.provide("goog.async.Deferred.AlreadyCalledError");goog.provide("goog.async.Deferred.CanceledError");goog.require("goog.Promise");goog.require("goog.Thenable");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.debug.Error");
goog.async.Deferred=function(opt_onCancelFunction,opt_defaultScope){this.sequence_=[];this.onCancelFunction_=opt_onCancelFunction;this.defaultScope_=opt_defaultScope||null;this.fired_=false;this.hadError_=false;this.result_=undefined;this.blocked_=false;this.blocking_=false;this.silentlyCanceled_=false;this.unhandledErrorId_=0;this.parent_=null;this.branches_=0;if(goog.async.Deferred.LONG_STACK_TRACES){this.constructorStack_=null;if(Error.captureStackTrace){var target={stack:""};Error.captureStackTrace(target,
goog.async.Deferred);if(typeof target.stack=="string")this.constructorStack_=target.stack.replace(/^[^\n]*\n/,"")}}};goog.define("goog.async.Deferred.STRICT_ERRORS",false);goog.define("goog.async.Deferred.LONG_STACK_TRACES",false);
goog.async.Deferred.prototype.cancel=function(opt_deepCancel){if(!this.hasFired()){if(this.parent_){var parent=this.parent_;delete this.parent_;if(opt_deepCancel)parent.cancel(opt_deepCancel);else parent.branchCancel_()}if(this.onCancelFunction_)this.onCancelFunction_.call(this.defaultScope_,this);else this.silentlyCanceled_=true;if(!this.hasFired())this.errback(new goog.async.Deferred.CanceledError(this))}else if(this.result_ instanceof goog.async.Deferred)this.result_.cancel()};
goog.async.Deferred.prototype.branchCancel_=function(){this.branches_--;if(this.branches_<=0)this.cancel()};goog.async.Deferred.prototype.continue_=function(isSuccess,res){this.blocked_=false;this.updateResult_(isSuccess,res)};goog.async.Deferred.prototype.updateResult_=function(isSuccess,res){this.fired_=true;this.result_=res;this.hadError_=!isSuccess;this.fire_()};
goog.async.Deferred.prototype.check_=function(){if(this.hasFired()){if(!this.silentlyCanceled_)throw new goog.async.Deferred.AlreadyCalledError(this);this.silentlyCanceled_=false}};goog.async.Deferred.prototype.callback=function(opt_result){this.check_();this.assertNotDeferred_(opt_result);this.updateResult_(true,opt_result)};goog.async.Deferred.prototype.errback=function(opt_result){this.check_();this.assertNotDeferred_(opt_result);this.makeStackTraceLong_(opt_result);this.updateResult_(false,opt_result)};
goog.async.Deferred.prototype.makeStackTraceLong_=function(error){if(!goog.async.Deferred.LONG_STACK_TRACES)return;if(this.constructorStack_&&goog.isObject(error)&&error.stack&&/^[^\n]+(\n   [^\n]+)+/.test(error.stack))error.stack=error.stack+"\nDEFERRED OPERATION:\n"+this.constructorStack_};goog.async.Deferred.prototype.assertNotDeferred_=function(obj){goog.asserts.assert(!(obj instanceof goog.async.Deferred),"An execution sequence may not be initiated with a blocking Deferred.")};
goog.async.Deferred.prototype.addCallback=function(cb,opt_scope){return this.addCallbacks(cb,null,opt_scope)};goog.async.Deferred.prototype.addErrback=function(eb,opt_scope){return this.addCallbacks(null,eb,opt_scope)};goog.async.Deferred.prototype.addBoth=function(f,opt_scope){return this.addCallbacks(f,f,opt_scope)};goog.async.Deferred.prototype.addFinally=function(f,opt_scope){return this.addCallbacks(f,function(err){var result=f.call(this,err);if(!goog.isDef(result))throw err;return result},opt_scope)};
goog.async.Deferred.prototype.addCallbacks=function(cb,eb,opt_scope){goog.asserts.assert(!this.blocking_,"Blocking Deferreds can not be re-used");this.sequence_.push([cb,eb,opt_scope]);if(this.hasFired())this.fire_();return this};
goog.async.Deferred.prototype.then=function(opt_onFulfilled,opt_onRejected,opt_context){var resolve,reject;var promise=new goog.Promise(function(res,rej){resolve=res;reject=rej});this.addCallbacks(resolve,function(reason){if(reason instanceof goog.async.Deferred.CanceledError)promise.cancel();else reject(reason)});return promise.then(opt_onFulfilled,opt_onRejected,opt_context)};goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred=function(otherDeferred){this.addCallbacks(otherDeferred.callback,otherDeferred.errback,otherDeferred);return this};goog.async.Deferred.prototype.awaitDeferred=function(otherDeferred){if(!(otherDeferred instanceof goog.async.Deferred))return this.addCallback(function(){return otherDeferred});return this.addCallback(goog.bind(otherDeferred.branch,otherDeferred))};
goog.async.Deferred.prototype.branch=function(opt_propagateCancel){var d=new goog.async.Deferred;this.chainDeferred(d);if(opt_propagateCancel){d.parent_=this;this.branches_++}return d};goog.async.Deferred.prototype.hasFired=function(){return this.fired_};goog.async.Deferred.prototype.isError=function(res){return res instanceof Error};goog.async.Deferred.prototype.hasErrback_=function(){return goog.array.some(this.sequence_,function(sequenceRow){return goog.isFunction(sequenceRow[1])})};
goog.async.Deferred.prototype.fire_=function(){if(this.unhandledErrorId_&&this.hasFired()&&this.hasErrback_()){goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);this.unhandledErrorId_=0}if(this.parent_){this.parent_.branches_--;delete this.parent_}var res=this.result_;var unhandledException=false;var isNewlyBlocked=false;while(this.sequence_.length&&!this.blocked_){var sequenceEntry=this.sequence_.shift();var callback=sequenceEntry[0];var errback=sequenceEntry[1];var scope=sequenceEntry[2];
var f=this.hadError_?errback:callback;if(f)try{var ret=f.call(scope||this.defaultScope_,res);if(goog.isDef(ret)){this.hadError_=this.hadError_&&(ret==res||this.isError(ret));this.result_=res=ret}if(goog.Thenable.isImplementedBy(res)||typeof goog.global["Promise"]==="function"&&res instanceof goog.global["Promise"]){isNewlyBlocked=true;this.blocked_=true}}catch(ex){res=ex;this.hadError_=true;this.makeStackTraceLong_(res);if(!this.hasErrback_())unhandledException=true}}this.result_=res;if(isNewlyBlocked){var onCallback=
goog.bind(this.continue_,this,true);var onErrback=goog.bind(this.continue_,this,false);if(res instanceof goog.async.Deferred){res.addCallbacks(onCallback,onErrback);res.blocking_=true}else res.then(onCallback,onErrback)}else if(goog.async.Deferred.STRICT_ERRORS&&this.isError(res)&&!(res instanceof goog.async.Deferred.CanceledError)){this.hadError_=true;unhandledException=true}if(unhandledException)this.unhandledErrorId_=goog.async.Deferred.scheduleError_(res)};
goog.async.Deferred.succeed=function(opt_result){var d=new goog.async.Deferred;d.callback(opt_result);return d};goog.async.Deferred.fromPromise=function(promise){var d=new goog.async.Deferred;d.callback();d.addCallback(function(){return promise});return d};goog.async.Deferred.fail=function(res){var d=new goog.async.Deferred;d.errback(res);return d};goog.async.Deferred.canceled=function(){var d=new goog.async.Deferred;d.cancel();return d};
goog.async.Deferred.when=function(value,callback,opt_scope){if(value instanceof goog.async.Deferred)return value.branch(true).addCallback(callback,opt_scope);else return goog.async.Deferred.succeed(value).addCallback(callback,opt_scope)};goog.async.Deferred.AlreadyCalledError=function(deferred){goog.debug.Error.call(this);this.deferred=deferred};goog.inherits(goog.async.Deferred.AlreadyCalledError,goog.debug.Error);goog.async.Deferred.AlreadyCalledError.prototype.message="Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name="AlreadyCalledError";goog.async.Deferred.CanceledError=function(deferred){goog.debug.Error.call(this);this.deferred=deferred};goog.inherits(goog.async.Deferred.CanceledError,goog.debug.Error);goog.async.Deferred.CanceledError.prototype.message="Deferred was canceled";goog.async.Deferred.CanceledError.prototype.name="CanceledError";
goog.async.Deferred.Error_=function(error){this.id_=goog.global.setTimeout(goog.bind(this.throwError,this),0);this.error_=error};goog.async.Deferred.Error_.prototype.throwError=function(){goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_],"Cannot throw an error that is not scheduled.");delete goog.async.Deferred.errorMap_[this.id_];throw this.error_;};goog.async.Deferred.Error_.prototype.resetTimer=function(){goog.global.clearTimeout(this.id_)};goog.async.Deferred.errorMap_={};
goog.async.Deferred.scheduleError_=function(error){var deferredError=new goog.async.Deferred.Error_(error);goog.async.Deferred.errorMap_[deferredError.id_]=deferredError;return deferredError.id_};goog.async.Deferred.unscheduleError_=function(id){var error=goog.async.Deferred.errorMap_[id];if(error){error.resetTimer();delete goog.async.Deferred.errorMap_[id]}};
goog.async.Deferred.assertNoErrors=function(){var map=goog.async.Deferred.errorMap_;for(var key in map){var error=map[key];error.resetTimer();error.throwError()}};goog.provide("goog.crypt.Hash");goog.crypt.Hash=function(){this.blockSize=-1};goog.crypt.Hash.prototype.reset=goog.abstractMethod;goog.crypt.Hash.prototype.update=goog.abstractMethod;goog.crypt.Hash.prototype.digest=goog.abstractMethod;goog.provide("goog.crypt.Sha2");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.crypt.Hash");
goog.crypt.Sha2=function(numHashBlocks,initHashBlocks){goog.crypt.Sha2.base(this,"constructor");this.blockSize=goog.crypt.Sha2.BLOCKSIZE_;this.chunk_=goog.global["Uint8Array"]?new Uint8Array(this.blockSize):new Array(this.blockSize);this.inChunk_=0;this.total_=0;this.hash_=[];this.numHashBlocks_=numHashBlocks;this.initHashBlocks_=initHashBlocks;this.w_=goog.global["Int32Array"]?new Int32Array(64):new Array(64);if(!goog.isDef(goog.crypt.Sha2.Kx_))if(goog.global["Int32Array"])goog.crypt.Sha2.Kx_=new Int32Array(goog.crypt.Sha2.K_);
else goog.crypt.Sha2.Kx_=goog.crypt.Sha2.K_;this.reset()};goog.inherits(goog.crypt.Sha2,goog.crypt.Hash);goog.crypt.Sha2.BLOCKSIZE_=512/8;goog.crypt.Sha2.PADDING_=goog.array.concat(128,goog.array.repeat(0,goog.crypt.Sha2.BLOCKSIZE_-1));goog.crypt.Sha2.prototype.reset=function(){this.inChunk_=0;this.total_=0;this.hash_=goog.global["Int32Array"]?new Int32Array(this.initHashBlocks_):goog.array.clone(this.initHashBlocks_)};
goog.crypt.Sha2.prototype.computeChunk_=function(){var chunk=this.chunk_;goog.asserts.assert(chunk.length==this.blockSize);var rounds=64;var w=this.w_;var index=0;var offset=0;while(offset<chunk.length){w[index++]=chunk[offset]<<24|chunk[offset+1]<<16|chunk[offset+2]<<8|chunk[offset+3];offset=index*4}for(var i=16;i<rounds;i++){var w_15=w[i-15]|0;var s0=(w_15>>>7|w_15<<25)^(w_15>>>18|w_15<<14)^w_15>>>3;var w_2=w[i-2]|0;var s1=(w_2>>>17|w_2<<15)^(w_2>>>19|w_2<<13)^w_2>>>10;var partialSum1=(w[i-16]|
0)+s0|0;var partialSum2=(w[i-7]|0)+s1|0;w[i]=partialSum1+partialSum2|0}var a=this.hash_[0]|0;var b=this.hash_[1]|0;var c=this.hash_[2]|0;var d=this.hash_[3]|0;var e=this.hash_[4]|0;var f=this.hash_[5]|0;var g=this.hash_[6]|0;var h=this.hash_[7]|0;for(var i=0;i<rounds;i++){var S0=(a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10);var maj=a&b^a&c^b&c;var t2=S0+maj|0;var S1=(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7);var ch=e&f^~e&g;var partialSum1=h+S1|0;var partialSum2=ch+(goog.crypt.Sha2.Kx_[i]|0)|0;var partialSum3=
partialSum2+(w[i]|0)|0;var t1=partialSum1+partialSum3|0;h=g;g=f;f=e;e=d+t1|0;d=c;c=b;b=a;a=t1+t2|0}this.hash_[0]=this.hash_[0]+a|0;this.hash_[1]=this.hash_[1]+b|0;this.hash_[2]=this.hash_[2]+c|0;this.hash_[3]=this.hash_[3]+d|0;this.hash_[4]=this.hash_[4]+e|0;this.hash_[5]=this.hash_[5]+f|0;this.hash_[6]=this.hash_[6]+g|0;this.hash_[7]=this.hash_[7]+h|0};
goog.crypt.Sha2.prototype.update=function(message,opt_length){if(!goog.isDef(opt_length))opt_length=message.length;var n=0;var inChunk=this.inChunk_;if(goog.isString(message))while(n<opt_length){this.chunk_[inChunk++]=message.charCodeAt(n++);if(inChunk==this.blockSize){this.computeChunk_();inChunk=0}}else if(goog.isArrayLike(message))while(n<opt_length){var b=message[n++];if(!("number"==typeof b&&0<=b&&255>=b&&b==(b|0)))throw new Error("message must be a byte array");this.chunk_[inChunk++]=b;if(inChunk==
this.blockSize){this.computeChunk_();inChunk=0}}else throw new Error("message must be string or array");this.inChunk_=inChunk;this.total_+=opt_length};
goog.crypt.Sha2.prototype.digest=function(){var digest=[];var totalBits=this.total_*8;if(this.inChunk_<56)this.update(goog.crypt.Sha2.PADDING_,56-this.inChunk_);else this.update(goog.crypt.Sha2.PADDING_,this.blockSize-(this.inChunk_-56));for(var i=63;i>=56;i--){this.chunk_[i]=totalBits&255;totalBits/=256}this.computeChunk_();var n=0;for(var i=0;i<this.numHashBlocks_;i++)for(var j=24;j>=0;j-=8)digest[n++]=this.hash_[i]>>j&255;return digest};
goog.crypt.Sha2.K_=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,
3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];goog.crypt.Sha2.Kx_;goog.provide("goog.crypt.Sha256");goog.require("goog.crypt.Sha2");goog.crypt.Sha256=function(){goog.crypt.Sha256.base(this,"constructor",8,goog.crypt.Sha256.INIT_HASH_BLOCK_)};goog.inherits(goog.crypt.Sha256,goog.crypt.Sha2);goog.crypt.Sha256.INIT_HASH_BLOCK_=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];goog.provide("goog.structs");goog.require("goog.array");goog.require("goog.object");goog.structs.getCount=function(col){if(col.getCount&&typeof col.getCount=="function")return col.getCount();if(goog.isArrayLike(col)||goog.isString(col))return col.length;return goog.object.getCount(col)};
goog.structs.getValues=function(col){if(col.getValues&&typeof col.getValues=="function")return col.getValues();if(goog.isString(col))return col.split("");if(goog.isArrayLike(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(col[i]);return rv}return goog.object.getValues(col)};
goog.structs.getKeys=function(col){if(col.getKeys&&typeof col.getKeys=="function")return col.getKeys();if(col.getValues&&typeof col.getValues=="function")return undefined;if(goog.isArrayLike(col)||goog.isString(col)){var rv=[];var l=col.length;for(var i=0;i<l;i++)rv.push(i);return rv}return goog.object.getKeys(col)};
goog.structs.contains=function(col,val){if(col.contains&&typeof col.contains=="function")return col.contains(val);if(col.containsValue&&typeof col.containsValue=="function")return col.containsValue(val);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.contains(col,val);return goog.object.containsValue(col,val)};
goog.structs.isEmpty=function(col){if(col.isEmpty&&typeof col.isEmpty=="function")return col.isEmpty();if(goog.isArrayLike(col)||goog.isString(col))return goog.array.isEmpty(col);return goog.object.isEmpty(col)};goog.structs.clear=function(col){if(col.clear&&typeof col.clear=="function")col.clear();else if(goog.isArrayLike(col))goog.array.clear(col);else goog.object.clear(col)};
goog.structs.forEach=function(col,f,opt_obj){if(col.forEach&&typeof col.forEach=="function")col.forEach(f,opt_obj);else if(goog.isArrayLike(col)||goog.isString(col))goog.array.forEach(col,f,opt_obj);else{var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)f.call(opt_obj,values[i],keys&&keys[i],col)}};
goog.structs.filter=function(col,f,opt_obj){if(typeof col.filter=="function")return col.filter(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.filter(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys[i],col))rv[keys[i]]=values[i]}else{rv=[];for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],undefined,col))rv.push(values[i])}return rv};
goog.structs.map=function(col,f,opt_obj){if(typeof col.map=="function")return col.map(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.map(col,f,opt_obj);var rv;var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;if(keys){rv={};for(var i=0;i<l;i++)rv[keys[i]]=f.call(opt_obj,values[i],keys[i],col)}else{rv=[];for(var i=0;i<l;i++)rv[i]=f.call(opt_obj,values[i],undefined,col)}return rv};
goog.structs.some=function(col,f,opt_obj){if(typeof col.some=="function")return col.some(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.some(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(f.call(opt_obj,values[i],keys&&keys[i],col))return true;return false};
goog.structs.every=function(col,f,opt_obj){if(typeof col.every=="function")return col.every(f,opt_obj);if(goog.isArrayLike(col)||goog.isString(col))return goog.array.every(col,f,opt_obj);var keys=goog.structs.getKeys(col);var values=goog.structs.getValues(col);var l=values.length;for(var i=0;i<l;i++)if(!f.call(opt_obj,values[i],keys&&keys[i],col))return false;return true};goog.provide("goog.uri.utils");goog.provide("goog.uri.utils.ComponentIndex");goog.provide("goog.uri.utils.QueryArray");goog.provide("goog.uri.utils.QueryValue");goog.provide("goog.uri.utils.StandardQueryParam");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.string");goog.uri.utils.CharCode_={AMPERSAND:38,EQUAL:61,HASH:35,QUESTION:63};
goog.uri.utils.buildFromEncodedParts=function(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out="";if(opt_scheme)out+=opt_scheme+":";if(opt_domain){out+="//";if(opt_userInfo)out+=opt_userInfo+"@";out+=opt_domain;if(opt_port)out+=":"+opt_port}if(opt_path)out+=opt_path;if(opt_queryData)out+="?"+opt_queryData;if(opt_fragment)out+="#"+opt_fragment;return out};
goog.uri.utils.splitRe_=new RegExp("^"+"(?:"+"([^:/?#.]+)"+":)?"+"(?://"+"(?:([^/?#]*)@)?"+"([^/#?]*?)"+"(?::([0-9]+))?"+"(?=[/#?]|$)"+")?"+"([^?#]+)?"+"(?:\\?([^#]*))?"+"(?:#([\\s\\S]*))?"+"$");goog.uri.utils.ComponentIndex={SCHEME:1,USER_INFO:2,DOMAIN:3,PORT:4,PATH:5,QUERY_DATA:6,FRAGMENT:7};goog.uri.utils.split=function(uri){return uri.match(goog.uri.utils.splitRe_)};
goog.uri.utils.decodeIfPossible_=function(uri,opt_preserveReserved){if(!uri)return uri;return opt_preserveReserved?decodeURI(uri):decodeURIComponent(uri)};goog.uri.utils.getComponentByIndex_=function(componentIndex,uri){return goog.uri.utils.split(uri)[componentIndex]||null};goog.uri.utils.getScheme=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME,uri)};
goog.uri.utils.getEffectiveScheme=function(uri){var scheme=goog.uri.utils.getScheme(uri);if(!scheme&&goog.global.self&&goog.global.self.location){var protocol=goog.global.self.location.protocol;scheme=protocol.substr(0,protocol.length-1)}return scheme?scheme.toLowerCase():""};goog.uri.utils.getUserInfoEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO,uri)};goog.uri.utils.getUserInfo=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))};
goog.uri.utils.getDomainEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN,uri)};goog.uri.utils.getDomain=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri),true)};goog.uri.utils.getPort=function(uri){return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT,uri))||null};
goog.uri.utils.getPathEncoded=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH,uri)};goog.uri.utils.getPath=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri),true)};goog.uri.utils.getQueryData=function(uri){return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA,uri)};
goog.uri.utils.getFragmentEncoded=function(uri){var hashIndex=uri.indexOf("#");return hashIndex<0?null:uri.substr(hashIndex+1)};goog.uri.utils.setFragmentEncoded=function(uri,fragment){return goog.uri.utils.removeFragment(uri)+(fragment?"#"+fragment:"")};goog.uri.utils.getFragment=function(uri){return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))};
goog.uri.utils.getHost=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME],pieces[goog.uri.utils.ComponentIndex.USER_INFO],pieces[goog.uri.utils.ComponentIndex.DOMAIN],pieces[goog.uri.utils.ComponentIndex.PORT])};
goog.uri.utils.getOrigin=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME],null,pieces[goog.uri.utils.ComponentIndex.DOMAIN],pieces[goog.uri.utils.ComponentIndex.PORT])};goog.uri.utils.getPathAndAfter=function(uri){var pieces=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(null,null,null,null,pieces[goog.uri.utils.ComponentIndex.PATH],pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],pieces[goog.uri.utils.ComponentIndex.FRAGMENT])};
goog.uri.utils.removeFragment=function(uri){var hashIndex=uri.indexOf("#");return hashIndex<0?uri:uri.substr(0,hashIndex)};goog.uri.utils.haveSameDomain=function(uri1,uri2){var pieces1=goog.uri.utils.split(uri1);var pieces2=goog.uri.utils.split(uri2);return pieces1[goog.uri.utils.ComponentIndex.DOMAIN]==pieces2[goog.uri.utils.ComponentIndex.DOMAIN]&&pieces1[goog.uri.utils.ComponentIndex.SCHEME]==pieces2[goog.uri.utils.ComponentIndex.SCHEME]&&pieces1[goog.uri.utils.ComponentIndex.PORT]==pieces2[goog.uri.utils.ComponentIndex.PORT]};
goog.uri.utils.assertNoFragmentsOrQueries_=function(uri){goog.asserts.assert(uri.indexOf("#")<0&&uri.indexOf("?")<0,"goog.uri.utils: Fragment or query identifiers are not supported: [%s]",uri)};goog.uri.utils.QueryValue;goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData=function(encodedQuery,callback){if(!encodedQuery)return;var pairs=encodedQuery.split("&");for(var i=0;i<pairs.length;i++){var indexOfEquals=pairs[i].indexOf("=");var name=null;var value=null;if(indexOfEquals>=0){name=pairs[i].substring(0,indexOfEquals);value=pairs[i].substring(indexOfEquals+1)}else name=pairs[i];callback(name,value?goog.string.urlDecode(value):"")}};
goog.uri.utils.splitQueryData_=function(uri){var hashIndex=uri.indexOf("#");if(hashIndex<0)hashIndex=uri.length;var questionIndex=uri.indexOf("?");var queryData;if(questionIndex<0||questionIndex>hashIndex){questionIndex=hashIndex;queryData=""}else queryData=uri.substring(questionIndex+1,hashIndex);return[uri.substr(0,questionIndex),queryData,uri.substr(hashIndex)]};goog.uri.utils.joinQueryData_=function(parts){return parts[0]+(parts[1]?"?"+parts[1]:"")+parts[2]};
goog.uri.utils.appendQueryData_=function(queryData,newData){if(!newData)return queryData;return queryData?queryData+"&"+newData:newData};goog.uri.utils.appendQueryDataToUri_=function(uri,queryData){if(!queryData)return uri;var parts=goog.uri.utils.splitQueryData_(uri);parts[1]=goog.uri.utils.appendQueryData_(parts[1],queryData);return goog.uri.utils.joinQueryData_(parts)};
goog.uri.utils.appendKeyValuePairs_=function(key,value,pairs){goog.asserts.assertString(key);if(goog.isArray(value)){goog.asserts.assertArray(value);for(var j=0;j<value.length;j++)goog.uri.utils.appendKeyValuePairs_(key,String(value[j]),pairs)}else if(value!=null)pairs.push(key+(value===""?"":"="+goog.string.urlEncode(value)))};
goog.uri.utils.buildQueryData=function(keysAndValues,opt_startIndex){goog.asserts.assert(Math.max(keysAndValues.length-(opt_startIndex||0),0)%2==0,"goog.uri.utils: Key/value lists must be even in length.");var params=[];for(var i=opt_startIndex||0;i<keysAndValues.length;i+=2){var key=keysAndValues[i];goog.uri.utils.appendKeyValuePairs_(key,keysAndValues[i+1],params)}return params.join("&")};
goog.uri.utils.buildQueryDataFromMap=function(map){var params=[];for(var key in map)goog.uri.utils.appendKeyValuePairs_(key,map[key],params);return params.join("&")};goog.uri.utils.appendParams=function(uri,var_args){var queryData=arguments.length==2?goog.uri.utils.buildQueryData(arguments[1],0):goog.uri.utils.buildQueryData(arguments,1);return goog.uri.utils.appendQueryDataToUri_(uri,queryData)};
goog.uri.utils.appendParamsFromMap=function(uri,map){var queryData=goog.uri.utils.buildQueryDataFromMap(map);return goog.uri.utils.appendQueryDataToUri_(uri,queryData)};goog.uri.utils.appendParam=function(uri,key,opt_value){var value=goog.isDefAndNotNull(opt_value)?"="+goog.string.urlEncode(opt_value):"";return goog.uri.utils.appendQueryDataToUri_(uri,key+value)};
goog.uri.utils.findParam_=function(uri,startIndex,keyEncoded,hashOrEndIndex){var index=startIndex;var keyLength=keyEncoded.length;while((index=uri.indexOf(keyEncoded,index))>=0&&index<hashOrEndIndex){var precedingChar=uri.charCodeAt(index-1);if(precedingChar==goog.uri.utils.CharCode_.AMPERSAND||precedingChar==goog.uri.utils.CharCode_.QUESTION){var followingChar=uri.charCodeAt(index+keyLength);if(!followingChar||followingChar==goog.uri.utils.CharCode_.EQUAL||followingChar==goog.uri.utils.CharCode_.AMPERSAND||
followingChar==goog.uri.utils.CharCode_.HASH)return index}index+=keyLength+1}return-1};goog.uri.utils.hashOrEndRe_=/#|$/;goog.uri.utils.hasParam=function(uri,keyEncoded){return goog.uri.utils.findParam_(uri,0,keyEncoded,uri.search(goog.uri.utils.hashOrEndRe_))>=0};
goog.uri.utils.getParamValue=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var foundIndex=goog.uri.utils.findParam_(uri,0,keyEncoded,hashOrEndIndex);if(foundIndex<0)return null;else{var endPosition=uri.indexOf("&",foundIndex);if(endPosition<0||endPosition>hashOrEndIndex)endPosition=hashOrEndIndex;foundIndex+=keyEncoded.length+1;return goog.string.urlDecode(uri.substr(foundIndex,endPosition-foundIndex))}};
goog.uri.utils.getParamValues=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var position=0;var foundIndex;var result=[];while((foundIndex=goog.uri.utils.findParam_(uri,position,keyEncoded,hashOrEndIndex))>=0){position=uri.indexOf("&",foundIndex);if(position<0||position>hashOrEndIndex)position=hashOrEndIndex;foundIndex+=keyEncoded.length+1;result.push(goog.string.urlDecode(uri.substr(foundIndex,position-foundIndex)))}return result};
goog.uri.utils.trailingQueryPunctuationRe_=/[?&]($|#)/;
goog.uri.utils.removeParam=function(uri,keyEncoded){var hashOrEndIndex=uri.search(goog.uri.utils.hashOrEndRe_);var position=0;var foundIndex;var buffer=[];while((foundIndex=goog.uri.utils.findParam_(uri,position,keyEncoded,hashOrEndIndex))>=0){buffer.push(uri.substring(position,foundIndex));position=Math.min(uri.indexOf("&",foundIndex)+1||hashOrEndIndex,hashOrEndIndex)}buffer.push(uri.substr(position));return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_,"$1")};
goog.uri.utils.setParam=function(uri,keyEncoded,value){return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri,keyEncoded),keyEncoded,value)};
goog.uri.utils.setParamsFromMap=function(uri,params){var parts=goog.uri.utils.splitQueryData_(uri);var queryData=parts[1];var buffer=[];if(queryData)goog.array.forEach(queryData.split("&"),function(pair){var indexOfEquals=pair.indexOf("=");var name=indexOfEquals>=0?pair.substr(0,indexOfEquals):pair;if(!params.hasOwnProperty(name))buffer.push(pair)});parts[1]=goog.uri.utils.appendQueryData_(buffer.join("&"),goog.uri.utils.buildQueryDataFromMap(params));return goog.uri.utils.joinQueryData_(parts)};
goog.uri.utils.appendPath=function(baseUri,path){goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);if(goog.string.endsWith(baseUri,"/"))baseUri=baseUri.substr(0,baseUri.length-1);if(goog.string.startsWith(path,"/"))path=path.substr(1);return goog.string.buildString(baseUri,"/",path)};
goog.uri.utils.setPath=function(uri,path){if(!goog.string.startsWith(path,"/"))path="/"+path;var parts=goog.uri.utils.split(uri);return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME],parts[goog.uri.utils.ComponentIndex.USER_INFO],parts[goog.uri.utils.ComponentIndex.DOMAIN],parts[goog.uri.utils.ComponentIndex.PORT],path,parts[goog.uri.utils.ComponentIndex.QUERY_DATA],parts[goog.uri.utils.ComponentIndex.FRAGMENT])};goog.uri.utils.StandardQueryParam={RANDOM:"zx"};
goog.uri.utils.makeUnique=function(uri){return goog.uri.utils.setParam(uri,goog.uri.utils.StandardQueryParam.RANDOM,goog.string.getRandomString())};goog.provide("goog.Uri");goog.provide("goog.Uri.QueryData");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.string");goog.require("goog.structs");goog.require("goog.structs.Map");goog.require("goog.uri.utils");goog.require("goog.uri.utils.ComponentIndex");goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri=function(opt_uri,opt_ignoreCase){this.scheme_="";this.userInfo_="";this.domain_="";this.port_=null;this.path_="";this.fragment_="";this.isReadOnly_=false;this.ignoreCase_=false;this.queryData_;var m;if(opt_uri instanceof goog.Uri){this.ignoreCase_=goog.isDef(opt_ignoreCase)?opt_ignoreCase:opt_uri.getIgnoreCase();this.setScheme(opt_uri.getScheme());this.setUserInfo(opt_uri.getUserInfo());this.setDomain(opt_uri.getDomain());this.setPort(opt_uri.getPort());this.setPath(opt_uri.getPath());this.setQueryData(opt_uri.getQueryData().clone());
this.setFragment(opt_uri.getFragment())}else if(opt_uri&&(m=goog.uri.utils.split(String(opt_uri)))){this.ignoreCase_=!!opt_ignoreCase;this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME]||"",true);this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO]||"",true);this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN]||"",true);this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);this.setPath(m[goog.uri.utils.ComponentIndex.PATH]||"",true);this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA]||
"",true);this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT]||"",true)}else{this.ignoreCase_=!!opt_ignoreCase;this.queryData_=new goog.Uri.QueryData(null,null,this.ignoreCase_)}};goog.Uri.preserveParameterTypesCompatibilityFlag=false;goog.Uri.RANDOM_PARAM=goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString=function(){var out=[];var scheme=this.getScheme();if(scheme)out.push(goog.Uri.encodeSpecialChars_(scheme,goog.Uri.reDisallowedInSchemeOrUserInfo_,true),":");var domain=this.getDomain();if(domain||scheme=="file"){out.push("//");var userInfo=this.getUserInfo();if(userInfo)out.push(goog.Uri.encodeSpecialChars_(userInfo,goog.Uri.reDisallowedInSchemeOrUserInfo_,true),"@");out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));var port=this.getPort();if(port!=
null)out.push(":",String(port))}var path=this.getPath();if(path){if(this.hasDomain()&&path.charAt(0)!="/")out.push("/");out.push(goog.Uri.encodeSpecialChars_(path,path.charAt(0)=="/"?goog.Uri.reDisallowedInAbsolutePath_:goog.Uri.reDisallowedInRelativePath_,true))}var query=this.getEncodedQuery();if(query)out.push("?",query);var fragment=this.getFragment();if(fragment)out.push("#",goog.Uri.encodeSpecialChars_(fragment,goog.Uri.reDisallowedInFragment_));return out.join("")};
goog.Uri.prototype.resolve=function(relativeUri){var absoluteUri=this.clone();var overridden=relativeUri.hasScheme();if(overridden)absoluteUri.setScheme(relativeUri.getScheme());else overridden=relativeUri.hasUserInfo();if(overridden)absoluteUri.setUserInfo(relativeUri.getUserInfo());else overridden=relativeUri.hasDomain();if(overridden)absoluteUri.setDomain(relativeUri.getDomain());else overridden=relativeUri.hasPort();var path=relativeUri.getPath();if(overridden)absoluteUri.setPort(relativeUri.getPort());
else{overridden=relativeUri.hasPath();if(overridden){if(path.charAt(0)!="/")if(this.hasDomain()&&!this.hasPath())path="/"+path;else{var lastSlashIndex=absoluteUri.getPath().lastIndexOf("/");if(lastSlashIndex!=-1)path=absoluteUri.getPath().substr(0,lastSlashIndex+1)+path}path=goog.Uri.removeDotSegments(path)}}if(overridden)absoluteUri.setPath(path);else overridden=relativeUri.hasQuery();if(overridden)absoluteUri.setQueryData(relativeUri.getQueryData().clone());else overridden=relativeUri.hasFragment();
if(overridden)absoluteUri.setFragment(relativeUri.getFragment());return absoluteUri};goog.Uri.prototype.clone=function(){return new goog.Uri(this)};goog.Uri.prototype.getScheme=function(){return this.scheme_};goog.Uri.prototype.setScheme=function(newScheme,opt_decode){this.enforceReadOnly();this.scheme_=opt_decode?goog.Uri.decodeOrEmpty_(newScheme,true):newScheme;if(this.scheme_)this.scheme_=this.scheme_.replace(/:$/,"");return this};goog.Uri.prototype.hasScheme=function(){return!!this.scheme_};
goog.Uri.prototype.getUserInfo=function(){return this.userInfo_};goog.Uri.prototype.setUserInfo=function(newUserInfo,opt_decode){this.enforceReadOnly();this.userInfo_=opt_decode?goog.Uri.decodeOrEmpty_(newUserInfo):newUserInfo;return this};goog.Uri.prototype.hasUserInfo=function(){return!!this.userInfo_};goog.Uri.prototype.getDomain=function(){return this.domain_};
goog.Uri.prototype.setDomain=function(newDomain,opt_decode){this.enforceReadOnly();this.domain_=opt_decode?goog.Uri.decodeOrEmpty_(newDomain,true):newDomain;return this};goog.Uri.prototype.hasDomain=function(){return!!this.domain_};goog.Uri.prototype.getPort=function(){return this.port_};
goog.Uri.prototype.setPort=function(newPort){this.enforceReadOnly();if(newPort){newPort=Number(newPort);if(isNaN(newPort)||newPort<0)throw new Error("Bad port number "+newPort);this.port_=newPort}else this.port_=null;return this};goog.Uri.prototype.hasPort=function(){return this.port_!=null};goog.Uri.prototype.getPath=function(){return this.path_};goog.Uri.prototype.setPath=function(newPath,opt_decode){this.enforceReadOnly();this.path_=opt_decode?goog.Uri.decodeOrEmpty_(newPath,true):newPath;return this};
goog.Uri.prototype.hasPath=function(){return!!this.path_};goog.Uri.prototype.hasQuery=function(){return this.queryData_.toString()!==""};goog.Uri.prototype.setQueryData=function(queryData,opt_decode){this.enforceReadOnly();if(queryData instanceof goog.Uri.QueryData){this.queryData_=queryData;this.queryData_.setIgnoreCase(this.ignoreCase_)}else{if(!opt_decode)queryData=goog.Uri.encodeSpecialChars_(queryData,goog.Uri.reDisallowedInQuery_);this.queryData_=new goog.Uri.QueryData(queryData,null,this.ignoreCase_)}return this};
goog.Uri.prototype.setQuery=function(newQuery,opt_decode){return this.setQueryData(newQuery,opt_decode)};goog.Uri.prototype.getEncodedQuery=function(){return this.queryData_.toString()};goog.Uri.prototype.getDecodedQuery=function(){return this.queryData_.toDecodedString()};goog.Uri.prototype.getQueryData=function(){return this.queryData_};goog.Uri.prototype.getQuery=function(){return this.getEncodedQuery()};
goog.Uri.prototype.setParameterValue=function(key,value){this.enforceReadOnly();this.queryData_.set(key,value);return this};goog.Uri.prototype.setParameterValues=function(key,values){this.enforceReadOnly();if(!goog.isArray(values))values=[String(values)];this.queryData_.setValues(key,values);return this};goog.Uri.prototype.getParameterValues=function(name){return this.queryData_.getValues(name)};goog.Uri.prototype.getParameterValue=function(paramName){return this.queryData_.get(paramName)};
goog.Uri.prototype.getFragment=function(){return this.fragment_};goog.Uri.prototype.setFragment=function(newFragment,opt_decode){this.enforceReadOnly();this.fragment_=opt_decode?goog.Uri.decodeOrEmpty_(newFragment):newFragment;return this};goog.Uri.prototype.hasFragment=function(){return!!this.fragment_};goog.Uri.prototype.hasSameDomainAs=function(uri2){return(!this.hasDomain()&&!uri2.hasDomain()||this.getDomain()==uri2.getDomain())&&(!this.hasPort()&&!uri2.hasPort()||this.getPort()==uri2.getPort())};
goog.Uri.prototype.makeUnique=function(){this.enforceReadOnly();this.setParameterValue(goog.Uri.RANDOM_PARAM,goog.string.getRandomString());return this};goog.Uri.prototype.removeParameter=function(key){this.enforceReadOnly();this.queryData_.remove(key);return this};goog.Uri.prototype.setReadOnly=function(isReadOnly){this.isReadOnly_=isReadOnly;return this};goog.Uri.prototype.isReadOnly=function(){return this.isReadOnly_};
goog.Uri.prototype.enforceReadOnly=function(){if(this.isReadOnly_)throw new Error("Tried to modify a read-only Uri");};goog.Uri.prototype.setIgnoreCase=function(ignoreCase){this.ignoreCase_=ignoreCase;if(this.queryData_)this.queryData_.setIgnoreCase(ignoreCase);return this};goog.Uri.prototype.getIgnoreCase=function(){return this.ignoreCase_};goog.Uri.parse=function(uri,opt_ignoreCase){return uri instanceof goog.Uri?uri.clone():new goog.Uri(uri,opt_ignoreCase)};
goog.Uri.create=function(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_query,opt_fragment,opt_ignoreCase){var uri=new goog.Uri(null,opt_ignoreCase);opt_scheme&&uri.setScheme(opt_scheme);opt_userInfo&&uri.setUserInfo(opt_userInfo);opt_domain&&uri.setDomain(opt_domain);opt_port&&uri.setPort(opt_port);opt_path&&uri.setPath(opt_path);opt_query&&uri.setQueryData(opt_query);opt_fragment&&uri.setFragment(opt_fragment);return uri};
goog.Uri.resolve=function(base,rel){if(!(base instanceof goog.Uri))base=goog.Uri.parse(base);if(!(rel instanceof goog.Uri))rel=goog.Uri.parse(rel);return base.resolve(rel)};
goog.Uri.removeDotSegments=function(path){if(path==".."||path==".")return"";else if(!goog.string.contains(path,"./")&&!goog.string.contains(path,"/."))return path;else{var leadingSlash=goog.string.startsWith(path,"/");var segments=path.split("/");var out=[];for(var pos=0;pos<segments.length;){var segment=segments[pos++];if(segment=="."){if(leadingSlash&&pos==segments.length)out.push("")}else if(segment==".."){if(out.length>1||out.length==1&&out[0]!="")out.pop();if(leadingSlash&&pos==segments.length)out.push("")}else{out.push(segment);
leadingSlash=true}}return out.join("/")}};goog.Uri.decodeOrEmpty_=function(val,opt_preserveReserved){if(!val)return"";return opt_preserveReserved?decodeURI(val.replace(/%25/g,"%2525")):decodeURIComponent(val)};goog.Uri.encodeSpecialChars_=function(unescapedPart,extra,opt_removeDoubleEncoding){if(goog.isString(unescapedPart)){var encoded=encodeURI(unescapedPart).replace(extra,goog.Uri.encodeChar_);if(opt_removeDoubleEncoding)encoded=goog.Uri.removeDoubleEncoding_(encoded);return encoded}return null};
goog.Uri.encodeChar_=function(ch){var n=ch.charCodeAt(0);return"%"+(n>>4&15).toString(16)+(n&15).toString(16)};goog.Uri.removeDoubleEncoding_=function(doubleEncodedString){return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g,"%$1")};goog.Uri.reDisallowedInSchemeOrUserInfo_=/[#\/\?@]/g;goog.Uri.reDisallowedInRelativePath_=/[\#\?:]/g;goog.Uri.reDisallowedInAbsolutePath_=/[\#\?]/g;goog.Uri.reDisallowedInQuery_=/[\#\?@]/g;goog.Uri.reDisallowedInFragment_=/#/g;
goog.Uri.haveSameDomain=function(uri1String,uri2String){var pieces1=goog.uri.utils.split(uri1String);var pieces2=goog.uri.utils.split(uri2String);return pieces1[goog.uri.utils.ComponentIndex.DOMAIN]==pieces2[goog.uri.utils.ComponentIndex.DOMAIN]&&pieces1[goog.uri.utils.ComponentIndex.PORT]==pieces2[goog.uri.utils.ComponentIndex.PORT]};goog.Uri.QueryData=function(opt_query,opt_uri,opt_ignoreCase){this.keyMap_=null;this.count_=null;this.encodedQuery_=opt_query||null;this.ignoreCase_=!!opt_ignoreCase};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_=function(){if(!this.keyMap_){this.keyMap_=new goog.structs.Map;this.count_=0;if(this.encodedQuery_){var self=this;goog.uri.utils.parseQueryData(this.encodedQuery_,function(name,value){self.add(goog.string.urlDecode(name),value)})}}};
goog.Uri.QueryData.createFromMap=function(map,opt_uri,opt_ignoreCase){var keys=goog.structs.getKeys(map);if(typeof keys=="undefined")throw new Error("Keys are undefined");var queryData=new goog.Uri.QueryData(null,null,opt_ignoreCase);var values=goog.structs.getValues(map);for(var i=0;i<keys.length;i++){var key=keys[i];var value=values[i];if(!goog.isArray(value))queryData.add(key,value);else queryData.setValues(key,value)}return queryData};
goog.Uri.QueryData.createFromKeysValues=function(keys,values,opt_uri,opt_ignoreCase){if(keys.length!=values.length)throw new Error("Mismatched lengths for keys/values");var queryData=new goog.Uri.QueryData(null,null,opt_ignoreCase);for(var i=0;i<keys.length;i++)queryData.add(keys[i],values[i]);return queryData};goog.Uri.QueryData.prototype.getCount=function(){this.ensureKeyMapInitialized_();return this.count_};
goog.Uri.QueryData.prototype.add=function(key,value){this.ensureKeyMapInitialized_();this.invalidateCache_();key=this.getKeyName_(key);var values=this.keyMap_.get(key);if(!values)this.keyMap_.set(key,values=[]);values.push(value);this.count_=goog.asserts.assertNumber(this.count_)+1;return this};
goog.Uri.QueryData.prototype.remove=function(key){this.ensureKeyMapInitialized_();key=this.getKeyName_(key);if(this.keyMap_.containsKey(key)){this.invalidateCache_();this.count_=goog.asserts.assertNumber(this.count_)-this.keyMap_.get(key).length;return this.keyMap_.remove(key)}return false};goog.Uri.QueryData.prototype.clear=function(){this.invalidateCache_();this.keyMap_=null;this.count_=0};goog.Uri.QueryData.prototype.isEmpty=function(){this.ensureKeyMapInitialized_();return this.count_==0};
goog.Uri.QueryData.prototype.containsKey=function(key){this.ensureKeyMapInitialized_();key=this.getKeyName_(key);return this.keyMap_.containsKey(key)};goog.Uri.QueryData.prototype.containsValue=function(value){var vals=this.getValues();return goog.array.contains(vals,value)};goog.Uri.QueryData.prototype.forEach=function(f,opt_scope){this.ensureKeyMapInitialized_();this.keyMap_.forEach(function(values,key){goog.array.forEach(values,function(value){f.call(opt_scope,value,key,this)},this)},this)};
goog.Uri.QueryData.prototype.getKeys=function(){this.ensureKeyMapInitialized_();var vals=this.keyMap_.getValues();var keys=this.keyMap_.getKeys();var rv=[];for(var i=0;i<keys.length;i++){var val=vals[i];for(var j=0;j<val.length;j++)rv.push(keys[i])}return rv};
goog.Uri.QueryData.prototype.getValues=function(opt_key){this.ensureKeyMapInitialized_();var rv=[];if(goog.isString(opt_key)){if(this.containsKey(opt_key))rv=goog.array.concat(rv,this.keyMap_.get(this.getKeyName_(opt_key)))}else{var values=this.keyMap_.getValues();for(var i=0;i<values.length;i++)rv=goog.array.concat(rv,values[i])}return rv};
goog.Uri.QueryData.prototype.set=function(key,value){this.ensureKeyMapInitialized_();this.invalidateCache_();key=this.getKeyName_(key);if(this.containsKey(key))this.count_=goog.asserts.assertNumber(this.count_)-this.keyMap_.get(key).length;this.keyMap_.set(key,[value]);this.count_=goog.asserts.assertNumber(this.count_)+1;return this};
goog.Uri.QueryData.prototype.get=function(key,opt_default){var values=key?this.getValues(key):[];if(goog.Uri.preserveParameterTypesCompatibilityFlag)return values.length>0?values[0]:opt_default;else return values.length>0?String(values[0]):opt_default};goog.Uri.QueryData.prototype.setValues=function(key,values){this.remove(key);if(values.length>0){this.invalidateCache_();this.keyMap_.set(this.getKeyName_(key),goog.array.clone(values));this.count_=goog.asserts.assertNumber(this.count_)+values.length}};
goog.Uri.QueryData.prototype.toString=function(){if(this.encodedQuery_)return this.encodedQuery_;if(!this.keyMap_)return"";var sb=[];var keys=this.keyMap_.getKeys();for(var i=0;i<keys.length;i++){var key=keys[i];var encodedKey=goog.string.urlEncode(key);var val=this.getValues(key);for(var j=0;j<val.length;j++){var param=encodedKey;if(val[j]!=="")param+="="+goog.string.urlEncode(val[j]);sb.push(param)}}return this.encodedQuery_=sb.join("&")};goog.Uri.QueryData.prototype.toDecodedString=function(){return goog.Uri.decodeOrEmpty_(this.toString())};
goog.Uri.QueryData.prototype.invalidateCache_=function(){this.encodedQuery_=null};goog.Uri.QueryData.prototype.filterKeys=function(keys){this.ensureKeyMapInitialized_();this.keyMap_.forEach(function(value,key){if(!goog.array.contains(keys,key))this.remove(key)},this);return this};goog.Uri.QueryData.prototype.clone=function(){var rv=new goog.Uri.QueryData;rv.encodedQuery_=this.encodedQuery_;if(this.keyMap_){rv.keyMap_=this.keyMap_.clone();rv.count_=this.count_}return rv};
goog.Uri.QueryData.prototype.getKeyName_=function(arg){var keyName=String(arg);if(this.ignoreCase_)keyName=keyName.toLowerCase();return keyName};goog.Uri.QueryData.prototype.setIgnoreCase=function(ignoreCase){var resetKeys=ignoreCase&&!this.ignoreCase_;if(resetKeys){this.ensureKeyMapInitialized_();this.invalidateCache_();this.keyMap_.forEach(function(value,key){var lowerCase=key.toLowerCase();if(key!=lowerCase){this.remove(key);this.setValues(lowerCase,value)}},this)}this.ignoreCase_=ignoreCase};
goog.Uri.QueryData.prototype.extend=function(var_args){for(var i=0;i<arguments.length;i++){var data=arguments[i];goog.structs.forEach(data,function(value,key){this.add(key,value)},this)}};goog.provide("goog.json.hybrid");goog.require("goog.asserts");goog.require("goog.json");goog.json.hybrid.stringify=goog.json.USE_NATIVE_JSON?goog.global["JSON"]["stringify"]:function(obj){if(goog.global.JSON)try{return goog.global.JSON.stringify(obj)}catch(e){}return goog.json.serialize(obj)};goog.json.hybrid.parse_=function(jsonString,fallbackParser){if(goog.global.JSON)try{var obj=goog.global.JSON.parse(jsonString);goog.asserts.assert(typeof obj=="object");return obj}catch(e){}return fallbackParser(jsonString)};
goog.json.hybrid.parse=goog.json.USE_NATIVE_JSON?goog.global["JSON"]["parse"]:function(jsonString){return goog.json.hybrid.parse_(jsonString,goog.json.parse)};goog.provide("goog.net.ErrorCode");goog.net.ErrorCode={NO_ERROR:0,ACCESS_DENIED:1,FILE_NOT_FOUND:2,FF_SILENT_ERROR:3,CUSTOM_ERROR:4,EXCEPTION:5,HTTP_ERROR:6,ABORT:7,TIMEOUT:8,OFFLINE:9};
goog.net.ErrorCode.getDebugMessage=function(errorCode){switch(errorCode){case goog.net.ErrorCode.NO_ERROR:return"No Error";case goog.net.ErrorCode.ACCESS_DENIED:return"Access denied to content document";case goog.net.ErrorCode.FILE_NOT_FOUND:return"File not found";case goog.net.ErrorCode.FF_SILENT_ERROR:return"Firefox silently errored";case goog.net.ErrorCode.CUSTOM_ERROR:return"Application custom error";case goog.net.ErrorCode.EXCEPTION:return"An exception occurred";case goog.net.ErrorCode.HTTP_ERROR:return"Http response at 400 or 500 level";
case goog.net.ErrorCode.ABORT:return"Request was aborted";case goog.net.ErrorCode.TIMEOUT:return"Request timed out";case goog.net.ErrorCode.OFFLINE:return"The resource is not available offline";default:return"Unrecognized error code"}};goog.provide("goog.net.EventType");goog.net.EventType={COMPLETE:"complete",SUCCESS:"success",ERROR:"error",ABORT:"abort",READY:"ready",READY_STATE_CHANGE:"readystatechange",TIMEOUT:"timeout",INCREMENTAL_DATA:"incrementaldata",PROGRESS:"progress",DOWNLOAD_PROGRESS:"downloadprogress",UPLOAD_PROGRESS:"uploadprogress"};goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus={CONTINUE:100,SWITCHING_PROTOCOLS:101,OK:200,CREATED:201,ACCEPTED:202,NON_AUTHORITATIVE_INFORMATION:203,NO_CONTENT:204,RESET_CONTENT:205,PARTIAL_CONTENT:206,MULTIPLE_CHOICES:300,MOVED_PERMANENTLY:301,FOUND:302,SEE_OTHER:303,NOT_MODIFIED:304,USE_PROXY:305,TEMPORARY_REDIRECT:307,BAD_REQUEST:400,UNAUTHORIZED:401,PAYMENT_REQUIRED:402,FORBIDDEN:403,NOT_FOUND:404,METHOD_NOT_ALLOWED:405,NOT_ACCEPTABLE:406,PROXY_AUTHENTICATION_REQUIRED:407,REQUEST_TIMEOUT:408,CONFLICT:409,GONE:410,LENGTH_REQUIRED:411,
PRECONDITION_FAILED:412,REQUEST_ENTITY_TOO_LARGE:413,REQUEST_URI_TOO_LONG:414,UNSUPPORTED_MEDIA_TYPE:415,REQUEST_RANGE_NOT_SATISFIABLE:416,EXPECTATION_FAILED:417,PRECONDITION_REQUIRED:428,TOO_MANY_REQUESTS:429,REQUEST_HEADER_FIELDS_TOO_LARGE:431,INTERNAL_SERVER_ERROR:500,NOT_IMPLEMENTED:501,BAD_GATEWAY:502,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,HTTP_VERSION_NOT_SUPPORTED:505,NETWORK_AUTHENTICATION_REQUIRED:511,QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess=function(status){switch(status){case goog.net.HttpStatus.OK:case goog.net.HttpStatus.CREATED:case goog.net.HttpStatus.ACCEPTED:case goog.net.HttpStatus.NO_CONTENT:case goog.net.HttpStatus.PARTIAL_CONTENT:case goog.net.HttpStatus.NOT_MODIFIED:case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:return true;default:return false}};goog.provide("goog.net.XhrLike");goog.net.XhrLike=function(){};goog.net.XhrLike.OrNative;goog.net.XhrLike.prototype.onreadystatechange;goog.net.XhrLike.prototype.responseText;goog.net.XhrLike.prototype.responseXML;goog.net.XhrLike.prototype.readyState;goog.net.XhrLike.prototype.status;goog.net.XhrLike.prototype.statusText;goog.net.XhrLike.prototype.open=function(method,url,opt_async,opt_user,opt_password){};goog.net.XhrLike.prototype.send=function(opt_data){};goog.net.XhrLike.prototype.abort=function(){};
goog.net.XhrLike.prototype.setRequestHeader=function(header,value){};goog.net.XhrLike.prototype.getResponseHeader=function(header){};goog.net.XhrLike.prototype.getAllResponseHeaders=function(){};goog.provide("goog.net.XmlHttpFactory");goog.require("goog.net.XhrLike");goog.net.XmlHttpFactory=function(){};goog.net.XmlHttpFactory.prototype.cachedOptions_=null;goog.net.XmlHttpFactory.prototype.createInstance=goog.abstractMethod;goog.net.XmlHttpFactory.prototype.getOptions=function(){return this.cachedOptions_||(this.cachedOptions_=this.internalGetOptions())};goog.net.XmlHttpFactory.prototype.internalGetOptions=goog.abstractMethod;goog.provide("goog.net.WrapperXmlHttpFactory");goog.require("goog.net.XhrLike");goog.require("goog.net.XmlHttpFactory");goog.net.WrapperXmlHttpFactory=function(xhrFactory,optionsFactory){goog.net.XmlHttpFactory.call(this);this.xhrFactory_=xhrFactory;this.optionsFactory_=optionsFactory};goog.inherits(goog.net.WrapperXmlHttpFactory,goog.net.XmlHttpFactory);goog.net.WrapperXmlHttpFactory.prototype.createInstance=function(){return this.xhrFactory_()};
goog.net.WrapperXmlHttpFactory.prototype.getOptions=function(){return this.optionsFactory_()};goog.provide("goog.net.DefaultXmlHttpFactory");goog.provide("goog.net.XmlHttp");goog.provide("goog.net.XmlHttp.OptionType");goog.provide("goog.net.XmlHttp.ReadyState");goog.provide("goog.net.XmlHttpDefines");goog.require("goog.asserts");goog.require("goog.net.WrapperXmlHttpFactory");goog.require("goog.net.XmlHttpFactory");goog.net.XmlHttp=function(){return goog.net.XmlHttp.factory_.createInstance()};goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR",false);goog.net.XmlHttpDefines={};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR",false);goog.net.XmlHttp.getOptions=function(){return goog.net.XmlHttp.factory_.getOptions()};goog.net.XmlHttp.OptionType={USE_NULL_FUNCTION:0,LOCAL_REQUEST_ERROR:1};goog.net.XmlHttp.ReadyState={UNINITIALIZED:0,LOADING:1,LOADED:2,INTERACTIVE:3,COMPLETE:4};goog.net.XmlHttp.factory_;goog.net.XmlHttp.setFactory=function(factory,optionsFactory){goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory),goog.asserts.assert(optionsFactory)))};
goog.net.XmlHttp.setGlobalFactory=function(factory){goog.net.XmlHttp.factory_=factory};goog.net.DefaultXmlHttpFactory=function(){goog.net.XmlHttpFactory.call(this)};goog.inherits(goog.net.DefaultXmlHttpFactory,goog.net.XmlHttpFactory);goog.net.DefaultXmlHttpFactory.prototype.createInstance=function(){var progId=this.getProgId_();if(progId)return new ActiveXObject(progId);else return new XMLHttpRequest};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions=function(){var progId=this.getProgId_();var options={};if(progId){options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION]=true;options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR]=true}return options};goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_=function(){if(goog.net.XmlHttp.ASSUME_NATIVE_XHR||goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR)return"";if(!this.ieProgId_&&typeof XMLHttpRequest=="undefined"&&typeof ActiveXObject!="undefined"){var ACTIVE_X_IDENTS=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"];for(var i=0;i<ACTIVE_X_IDENTS.length;i++){var candidate=ACTIVE_X_IDENTS[i];try{new ActiveXObject(candidate);this.ieProgId_=candidate;return candidate}catch(e){}}throw new Error("Could not create ActiveXObject. ActiveX might be disabled,"+
" or MSXML might not be installed");}return this.ieProgId_};goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);goog.provide("goog.net.XhrIo");goog.provide("goog.net.XhrIo.ResponseType");goog.require("goog.Timer");goog.require("goog.array");goog.require("goog.asserts");goog.require("goog.debug.entryPointRegistry");goog.require("goog.events.EventTarget");goog.require("goog.json.hybrid");goog.require("goog.log");goog.require("goog.net.ErrorCode");goog.require("goog.net.EventType");goog.require("goog.net.HttpStatus");goog.require("goog.net.XmlHttp");goog.require("goog.string");goog.require("goog.structs");goog.require("goog.structs.Map");
goog.require("goog.uri.utils");goog.require("goog.userAgent");goog.forwardDeclare("goog.Uri");
goog.net.XhrIo=function(opt_xmlHttpFactory){goog.net.XhrIo.base(this,"constructor");this.headers=new goog.structs.Map;this.xmlHttpFactory_=opt_xmlHttpFactory||null;this.active_=false;this.xhr_=null;this.xhrOptions_=null;this.lastUri_="";this.lastMethod_="";this.lastErrorCode_=goog.net.ErrorCode.NO_ERROR;this.lastError_="";this.errorDispatched_=false;this.inSend_=false;this.inOpen_=false;this.inAbort_=false;this.timeoutInterval_=0;this.timeoutId_=null;this.responseType_=goog.net.XhrIo.ResponseType.DEFAULT;
this.withCredentials_=false;this.progressEventsEnabled_=false;this.useXhr2Timeout_=false};goog.inherits(goog.net.XhrIo,goog.events.EventTarget);goog.net.XhrIo.ResponseType={DEFAULT:"",TEXT:"text",DOCUMENT:"document",BLOB:"blob",ARRAY_BUFFER:"arraybuffer"};goog.net.XhrIo.prototype.logger_=goog.log.getLogger("goog.net.XhrIo");goog.net.XhrIo.CONTENT_TYPE_HEADER="Content-Type";goog.net.XhrIo.CONTENT_TRANSFER_ENCODING="Content-Transfer-Encoding";goog.net.XhrIo.HTTP_SCHEME_PATTERN=/^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA=["POST","PUT"];goog.net.XhrIo.FORM_CONTENT_TYPE="application/x-www-form-urlencoded;charset=utf-8";goog.net.XhrIo.XHR2_TIMEOUT_="timeout";goog.net.XhrIo.XHR2_ON_TIMEOUT_="ontimeout";goog.net.XhrIo.sendInstances_=[];
goog.net.XhrIo.send=function(url,opt_callback,opt_method,opt_content,opt_headers,opt_timeoutInterval,opt_withCredentials){var x=new goog.net.XhrIo;goog.net.XhrIo.sendInstances_.push(x);if(opt_callback)x.listen(goog.net.EventType.COMPLETE,opt_callback);x.listenOnce(goog.net.EventType.READY,x.cleanupSend_);if(opt_timeoutInterval)x.setTimeoutInterval(opt_timeoutInterval);if(opt_withCredentials)x.setWithCredentials(opt_withCredentials);x.send(url,opt_method,opt_content,opt_headers);return x};
goog.net.XhrIo.cleanup=function(){var instances=goog.net.XhrIo.sendInstances_;while(instances.length)instances.pop().dispose()};goog.net.XhrIo.protectEntryPoints=function(errorHandler){goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_=errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)};goog.net.XhrIo.prototype.cleanupSend_=function(){this.dispose();goog.array.remove(goog.net.XhrIo.sendInstances_,this)};goog.net.XhrIo.prototype.getTimeoutInterval=function(){return this.timeoutInterval_};
goog.net.XhrIo.prototype.setTimeoutInterval=function(ms){this.timeoutInterval_=Math.max(0,ms)};goog.net.XhrIo.prototype.setResponseType=function(type){this.responseType_=type};goog.net.XhrIo.prototype.getResponseType=function(){return this.responseType_};goog.net.XhrIo.prototype.setWithCredentials=function(withCredentials){this.withCredentials_=withCredentials};goog.net.XhrIo.prototype.getWithCredentials=function(){return this.withCredentials_};
goog.net.XhrIo.prototype.setProgressEventsEnabled=function(enabled){this.progressEventsEnabled_=enabled};goog.net.XhrIo.prototype.getProgressEventsEnabled=function(){return this.progressEventsEnabled_};
goog.net.XhrIo.prototype.send=function(url,opt_method,opt_content,opt_headers){if(this.xhr_)throw new Error("[goog.net.XhrIo] Object is active with another request="+this.lastUri_+"; newUri="+url);var method=opt_method?opt_method.toUpperCase():"GET";this.lastUri_=url;this.lastError_="";this.lastErrorCode_=goog.net.ErrorCode.NO_ERROR;this.lastMethod_=method;this.errorDispatched_=false;this.active_=true;this.xhr_=this.createXhr();this.xhrOptions_=this.xmlHttpFactory_?this.xmlHttpFactory_.getOptions():
goog.net.XmlHttp.getOptions();this.xhr_.onreadystatechange=goog.bind(this.onReadyStateChange_,this);if(this.getProgressEventsEnabled()&&"onprogress"in this.xhr_){this.xhr_.onprogress=goog.bind(function(e){this.onProgressHandler_(e,true)},this);if(this.xhr_.upload)this.xhr_.upload.onprogress=goog.bind(this.onProgressHandler_,this)}try{goog.log.fine(this.logger_,this.formatMsg_("Opening Xhr"));this.inOpen_=true;this.xhr_.open(method,String(url),true);this.inOpen_=false}catch(err){goog.log.fine(this.logger_,
this.formatMsg_("Error opening Xhr: "+err.message));this.error_(goog.net.ErrorCode.EXCEPTION,err);return}var content=opt_content||"";var headers=this.headers.clone();if(opt_headers)goog.structs.forEach(opt_headers,function(value,key){headers.set(key,value)});var contentTypeKey=goog.array.find(headers.getKeys(),goog.net.XhrIo.isContentTypeHeader_);var contentIsFormData=goog.global["FormData"]&&content instanceof goog.global["FormData"];if(goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA,method)&&
!contentTypeKey&&!contentIsFormData)headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER,goog.net.XhrIo.FORM_CONTENT_TYPE);headers.forEach(function(value,key){this.xhr_.setRequestHeader(key,value)},this);if(this.responseType_)this.xhr_.responseType=this.responseType_;if("withCredentials"in this.xhr_&&this.xhr_.withCredentials!==this.withCredentials_)this.xhr_.withCredentials=this.withCredentials_;try{this.cleanUpTimeoutTimer_();if(this.timeoutInterval_>0){this.useXhr2Timeout_=goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
goog.log.fine(this.logger_,this.formatMsg_("Will abort after "+this.timeoutInterval_+"ms if incomplete, xhr2 "+this.useXhr2Timeout_));if(this.useXhr2Timeout_){this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_]=this.timeoutInterval_;this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_]=goog.bind(this.timeout_,this)}else this.timeoutId_=goog.Timer.callOnce(this.timeout_,this.timeoutInterval_,this)}goog.log.fine(this.logger_,this.formatMsg_("Sending request"));this.inSend_=true;this.xhr_.send(content);this.inSend_=false}catch(err$3){goog.log.fine(this.logger_,
this.formatMsg_("Send error: "+err$3.message));this.error_(goog.net.ErrorCode.EXCEPTION,err$3)}};goog.net.XhrIo.shouldUseXhr2Timeout_=function(xhr){return goog.userAgent.IE&&goog.userAgent.isVersionOrHigher(9)&&goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_])&&goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_])};goog.net.XhrIo.isContentTypeHeader_=function(header){return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER,header)};
goog.net.XhrIo.prototype.createXhr=function(){return this.xmlHttpFactory_?this.xmlHttpFactory_.createInstance():goog.net.XmlHttp()};goog.net.XhrIo.prototype.timeout_=function(){if(typeof goog=="undefined");else if(this.xhr_){this.lastError_="Timed out after "+this.timeoutInterval_+"ms, aborting";this.lastErrorCode_=goog.net.ErrorCode.TIMEOUT;goog.log.fine(this.logger_,this.formatMsg_(this.lastError_));this.dispatchEvent(goog.net.EventType.TIMEOUT);this.abort(goog.net.ErrorCode.TIMEOUT)}};
goog.net.XhrIo.prototype.error_=function(errorCode,err){this.active_=false;if(this.xhr_){this.inAbort_=true;this.xhr_.abort();this.inAbort_=false}this.lastError_=err;this.lastErrorCode_=errorCode;this.dispatchErrors_();this.cleanUpXhr_()};goog.net.XhrIo.prototype.dispatchErrors_=function(){if(!this.errorDispatched_){this.errorDispatched_=true;this.dispatchEvent(goog.net.EventType.COMPLETE);this.dispatchEvent(goog.net.EventType.ERROR)}};
goog.net.XhrIo.prototype.abort=function(opt_failureCode){if(this.xhr_&&this.active_){goog.log.fine(this.logger_,this.formatMsg_("Aborting"));this.active_=false;this.inAbort_=true;this.xhr_.abort();this.inAbort_=false;this.lastErrorCode_=opt_failureCode||goog.net.ErrorCode.ABORT;this.dispatchEvent(goog.net.EventType.COMPLETE);this.dispatchEvent(goog.net.EventType.ABORT);this.cleanUpXhr_()}};
goog.net.XhrIo.prototype.disposeInternal=function(){if(this.xhr_){if(this.active_){this.active_=false;this.inAbort_=true;this.xhr_.abort();this.inAbort_=false}this.cleanUpXhr_(true)}goog.net.XhrIo.base(this,"disposeInternal")};goog.net.XhrIo.prototype.onReadyStateChange_=function(){if(this.isDisposed())return;if(!this.inOpen_&&!this.inSend_&&!this.inAbort_)this.onReadyStateChangeEntryPoint_();else this.onReadyStateChangeHelper_()};goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_=function(){this.onReadyStateChangeHelper_()};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_=function(){if(!this.active_)return;if(typeof goog=="undefined");else if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR]&&this.getReadyState()==goog.net.XmlHttp.ReadyState.COMPLETE&&this.getStatus()==2)goog.log.fine(this.logger_,this.formatMsg_("Local request error detected and ignored"));else{if(this.inSend_&&this.getReadyState()==goog.net.XmlHttp.ReadyState.COMPLETE){goog.Timer.callOnce(this.onReadyStateChange_,0,this);return}this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
if(this.isComplete()){goog.log.fine(this.logger_,this.formatMsg_("Request complete"));this.active_=false;try{if(this.isSuccess()){this.dispatchEvent(goog.net.EventType.COMPLETE);this.dispatchEvent(goog.net.EventType.SUCCESS)}else{this.lastErrorCode_=goog.net.ErrorCode.HTTP_ERROR;this.lastError_=this.getStatusText()+" ["+this.getStatus()+"]";this.dispatchErrors_()}}finally{this.cleanUpXhr_()}}}};
goog.net.XhrIo.prototype.onProgressHandler_=function(e,opt_isDownload){goog.asserts.assert(e.type===goog.net.EventType.PROGRESS,"goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e,goog.net.EventType.PROGRESS));this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e,opt_isDownload?goog.net.EventType.DOWNLOAD_PROGRESS:goog.net.EventType.UPLOAD_PROGRESS))};
goog.net.XhrIo.buildProgressEvent_=function(e,eventType){return{type:eventType,lengthComputable:e.lengthComputable,loaded:e.loaded,total:e.total}};
goog.net.XhrIo.prototype.cleanUpXhr_=function(opt_fromDispose){if(this.xhr_){this.cleanUpTimeoutTimer_();var xhr=this.xhr_;var clearedOnReadyStateChange=this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION]?goog.nullFunction:null;this.xhr_=null;this.xhrOptions_=null;if(!opt_fromDispose)this.dispatchEvent(goog.net.EventType.READY);try{xhr.onreadystatechange=clearedOnReadyStateChange}catch(e){goog.log.error(this.logger_,"Problem encountered resetting onreadystatechange: "+e.message)}}};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_=function(){if(this.xhr_&&this.useXhr2Timeout_)this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_]=null;if(goog.isNumber(this.timeoutId_)){goog.Timer.clear(this.timeoutId_);this.timeoutId_=null}};goog.net.XhrIo.prototype.isActive=function(){return!!this.xhr_};goog.net.XhrIo.prototype.isComplete=function(){return this.getReadyState()==goog.net.XmlHttp.ReadyState.COMPLETE};
goog.net.XhrIo.prototype.isSuccess=function(){var status=this.getStatus();return goog.net.HttpStatus.isSuccess(status)||status===0&&!this.isLastUriEffectiveSchemeHttp_()};goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_=function(){var scheme=goog.uri.utils.getEffectiveScheme(String(this.lastUri_));return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)};goog.net.XhrIo.prototype.getReadyState=function(){return this.xhr_?this.xhr_.readyState:goog.net.XmlHttp.ReadyState.UNINITIALIZED};
goog.net.XhrIo.prototype.getStatus=function(){try{return this.getReadyState()>goog.net.XmlHttp.ReadyState.LOADED?this.xhr_.status:-1}catch(e){return-1}};goog.net.XhrIo.prototype.getStatusText=function(){try{return this.getReadyState()>goog.net.XmlHttp.ReadyState.LOADED?this.xhr_.statusText:""}catch(e){goog.log.fine(this.logger_,"Can not get status: "+e.message);return""}};goog.net.XhrIo.prototype.getLastUri=function(){return String(this.lastUri_)};
goog.net.XhrIo.prototype.getResponseText=function(){try{return this.xhr_?this.xhr_.responseText:""}catch(e){goog.log.fine(this.logger_,"Can not get responseText: "+e.message);return""}};goog.net.XhrIo.prototype.getResponseBody=function(){try{if(this.xhr_&&"responseBody"in this.xhr_)return this.xhr_["responseBody"]}catch(e){goog.log.fine(this.logger_,"Can not get responseBody: "+e.message)}return null};
goog.net.XhrIo.prototype.getResponseXml=function(){try{return this.xhr_?this.xhr_.responseXML:null}catch(e){goog.log.fine(this.logger_,"Can not get responseXML: "+e.message);return null}};goog.net.XhrIo.prototype.getResponseJson=function(opt_xssiPrefix){if(!this.xhr_)return undefined;var responseText=this.xhr_.responseText;if(opt_xssiPrefix&&responseText.indexOf(opt_xssiPrefix)==0)responseText=responseText.substring(opt_xssiPrefix.length);return goog.json.hybrid.parse(responseText)};
goog.net.XhrIo.prototype.getResponse=function(){try{if(!this.xhr_)return null;if("response"in this.xhr_)return this.xhr_.response;switch(this.responseType_){case goog.net.XhrIo.ResponseType.DEFAULT:case goog.net.XhrIo.ResponseType.TEXT:return this.xhr_.responseText;case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:if("mozResponseArrayBuffer"in this.xhr_)return this.xhr_.mozResponseArrayBuffer}goog.log.error(this.logger_,"Response type "+this.responseType_+" is not "+"supported on this browser");return null}catch(e){goog.log.fine(this.logger_,
"Can not get response: "+e.message);return null}};goog.net.XhrIo.prototype.getResponseHeader=function(key){if(!this.xhr_||!this.isComplete())return undefined;var value=this.xhr_.getResponseHeader(key);return goog.isNull(value)?undefined:value};goog.net.XhrIo.prototype.getAllResponseHeaders=function(){return this.xhr_&&this.isComplete()?this.xhr_.getAllResponseHeaders():""};
goog.net.XhrIo.prototype.getResponseHeaders=function(){var headersObject={};var headersArray=this.getAllResponseHeaders().split("\r\n");for(var i=0;i<headersArray.length;i++){if(goog.string.isEmptyOrWhitespace(headersArray[i]))continue;var keyValue=goog.string.splitLimit(headersArray[i],": ",2);if(headersObject[keyValue[0]])headersObject[keyValue[0]]+=", "+keyValue[1];else headersObject[keyValue[0]]=keyValue[1]}return headersObject};
goog.net.XhrIo.prototype.getStreamingResponseHeader=function(key){return this.xhr_?this.xhr_.getResponseHeader(key):null};goog.net.XhrIo.prototype.getAllStreamingResponseHeaders=function(){return this.xhr_?this.xhr_.getAllResponseHeaders():""};goog.net.XhrIo.prototype.getLastErrorCode=function(){return this.lastErrorCode_};goog.net.XhrIo.prototype.getLastError=function(){return goog.isString(this.lastError_)?this.lastError_:String(this.lastError_)};
goog.net.XhrIo.prototype.formatMsg_=function(msg){return msg+" ["+this.lastMethod_+" "+this.lastUri_+" "+this.getStatus()+"]"};goog.debug.entryPointRegistry.register(function(transformer){goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_=transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)});goog.provide("goog.format.EmailAddress");goog.require("goog.string");goog.format.EmailAddress=function(opt_address,opt_name){this.name_=opt_name||"";this.address=opt_address||""};goog.format.EmailAddress.OPENERS_='"<([';goog.format.EmailAddress.CLOSERS_='">)]';goog.format.EmailAddress.SPECIAL_CHARS='()<>@:\\".[]';goog.format.EmailAddress.ADDRESS_SEPARATORS_=",;";goog.format.EmailAddress.CHARS_REQUIRE_QUOTES_=goog.format.EmailAddress.SPECIAL_CHARS+goog.format.EmailAddress.ADDRESS_SEPARATORS_;
goog.format.EmailAddress.ALL_DOUBLE_QUOTES_=/\"/g;goog.format.EmailAddress.ESCAPED_DOUBLE_QUOTES_=/\\\"/g;goog.format.EmailAddress.ALL_BACKSLASHES_=/\\/g;goog.format.EmailAddress.ESCAPED_BACKSLASHES_=/\\\\/g;goog.format.EmailAddress.LOCAL_PART_REGEXP_STR_="[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+";goog.format.EmailAddress.DOMAIN_PART_REGEXP_STR_="([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}";goog.format.EmailAddress.LOCAL_PART_=new RegExp("^"+goog.format.EmailAddress.LOCAL_PART_REGEXP_STR_+"$");
goog.format.EmailAddress.DOMAIN_PART_=new RegExp("^"+goog.format.EmailAddress.DOMAIN_PART_REGEXP_STR_+"$");goog.format.EmailAddress.EMAIL_ADDRESS_=new RegExp("^"+goog.format.EmailAddress.LOCAL_PART_REGEXP_STR_+"@"+goog.format.EmailAddress.DOMAIN_PART_REGEXP_STR_+"$");goog.format.EmailAddress.prototype.getName=function(){return this.name_};goog.format.EmailAddress.prototype.getAddress=function(){return this.address};goog.format.EmailAddress.prototype.setName=function(name){this.name_=name};
goog.format.EmailAddress.prototype.setAddress=function(address){this.address=address};goog.format.EmailAddress.prototype.toString=function(){return this.toStringInternal(goog.format.EmailAddress.CHARS_REQUIRE_QUOTES_)};goog.format.EmailAddress.isQuoteNeeded_=function(name,specialChars){for(var i=0;i<specialChars.length;i++){var specialChar=specialChars[i];if(goog.string.contains(name,specialChar))return true}return false};
goog.format.EmailAddress.prototype.toStringInternal=function(specialChars){var name=this.getName();name=name.replace(goog.format.EmailAddress.ALL_DOUBLE_QUOTES_,"");if(goog.format.EmailAddress.isQuoteNeeded_(name,specialChars))name='"'+name.replace(goog.format.EmailAddress.ALL_BACKSLASHES_,"\\\\")+'"';if(name=="")return this.address;if(this.address=="")return name;return name+" <"+this.address+">"};goog.format.EmailAddress.prototype.isValid=function(){return goog.format.EmailAddress.isValidAddrSpec(this.address)};
goog.format.EmailAddress.isValidAddress=function(str){return goog.format.EmailAddress.parse(str).isValid()};goog.format.EmailAddress.isValidAddrSpec=function(str){return goog.format.EmailAddress.EMAIL_ADDRESS_.test(str)};goog.format.EmailAddress.isValidLocalPartSpec=function(str){return goog.format.EmailAddress.LOCAL_PART_.test(str)};goog.format.EmailAddress.isValidDomainPartSpec=function(str){return goog.format.EmailAddress.DOMAIN_PART_.test(str)};
goog.format.EmailAddress.parseInternal=function(addr,ctor){var name="";var address="";for(var i=0;i<addr.length;){var token=goog.format.EmailAddress.getToken_(addr,i);if(token.charAt(0)=="<"&&token.indexOf(">")!=-1){var end=token.indexOf(">");address=token.substring(1,end)}else if(address=="")name+=token;i+=token.length}if(address==""&&name.indexOf("@")!=-1){address=name;name=""}name=goog.string.collapseWhitespace(name);name=goog.string.stripQuotes(name,"'");name=goog.string.stripQuotes(name,'"');
name=name.replace(goog.format.EmailAddress.ESCAPED_DOUBLE_QUOTES_,'"');name=name.replace(goog.format.EmailAddress.ESCAPED_BACKSLASHES_,"\\");address=goog.string.collapseWhitespace(address);return new ctor(address,name)};goog.format.EmailAddress.parse=function(addr){return goog.format.EmailAddress.parseInternal(addr,goog.format.EmailAddress)};
goog.format.EmailAddress.parseListInternal=function(str,parser,separatorChecker){var result=[];var email="";var token;str=goog.string.collapseWhitespace(str);for(var i=0;i<str.length;){token=goog.format.EmailAddress.getToken_(str,i);if(separatorChecker(token)||token==" "&&parser(email).isValid()){if(!goog.string.isEmptyOrWhitespace(email))result.push(parser(email));email="";i++;continue}email+=token;i+=token.length}if(!goog.string.isEmptyOrWhitespace(email))result.push(parser(email));return result};
goog.format.EmailAddress.parseList=function(str){return goog.format.EmailAddress.parseListInternal(str,goog.format.EmailAddress.parse,goog.format.EmailAddress.isAddressSeparator)};
goog.format.EmailAddress.getToken_=function(str,pos){var ch=str.charAt(pos);var p=goog.format.EmailAddress.OPENERS_.indexOf(ch);if(p==-1)return ch;if(goog.format.EmailAddress.isEscapedDlQuote_(str,pos))return ch;var closerChar=goog.format.EmailAddress.CLOSERS_.charAt(p);var endPos=str.indexOf(closerChar,pos+1);while(endPos>=0&&goog.format.EmailAddress.isEscapedDlQuote_(str,endPos))endPos=str.indexOf(closerChar,endPos+1);var token=endPos>=0?str.substring(pos,endPos+1):ch;return token};
goog.format.EmailAddress.isEscapedDlQuote_=function(str,pos){if(str.charAt(pos)!='"')return false;var slashCount=0;for(var idx=pos-1;idx>=0&&str.charAt(idx)=="\\";idx--)slashCount++;return slashCount%2!=0};goog.format.EmailAddress.isAddressSeparator=function(ch){return goog.string.contains(goog.format.EmailAddress.ADDRESS_SEPARATORS_,ch)};goog.provide("goog.window");goog.require("goog.dom.TagName");goog.require("goog.dom.safe");goog.require("goog.html.SafeUrl");goog.require("goog.html.uncheckedconversions");goog.require("goog.labs.userAgent.platform");goog.require("goog.string");goog.require("goog.string.Const");goog.require("goog.userAgent");goog.window.DEFAULT_POPUP_HEIGHT=500;goog.window.DEFAULT_POPUP_WIDTH=690;goog.window.DEFAULT_POPUP_TARGET="google_popup";goog.window.createFakeWindow_=function(){return{}};
goog.window.open=function(linkRef,opt_options,opt_parentWin){if(!opt_options)opt_options={};var parentWin=opt_parentWin||window;var safeLinkRef;if(linkRef instanceof goog.html.SafeUrl)safeLinkRef=linkRef;else{var url=typeof linkRef.href!="undefined"?linkRef.href:String(linkRef);safeLinkRef=goog.html.SafeUrl.sanitize(url)}var target=opt_options.target||linkRef.target;var sb=[];for(var option in opt_options)switch(option){case "width":case "height":case "top":case "left":sb.push(option+"="+opt_options[option]);
break;case "target":case "noreferrer":break;default:sb.push(option+"="+(opt_options[option]?1:0))}var optionString=sb.join(",");var newWin;if(goog.labs.userAgent.platform.isIos()&&parentWin.navigator&&parentWin.navigator["standalone"]&&target&&target!="_self"){var a=parentWin.document.createElement(String(goog.dom.TagName.A));goog.dom.safe.setAnchorHref(a,safeLinkRef);a.setAttribute("target",target);if(opt_options["noreferrer"])a.setAttribute("rel","noreferrer");var click=document.createEvent("MouseEvent");
click.initMouseEvent("click",true,true,parentWin,1);a.dispatchEvent(click);newWin=goog.window.createFakeWindow_()}else if(opt_options["noreferrer"]){newWin=parentWin.open("",target,optionString);var sanitizedLinkRef=goog.html.SafeUrl.unwrap(safeLinkRef);if(newWin){if(goog.userAgent.EDGE_OR_IE)if(goog.string.contains(sanitizedLinkRef,";"))sanitizedLinkRef="'"+sanitizedLinkRef.replace(/'/g,"%27")+"'";newWin.opener=null;var safeHtml=goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("b/12014412, meta tag with sanitized URL"),
'<META HTTP-EQUIV="refresh" content="0; url='+goog.string.htmlEscape(sanitizedLinkRef)+'">');goog.dom.safe.documentWrite(newWin.document,safeHtml);newWin.document.close()}}else newWin=parentWin.open(goog.html.SafeUrl.unwrap(safeLinkRef),target,optionString);return newWin};
goog.window.openBlank=function(opt_message,opt_options,opt_parentWin){var loadingMessage;if(!opt_message)loadingMessage="";else loadingMessage=goog.string.escapeString(goog.string.htmlEscape(opt_message));var url=goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("b/12014412, encoded string in javascript: URL"),'javascript:"'+encodeURI(loadingMessage)+'"');return goog.window.open(url,opt_options,opt_parentWin)};
goog.window.popup=function(linkRef,opt_options){if(!opt_options)opt_options={};opt_options["target"]=opt_options["target"]||linkRef["target"]||goog.window.DEFAULT_POPUP_TARGET;opt_options["width"]=opt_options["width"]||goog.window.DEFAULT_POPUP_WIDTH;opt_options["height"]=opt_options["height"]||goog.window.DEFAULT_POPUP_HEIGHT;var newWin=goog.window.open(linkRef,opt_options);if(!newWin)return true;newWin.focus();return false};goog.provide("goog.net.jsloader");goog.provide("goog.net.jsloader.Error");goog.provide("goog.net.jsloader.ErrorCode");goog.provide("goog.net.jsloader.Options");goog.require("goog.array");goog.require("goog.async.Deferred");goog.require("goog.debug.Error");goog.require("goog.dom");goog.require("goog.dom.TagName");goog.require("goog.dom.safe");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.object");goog.net.jsloader.GLOBAL_VERIFY_OBJS_="closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT=5E3;goog.net.jsloader.Options;goog.net.jsloader.scriptsToLoad_=[];goog.net.jsloader.scriptLoadingDeferred_;
goog.net.jsloader.safeLoadMany=function(trustedUris,opt_options){if(!trustedUris.length)return goog.async.Deferred.succeed(null);var isAnotherModuleLoading=goog.net.jsloader.scriptsToLoad_.length;goog.array.extend(goog.net.jsloader.scriptsToLoad_,trustedUris);if(isAnotherModuleLoading)return goog.net.jsloader.scriptLoadingDeferred_;trustedUris=goog.net.jsloader.scriptsToLoad_;var popAndLoadNextScript=function(){var trustedUri=trustedUris.shift();var deferred=goog.net.jsloader.safeLoad(trustedUri,
opt_options);if(trustedUris.length)deferred.addBoth(popAndLoadNextScript);return deferred};goog.net.jsloader.scriptLoadingDeferred_=popAndLoadNextScript();return goog.net.jsloader.scriptLoadingDeferred_};
goog.net.jsloader.safeLoad=function(trustedUri,opt_options){var options=opt_options||{};var doc=options.document||document;var uri=goog.html.TrustedResourceUrl.unwrap(trustedUri);var script=goog.dom.createElement(goog.dom.TagName.SCRIPT);var request={script_:script,timeout_:undefined};var deferred=new goog.async.Deferred(goog.net.jsloader.cancel_,request);var timeout=null;var timeoutDuration=goog.isDefAndNotNull(options.timeout)?options.timeout:goog.net.jsloader.DEFAULT_TIMEOUT;if(timeoutDuration>
0){timeout=window.setTimeout(function(){goog.net.jsloader.cleanup_(script,true);deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT,"Timeout reached for loading script "+uri))},timeoutDuration);request.timeout_=timeout}script.onload=script.onreadystatechange=function(){if(!script.readyState||script.readyState=="loaded"||script.readyState=="complete"){var removeScriptNode=options.cleanupWhenDone||false;goog.net.jsloader.cleanup_(script,removeScriptNode,timeout);deferred.callback(null)}};
script.onerror=function(){goog.net.jsloader.cleanup_(script,true,timeout);deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR,"Error while loading script "+uri))};var properties=options.attributes||{};goog.object.extend(properties,{"type":"text/javascript","charset":"UTF-8"});goog.dom.setProperties(script,properties);goog.dom.safe.setScriptSrc(script,trustedUri);var scriptParent=goog.net.jsloader.getScriptParentElement_(doc);scriptParent.appendChild(script);return deferred};
goog.net.jsloader.safeLoadAndVerify=function(trustedUri,verificationObjName,options){if(!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_])goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]={};var verifyObjs=goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];var uri=goog.html.TrustedResourceUrl.unwrap(trustedUri);if(goog.isDef(verifyObjs[verificationObjName]))return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS,"Verification object "+
verificationObjName+" already defined."));var sendDeferred=goog.net.jsloader.safeLoad(trustedUri,options);var deferred=new goog.async.Deferred(goog.bind(sendDeferred.cancel,sendDeferred));sendDeferred.addCallback(function(){var result=verifyObjs[verificationObjName];if(goog.isDef(result)){deferred.callback(result);delete verifyObjs[verificationObjName]}else deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR,"Script "+uri+" loaded, but verification object "+verificationObjName+
" was not defined."))});sendDeferred.addErrback(function(error){if(goog.isDef(verifyObjs[verificationObjName]))delete verifyObjs[verificationObjName];deferred.errback(error)});return deferred};goog.net.jsloader.getScriptParentElement_=function(doc){var headElements=goog.dom.getElementsByTagName(goog.dom.TagName.HEAD,doc);if(!headElements||goog.array.isEmpty(headElements))return doc.documentElement;else return headElements[0]};
goog.net.jsloader.cancel_=function(){var request=this;if(request&&request.script_){var scriptNode=request.script_;if(scriptNode&&scriptNode.tagName==goog.dom.TagName.SCRIPT)goog.net.jsloader.cleanup_(scriptNode,true,request.timeout_)}};
goog.net.jsloader.cleanup_=function(scriptNode,removeScriptNode,opt_timeout){if(goog.isDefAndNotNull(opt_timeout))goog.global.clearTimeout(opt_timeout);scriptNode.onload=goog.nullFunction;scriptNode.onerror=goog.nullFunction;scriptNode.onreadystatechange=goog.nullFunction;if(removeScriptNode)window.setTimeout(function(){goog.dom.removeNode(scriptNode)},0)};goog.net.jsloader.ErrorCode={LOAD_ERROR:0,TIMEOUT:1,VERIFY_ERROR:2,VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error=function(code,opt_message){var msg="Jsloader error (code #"+code+")";if(opt_message)msg+=": "+opt_message;goog.net.jsloader.Error.base(this,"constructor",msg);this.code=code};goog.inherits(goog.net.jsloader.Error,goog.debug.Error);goog.provide("goog.net.CorsXmlHttpFactory");goog.provide("goog.net.IeCorsXhrAdapter");goog.require("goog.net.HttpStatus");goog.require("goog.net.XhrLike");goog.require("goog.net.XmlHttp");goog.require("goog.net.XmlHttpFactory");goog.net.CorsXmlHttpFactory=function(){goog.net.XmlHttpFactory.call(this)};goog.inherits(goog.net.CorsXmlHttpFactory,goog.net.XmlHttpFactory);
goog.net.CorsXmlHttpFactory.prototype.createInstance=function(){var xhr=new XMLHttpRequest;if("withCredentials"in xhr)return xhr;else if(typeof XDomainRequest!="undefined")return new goog.net.IeCorsXhrAdapter;else throw new Error("Unsupported browser");};goog.net.CorsXmlHttpFactory.prototype.internalGetOptions=function(){return{}};
goog.net.IeCorsXhrAdapter=function(){this.xdr_=new XDomainRequest;this.readyState=goog.net.XmlHttp.ReadyState.UNINITIALIZED;this.onreadystatechange=null;this.responseText="";this.status=-1;this.responseXML=null;this.statusText=null;this.xdr_.onload=goog.bind(this.handleLoad_,this);this.xdr_.onerror=goog.bind(this.handleError_,this);this.xdr_.onprogress=goog.bind(this.handleProgress_,this);this.xdr_.ontimeout=goog.bind(this.handleTimeout_,this)};
goog.net.IeCorsXhrAdapter.prototype.open=function(method,url,opt_async){if(goog.isDefAndNotNull(opt_async)&&!opt_async)throw new Error("Only async requests are supported.");this.xdr_.open(method,url)};goog.net.IeCorsXhrAdapter.prototype.send=function(opt_content){if(opt_content)if(typeof opt_content=="string")this.xdr_.send(opt_content);else throw new Error("Only string data is supported");else this.xdr_.send()};goog.net.IeCorsXhrAdapter.prototype.abort=function(){this.xdr_.abort()};
goog.net.IeCorsXhrAdapter.prototype.setRequestHeader=function(key,value){};goog.net.IeCorsXhrAdapter.prototype.getResponseHeader=function(key){if(key.toLowerCase()=="content-type")return this.xdr_.contentType;return""};goog.net.IeCorsXhrAdapter.prototype.handleLoad_=function(){this.status=goog.net.HttpStatus.OK;this.responseText=this.xdr_.responseText;this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE)};
goog.net.IeCorsXhrAdapter.prototype.handleError_=function(){this.status=goog.net.HttpStatus.INTERNAL_SERVER_ERROR;this.responseText="";this.setReadyState_(goog.net.XmlHttp.ReadyState.COMPLETE)};goog.net.IeCorsXhrAdapter.prototype.handleTimeout_=function(){this.handleError_()};goog.net.IeCorsXhrAdapter.prototype.handleProgress_=function(){this.status=goog.net.HttpStatus.OK;this.setReadyState_(goog.net.XmlHttp.ReadyState.LOADING)};
goog.net.IeCorsXhrAdapter.prototype.setReadyState_=function(readyState){this.readyState=readyState;if(this.onreadystatechange)this.onreadystatechange()};goog.net.IeCorsXhrAdapter.prototype.getAllResponseHeaders=function(){return"content-type: "+this.xdr_.contentType};goog.provide("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");goog.require("goog.Uri");goog.require("goog.events");goog.require("goog.events.EventType");goog.require("goog.html.SafeUrl");goog.require("goog.json");goog.require("goog.object");goog.require("goog.string");goog.require("goog.userAgent");goog.require("goog.window");var angular;fireauth.util.isIe11=function(){return goog.userAgent.IE&&!!goog.userAgent.DOCUMENT_MODE&&goog.userAgent.DOCUMENT_MODE==11};
fireauth.util.isIe10=function(){return goog.userAgent.IE&&!!goog.userAgent.DOCUMENT_MODE&&goog.userAgent.DOCUMENT_MODE==10};fireauth.util.isEdge=function(userAgent){return/Edge\/\d+/.test(userAgent)};fireauth.util.isLocalStorageNotSynchronized=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();return fireauth.util.isIe11()||fireauth.util.isEdge(ua)};fireauth.util.getCurrentUrl=function(){return goog.global["window"]&&goog.global["window"]["location"]["href"]||""};
fireauth.util.sanitizeRequestUri=function(requestUri){if(typeof angular!="undefined")requestUri=requestUri.replace("#/","#").replace("#!/","#");return requestUri};fireauth.util.goTo=function(url,opt_window,opt_bypassCheck){var win=opt_window||goog.global["window"];var finalUrl="about:blank";if(url&&!opt_bypassCheck)finalUrl=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));win.location.href=finalUrl};
fireauth.util.replaceCurrentUrl=function(url,opt_window,opt_bypassCheck){var win=opt_window||goog.global["window"];if(!opt_bypassCheck)win.location.replace(goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url)));else win.location.replace(url)};
fireauth.util.getKeyDiff=function(a,b){var diff=[];for(var k in a)if(!(k in b))diff.push(k);else if(typeof a[k]!=typeof b[k])diff.push(k);else if(goog.isArray(a[k])){if(!goog.object.equals(a[k],b[k]))diff.push(k)}else if(typeof a[k]=="object"&&a[k]!=null&&b[k]!=null){if(fireauth.util.getKeyDiff(a[k],b[k]).length>0)diff.push(k)}else if(a[k]!==b[k])diff.push(k);for(var k in b)if(!(k in a))diff.push(k);return diff};
fireauth.util.getChromeVersion=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();var browserName=fireauth.util.getBrowserName(ua);if(browserName!=fireauth.util.BrowserName.CHROME)return null;var matches=ua.match(/\sChrome\/(\d+)/i);if(matches&&matches.length==2)return parseInt(matches[1],10);return null};
fireauth.util.supportsCors=function(opt_userAgent){var chromeVersion=fireauth.util.getChromeVersion(opt_userAgent);if(chromeVersion&&chromeVersion<30)return false;return!goog.userAgent.IE||!goog.userAgent.DOCUMENT_MODE||goog.userAgent.DOCUMENT_MODE>9};
fireauth.util.isMobileBrowser=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();var uaLower=ua.toLowerCase();if(uaLower.match(/android/)||uaLower.match(/webos/)||uaLower.match(/iphone|ipad|ipod/)||uaLower.match(/blackberry/)||uaLower.match(/windows phone/)||uaLower.match(/iemobile/))return true;return false};fireauth.util.closeWindow=function(opt_window){var win=opt_window||goog.global["window"];try{win.close()}catch(e){}};
fireauth.util.popup=function(opt_url,opt_name,opt_width,opt_height){var width=opt_width||500;var height=opt_height||600;var top=(window.screen.availHeight-height)/2;var left=(window.screen.availWidth-width)/2;var options={"width":width,"height":height,"top":top>0?top:0,"left":left>0?left:0,"location":true,"resizable":true,"statusbar":true,"toolbar":false};var ua=fireauth.util.getUserAgentString().toLowerCase();if(opt_name){options["target"]=opt_name;if(goog.string.contains(ua,"crios/"))options["target"]=
"_blank"}var browserName=fireauth.util.getBrowserName(fireauth.util.getUserAgentString());if(browserName==fireauth.util.BrowserName.FIREFOX){opt_url=opt_url||"http://localhost";options["scrollbars"]=true}var newWin=goog.window.open(opt_url||"",options);if(newWin)try{newWin.focus()}catch(e){}return newWin};fireauth.util.POPUP_WAIT_CYCLE_MS_=2E3;
fireauth.util.requiresPopupDelay=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();var matches=ua.match(/OS (\d+)_.*CriOS\/(\d+)\./i);if(matches&&matches.length>2)return parseInt(matches[1],10)>=10&&parseInt(matches[2],10)>=55;return false};
fireauth.util.onPopupClose=function(win,opt_stepDuration){var stepDuration=opt_stepDuration||fireauth.util.POPUP_WAIT_CYCLE_MS_;return new goog.Promise(function(resolve,reject){var repeat=function(){goog.Timer.promise(stepDuration).then(function(){if(!win||win.closed)resolve();else return repeat()})};return repeat()})};
fireauth.util.isAuthorizedDomain=function(authorizedDomains,url){var uri=goog.Uri.parse(url);var scheme=uri.getScheme();var domain=uri.getDomain();for(var i=0;i<authorizedDomains.length;i++)if(fireauth.util.matchDomain(authorizedDomains[i],domain,scheme))return true;return false};fireauth.util.Dimensions;
fireauth.util.getWindowDimensions=function(opt_window){var win=opt_window||goog.global["window"];if(win&&win["innerWidth"]&&win["innerHeight"])return{"width":parseFloat(win["innerWidth"]),"height":parseFloat(win["innerHeight"])};return null};fireauth.util.IP_ADDRESS_REGEXP_=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
fireauth.util.matchDomain=function(domainPattern,domain,scheme){if(domainPattern.indexOf("chrome-extension://")==0){var chromeExtUri=goog.Uri.parse(domainPattern);return chromeExtUri.getDomain()==domain&&scheme=="chrome-extension"}else if(scheme!="http"&&scheme!="https")return false;else{if(fireauth.util.IP_ADDRESS_REGEXP_.test(domainPattern))return domain==domainPattern;var escapedDomainPattern=domainPattern.split(".").join("\\.");var re=new RegExp("^(.+\\."+escapedDomainPattern+"|"+escapedDomainPattern+
")$","i");return re.test(domain)}};fireauth.util.onDomReady=function(){var resolver=null;return(new goog.Promise(function(resolve,reject){var doc=goog.global.document;if(doc.readyState=="complete")resolve();else{resolver=function(){resolve()};goog.events.listenOnce(window,goog.events.EventType.LOAD,resolver)}})).thenCatch(function(error){goog.events.unlisten(window,goog.events.EventType.LOAD,resolver);throw error;})};fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_=1E3;
fireauth.util.checkIfCordova=function(opt_userAgent,opt_timeout){if(fireauth.util.isAndroidOrIosFileEnvironment(opt_userAgent))return fireauth.util.onDomReady().then(function(){return new goog.Promise(function(resolve,reject){var doc=goog.global.document;var timeoutId=setTimeout(function(){reject(new Error("Cordova framework is not ready."))},opt_timeout||fireauth.util.CORDOVA_ONDEVICEREADY_TIMEOUT_MS_);doc.addEventListener("deviceready",function(){clearTimeout(timeoutId);resolve()},false)})});return goog.Promise.reject(new Error("Cordova must run in an Android or iOS file scheme."))};
fireauth.util.isAndroidOrIosFileEnvironment=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();return!!(fireauth.util.getCurrentScheme()==="file:"&&ua.toLowerCase().match(/iphone|ipad|ipod|android/))};fireauth.util.isIOS7Or8=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();return!!(ua.match(/(iPad|iPhone|iPod).*OS 7_\d/i)||ua.match(/(iPad|iPhone|iPod).*OS 8_\d/i))};
fireauth.util.isSafariLocalStorageNotSynced=function(){var ua=fireauth.util.getUserAgentString();if(!fireauth.util.iframeCanSyncWebStorage(ua)&&fireauth.util.isIframe())return true;return false};fireauth.util.isIframe=function(opt_win){var win=opt_win||goog.global["window"];try{return!!(win&&win!=win["top"])}catch(e){return false}};fireauth.util.isOpenerAnIframe=function(opt_win){var win=opt_win||goog.global["window"];try{var opener=win&&win["opener"];return!!(opener&&fireauth.util.isIframe(opener))}catch(e){return false}};
fireauth.util.Env={BROWSER:"Browser",NODE:"Node",REACT_NATIVE:"ReactNative"};fireauth.util.getEnvironment=function(){if(firebase.INTERNAL.hasOwnProperty("reactNative"))return fireauth.util.Env.REACT_NATIVE;else if(firebase.INTERNAL.hasOwnProperty("node"))return fireauth.util.Env.NODE;return fireauth.util.Env.BROWSER};fireauth.util.isNativeEnvironment=function(){var environment=fireauth.util.getEnvironment();return environment===fireauth.util.Env.REACT_NATIVE||environment===fireauth.util.Env.NODE};
fireauth.util.STORAGE_KEY_SEPARATOR_=":";fireauth.util.createStorageKey=function(apiKey,appName){return apiKey+fireauth.util.STORAGE_KEY_SEPARATOR_+appName};fireauth.util.generateRandomString=function(){return Math.floor(Math.random()*1E9).toString()};fireauth.util.BrowserName={ANDROID:"Android",BLACKBERRY:"Blackberry",EDGE:"Edge",FIREFOX:"Firefox",IE:"IE",IEMOBILE:"IEMobile",OPERA:"Opera",OTHER:"Other",CHROME:"Chrome",SAFARI:"Safari",SILK:"Silk",WEBOS:"Webos"};
fireauth.util.getBrowserName=function(userAgent){var ua=userAgent.toLowerCase();if(goog.string.contains(ua,"opera/")||goog.string.contains(ua,"opr/")||goog.string.contains(ua,"opios/"))return fireauth.util.BrowserName.OPERA;else if(goog.string.contains(ua,"iemobile"))return fireauth.util.BrowserName.IEMOBILE;else if(goog.string.contains(ua,"msie")||goog.string.contains(ua,"trident/"))return fireauth.util.BrowserName.IE;else if(goog.string.contains(ua,"edge/"))return fireauth.util.BrowserName.EDGE;
else if(goog.string.contains(ua,"firefox/"))return fireauth.util.BrowserName.FIREFOX;else if(goog.string.contains(ua,"silk/"))return fireauth.util.BrowserName.SILK;else if(goog.string.contains(ua,"blackberry"))return fireauth.util.BrowserName.BLACKBERRY;else if(goog.string.contains(ua,"webos"))return fireauth.util.BrowserName.WEBOS;else if(goog.string.contains(ua,"safari/")&&!goog.string.contains(ua,"chrome/")&&!goog.string.contains(ua,"crios/")&&!goog.string.contains(ua,"android"))return fireauth.util.BrowserName.SAFARI;
else if((goog.string.contains(ua,"chrome/")||goog.string.contains(ua,"crios/"))&&!goog.string.contains(ua,"edge/"))return fireauth.util.BrowserName.CHROME;else if(goog.string.contains(ua,"android"))return fireauth.util.BrowserName.ANDROID;else{var re=new RegExp("([a-zA-Z\\d\\.]+)/[a-zA-Z\\d\\.]*$");var matches=userAgent.match(re);if(matches&&matches.length==2)return matches[1]}return fireauth.util.BrowserName.OTHER};fireauth.util.ClientImplementation={JSCORE:"JsCore",OAUTH_HANDLER:"Handler",OAUTH_IFRAME:"Iframe"};
fireauth.util.Framework={DEFAULT:"FirebaseCore-web",FIREBASEUI:"FirebaseUI-web"};fireauth.util.getFrameworkIds=function(providedFrameworks){var frameworkVersion=[];var frameworkSet={};for(var key in fireauth.util.Framework)frameworkSet[fireauth.util.Framework[key]]=true;for(var i=0;i<providedFrameworks.length;i++)if(typeof frameworkSet[providedFrameworks[i]]!=="undefined"){delete frameworkSet[providedFrameworks[i]];frameworkVersion.push(providedFrameworks[i])}frameworkVersion.sort();return frameworkVersion};
fireauth.util.getClientVersion=function(clientImplementation,clientVersion,opt_frameworkVersion,opt_userAgent){var frameworkVersion=fireauth.util.getFrameworkIds(opt_frameworkVersion||[]);if(!frameworkVersion.length)frameworkVersion=[fireauth.util.Framework.DEFAULT];var environment=fireauth.util.getEnvironment();var reportedEnvironment="";if(environment===fireauth.util.Env.BROWSER){var userAgent=opt_userAgent||fireauth.util.getUserAgentString();reportedEnvironment=fireauth.util.getBrowserName(userAgent)}else reportedEnvironment=
environment;return reportedEnvironment+"/"+clientImplementation+"/"+clientVersion+"/"+frameworkVersion.join(",")};fireauth.util.getUserAgentString=function(){return goog.global["navigator"]&&goog.global["navigator"]["userAgent"]||""};fireauth.util.getObjectRef=function(varStrName,opt_scope){var pieces=varStrName.split(".");var last=opt_scope||goog.global;for(var i=0;i<pieces.length&&typeof last=="object"&&last!=null;i++)last=last[pieces[i]];if(i!=pieces.length)last=undefined;return last};
fireauth.util.isWebStorageSupported=function(){try{var storage=goog.global["localStorage"];var key=fireauth.util.generateEventId();if(storage){storage["setItem"](key,"1");storage["removeItem"](key);if(fireauth.util.isLocalStorageNotSynchronized())return!!goog.global["indexedDB"];return true}}catch(e){}return false};fireauth.util.isCordovaOAuthEnabled=function(){return false};
fireauth.util.isPopupRedirectSupported=function(){return(fireauth.util.isHttpOrHttps()||fireauth.util.isChromeExtension()||fireauth.util.isAndroidOrIosFileEnvironment())&&!fireauth.util.isNativeEnvironment()&&fireauth.util.isWebStorageSupported()};fireauth.util.isHttpOrHttps=function(){return fireauth.util.getCurrentScheme()==="http:"||fireauth.util.getCurrentScheme()==="https:"};fireauth.util.getCurrentScheme=function(){return goog.global["location"]&&goog.global["location"]["protocol"]||null};
fireauth.util.isChromeExtension=function(){return fireauth.util.getCurrentScheme()==="chrome-extension:"};fireauth.util.isIOS=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();return!!ua.toLowerCase().match(/iphone|ipad|ipod/)};fireauth.util.isAndroid=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();return!!ua.toLowerCase().match(/android/)};
fireauth.util.runsInBackground=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();if(fireauth.util.isMobileBrowser(ua))return false;else if(fireauth.util.getBrowserName(ua)==fireauth.util.BrowserName.FIREFOX)return false;return true};fireauth.util.stringifyJSON=function(obj){if(typeof obj==="undefined")return null;return goog.json.serialize(obj)};
fireauth.util.copyWithoutNullsOrUndefined=function(obj){var trimmedObj={};for(var key in obj)if(obj.hasOwnProperty(key)&&obj[key]!==null&&obj[key]!==undefined)trimmedObj[key]=obj[key];return trimmedObj};fireauth.util.removeEntriesWithKeys=function(obj,keys){var copy=goog.object.clone(obj);for(var i=0;i<keys.length;i++){var key=keys[i];if(key in copy)delete copy[key]}return copy};fireauth.util.parseJSON=function(json){if(goog.isNull(json))return undefined;return JSON.parse(json)};
fireauth.util.getXMLHttpRequest=function(){var isNode=fireauth.util.getEnvironment()==fireauth.util.Env.NODE;var XMLHttpRequest=goog.global["XMLHttpRequest"]||isNode&&firebase.INTERNAL["node"]&&firebase.INTERNAL["node"]["XMLHttpRequest"];return XMLHttpRequest};fireauth.util.generateEventId=function(opt_prefix){return opt_prefix?opt_prefix:""+Math.floor(Math.random()*1E9).toString()};
fireauth.util.iframeCanSyncWebStorage=function(opt_userAgent){var ua=opt_userAgent||fireauth.util.getUserAgentString();if(fireauth.util.getBrowserName(ua)==fireauth.util.BrowserName.SAFARI||ua.toLowerCase().match(/iphone|ipad|ipod/))return false;return true};
fireauth.util.resetUnloadedGapiModules=function(){var beacon=goog.global["___jsl"];if(beacon&&beacon["H"])for(var hint in beacon["H"]){beacon["H"][hint]["r"]=beacon["H"][hint]["r"]||[];beacon["H"][hint]["L"]=beacon["H"][hint]["L"]||[];beacon["H"][hint]["r"]=beacon["H"][hint]["L"].concat();if(beacon["CP"])for(var i=0;i<beacon["CP"].length;i++)beacon["CP"][i]=null}};
fireauth.util.isMobileDevice=function(opt_userAgent,opt_env){var ua=opt_userAgent||fireauth.util.getUserAgentString();var environment=opt_env||fireauth.util.getEnvironment();return fireauth.util.isMobileBrowser(ua)||environment===fireauth.util.Env.REACT_NATIVE};
fireauth.util.isOnline=function(opt_navigator){var navigator=opt_navigator||goog.global["navigator"];if(navigator&&typeof navigator["onLine"]==="boolean"&&(fireauth.util.isHttpOrHttps()||fireauth.util.isChromeExtension()||typeof navigator["connection"]!=="undefined"))return navigator["onLine"];return true};
fireauth.util.getUserLanguage=function(opt_navigator){var navigator=opt_navigator||goog.global["navigator"];if(!navigator)return null;return navigator["languages"]&&navigator["languages"][0]||navigator["language"]||navigator["userLanguage"]||null};
fireauth.util.Delay=function(shortDelay,longDelay,opt_userAgent,opt_env){if(shortDelay>longDelay)throw new Error("Short delay should be less than long delay!");this.shortDelay_=shortDelay;this.longDelay_=longDelay;this.isMobile_=fireauth.util.isMobileDevice(opt_userAgent,opt_env)};fireauth.util.Delay.prototype.get=function(){return this.isMobile_?this.longDelay_:this.shortDelay_};
fireauth.util.isAppVisible=function(){var doc=goog.global.document;if(doc&&typeof doc["visibilityState"]!=="undefined")return doc["visibilityState"]=="visible";return true};
fireauth.util.onAppVisible=function(){var doc=goog.global.document;var onVisibilityChange=null;if(fireauth.util.isAppVisible()||!doc)return goog.Promise.resolve();else return(new goog.Promise(function(resolve,reject){onVisibilityChange=function(event){if(fireauth.util.isAppVisible()){doc.removeEventListener("visibilitychange",onVisibilityChange,false);resolve()}};doc.addEventListener("visibilitychange",onVisibilityChange,false)})).thenCatch(function(error){doc.removeEventListener("visibilitychange",
onVisibilityChange,false);throw error;})};fireauth.util.consoleWarn=function(message){if(typeof console!=="undefined"&&typeof console.warn==="function")console.warn(message)};fireauth.util.utcTimestampToDateString=function(utcTimestamp){try{var date=new Date(parseInt(utcTimestamp,10));if(!isNaN(date.getTime())&&goog.string.isNumeric(utcTimestamp))return date.toUTCString()}catch(e){}return null};goog.provide("fireauth.deprecation");goog.provide("fireauth.deprecation.Deprecations");goog.require("fireauth.util");fireauth.deprecation.Deprecations={USER_GET_TOKEN:"firebase.User.prototype.getToken is deprecated. Please use"+" firebase.User.prototype.getIdToken instead."};fireauth.deprecation.shownMessages_={};fireauth.deprecation.log=function(message){if(fireauth.deprecation.shownMessages_[message])return;fireauth.deprecation.shownMessages_[message]=true;fireauth.util.consoleWarn(message)};
fireauth.deprecation.resetForTesting=function(){fireauth.deprecation.shownMessages_={}};goog.provide("fireauth.object");goog.require("fireauth.deprecation");goog.require("fireauth.deprecation.Deprecations");fireauth.object.isReadonlyConfigurable_=function(){try{var obj={};Object.defineProperty(obj,"abcd",{configurable:true,enumerable:true,value:1});Object.defineProperty(obj,"abcd",{configurable:true,enumerable:true,value:2});return obj["abcd"]==2}catch(e){return false}};fireauth.object.readonlyConfigurable_=fireauth.object.isReadonlyConfigurable_();
fireauth.object.setReadonlyProperty=function(obj,key,value){if(fireauth.object.readonlyConfigurable_)Object.defineProperty(obj,key,{configurable:true,enumerable:true,value:value});else obj[key]=value};fireauth.object.setDeprecatedReadonlyProperty=function(obj,key,value,deprecationMessage){if(fireauth.object.readonlyConfigurable_)Object.defineProperty(obj,key,{configurable:true,enumerable:true,get:function(){fireauth.deprecation.log(deprecationMessage);return value}});else obj[key]=value};
fireauth.object.setReadonlyProperties=function(obj,props){if(!props)return;for(var key in props)if(props.hasOwnProperty(key))fireauth.object.setReadonlyProperty(obj,key,props[key])};fireauth.object.makeReadonlyCopy=function(obj){var output={};fireauth.object.setReadonlyProperties(output,obj);return output};fireauth.object.makeWritableCopy=function(obj){var output={};for(var key in obj)if(obj.hasOwnProperty(key))output[key]=obj[key];return output};
fireauth.object.hasNonEmptyFields=function(opt_obj,opt_fields){if(!opt_fields||!opt_fields.length)return true;if(!opt_obj)return false;for(var i=0;i<opt_fields.length;i++){var field=opt_obj[opt_fields[i]];if(field===undefined||field===null||field==="")return false}return true};fireauth.object.unsafeCreateReadOnlyCopy=function(obj){var copy=obj;if(typeof obj=="object"&&obj!=null){copy="length"in obj?[]:{};for(var key in obj)fireauth.object.setReadonlyProperty(copy,key,fireauth.object.unsafeCreateReadOnlyCopy(obj[key]))}return copy};goog.provide("fireauth.ActionCodeInfo");goog.require("fireauth.object");
fireauth.ActionCodeInfo=function(response){var data={};var email=response[fireauth.ActionCodeInfo.ServerFieldName.EMAIL];var newEmail=response[fireauth.ActionCodeInfo.ServerFieldName.NEW_EMAIL];var operation=response[fireauth.ActionCodeInfo.ServerFieldName.REQUEST_TYPE];if(!email||!operation)throw new Error("Invalid provider user info!");data[fireauth.ActionCodeInfo.DataField.FROM_EMAIL]=newEmail||null;data[fireauth.ActionCodeInfo.DataField.EMAIL]=email;fireauth.object.setReadonlyProperty(this,fireauth.ActionCodeInfo.PropertyName.OPERATION,
operation);fireauth.object.setReadonlyProperty(this,fireauth.ActionCodeInfo.PropertyName.DATA,fireauth.object.unsafeCreateReadOnlyCopy(data))};fireauth.ActionCodeInfo.ServerFieldName={EMAIL:"email",NEW_EMAIL:"newEmail",REQUEST_TYPE:"requestType"};fireauth.ActionCodeInfo.DataField={EMAIL:"email",FROM_EMAIL:"fromEmail"};fireauth.ActionCodeInfo.PropertyName={DATA:"data",OPERATION:"operation"};goog.provide("fireauth.AuthError");goog.provide("fireauth.authenum");goog.provide("fireauth.authenum.Error");fireauth.AuthError=function(code,opt_message){this["code"]=fireauth.AuthError.ERROR_CODE_PREFIX+code;this.message=opt_message||fireauth.AuthError.MESSAGES_[code]||""};goog.inherits(fireauth.AuthError,Error);fireauth.AuthError.prototype.toPlainObject=function(){return{"code":this["code"],"message":this.message}};fireauth.AuthError.prototype.toJSON=function(){return this.toPlainObject()};
fireauth.AuthError.fromPlainObject=function(response){var fullCode=response&&response["code"];if(fullCode){var code=fullCode.substring(fireauth.AuthError.ERROR_CODE_PREFIX.length);return new fireauth.AuthError(code,response["message"])}return null};fireauth.AuthError.translateError=function(error,fromCode,toCode){if(error&&error["code"]&&error["code"]==fireauth.AuthError.ERROR_CODE_PREFIX+fromCode)return new fireauth.AuthError(toCode);return error};fireauth.AuthError.ERROR_CODE_PREFIX="auth/";
fireauth.authenum.Error={ARGUMENT_ERROR:"argument-error",APP_NOT_AUTHORIZED:"app-not-authorized",APP_NOT_INSTALLED:"app-not-installed",CAPTCHA_CHECK_FAILED:"captcha-check-failed",CODE_EXPIRED:"code-expired",CORDOVA_NOT_READY:"cordova-not-ready",CORS_UNSUPPORTED:"cors-unsupported",CREDENTIAL_ALREADY_IN_USE:"credential-already-in-use",CREDENTIAL_MISMATCH:"custom-token-mismatch",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",EMAIL_EXISTS:"email-already-in-use",
EXPIRED_OOB_CODE:"expired-action-code",EXPIRED_POPUP_REQUEST:"cancelled-popup-request",INTERNAL_ERROR:"internal-error",INVALID_API_KEY:"invalid-api-key",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_APP_ID:"invalid-app-id",INVALID_AUTH:"invalid-user-token",INVALID_AUTH_EVENT:"invalid-auth-event",INVALID_CERT_HASH:"invalid-cert-hash",INVALID_CODE:"invalid-verification-code",INVALID_CONTINUE_URI:"invalid-continue-uri",INVALID_CORDOVA_CONFIGURATION:"invalid-cordova-configuration",INVALID_CUSTOM_TOKEN:"invalid-custom-token",
INVALID_EMAIL:"invalid-email",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",INVALID_OAUTH_PROVIDER:"invalid-oauth-provider",INVALID_OOB_CODE:"invalid-action-code",INVALID_ORIGIN:"unauthorized-domain",INVALID_PASSWORD:"wrong-password",INVALID_PERSISTENCE:"invalid-persistence-type",INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",
INVALID_SESSION_INFO:"invalid-verification-id",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_AUTH_DOMAIN:"auth-domain-config-required",MISSING_CODE:"missing-verification-code",MISSING_CONTINUE_URI:"missing-continue-uri",MISSING_IFRAME_START:"missing-iframe-start",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",MODULE_DESTROYED:"app-deleted",NEED_CONFIRMATION:"account-exists-with-different-credential",
NETWORK_REQUEST_FAILED:"network-request-failed",NO_AUTH_EVENT:"no-auth-event",NO_SUCH_PROVIDER:"no-such-provider",OPERATION_NOT_ALLOWED:"operation-not-allowed",OPERATION_NOT_SUPPORTED:"operation-not-supported-in-this-environment",POPUP_BLOCKED:"popup-blocked",POPUP_CLOSED_BY_USER:"popup-closed-by-user",PROVIDER_ALREADY_LINKED:"provider-already-linked",QUOTA_EXCEEDED:"quota-exceeded",REDIRECT_CANCELLED_BY_USER:"redirect-cancelled-by-user",REDIRECT_OPERATION_PENDING:"redirect-operation-pending",TIMEOUT:"timeout",
TOKEN_EXPIRED:"user-token-expired",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",UNSUPPORTED_PERSISTENCE:"unsupported-persistence-type",USER_CANCELLED:"user-cancelled",USER_DELETED:"user-not-found",USER_DISABLED:"user-disabled",USER_MISMATCH:"user-mismatch",USER_SIGNED_OUT:"user-signed-out",WEAK_PASSWORD:"weak-password",WEB_STORAGE_UNSUPPORTED:"web-storage-unsupported"};fireauth.AuthError.MESSAGES_={};
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.ARGUMENT_ERROR]="";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_AUTHORIZED]="This app, identified by the domain where it's hosted, is not "+"authorized to use Firebase Authentication with the provided API key. "+"Review your key configuration in the Google API console.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.APP_NOT_INSTALLED]="The requested mobile application corresponding to the identifier ("+"Android package name or iOS bundle ID) provided is not installed on "+"this device.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CAPTCHA_CHECK_FAILED]="The reCAPTCHA response token provided is either invalid, expired, "+"already used or the domain associated with it does not match the list "+"of whitelisted domains.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CODE_EXPIRED]="The SMS code has expired. Please re-send the verification code to try "+"again.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORDOVA_NOT_READY]="Cordova framework is not ready.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CORS_UNSUPPORTED]="This browser is not supported.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE]="This credential is already associated with a different user account.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CREDENTIAL_MISMATCH]="The custom token corresponds to a different audience.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]="This operation is sensitive and requires recent authentication. Log in "+"again before retrying this request.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED]="Please activate "+"Dynamic Links in the Firebase Console and agree to the terms and "+"conditions.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EMAIL_EXISTS]="The email address is already in use by another account.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_OOB_CODE]="The action code has expired. ";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.EXPIRED_POPUP_REQUEST]="This operation has been cancelled due to another conflicting popup "+"being opened.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INTERNAL_ERROR]="An internal error has occurred.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_CREDENTIAL]="The phone verification request contains an invalid application verifier."+" The reCAPTCHA token response is either invalid or expired.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_APP_ID]="The mobile app identifier is not registed for the current project.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH]="The user's credential is no longer valid. The user must sign in again.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_AUTH_EVENT]="An internal error has occurred.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CODE]="The SMS verification code used to create the phone auth credential is "+"invalid. Please resend the verification code sms and be sure use the "+"verification code provided by the user.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CONTINUE_URI]="The continue URL provided in the request is invalid.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION]="The following"+" Cordova plugins must be installed to enable OAuth sign-in: "+"cordova-plugin-buildinfo, cordova-universal-links-plugin, "+"cordova-plugin-browsertab, cordova-plugin-inappbrowser and "+"cordova-plugin-customurlscheme.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CUSTOM_TOKEN]="The custom token format is incorrect. Please check the documentation.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_EMAIL]="The email address is badly formatted.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_API_KEY]="Your API key is invalid, please check you have copied it correctly.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_CERT_HASH]="The SHA-1 certificate hash provided is invalid.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_IDP_RESPONSE]="The supplied auth credential is malformed or has expired.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PERSISTENCE]="The specified persistence type is invalid. It can only be local, "+"session or none.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD]="The email template corresponding to this action contains invalid charac"+"ters in its message. Please fix by going to the Auth email templates se"+"ction in the Firebase Console.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_PROVIDER]="EmailAuthProvider is not supported for this operation. This operation "+"only supports OAuth providers.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID]="The OAuth client ID provided is either invalid or does not match the "+"specified API key.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_ORIGIN]="This domain is not authorized for OAuth operations for your Firebase "+"project. Edit the list of authorized domains from the Firebase console.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_OOB_CODE]="The action code is invalid. This can happen if the code is malformed, "+"expired, or has already been used.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PASSWORD]="The password is invalid or the user does not have a password.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_PHONE_NUMBER]="The format of the phone number provided is incorrect. Please enter the "+"phone number in a format that can be parsed into E.164 format. E.164 "+"phone numbers are written in the format [+][country code][subscriber "+"number including area code].";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL]="The email corresponding to this action failed to send as the provided "+"recipient email address is invalid.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SENDER]="The email template corresponding to this action contains an invalid sen"+"der email or name. Please fix by going to the Auth email templates sect"+"ion in the Firebase Console.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.INVALID_SESSION_INFO]="The verification ID used to create the phone auth credential is invalid.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME]="An Android "+"Package Name must be provided if the Android App is required to be "+"installed.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_AUTH_DOMAIN]="Be sure to include authDomain when calling firebase.initializeApp(), "+"by following the instructions in the Firebase console.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_APP_CREDENTIAL]="The phone verification request is missing an application verifier "+"assertion. A reCAPTCHA response token needs to be provided.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CODE]="The phone auth credential was created with an empty SMS verification "+"code.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_CONTINUE_URI]="A continue URL must be provided in the request.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IFRAME_START]="An internal error has occurred.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID]="An iOS Bundle ID must be provided if an App Store ID is provided.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_PHONE_NUMBER]="To send verification codes, provide a phone number for the recipient.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MISSING_SESSION_INFO]="The phone auth credential was created with an empty verification ID.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.MODULE_DESTROYED]="This instance of FirebaseApp has been deleted.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NEED_CONFIRMATION]="An account already exists with the same email address but different "+"sign-in credentials. Sign in using a provider associated with this "+"email address.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NETWORK_REQUEST_FAILED]="A network error (such as timeout, interrupted connection or "+"unreachable host) has occurred.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_AUTH_EVENT]="An internal error has occurred.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.NO_SUCH_PROVIDER]="User was not linked to an account with the given provider.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_ALLOWED]="The given sign-in provider is disabled for this Firebase project. "+"Enable it in the Firebase console, under the sign-in method tab of the "+"Auth section.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.OPERATION_NOT_SUPPORTED]="This operation is not supported in the environment this application is "+'running on. "location.protocol" must be http, https or chrome-extension'+" and web storage must be enabled.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_BLOCKED]="Unable to establish a connection with the popup. It may have been "+"blocked by the browser.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.POPUP_CLOSED_BY_USER]="The popup has been closed by the user before finalizing the operation.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.PROVIDER_ALREADY_LINKED]="User can only be linked to one identity for the given provider.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.QUOTA_EXCEEDED]="The project's quota for this operation has been exceeded.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER]="The redirect operation has been cancelled by the user before finalizing.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.REDIRECT_OPERATION_PENDING]="A redirect sign-in operation is already pending.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.TIMEOUT]="The operation has timed out.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.TOKEN_EXPIRED]="The user's credential is no longer valid. The user must sign in again.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER]="We have blocked all requests from this device due to unusual activity. "+"Try again later.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNAUTHORIZED_DOMAIN]="The domain of the continue URL is not whitelisted.  Please whitelist "+"the domain in the Firebase console.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE]="The current environment does not support the specified persistence type.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_CANCELLED]="User did not grant your application the permissions it requested.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DELETED]="There is no user record corresponding to this identifier. The user may "+"have been deleted.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_DISABLED]="The user account has been disabled by an administrator.";
fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_MISMATCH]="The supplied credentials do not correspond to the previously signed in "+"user.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.USER_SIGNED_OUT]="";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEAK_PASSWORD]="The password must be 6 characters long or more.";fireauth.AuthError.MESSAGES_[fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED]="This browser is not supported or 3rd party cookies and data may be "+"disabled.";goog.provide("fireauth.ActionCodeSettings");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");fireauth.ActionCodeSettings=function(settingsObj){this.initialize_(settingsObj)};
fireauth.ActionCodeSettings.prototype.initialize_=function(settingsObj){var continueUrl=settingsObj[fireauth.ActionCodeSettings.RawField.URL];if(typeof continueUrl==="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CONTINUE_URI);else if(typeof continueUrl!=="string"||typeof continueUrl==="string"&&!continueUrl.length)throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CONTINUE_URI);this.continueUrl_=continueUrl;this.apn_=null;this.amv_=null;this.installApp_=false;
var androidSettings=settingsObj[fireauth.ActionCodeSettings.RawField.ANDROID];if(androidSettings&&typeof androidSettings==="object"){var apn=androidSettings[fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME];var installApp=androidSettings[fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP];var amv=androidSettings[fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION];if(typeof apn==="string"&&apn.length){this.apn_=apn;if(typeof installApp!=="undefined"&&typeof installApp!=="boolean")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,
fireauth.ActionCodeSettings.AndroidRawField.INSTALL_APP+" property must be a boolean when specified.");this.installApp_=!!installApp;if(typeof amv!=="undefined"&&(typeof amv!=="string"||typeof amv==="string"&&!amv.length))throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,fireauth.ActionCodeSettings.AndroidRawField.MINIMUM_VERSION+" property must be a non empty string when specified.");this.amv_=amv||null}else if(typeof apn!=="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,
fireauth.ActionCodeSettings.AndroidRawField.PACKAGE_NAME+" property must be a non empty string when specified.");else if(typeof installApp!=="undefined"||typeof amv!=="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME);}else if(typeof androidSettings!=="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,fireauth.ActionCodeSettings.RawField.ANDROID+" property must be a non null object when specified.");this.ibi_=null;var iosSettings=
settingsObj[fireauth.ActionCodeSettings.RawField.IOS];if(iosSettings&&typeof iosSettings==="object"){var ibi=iosSettings[fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID];if(typeof ibi==="string"&&ibi.length)this.ibi_=ibi;else if(typeof ibi!=="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,fireauth.ActionCodeSettings.IosRawField.BUNDLE_ID+" property must be a non empty string when specified.");}else if(typeof iosSettings!=="undefined")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,
fireauth.ActionCodeSettings.RawField.IOS+" property must be a non null object when specified.");var canHandleCodeInApp=settingsObj[fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP];if(typeof canHandleCodeInApp!=="undefined"&&typeof canHandleCodeInApp!=="boolean")throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP+" property must be a boolean when specified.");this.canHandleCodeInApp_=!!canHandleCodeInApp;if(this.canHandleCodeInApp_&&
!this.ibi_&&!this.apn_)throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,fireauth.ActionCodeSettings.RawField.HANDLE_CODE_IN_APP+" property can't be true when no mobile application is provided.");};fireauth.ActionCodeSettings.RequestField={ANDROID_INSTALL_APP:"androidInstallApp",ANDROID_MINIMUM_VERSION:"androidMinimumVersion",ANDROID_PACKAGE_NAME:"androidPackageName",CAN_HANDLE_CODE_IN_APP:"canHandleCodeInApp",CONTINUE_URL:"continueUrl",IOS_BUNDLE_ID:"iOSBundleId"};
fireauth.ActionCodeSettings.RawField={ANDROID:"android",HANDLE_CODE_IN_APP:"handleCodeInApp",IOS:"iOS",URL:"url"};fireauth.ActionCodeSettings.AndroidRawField={INSTALL_APP:"installApp",MINIMUM_VERSION:"minimumVersion",PACKAGE_NAME:"packageName"};fireauth.ActionCodeSettings.IosRawField={BUNDLE_ID:"bundleId"};
fireauth.ActionCodeSettings.prototype.buildRequest=function(){var request={};request[fireauth.ActionCodeSettings.RequestField.CONTINUE_URL]=this.continueUrl_;request[fireauth.ActionCodeSettings.RequestField.CAN_HANDLE_CODE_IN_APP]=this.canHandleCodeInApp_;request[fireauth.ActionCodeSettings.RequestField.ANDROID_PACKAGE_NAME]=this.apn_;if(this.apn_){request[fireauth.ActionCodeSettings.RequestField.ANDROID_MINIMUM_VERSION]=this.amv_;request[fireauth.ActionCodeSettings.RequestField.ANDROID_INSTALL_APP]=
this.installApp_}request[fireauth.ActionCodeSettings.RequestField.IOS_BUNDLE_ID]=this.ibi_;for(var key in request)if(request[key]===null)delete request[key];return request};goog.provide("fireauth.IdToken");goog.require("goog.crypt.base64");
fireauth.IdToken=function(token){this.iss_=token["iss"];this.aud_=token["aud"];this.exp_=token["exp"];this.localId_=token["sub"];var now=goog.now()/1E3;this.iat_=token["iat"]||(now>this.exp_?this.exp_:now);this.email_=token["email"]||null;this.verified_=!!token["verified"];this.providerId_=token["provider_id"]||token["firebase"]&&token["firebase"]["sign_in_provider"]||null;this.anonymous_=!!token["is_anonymous"]||this.providerId_=="anonymous";this.federatedId_=token["federated_id"]||null;this.displayName_=
token["display_name"]||null;this.photoURL_=token["photo_url"]||null;this.phoneNumber_=token["phone_number"]||null};fireauth.IdToken.Firebase;fireauth.IdToken.JsonToken;fireauth.IdToken.prototype.getEmail=function(){return this.email_};fireauth.IdToken.prototype.getExp=function(){return this.exp_};fireauth.IdToken.prototype.getProviderId=function(){return this.providerId_};fireauth.IdToken.prototype.getDisplayName=function(){return this.displayName_};fireauth.IdToken.prototype.getPhotoUrl=function(){return this.photoURL_};
fireauth.IdToken.prototype.getLocalId=function(){return this.localId_};fireauth.IdToken.prototype.getFederatedId=function(){return this.federatedId_};fireauth.IdToken.prototype.isAnonymous=function(){return this.anonymous_};fireauth.IdToken.prototype.isVerified=function(){return this.verified_};fireauth.IdToken.prototype.isExpired=function(){var now=Math.floor(goog.now()/1E3);return this.getExp()<=now};fireauth.IdToken.prototype.getIssuer=function(){return this.iss_};
fireauth.IdToken.prototype.getPhoneNumber=function(){return this.phoneNumber_};fireauth.IdToken.parse=function(tokenString){var fields=tokenString.split(".");if(fields.length!=3)return null;var jsonInfo=fields[1];var padLen=(4-jsonInfo.length%4)%4;for(var i=0;i<padLen;i++)jsonInfo+=".";try{var token=JSON.parse(goog.crypt.base64.decodeString(jsonInfo,true));if(token["sub"]&&token["iss"]&&token["aud"]&&token["exp"])return new fireauth.IdToken(token)}catch(e){}return null};goog.provide("fireauth.idp");goog.provide("fireauth.idp.IdpSettings");goog.provide("fireauth.idp.ProviderId");goog.provide("fireauth.idp.Settings");fireauth.idp.ProviderId={ANONYMOUS:"anonymous",FACEBOOK:"facebook.com",FIREBASE:"firebase",GITHUB:"github.com",GOOGLE:"google.com",PASSWORD:"password",PHONE:"phone",TWITTER:"twitter.com"};fireauth.idp.IdpSettings;
fireauth.idp.RESERVED_OAUTH1_PARAMS=["oauth_consumer_key","oauth_nonce","oauth_signature","oauth_signature_method","oauth_timestamp","oauth_token","oauth_version"];fireauth.idp.RESERVED_OAUTH2_PARAMS=["client_id","response_type","scope","redirect_uri","state"];
fireauth.idp.Settings={FACEBOOK:{languageParam:"locale",popupWidth:500,popupHeight:600,providerId:fireauth.idp.ProviderId.FACEBOOK,reservedOAuthParameters:fireauth.idp.RESERVED_OAUTH2_PARAMS},GITHUB:{languageParam:null,popupWidth:500,popupHeight:620,providerId:fireauth.idp.ProviderId.GITHUB,reservedOAuthParameters:fireauth.idp.RESERVED_OAUTH2_PARAMS},GOOGLE:{languageParam:"hl",popupWidth:515,popupHeight:680,providerId:fireauth.idp.ProviderId.GOOGLE,reservedOAuthParameters:fireauth.idp.RESERVED_OAUTH2_PARAMS},
TWITTER:{languageParam:"lang",popupWidth:485,popupHeight:705,providerId:fireauth.idp.ProviderId.TWITTER,reservedOAuthParameters:fireauth.idp.RESERVED_OAUTH1_PARAMS}};fireauth.idp.getIdpSettings=function(providerId){for(var key in fireauth.idp.Settings)if(fireauth.idp.Settings[key].providerId==providerId)return fireauth.idp.Settings[key];return null};
fireauth.idp.getReservedOAuthParams=function(providerId){var settings=fireauth.idp.getIdpSettings(providerId);return settings&&settings.reservedOAuthParameters||[]};goog.provide("fireauth.AdditionalUserInfo");goog.provide("fireauth.FacebookAdditionalUserInfo");goog.provide("fireauth.FederatedAdditionalUserInfo");goog.provide("fireauth.GenericAdditionalUserInfo");goog.provide("fireauth.GithubAdditionalUserInfo");goog.provide("fireauth.GoogleAdditionalUserInfo");goog.provide("fireauth.TwitterAdditionalUserInfo");goog.require("fireauth.IdToken");goog.require("fireauth.idp");goog.require("fireauth.object");goog.require("fireauth.util");
fireauth.AdditionalUserInfo=function(){};
fireauth.AdditionalUserInfo.fromPlainObject=function(resp){var factory={};factory[fireauth.idp.ProviderId.FACEBOOK]=fireauth.FacebookAdditionalUserInfo;factory[fireauth.idp.ProviderId.GOOGLE]=fireauth.GoogleAdditionalUserInfo;factory[fireauth.idp.ProviderId.GITHUB]=fireauth.GithubAdditionalUserInfo;factory[fireauth.idp.ProviderId.TWITTER]=fireauth.TwitterAdditionalUserInfo;var providerId=resp&&resp[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];try{if(providerId)if(factory[providerId])return new factory[providerId](resp);
else return new fireauth.FederatedAdditionalUserInfo(resp);else if(typeof resp[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]!=="undefined")return new fireauth.GenericAdditionalUserInfo(resp)}catch(e){}return null};fireauth.AdditionalUserInfo.VerifyAssertionField={ID_TOKEN:"idToken",IS_NEW_USER:"isNewUser",PROVIDER_ID:"providerId",RAW_USER_INFO:"rawUserInfo",SCREEN_NAME:"screenName"};
fireauth.GenericAdditionalUserInfo=function(info){var providerId=info[fireauth.AdditionalUserInfo.VerifyAssertionField.PROVIDER_ID];if(!providerId&&info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]){var idToken=fireauth.IdToken.parse(info[fireauth.AdditionalUserInfo.VerifyAssertionField.ID_TOKEN]);if(idToken&&idToken.getProviderId())providerId=idToken.getProviderId()}if(!providerId)throw new Error("Invalid additional user info!");var isNewUser=!!info[fireauth.AdditionalUserInfo.VerifyAssertionField.IS_NEW_USER];
fireauth.object.setReadonlyProperty(this,"providerId",providerId);fireauth.object.setReadonlyProperty(this,"isNewUser",isNewUser)};fireauth.FederatedAdditionalUserInfo=function(info){fireauth.FederatedAdditionalUserInfo.base(this,"constructor",info);var profile=fireauth.util.parseJSON(info[fireauth.AdditionalUserInfo.VerifyAssertionField.RAW_USER_INFO]||"{}");fireauth.object.setReadonlyProperty(this,"profile",fireauth.object.unsafeCreateReadOnlyCopy(profile||{}))};
goog.inherits(fireauth.FederatedAdditionalUserInfo,fireauth.GenericAdditionalUserInfo);fireauth.FacebookAdditionalUserInfo=function(info){fireauth.FacebookAdditionalUserInfo.base(this,"constructor",info);if(this["providerId"]!=fireauth.idp.ProviderId.FACEBOOK)throw new Error("Invalid provider ID!");};goog.inherits(fireauth.FacebookAdditionalUserInfo,fireauth.FederatedAdditionalUserInfo);
fireauth.GithubAdditionalUserInfo=function(info){fireauth.GithubAdditionalUserInfo.base(this,"constructor",info);if(this["providerId"]!=fireauth.idp.ProviderId.GITHUB)throw new Error("Invalid provider ID!");fireauth.object.setReadonlyProperty(this,"username",this["profile"]&&this["profile"]["login"]||null)};goog.inherits(fireauth.GithubAdditionalUserInfo,fireauth.FederatedAdditionalUserInfo);
fireauth.GoogleAdditionalUserInfo=function(info){fireauth.GoogleAdditionalUserInfo.base(this,"constructor",info);if(this["providerId"]!=fireauth.idp.ProviderId.GOOGLE)throw new Error("Invalid provider ID!");};goog.inherits(fireauth.GoogleAdditionalUserInfo,fireauth.FederatedAdditionalUserInfo);
fireauth.TwitterAdditionalUserInfo=function(info){fireauth.TwitterAdditionalUserInfo.base(this,"constructor",info);if(this["providerId"]!=fireauth.idp.ProviderId.TWITTER)throw new Error("Invalid provider ID!");fireauth.object.setReadonlyProperty(this,"username",info[fireauth.AdditionalUserInfo.VerifyAssertionField.SCREEN_NAME]||null)};goog.inherits(fireauth.TwitterAdditionalUserInfo,fireauth.FederatedAdditionalUserInfo);goog.provide("fireauth.AuthCredential");goog.provide("fireauth.AuthProvider");goog.provide("fireauth.EmailAuthCredential");goog.provide("fireauth.EmailAuthProvider");goog.provide("fireauth.FacebookAuthProvider");goog.provide("fireauth.FederatedProvider");goog.provide("fireauth.GithubAuthProvider");goog.provide("fireauth.GoogleAuthProvider");goog.provide("fireauth.OAuthCredential");goog.provide("fireauth.OAuthProvider");goog.provide("fireauth.OAuthResponse");goog.provide("fireauth.PhoneAuthCredential");
goog.provide("fireauth.PhoneAuthProvider");goog.provide("fireauth.TwitterAuthProvider");goog.require("fireauth.AuthError");goog.require("fireauth.IdToken");goog.require("fireauth.authenum.Error");goog.require("fireauth.idp");goog.require("fireauth.object");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Uri");goog.require("goog.array");goog.require("goog.object");goog.forwardDeclare("fireauth.RpcHandler");fireauth.AuthCredential=function(){};fireauth.AuthCredential.prototype.getIdTokenProvider;
fireauth.AuthCredential.prototype.linkToIdToken;fireauth.AuthCredential.prototype.matchIdTokenWithUid;fireauth.AuthCredential.prototype.toPlainObject;
fireauth.AuthCredential.verifyTokenResponseUid=function(idTokenResolver,uid){return idTokenResolver.then(function(response){if(response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]){var parsedIdToken=fireauth.IdToken.parse(response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);if(!parsedIdToken||uid!=parsedIdToken.getLocalId())throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);return response}throw new fireauth.AuthError(fireauth.authenum.Error.USER_MISMATCH);}).thenCatch(function(error){throw fireauth.AuthError.translateError(error,
fireauth.authenum.Error.USER_DELETED,fireauth.authenum.Error.USER_MISMATCH);})};fireauth.AuthProvider=function(){};fireauth.AuthProvider.credential;fireauth.OAuthResponse;
fireauth.OAuthCredential=function(providerId,oauthResponse){if(oauthResponse["idToken"]||oauthResponse["accessToken"]){if(oauthResponse["idToken"])fireauth.object.setReadonlyProperty(this,"idToken",oauthResponse["idToken"]);if(oauthResponse["accessToken"])fireauth.object.setReadonlyProperty(this,"accessToken",oauthResponse["accessToken"])}else if(oauthResponse["oauthToken"]&&oauthResponse["oauthTokenSecret"]){fireauth.object.setReadonlyProperty(this,"accessToken",oauthResponse["oauthToken"]);fireauth.object.setReadonlyProperty(this,
"secret",oauthResponse["oauthTokenSecret"])}else throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"failed to construct a credential");fireauth.object.setReadonlyProperty(this,"providerId",providerId)};fireauth.OAuthCredential.prototype.getIdTokenProvider=function(rpcHandler){return rpcHandler.verifyAssertion(this.makeVerifyAssertionRequest_())};
fireauth.OAuthCredential.prototype.linkToIdToken=function(rpcHandler,idToken){var request=this.makeVerifyAssertionRequest_();request["idToken"]=idToken;return rpcHandler.verifyAssertionForLinking(request)};fireauth.OAuthCredential.prototype.matchIdTokenWithUid=function(rpcHandler,uid){var request=this.makeVerifyAssertionRequest_();return fireauth.AuthCredential.verifyTokenResponseUid(rpcHandler.verifyAssertionForExisting(request),uid)};
fireauth.OAuthCredential.prototype.makeVerifyAssertionRequest_=function(){var postBody={};if(this["idToken"])postBody["id_token"]=this["idToken"];if(this["accessToken"])postBody["access_token"]=this["accessToken"];if(this["secret"])postBody["oauth_token_secret"]=this["secret"];postBody["providerId"]=this["providerId"];return{"postBody":goog.Uri.QueryData.createFromMap(postBody).toString(),"requestUri":"http://localhost"}};
fireauth.OAuthCredential.prototype.toPlainObject=function(){var obj={"providerId":this["providerId"]};if(this["idToken"])obj["oauthIdToken"]=this["idToken"];if(this["accessToken"])obj["oauthAccessToken"]=this["accessToken"];if(this["secret"])obj["oauthTokenSecret"]=this["secret"];return obj};
fireauth.FederatedProvider=function(providerId,opt_reservedParams){this.reservedParams_=opt_reservedParams||[];fireauth.object.setReadonlyProperties(this,{"providerId":providerId,"isOAuthProvider":true});this.customParameters_={};this.languageParameter=(fireauth.idp.getIdpSettings(providerId)||{}).languageParam||null;this.defaultLanguageCode=null};fireauth.FederatedProvider.prototype.setCustomParameters=function(customParameters){this.customParameters_=goog.object.clone(customParameters);return this};
fireauth.FederatedProvider.prototype.setDefaultLanguage=function(languageCode){this.defaultLanguageCode=languageCode};
fireauth.FederatedProvider.prototype.getCustomParameters=function(){var params=fireauth.util.copyWithoutNullsOrUndefined(this.customParameters_);for(var key in params)params[key]=params[key].toString();var customParams=fireauth.util.removeEntriesWithKeys(params,this.reservedParams_);if(this.languageParameter&&this.defaultLanguageCode&&!customParams[this.languageParameter])customParams[this.languageParameter]=this.defaultLanguageCode;return customParams};
fireauth.OAuthProvider=function(providerId){fireauth.OAuthProvider.base(this,"constructor",providerId,fireauth.idp.RESERVED_OAUTH2_PARAMS);this.scopes_=[]};goog.inherits(fireauth.OAuthProvider,fireauth.FederatedProvider);fireauth.OAuthProvider.prototype.addScope=function(scope){if(!goog.array.contains(this.scopes_,scope))this.scopes_.push(scope);return this};fireauth.OAuthProvider.prototype.getScopes=function(){return goog.array.clone(this.scopes_)};
fireauth.OAuthProvider.prototype.credential=function(opt_idToken,opt_accessToken){if(!opt_idToken&&!opt_accessToken)throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"credential failed: must provide the ID token and/or the access "+"token.");var oauthResponse={"idToken":opt_idToken||null,"accessToken":opt_accessToken||null};return new fireauth.OAuthCredential(this["providerId"],oauthResponse)};
fireauth.FacebookAuthProvider=function(){fireauth.FacebookAuthProvider.base(this,"constructor",fireauth.idp.ProviderId.FACEBOOK)};goog.inherits(fireauth.FacebookAuthProvider,fireauth.OAuthProvider);fireauth.object.setReadonlyProperty(fireauth.FacebookAuthProvider,"PROVIDER_ID",fireauth.idp.ProviderId.FACEBOOK);
fireauth.FacebookAuthProvider.credential=function(accessTokenOrObject){if(!accessTokenOrObject)throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"credential failed: expected 1 argument (the OAuth access token).");var accessToken=accessTokenOrObject;if(goog.isObject(accessTokenOrObject))accessToken=accessTokenOrObject["accessToken"];return(new fireauth.FacebookAuthProvider).credential(null,accessToken)};
fireauth.GithubAuthProvider=function(){fireauth.GithubAuthProvider.base(this,"constructor",fireauth.idp.ProviderId.GITHUB)};goog.inherits(fireauth.GithubAuthProvider,fireauth.OAuthProvider);fireauth.object.setReadonlyProperty(fireauth.GithubAuthProvider,"PROVIDER_ID",fireauth.idp.ProviderId.GITHUB);
fireauth.GithubAuthProvider.credential=function(accessTokenOrObject){if(!accessTokenOrObject)throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"credential failed: expected 1 argument (the OAuth access token).");var accessToken=accessTokenOrObject;if(goog.isObject(accessTokenOrObject))accessToken=accessTokenOrObject["accessToken"];return(new fireauth.GithubAuthProvider).credential(null,accessToken)};
fireauth.GoogleAuthProvider=function(){fireauth.GoogleAuthProvider.base(this,"constructor",fireauth.idp.ProviderId.GOOGLE);this.addScope("profile")};goog.inherits(fireauth.GoogleAuthProvider,fireauth.OAuthProvider);fireauth.object.setReadonlyProperty(fireauth.GoogleAuthProvider,"PROVIDER_ID",fireauth.idp.ProviderId.GOOGLE);
fireauth.GoogleAuthProvider.credential=function(idTokenOrObject,accessToken){var idToken=idTokenOrObject;if(goog.isObject(idTokenOrObject)){idToken=idTokenOrObject["idToken"];accessToken=idTokenOrObject["accessToken"]}return(new fireauth.GoogleAuthProvider).credential(idToken,accessToken)};fireauth.TwitterAuthProvider=function(){fireauth.TwitterAuthProvider.base(this,"constructor",fireauth.idp.ProviderId.TWITTER,fireauth.idp.RESERVED_OAUTH1_PARAMS)};goog.inherits(fireauth.TwitterAuthProvider,fireauth.FederatedProvider);
fireauth.object.setReadonlyProperty(fireauth.TwitterAuthProvider,"PROVIDER_ID",fireauth.idp.ProviderId.TWITTER);
fireauth.TwitterAuthProvider.credential=function(tokenOrObject,secret){var tokenObject=tokenOrObject;if(!goog.isObject(tokenObject))tokenObject={"oauthToken":tokenOrObject,"oauthTokenSecret":secret};if(!tokenObject["oauthToken"]||!tokenObject["oauthTokenSecret"])throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"credential failed: expected 2 arguments (the OAuth access token "+"and secret).");return new fireauth.OAuthCredential(fireauth.idp.ProviderId.TWITTER,tokenObject)};
fireauth.EmailAuthCredential=function(email,password){this.email_=email;this.password_=password;fireauth.object.setReadonlyProperty(this,"providerId",fireauth.idp.ProviderId.PASSWORD)};fireauth.EmailAuthCredential.prototype.getIdTokenProvider=function(rpcHandler){return rpcHandler.verifyPassword(this.email_,this.password_)};fireauth.EmailAuthCredential.prototype.linkToIdToken=function(rpcHandler,idToken){return rpcHandler.updateEmailAndPassword(idToken,this.email_,this.password_)};
fireauth.EmailAuthCredential.prototype.matchIdTokenWithUid=function(rpcHandler,uid){return fireauth.AuthCredential.verifyTokenResponseUid(this.getIdTokenProvider(rpcHandler),uid)};fireauth.EmailAuthCredential.prototype.toPlainObject=function(){return{"email":this.email_,"password":this.password_}};fireauth.EmailAuthProvider=function(){fireauth.object.setReadonlyProperties(this,{"providerId":fireauth.idp.ProviderId.PASSWORD,"isOAuthProvider":false})};
fireauth.EmailAuthProvider.credential=function(email,password){return new fireauth.EmailAuthCredential(email,password)};fireauth.object.setReadonlyProperties(fireauth.EmailAuthProvider,{"PROVIDER_ID":fireauth.idp.ProviderId.PASSWORD});
fireauth.PhoneAuthCredential=function(params){if(!(params.verificationId&&params.verificationCode)&&!(params.temporaryProof&&params.phoneNumber))throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);this.params_=params;fireauth.object.setReadonlyProperty(this,"providerId",fireauth.idp.ProviderId.PHONE)};fireauth.PhoneAuthCredential.VerificationParameters_;fireauth.PhoneAuthCredential.TemporaryProofParameters_;fireauth.PhoneAuthCredential.Parameters_;
fireauth.PhoneAuthCredential.prototype.getIdTokenProvider=function(rpcHandler){return rpcHandler.verifyPhoneNumber(this.makeVerifyPhoneNumberRequest_())};fireauth.PhoneAuthCredential.prototype.linkToIdToken=function(rpcHandler,idToken){var request=this.makeVerifyPhoneNumberRequest_();request["idToken"]=idToken;return rpcHandler.verifyPhoneNumberForLinking(request)};
fireauth.PhoneAuthCredential.prototype.matchIdTokenWithUid=function(rpcHandler,uid){var request=this.makeVerifyPhoneNumberRequest_();return fireauth.AuthCredential.verifyTokenResponseUid(rpcHandler.verifyPhoneNumberForExisting(request),uid)};
fireauth.PhoneAuthCredential.prototype.toPlainObject=function(){var obj={"providerId":fireauth.idp.ProviderId.PHONE};if(this.params_.verificationId)obj["verificationId"]=this.params_.verificationId;if(this.params_.verificationCode)obj["verificationCode"]=this.params_.verificationCode;if(this.params_.temporaryProof)obj["temporaryProof"]=this.params_.temporaryProof;if(this.params_.phoneNumber)obj["phoneNumber"]=this.params_.phoneNumber;return obj};
fireauth.PhoneAuthCredential.prototype.makeVerifyPhoneNumberRequest_=function(){if(this.params_.temporaryProof&&this.params_.phoneNumber)return{"temporaryProof":this.params_.temporaryProof,"phoneNumber":this.params_.phoneNumber};return{"sessionInfo":this.params_.verificationId,"code":this.params_.verificationCode}};
fireauth.PhoneAuthProvider=function(opt_auth){try{this.auth_=opt_auth||firebase["auth"]()}catch(e){throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"Either an instance of firebase.auth.Auth must be passed as an "+"argument to the firebase.auth.PhoneAuthProvider constructor, or the "+"default firebase App instance must be initialized via "+"firebase.initializeApp().");}fireauth.object.setReadonlyProperties(this,{"providerId":fireauth.idp.ProviderId.PHONE,"isOAuthProvider":false})};
fireauth.PhoneAuthProvider.prototype.verifyPhoneNumber=function(phoneNumber,applicationVerifier){var rpcHandler=this.auth_.getRpcHandler();return goog.Promise.resolve(applicationVerifier["verify"]()).then(function(assertion){if(!goog.isString(assertion))throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"An implementation of firebase.auth.ApplicationVerifier"+".prototype.verify() must return a firebase.Promise "+"that resolves with a string.");switch(applicationVerifier["type"]){case "recaptcha":return rpcHandler.sendVerificationCode({"phoneNumber":phoneNumber,
"recaptchaToken":assertion}).then(function(verificationId){if(typeof applicationVerifier.reset==="function")applicationVerifier.reset();return verificationId},function(error){if(typeof applicationVerifier.reset==="function")applicationVerifier.reset();throw error;});default:throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"Only firebase.auth.ApplicationVerifiers with "+'type="recaptcha" are currently supported.');}})};
fireauth.PhoneAuthProvider.credential=function(verificationId,verificationCode){if(!verificationId)throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_SESSION_INFO);if(!verificationCode)throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);return new fireauth.PhoneAuthCredential({verificationId:verificationId,verificationCode:verificationCode})};fireauth.object.setReadonlyProperties(fireauth.PhoneAuthProvider,{"PROVIDER_ID":fireauth.idp.ProviderId.PHONE});
fireauth.AuthProvider.getCredentialFromResponse=function(response){if(response["temporaryProof"]&&response["phoneNumber"])return new fireauth.PhoneAuthCredential({temporaryProof:response["temporaryProof"],phoneNumber:response["phoneNumber"]});var providerId=response&&response["providerId"];if(!providerId||providerId===fireauth.idp.ProviderId.PASSWORD)return null;var accessToken=response&&response["oauthAccessToken"];var accessTokenSecret=response&&response["oauthTokenSecret"];var idToken=response&&
response["oauthIdToken"];try{switch(providerId){case fireauth.idp.ProviderId.GOOGLE:return fireauth.GoogleAuthProvider.credential(idToken,accessToken);case fireauth.idp.ProviderId.FACEBOOK:return fireauth.FacebookAuthProvider.credential(accessToken);case fireauth.idp.ProviderId.GITHUB:return fireauth.GithubAuthProvider.credential(accessToken);case fireauth.idp.ProviderId.TWITTER:return fireauth.TwitterAuthProvider.credential(accessToken,accessTokenSecret);default:return(new fireauth.OAuthProvider(providerId)).credential(idToken,
accessToken)}}catch(e){return null}};fireauth.AuthProvider.checkIfOAuthSupported=function(provider){if(!provider["isOAuthProvider"])throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_OAUTH_PROVIDER);};goog.provide("fireauth.AuthEvent");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");
fireauth.AuthEvent=function(type,opt_eventId,opt_urlResponse,opt_sessionId,opt_error){this.type_=type;this.eventId_=opt_eventId||null;this.urlResponse_=opt_urlResponse||null;this.sessionId_=opt_sessionId||null;this.error_=opt_error||null;if(!this.urlResponse_&&!this.error_)throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);else if(this.urlResponse_&&this.error_)throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);else if(this.urlResponse_&&!this.sessionId_)throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);
};fireauth.AuthEvent.Type={LINK_VIA_POPUP:"linkViaPopup",LINK_VIA_REDIRECT:"linkViaRedirect",REAUTH_VIA_POPUP:"reauthViaPopup",REAUTH_VIA_REDIRECT:"reauthViaRedirect",SIGN_IN_VIA_POPUP:"signInViaPopup",SIGN_IN_VIA_REDIRECT:"signInViaRedirect",UNKNOWN:"unknown",VERIFY_APP:"verifyApp"};fireauth.AuthEvent.isRedirect=function(event){return!!event.getType().match(/Redirect$/)};fireauth.AuthEvent.isPopup=function(event){return!!event.getType().match(/Popup$/)};fireauth.AuthEvent.prototype.getType=function(){return this.type_};
fireauth.AuthEvent.prototype.getEventId=function(){return this.eventId_};fireauth.AuthEvent.prototype.getUrlResponse=function(){return this.urlResponse_};fireauth.AuthEvent.prototype.getSessionId=function(){return this.sessionId_};fireauth.AuthEvent.prototype.getError=function(){return this.error_};fireauth.AuthEvent.prototype.hasError=function(){return!!this.error_};
fireauth.AuthEvent.prototype.toPlainObject=function(){return{"type":this.type_,"eventId":this.eventId_,"urlResponse":this.urlResponse_,"sessionId":this.sessionId_,"error":this.error_&&this.error_.toPlainObject()}};
fireauth.AuthEvent.fromPlainObject=function(rawResponse){var response=rawResponse||{};if(response["type"])return new fireauth.AuthEvent(response["type"],response["eventId"],response["urlResponse"],response["sessionId"],response["error"]&&fireauth.AuthError.fromPlainObject(response["error"]));return null};goog.provide("fireauth.DynamicLink");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.object");goog.require("fireauth.util");goog.require("goog.Uri");
fireauth.DynamicLink=function(fdlDomain,platform,appIdentifier,authDomain,payload,opt_clientId){var defaultError=new fireauth.AuthError(fireauth.authenum.Error.APP_NOT_INSTALLED);this.fallbackUrl_="https://"+authDomain+"/__/auth/handler?"+"firebaseError="+encodeURIComponent(fireauth.util.stringifyJSON(defaultError.toPlainObject()));fireauth.object.setReadonlyProperty(this,"fallbackUrl",this.fallbackUrl_);this.fdlDomain_=fdlDomain;fireauth.object.setReadonlyProperty(this,"fdlDomain",fdlDomain);this.platform_=
platform;fireauth.object.setReadonlyProperty(this,"platform",platform);this.appIdentifier_=appIdentifier;fireauth.object.setReadonlyProperty(this,"appIdentifier",appIdentifier);this.authDomain_=authDomain;fireauth.object.setReadonlyProperty(this,"authDomain",authDomain);this.link_=payload;fireauth.object.setReadonlyProperty(this,"payload",payload);this.appName_=null;fireauth.object.setReadonlyProperty(this,"appName",null);this.clientId_=opt_clientId||null;fireauth.object.setReadonlyProperty(this,
"clientId",this.clientId_)};fireauth.DynamicLink.prototype.setAppName=function(appName){this.appName_=appName||null;fireauth.object.setReadonlyProperty(this,"appName",appName)};fireauth.DynamicLink.prototype.setFallbackUrl=function(fallbackUrl){this.fallbackUrl_=fallbackUrl;fireauth.object.setReadonlyProperty(this,"fallbackUrl",fallbackUrl)};
fireauth.DynamicLink.fromURL=function(url){var uri=goog.Uri.parse(url);var fdlDomain=uri.getParameterValue("fdlDomain");var platform=uri.getParameterValue("platform");var appIdentifier=uri.getParameterValue("appIdentifier");var authDomain=uri.getParameterValue("authDomain");var payload=uri.getParameterValue("link");var appName=uri.getParameterValue("appName");if(fdlDomain&&platform&&appIdentifier&&authDomain&&payload&&appName){var dl=new fireauth.DynamicLink(fdlDomain,platform,appIdentifier,authDomain,
payload);dl.setAppName(appName);return dl}return null};fireauth.DynamicLink.parseDeepLink=function(url){var uri=goog.Uri.parse(url);var link=uri.getParameterValue("link");var doubleDeepLink=goog.Uri.parse(link).getParameterValue("link");var iOSdeepLink=uri.getParameterValue("deep_link_id");var iOSDoubledeepLink=goog.Uri.parse(iOSdeepLink).getParameterValue("link");var callbackUrl=iOSDoubledeepLink||iOSdeepLink||doubleDeepLink||link||url;return callbackUrl};
fireauth.DynamicLink.Platform={ANDROID:"android",IOS:"ios"};fireauth.DynamicLink.prototype.constructFdlBase_=function(fallbackUrl){var uri=goog.Uri.create("https",null,this.fdlDomain_,null,"/");if(this.platform_==fireauth.DynamicLink.Platform.ANDROID){uri.setParameterValue("apn",this.appIdentifier_);uri.setParameterValue("afl",fallbackUrl)}else if(this.platform_==fireauth.DynamicLink.Platform.IOS){uri.setParameterValue("ibi",this.appIdentifier_);uri.setParameterValue("ifl",fallbackUrl)}return uri};
fireauth.DynamicLink.prototype.constructCustomSchemeUrl_=function(){var uri=goog.Uri.create(this.clientId_?this.clientId_.split(".").reverse().join("."):this.appIdentifier_,null,this.clientId_?"firebaseauth":"google",null,"/link");uri.setParameterValue("deep_link_id",this.link_);return uri};
fireauth.DynamicLink.prototype.toString=function(opt_isAutoRedirect){if(!this.fdlDomain_)return this.constructCustomSchemeUrl_().toString();if(!!opt_isAutoRedirect)return this.generateAutomaticRedirectLink_();return this.generateButtonLink_()};fireauth.DynamicLink.prototype.generateButtonLink_=function(){var fdlLink=this.constructFdlBase_(this.fallbackUrl_);fdlLink.setParameterValue("link",this.link_);return fdlLink.toString()};
fireauth.DynamicLink.prototype.generateAutomaticRedirectLink_=function(){var doubleDeeplink=goog.Uri.create("https",null,this.authDomain_,null,"/__/auth/callback");doubleDeeplink.setParameterValue("fdlDomain",this.fdlDomain_);doubleDeeplink.setParameterValue("platform",this.platform_);doubleDeeplink.setParameterValue("appIdentifier",this.appIdentifier_);doubleDeeplink.setParameterValue("authDomain",this.authDomain_);doubleDeeplink.setParameterValue("link",this.link_);doubleDeeplink.setParameterValue("appName",
this.appName_||"");var fdlLink=this.constructFdlBase_(doubleDeeplink.toString());fdlLink.setParameterValue("link",doubleDeeplink.toString());return fdlLink.toString()};goog.provide("fireauth.OAuthSignInHandler");fireauth.OAuthSignInHandler=function(){};fireauth.OAuthSignInHandler.prototype.shouldBeInitializedEarly=function(){};fireauth.OAuthSignInHandler.prototype.hasVolatileStorage=function(){};fireauth.OAuthSignInHandler.prototype.initializeAndWait=function(){};fireauth.OAuthSignInHandler.prototype.processPopup=function(popupWin,mode,provider,onInitialize,onError,opt_eventId,opt_alreadyRedirected){};
fireauth.OAuthSignInHandler.prototype.processRedirect=function(mode,provider,opt_eventId){};fireauth.OAuthSignInHandler.prototype.unloadsOnRedirect=function(){};fireauth.OAuthSignInHandler.prototype.startPopupTimeout=function(popupWin,onError,timeoutDuration){};fireauth.OAuthSignInHandler.prototype.addAuthEventListener=function(listener){};fireauth.OAuthSignInHandler.prototype.removeAuthEventListener=function(listener){};goog.provide("fireauth.InvalidOriginError");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("goog.Uri");goog.require("goog.string");
fireauth.InvalidOriginError=function(origin){var code=fireauth.authenum.Error.INVALID_ORIGIN;var message=undefined;var uri=goog.Uri.parse(origin);var domain=uri.getDomain();var scheme=uri.getScheme();if(scheme=="chrome-extension")message=goog.string.subs(fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_,domain);else if(scheme=="http"||scheme=="https")message=goog.string.subs(fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_,domain);else code=fireauth.authenum.Error.OPERATION_NOT_SUPPORTED;
fireauth.InvalidOriginError.base(this,"constructor",code,message)};goog.inherits(fireauth.InvalidOriginError,fireauth.AuthError);fireauth.InvalidOriginError.HTTP_MESSAGE_TEMPLATE_="This domain (%s) is no"+"t authorized to run this operation. Add it to the OAuth redirect domain"+"s list in the Firebase console -> Auth section -> Sign in method tab.";
fireauth.InvalidOriginError.CHROME_EXTENSION_MESSAGE_TEMPLATE_="This chrom"+"e extension ID (chrome-extension://%s) is not authorized to run this op"+"eration. Add it to the OAuth redirect domains list in the Firebase cons"+"ole -> Auth section -> Sign in method tab.";goog.provide("fireauth.AuthErrorWithCredential");goog.require("fireauth.AuthError");goog.require("fireauth.AuthProvider");goog.require("fireauth.object");goog.require("goog.object");
fireauth.AuthErrorWithCredential=function(code,opt_credentialInfo,opt_message){fireauth.AuthErrorWithCredential.base(this,"constructor",code,opt_message);var credentialInfo=opt_credentialInfo||{};if(credentialInfo.email)fireauth.object.setReadonlyProperty(this,"email",credentialInfo.email);if(credentialInfo.phoneNumber)fireauth.object.setReadonlyProperty(this,"phoneNumber",credentialInfo.phoneNumber);if(credentialInfo.credential)fireauth.object.setReadonlyProperty(this,"credential",credentialInfo.credential)};
goog.inherits(fireauth.AuthErrorWithCredential,fireauth.AuthError);fireauth.AuthErrorWithCredential.CredentialInfo;fireauth.AuthErrorWithCredential.prototype.toPlainObject=function(){var obj={"code":this["code"],"message":this.message};if(this["email"])obj["email"]=this["email"];if(this["phoneNumber"])obj["phoneNumber"]=this["phoneNumber"];var credential=this["credential"]&&this["credential"].toPlainObject();if(credential)goog.object.extend(obj,credential);return obj};
fireauth.AuthErrorWithCredential.prototype.toJSON=function(){return this.toPlainObject()};
fireauth.AuthErrorWithCredential.fromPlainObject=function(response){if(response["code"]){var code=response["code"]||"";if(code.indexOf(fireauth.AuthError.ERROR_CODE_PREFIX)==0)code=code.substring(fireauth.AuthError.ERROR_CODE_PREFIX.length);var credentialInfo={credential:fireauth.AuthProvider.getCredentialFromResponse(response)};if(response["email"])credentialInfo.email=response["email"];else if(response["phoneNumber"])credentialInfo.phoneNumber=response["phoneNumber"];else return new fireauth.AuthError(code,
response["message"]||undefined);return new fireauth.AuthErrorWithCredential(code,credentialInfo,response["message"])}return null};goog.provide("fireauth.RpcHandler");goog.provide("fireauth.RpcHandler.ApiMethodHandler");goog.provide("fireauth.RpcHandler.VerifyAssertionData");goog.provide("fireauth.XmlHttpFactory");goog.require("fireauth.AuthError");goog.require("fireauth.AuthErrorWithCredential");goog.require("fireauth.authenum.Error");goog.require("fireauth.idp.ProviderId");goog.require("fireauth.object");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Uri");goog.require("goog.format.EmailAddress");
goog.require("goog.html.TrustedResourceUrl");goog.require("goog.json");goog.require("goog.net.CorsXmlHttpFactory");goog.require("goog.net.EventType");goog.require("goog.net.XhrIo");goog.require("goog.net.XmlHttpFactory");goog.require("goog.net.jsloader");goog.require("goog.object");goog.require("goog.string.Const");fireauth.XmlHttpFactory=function(xmlHttpRequest){this.xmlHttpRequest_=xmlHttpRequest;fireauth.XmlHttpFactory.base(this,"constructor")};goog.inherits(fireauth.XmlHttpFactory,goog.net.XmlHttpFactory);
fireauth.XmlHttpFactory.prototype.createInstance=function(){return new this.xmlHttpRequest_};fireauth.XmlHttpFactory.prototype.internalGetOptions=function(){return{}};
fireauth.RpcHandler=function(apiKey,opt_config,opt_firebaseClientVersion){var XMLHttpRequest=fireauth.util.getXMLHttpRequest();if(!XMLHttpRequest)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"The XMLHttpRequest compatibility library was not found.");this.apiKey_=apiKey;var config=opt_config||{};this.secureTokenEndpoint_=config["secureTokenEndpoint"]||fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_;this.secureTokenTimeout_=config["secureTokenTimeout"]||fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_;
this.secureTokenHeaders_=goog.object.clone(config["secureTokenHeaders"]||fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_);this.firebaseEndpoint_=config["firebaseEndpoint"]||fireauth.RpcHandler.FIREBASE_ENDPOINT_;this.firebaseTimeout_=config["firebaseTimeout"]||fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_;this.firebaseHeaders_=goog.object.clone(config["firebaseHeaders"]||fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_);if(opt_firebaseClientVersion){this.firebaseHeaders_["X-Client-Version"]=opt_firebaseClientVersion;
this.secureTokenHeaders_["X-Client-Version"]=opt_firebaseClientVersion}this.corsXhrFactory_=new goog.net.CorsXmlHttpFactory;this.xhrFactory_=new fireauth.XmlHttpFactory(XMLHttpRequest)};fireauth.RpcHandler.HttpMethod={POST:"POST",GET:"GET"};
fireauth.RpcHandler.ServerError={CAPTCHA_CHECK_FAILED:"CAPTCHA_CHECK_FAILED",CORS_UNSUPPORTED:"CORS_UNSUPPORTED",CREDENTIAL_MISMATCH:"CREDENTIAL_MISMATCH",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"CREDENTIAL_TOO_OLD_LOGIN_AGAIN",DYNAMIC_LINK_NOT_ACTIVATED:"DYNAMIC_LINK_NOT_ACTIVATED",EMAIL_EXISTS:"EMAIL_EXISTS",EMAIL_NOT_FOUND:"EMAIL_NOT_FOUND",EXPIRED_OOB_CODE:"EXPIRED_OOB_CODE",FEDERATED_USER_ID_ALREADY_LINKED:"FEDERATED_USER_ID_ALREADY_LINKED",INVALID_APP_CREDENTIAL:"INVALID_APP_CREDENTIAL",INVALID_APP_ID:"INVALID_APP_ID",
INVALID_CERT_HASH:"INVALID_CERT_HASH",INVALID_CODE:"INVALID_CODE",INVALID_CONTINUE_URI:"INVALID_CONTINUE_URI",INVALID_CUSTOM_TOKEN:"INVALID_CUSTOM_TOKEN",INVALID_EMAIL:"INVALID_EMAIL",INVALID_ID_TOKEN:"INVALID_ID_TOKEN",INVALID_IDP_RESPONSE:"INVALID_IDP_RESPONSE",INVALID_IDENTIFIER:"INVALID_IDENTIFIER",INVALID_MESSAGE_PAYLOAD:"INVALID_MESSAGE_PAYLOAD",INVALID_OAUTH_CLIENT_ID:"INVALID_OAUTH_CLIENT_ID",INVALID_OOB_CODE:"INVALID_OOB_CODE",INVALID_PASSWORD:"INVALID_PASSWORD",INVALID_PHONE_NUMBER:"INVALID_PHONE_NUMBER",
INVALID_RECIPIENT_EMAIL:"INVALID_RECIPIENT_EMAIL",INVALID_SENDER:"INVALID_SENDER",INVALID_SESSION_INFO:"INVALID_SESSION_INFO",INVALID_TEMPORARY_PROOF:"INVALID_TEMPORARY_PROOF",MISSING_ANDROID_PACKAGE_NAME:"MISSING_ANDROID_PACKAGE_NAME",MISSING_APP_CREDENTIAL:"MISSING_APP_CREDENTIAL",MISSING_CODE:"MISSING_CODE",MISSING_CONTINUE_URI:"MISSING_CONTINUE_URI",MISSING_CUSTOM_TOKEN:"MISSING_CUSTOM_TOKEN",MISSING_IOS_BUNDLE_ID:"MISSING_IOS_BUNDLE_ID",MISSING_OOB_CODE:"MISSING_OOB_CODE",MISSING_PASSWORD:"MISSING_PASSWORD",
MISSING_PHONE_NUMBER:"MISSING_PHONE_NUMBER",MISSING_SESSION_INFO:"MISSING_SESSION_INFO",OPERATION_NOT_ALLOWED:"OPERATION_NOT_ALLOWED",PASSWORD_LOGIN_DISABLED:"PASSWORD_LOGIN_DISABLED",QUOTA_EXCEEDED:"QUOTA_EXCEEDED",SESSION_EXPIRED:"SESSION_EXPIRED",TOKEN_EXPIRED:"TOKEN_EXPIRED",TOO_MANY_ATTEMPTS_TRY_LATER:"TOO_MANY_ATTEMPTS_TRY_LATER",UNAUTHORIZED_DOMAIN:"UNAUTHORIZED_DOMAIN",USER_CANCELLED:"USER_CANCELLED",USER_DISABLED:"USER_DISABLED",USER_NOT_FOUND:"USER_NOT_FOUND",WEAK_PASSWORD:"WEAK_PASSWORD"};
fireauth.RpcHandler.ServerErrorMap;fireauth.RpcHandler.AuthServerField={ALL_PROVIDERS:"allProviders",AUTH_URI:"authUri",AUTHORIZED_DOMAINS:"authorizedDomains",DYNAMIC_LINKS_DOMAIN:"dynamicLinksDomain",EMAIL:"email",ERROR_MESSAGE:"errorMessage",EXPIRES_IN:"expiresIn",ID_TOKEN:"idToken",NEED_CONFIRMATION:"needConfirmation",RECAPTCHA_SITE_KEY:"recaptchaSiteKey",REFRESH_TOKEN:"refreshToken",SESSION_ID:"sessionId",SESSION_INFO:"sessionInfo",TEMPORARY_PROOF:"temporaryProof"};
fireauth.RpcHandler.GetOobCodeRequestType={NEW_EMAIL_ACCEPT:"NEW_EMAIL_ACCEPT",PASSWORD_RESET:"PASSWORD_RESET",VERIFY_EMAIL:"VERIFY_EMAIL"};fireauth.RpcHandler.StsServerField={ACCESS_TOKEN:"access_token",EXPIRES_IN:"expires_in",REFRESH_TOKEN:"refresh_token"};fireauth.RpcHandler.prototype.getApiKey=function(){return this.apiKey_};fireauth.RpcHandler.FIREBASE_LOCALE_KEY_="X-Firebase-Locale";fireauth.RpcHandler.SECURE_TOKEN_ENDPOINT_="https://securetoken.googleapis.com/v1/token";
fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_TIMEOUT_=new fireauth.util.Delay(3E4,6E4);fireauth.RpcHandler.DEFAULT_SECURE_TOKEN_HEADERS_={"Content-Type":"application/x-www-form-urlencoded"};fireauth.RpcHandler.FIREBASE_ENDPOINT_="https://www.googleapis.com/identitytoolkit/v3/relyingparty/";fireauth.RpcHandler.DEFAULT_FIREBASE_TIMEOUT_=new fireauth.util.Delay(3E4,6E4);fireauth.RpcHandler.DEFAULT_FIREBASE_HEADERS_={"Content-Type":"application/json"};
fireauth.RpcHandler.prototype.updateCustomLocaleHeader=function(languageCode){if(languageCode)this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_]=languageCode;else delete this.firebaseHeaders_[fireauth.RpcHandler.FIREBASE_LOCALE_KEY_]};
fireauth.RpcHandler.prototype.updateClientVersion=function(clientVersion){if(clientVersion){this.firebaseHeaders_["X-Client-Version"]=clientVersion;this.secureTokenHeaders_["X-Client-Version"]=clientVersion}else{delete this.firebaseHeaders_["X-Client-Version"];delete this.secureTokenHeaders_["X-Client-Version"]}};
fireauth.RpcHandler.prototype.sendXhr_=function(url,opt_callback,opt_httpMethod,opt_data,opt_headers,opt_timeout){if(!fireauth.util.isOnline()){if(opt_callback)opt_callback(null);return}var sendXhr;if(fireauth.util.supportsCors())sendXhr=goog.bind(this.sendXhrUsingXhrIo_,this);else{if(!fireauth.RpcHandler.loadGApi_)fireauth.RpcHandler.loadGApi_=new goog.Promise(function(resolve,reject){fireauth.RpcHandler.loadGApiJs_(resolve,reject)});sendXhr=goog.bind(this.sendXhrUsingGApiClient_,this)}sendXhr(url,
opt_callback,opt_httpMethod,opt_data,opt_headers,opt_timeout)};
fireauth.RpcHandler.prototype.sendXhrUsingXhrIo_=function(url,opt_callback,opt_httpMethod,opt_data,opt_headers,opt_timeout){var isNode=fireauth.util.getEnvironment()==fireauth.util.Env.NODE;var xhrIo=fireauth.util.isNativeEnvironment()?isNode?new goog.net.XhrIo(this.xhrFactory_):new goog.net.XhrIo:new goog.net.XhrIo(this.corsXhrFactory_);var requestTimeout;if(opt_timeout){xhrIo.setTimeoutInterval(opt_timeout);requestTimeout=setTimeout(function(){xhrIo.dispatchEvent(goog.net.EventType.TIMEOUT)},opt_timeout)}xhrIo.listen(goog.net.EventType.COMPLETE,
function(){if(requestTimeout)clearTimeout(requestTimeout);var response=null;try{response=JSON.parse(this.getResponseText())||null}catch(e){response=null}if(opt_callback)opt_callback(response)});xhrIo.listenOnce(goog.net.EventType.READY,function(){if(requestTimeout)clearTimeout(requestTimeout);this.dispose()});xhrIo.listenOnce(goog.net.EventType.TIMEOUT,function(){if(requestTimeout)clearTimeout(requestTimeout);this.dispose();if(opt_callback)opt_callback(null)});xhrIo.send(url,opt_httpMethod,opt_data,
opt_headers)};fireauth.RpcHandler.GAPI_SRC_=goog.string.Const.from("https://apis.google.com/js/client.js?onload=%{onload}");fireauth.RpcHandler.GAPI_CALLBACK_NAME_="__fcb"+Math.floor(Math.random()*1E6).toString();
fireauth.RpcHandler.loadGApiJs_=function(callback,errback){if(!((window["gapi"]||{})["client"]||{})["request"]){goog.global[fireauth.RpcHandler.GAPI_CALLBACK_NAME_]=function(){if(!((window["gapi"]||{})["client"]||{})["request"])errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED));else callback()};var url=goog.html.TrustedResourceUrl.format(fireauth.RpcHandler.GAPI_SRC_,{"onload":fireauth.RpcHandler.GAPI_CALLBACK_NAME_});var result=goog.net.jsloader.safeLoad(url);result.addErrback(function(){errback(new Error(fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED))})}else callback()};
fireauth.RpcHandler.prototype.sendXhrUsingGApiClient_=function(url,opt_callback,opt_httpMethod,opt_data,opt_headers,opt_timeout){var self=this;fireauth.RpcHandler.loadGApi_.then(function(){window["gapi"]["client"]["setApiKey"](self.getApiKey());var oauth2Token=window["gapi"]["auth"]["getToken"]();window["gapi"]["auth"]["setToken"](null);window["gapi"]["client"]["request"]({"path":url,"method":opt_httpMethod,"body":opt_data,"headers":opt_headers,"authType":"none","callback":function(response){window["gapi"]["auth"]["setToken"](oauth2Token);
if(opt_callback)opt_callback(response)}})}).thenCatch(function(error){if(opt_callback)opt_callback({"error":{"message":error&&error["message"]||fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED}})})};fireauth.RpcHandler.prototype.validateStsTokenRequest_=function(data){if(data["grant_type"]=="refresh_token"&&data["refresh_token"])return true;else if(data["grant_type"]=="authorization_code"&&data["code"])return true;else return false};
fireauth.RpcHandler.prototype.requestStsToken=function(data){var self=this;return new goog.Promise(function(resolve,reject){if(self.validateStsTokenRequest_(data))self.sendXhr_(self.secureTokenEndpoint_+"?key="+encodeURIComponent(self.getApiKey()),function(response){if(!response)reject(new fireauth.AuthError(fireauth.authenum.Error.NETWORK_REQUEST_FAILED));else if(fireauth.RpcHandler.hasError_(response))reject(fireauth.RpcHandler.getDeveloperError_(response));else if(!response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN]||
!response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN])reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR));else resolve(response)},fireauth.RpcHandler.HttpMethod.POST,goog.Uri.QueryData.createFromMap(data).toString(),self.secureTokenHeaders_,self.secureTokenTimeout_.get());else reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR))})};fireauth.RpcHandler.serialize_=function(data){return goog.json.serialize(fireauth.util.copyWithoutNullsOrUndefined(data))};
fireauth.RpcHandler.prototype.requestFirebaseEndpoint=function(method,httpMethod,data,opt_customErrorMap,opt_cachebuster){var self=this;var uri=goog.Uri.parse(this.firebaseEndpoint_+method);uri.setParameterValue("key",this.getApiKey());if(opt_cachebuster)uri.setParameterValue("cb",goog.now().toString());var isGet=httpMethod==fireauth.RpcHandler.HttpMethod.GET;if(isGet)for(var key in data)if(data.hasOwnProperty(key))uri.setParameterValue(key,data[key]);return new goog.Promise(function(resolve,reject){self.sendXhr_(uri.toString(),
function(response){if(!response)reject(new fireauth.AuthError(fireauth.authenum.Error.NETWORK_REQUEST_FAILED));else if(fireauth.RpcHandler.hasError_(response))reject(fireauth.RpcHandler.getDeveloperError_(response,opt_customErrorMap||{}));else resolve(response)},httpMethod,isGet?undefined:fireauth.RpcHandler.serialize_(data),self.firebaseHeaders_,self.firebaseTimeout_.get())})};
fireauth.RpcHandler.validateRequestHasEmail_=function(request){if(!goog.format.EmailAddress.isValidAddrSpec(request["email"]))throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_EMAIL);};fireauth.RpcHandler.validateResponseHasEmail_=function(response){if(!goog.format.EmailAddress.isValidAddrSpec(response["email"]))throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};fireauth.RpcHandler.validateEmailIfPresent_=function(request){if("email"in request)fireauth.RpcHandler.validateRequestHasEmail_(request)};
fireauth.RpcHandler.getAdditionalScopes_=function(providerId,opt_additionalScopes){var scopes={};if(opt_additionalScopes&&opt_additionalScopes.length){scopes[providerId]=opt_additionalScopes.join(",");return goog.json.serialize(scopes)}return null};fireauth.RpcHandler.validateGetAuthResponse_=function(response){if(!response[fireauth.RpcHandler.AuthServerField.AUTH_URI]||!response[fireauth.RpcHandler.AuthServerField.SESSION_ID])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.prototype.getAuthUri=function(providerId,continueUri,opt_customParameters,opt_additionalScopes,opt_email,opt_sessionId){var request={"identifier":opt_email,"providerId":providerId,"continueUri":continueUri,"customParameter":opt_customParameters||{},"oauthScope":fireauth.RpcHandler.getAdditionalScopes_(providerId,opt_additionalScopes),"sessionId":opt_sessionId};if(opt_sessionId&&providerId==fireauth.idp.ProviderId.GOOGLE)request["authFlowType"]="CODE_FLOW";return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_AUTH_URI,
request)};fireauth.RpcHandler.prototype.fetchProvidersForIdentifier=function(identifier){var continueUri=fireauth.util.isHttpOrHttps()?fireauth.util.getCurrentUrl():"http://localhost";var request={"identifier":identifier,"continueUri":continueUri};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_AUTH_URI,request).then(function(response){return response[fireauth.RpcHandler.AuthServerField.ALL_PROVIDERS]||[]})};
fireauth.RpcHandler.prototype.getAuthorizedDomains=function(){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG,{}).then(function(response){return response[fireauth.RpcHandler.AuthServerField.AUTHORIZED_DOMAINS]||[]})};fireauth.RpcHandler.prototype.getRecaptchaParam=function(){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_RECAPTCHA_PARAM,{})};
fireauth.RpcHandler.prototype.getDynamicLinkDomain=function(){var request={"returnDynamicLink":true};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.RETURN_DYNAMIC_LINK,request)};fireauth.RpcHandler.prototype.isIosBundleIdValid=function(iosBundleId){var request={"iosBundleId":iosBundleId};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG,request).then(function(result){})};
fireauth.RpcHandler.prototype.isAndroidPackageNameValid=function(androidPackageName,opt_sha1Cert){var request={"androidPackageName":androidPackageName};if(!!opt_sha1Cert)request["sha1Cert"]=opt_sha1Cert;return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG,request).then(function(result){})};fireauth.RpcHandler.prototype.isOAuthClientIdValid=function(clientId){var request={"clientId":clientId};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_PROJECT_CONFIG,request).then(function(result){})};
fireauth.RpcHandler.prototype.getAccountInfoByIdToken=function(idToken){var request={"idToken":idToken};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_ACCOUNT_INFO,request)};fireauth.RpcHandler.validateVerifyCustomTokenRequest_=function(request){if(!request["token"])throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CUSTOM_TOKEN);};
fireauth.RpcHandler.prototype.verifyCustomToken=function(token){var request={"token":token};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_CUSTOM_TOKEN,request)};fireauth.RpcHandler.validateVerifyPasswordRequest_=function(request){fireauth.RpcHandler.validateRequestHasEmail_(request);if(!request["password"])throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_PASSWORD);};
fireauth.RpcHandler.prototype.verifyPassword=function(email,password){var request={"email":email,"password":password};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PASSWORD,request)};fireauth.RpcHandler.validateIdTokenResponse_=function(response){if(!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.validateGetRecaptchaParamResponse_=function(response){if(!response[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.validateVerifyPhoneNumberRequest_=function(request){if(request["phoneNumber"]||request["temporaryProof"]){if(!request["phoneNumber"]||!request["temporaryProof"])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);}else{if(!request["sessionInfo"])throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_SESSION_INFO);if(!request["code"])throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_CODE);}};
fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_=function(request){if(!request["idToken"])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);fireauth.RpcHandler.validateVerifyPhoneNumberRequest_(request)};fireauth.RpcHandler.validateCreateAccountRequest_=function(request){fireauth.RpcHandler.validateRequestHasEmail_(request);if(!request["password"])throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);};
fireauth.RpcHandler.prototype.createAccount=function(email,password){var request={"email":email,"password":password};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CREATE_ACCOUNT,request)};fireauth.RpcHandler.prototype.signInAnonymously=function(){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SIGN_IN_ANONYMOUSLY,{})};fireauth.RpcHandler.prototype.deleteAccount=function(idToken){var request={"idToken":idToken};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_ACCOUNT,request)};
fireauth.RpcHandler.prototype.updateEmail=function(idToken,newEmail){var request={"idToken":idToken,"email":newEmail};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO,request)};fireauth.RpcHandler.validateSetAccountInfoSensitive_=function(request){fireauth.RpcHandler.validateEmailIfPresent_(request);if(!request["password"])throw new fireauth.AuthError(fireauth.authenum.Error.WEAK_PASSWORD);};
fireauth.RpcHandler.prototype.updatePassword=function(idToken,newPassword){var request={"idToken":idToken,"password":newPassword};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE,request)};fireauth.RpcHandler.prototype.updateEmailAndPassword=function(idToken,newEmail,newPassword){var request={"idToken":idToken,"email":newEmail,"password":newPassword};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO_SENSITIVE,request)};
fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_={"displayName":"DISPLAY_NAME","photoUrl":"PHOTO_URL"};
fireauth.RpcHandler.prototype.updateProfile=function(idToken,profileData){var data={"idToken":idToken};var fieldsToDelete=[];goog.object.forEach(fireauth.RpcHandler.PROFILE_FIELD_TO_ENUM_NAME_,function(enumName,fieldName){var fieldValue=profileData[fieldName];if(fieldValue===null)fieldsToDelete.push(enumName);else if(fieldName in profileData)data[fieldName]=fieldValue});if(fieldsToDelete.length)data["deleteAttribute"]=fieldsToDelete;return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SET_ACCOUNT_INFO,
data)};fireauth.RpcHandler.validateOobCodeRequest_=function(request){if(request["requestType"]!=fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);fireauth.RpcHandler.validateRequestHasEmail_(request)};
fireauth.RpcHandler.validateEmailVerificationCodeRequest_=function(request){if(request["requestType"]!=fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.prototype.sendPasswordResetEmail=function(email,additionalRequestData){var request={"requestType":fireauth.RpcHandler.GetOobCodeRequestType.PASSWORD_RESET,"email":email};goog.object.extend(request,additionalRequestData);return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_OOB_CODE,request)};
fireauth.RpcHandler.prototype.sendEmailVerification=function(idToken,additionalRequestData){var request={"requestType":fireauth.RpcHandler.GetOobCodeRequestType.VERIFY_EMAIL,"idToken":idToken};goog.object.extend(request,additionalRequestData);return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.GET_EMAIL_VERIFICATION_CODE,request)};fireauth.RpcHandler.prototype.sendVerificationCode=function(request){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.SEND_VERIFICATION_CODE,request)};
fireauth.RpcHandler.prototype.verifyPhoneNumber=function(request){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER,request)};fireauth.RpcHandler.prototype.verifyPhoneNumberForLinking=function(request){return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_LINKING,request)};
fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_=function(response){if(response[fireauth.RpcHandler.AuthServerField.TEMPORARY_PROOF]){response["code"]=fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;throw fireauth.AuthErrorWithCredential.fromPlainObject(response);}fireauth.RpcHandler.validateIdTokenResponse_(response)};
fireauth.RpcHandler.prototype.verifyPhoneNumberForExisting=function(request){request["operation"]="REAUTH";return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_PHONE_NUMBER_FOR_EXISTING,request)};fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_={};fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_[fireauth.RpcHandler.ServerError.USER_NOT_FOUND]=fireauth.authenum.Error.USER_DELETED;
fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_=function(request){if(!goog.isArray(request["deleteProvider"]))throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};fireauth.RpcHandler.prototype.deleteLinkedAccounts=function(idToken,providersToDelete){var request={"idToken":idToken,"deleteProvider":providersToDelete};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.DELETE_LINKED_ACCOUNTS,request)};
fireauth.RpcHandler.validateVerifyAssertionRequest_=function(request){if(!request["requestUri"]||!request["sessionId"]&&!request["postBody"])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_=function(response){if(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]&&response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]==fireauth.RpcHandler.ServerError.USER_NOT_FOUND)throw new fireauth.AuthError(fireauth.authenum.Error.USER_DELETED);else if(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE])throw fireauth.RpcHandler.getDeveloperErrorFromCode_(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);
if(!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.validateVerifyAssertionResponse_=function(response){var error=null;if(response[fireauth.RpcHandler.AuthServerField.NEED_CONFIRMATION]){response["code"]=fireauth.authenum.Error.NEED_CONFIRMATION;error=fireauth.AuthErrorWithCredential.fromPlainObject(response)}else if(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]==fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED){response["code"]=fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;error=fireauth.AuthErrorWithCredential.fromPlainObject(response)}else if(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]==
fireauth.RpcHandler.ServerError.EMAIL_EXISTS){response["code"]=fireauth.authenum.Error.EMAIL_EXISTS;error=fireauth.AuthErrorWithCredential.fromPlainObject(response)}else if(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE])error=fireauth.RpcHandler.getDeveloperErrorFromCode_(response[fireauth.RpcHandler.AuthServerField.ERROR_MESSAGE]);if(error)throw error;if(!response[fireauth.RpcHandler.AuthServerField.ID_TOKEN])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.validateVerifyAssertionLinkRequest_=function(request){fireauth.RpcHandler.validateVerifyAssertionRequest_(request);if(!request["idToken"])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};fireauth.RpcHandler.VerifyAssertionData;fireauth.RpcHandler.prototype.verifyAssertion=function(request){request["returnIdpCredential"]=true;return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION,request)};
fireauth.RpcHandler.prototype.verifyAssertionForLinking=function(request){request["returnIdpCredential"]=true;return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_LINKING,request)};fireauth.RpcHandler.prototype.verifyAssertionForExisting=function(request){request["returnIdpCredential"]=true;request["autoCreate"]=false;return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.VERIFY_ASSERTION_FOR_EXISTING,request)};
fireauth.RpcHandler.validateApplyActionCodeRequest_=function(request){if(!request["oobCode"])throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_OOB_CODE);};fireauth.RpcHandler.validateCheckActionCodeResponse_=function(response){if(!response["email"]||!response["requestType"])throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);};
fireauth.RpcHandler.prototype.confirmPasswordReset=function(code,newPassword){var request={"oobCode":code,"newPassword":newPassword};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.RESET_PASSWORD,request)};fireauth.RpcHandler.prototype.checkActionCode=function(code){var request={"oobCode":code};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.CHECK_ACTION_CODE,request)};
fireauth.RpcHandler.prototype.applyActionCode=function(code){var request={"oobCode":code};return this.invokeRpc_(fireauth.RpcHandler.ApiMethod.APPLY_OOB_CODE,request)};fireauth.RpcHandler.ApiMethodHandler;
fireauth.RpcHandler.ApiMethod={APPLY_OOB_CODE:{endpoint:"setAccountInfo",requestValidator:fireauth.RpcHandler.validateApplyActionCodeRequest_,responseField:fireauth.RpcHandler.AuthServerField.EMAIL},CHECK_ACTION_CODE:{endpoint:"resetPassword",requestValidator:fireauth.RpcHandler.validateApplyActionCodeRequest_,responseValidator:fireauth.RpcHandler.validateCheckActionCodeResponse_},CREATE_ACCOUNT:{endpoint:"signupNewUser",requestValidator:fireauth.RpcHandler.validateCreateAccountRequest_,responseValidator:fireauth.RpcHandler.validateIdTokenResponse_,
returnSecureToken:true},CREATE_AUTH_URI:{endpoint:"createAuthUri"},DELETE_ACCOUNT:{endpoint:"deleteAccount",requestRequiredFields:["idToken"]},DELETE_LINKED_ACCOUNTS:{endpoint:"setAccountInfo",requestRequiredFields:["idToken","deleteProvider"],requestValidator:fireauth.RpcHandler.validateDeleteLinkedAccountsRequest_},GET_ACCOUNT_INFO:{endpoint:"getAccountInfo"},GET_AUTH_URI:{endpoint:"createAuthUri",requestRequiredFields:["continueUri","providerId"],responseValidator:fireauth.RpcHandler.validateGetAuthResponse_},
GET_EMAIL_VERIFICATION_CODE:{endpoint:"getOobConfirmationCode",requestRequiredFields:["idToken","requestType"],requestValidator:fireauth.RpcHandler.validateEmailVerificationCodeRequest_,responseField:fireauth.RpcHandler.AuthServerField.EMAIL},GET_OOB_CODE:{endpoint:"getOobConfirmationCode",requestRequiredFields:["requestType"],requestValidator:fireauth.RpcHandler.validateOobCodeRequest_,responseField:fireauth.RpcHandler.AuthServerField.EMAIL},GET_PROJECT_CONFIG:{cachebuster:true,endpoint:"getProjectConfig",
httpMethod:fireauth.RpcHandler.HttpMethod.GET},GET_RECAPTCHA_PARAM:{cachebuster:true,endpoint:"getRecaptchaParam",httpMethod:fireauth.RpcHandler.HttpMethod.GET,responseValidator:fireauth.RpcHandler.validateGetRecaptchaParamResponse_},RESET_PASSWORD:{endpoint:"resetPassword",requestValidator:fireauth.RpcHandler.validateApplyActionCodeRequest_,responseField:fireauth.RpcHandler.AuthServerField.EMAIL},RETURN_DYNAMIC_LINK:{cachebuster:true,endpoint:"getProjectConfig",httpMethod:fireauth.RpcHandler.HttpMethod.GET,
responseField:fireauth.RpcHandler.AuthServerField.DYNAMIC_LINKS_DOMAIN},SEND_VERIFICATION_CODE:{endpoint:"sendVerificationCode",requestRequiredFields:["phoneNumber","recaptchaToken"],responseField:fireauth.RpcHandler.AuthServerField.SESSION_INFO},SET_ACCOUNT_INFO:{endpoint:"setAccountInfo",requestRequiredFields:["idToken"],requestValidator:fireauth.RpcHandler.validateEmailIfPresent_,returnSecureToken:true},SET_ACCOUNT_INFO_SENSITIVE:{endpoint:"setAccountInfo",requestRequiredFields:["idToken"],requestValidator:fireauth.RpcHandler.validateSetAccountInfoSensitive_,
responseValidator:fireauth.RpcHandler.validateIdTokenResponse_,returnSecureToken:true},SIGN_IN_ANONYMOUSLY:{endpoint:"signupNewUser",responseValidator:fireauth.RpcHandler.validateIdTokenResponse_,returnSecureToken:true},VERIFY_ASSERTION:{endpoint:"verifyAssertion",requestValidator:fireauth.RpcHandler.validateVerifyAssertionRequest_,responseValidator:fireauth.RpcHandler.validateVerifyAssertionResponse_,returnSecureToken:true},VERIFY_ASSERTION_FOR_EXISTING:{endpoint:"verifyAssertion",requestValidator:fireauth.RpcHandler.validateVerifyAssertionRequest_,
responseValidator:fireauth.RpcHandler.validateVerifyAssertionForExistingResponse_,returnSecureToken:true},VERIFY_ASSERTION_FOR_LINKING:{endpoint:"verifyAssertion",requestValidator:fireauth.RpcHandler.validateVerifyAssertionLinkRequest_,responseValidator:fireauth.RpcHandler.validateVerifyAssertionResponse_,returnSecureToken:true},VERIFY_CUSTOM_TOKEN:{endpoint:"verifyCustomToken",requestValidator:fireauth.RpcHandler.validateVerifyCustomTokenRequest_,responseValidator:fireauth.RpcHandler.validateIdTokenResponse_,
returnSecureToken:true},VERIFY_PASSWORD:{endpoint:"verifyPassword",requestValidator:fireauth.RpcHandler.validateVerifyPasswordRequest_,responseValidator:fireauth.RpcHandler.validateIdTokenResponse_,returnSecureToken:true},VERIFY_PHONE_NUMBER:{endpoint:"verifyPhoneNumber",requestValidator:fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,responseValidator:fireauth.RpcHandler.validateIdTokenResponse_},VERIFY_PHONE_NUMBER_FOR_LINKING:{endpoint:"verifyPhoneNumber",requestValidator:fireauth.RpcHandler.validateVerifyPhoneNumberLinkRequest_,
responseValidator:fireauth.RpcHandler.validateVerifyPhoneNumberForLinkingResponse_},VERIFY_PHONE_NUMBER_FOR_EXISTING:{customErrorMap:fireauth.RpcHandler.verifyPhoneNumberForExistingErrorMap_,endpoint:"verifyPhoneNumber",requestValidator:fireauth.RpcHandler.validateVerifyPhoneNumberRequest_,responseValidator:fireauth.RpcHandler.validateIdTokenResponse_}};fireauth.RpcHandler.USE_STS_TOKEN_PARAM_="returnSecureToken";
fireauth.RpcHandler.prototype.invokeRpc_=function(method,request){if(!fireauth.object.hasNonEmptyFields(request,method.requestRequiredFields))return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR));var httpMethod=method.httpMethod||fireauth.RpcHandler.HttpMethod.POST;var self=this;var response;return goog.Promise.resolve(request).then(method.requestValidator).then(function(){if(method.returnSecureToken)request[fireauth.RpcHandler.USE_STS_TOKEN_PARAM_]=true;return self.requestFirebaseEndpoint(method.endpoint,
httpMethod,request,method.customErrorMap,method.cachebuster||false)}).then(function(tempResponse){response=tempResponse;return response}).then(method.responseValidator).then(function(){if(!method.responseField)return response;if(!(method.responseField in response))throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);return response[method.responseField]})};fireauth.RpcHandler.hasError_=function(resp){return!!resp["error"]};
fireauth.RpcHandler.getDeveloperErrorFromCode_=function(serverErrorCode){return fireauth.RpcHandler.getDeveloperError_({"error":{"errors":[{"message":serverErrorCode}],"code":400,"message":serverErrorCode}})};
fireauth.RpcHandler.getDeveloperError_=function(response,opt_customErrorMap){var errorMessage;var apiaryError=fireauth.RpcHandler.getApiaryError_(response);if(apiaryError)return apiaryError;var serverErrorCode=fireauth.RpcHandler.getErrorCode_(response);var errorMap={};errorMap[fireauth.RpcHandler.ServerError.INVALID_CUSTOM_TOKEN]=fireauth.authenum.Error.INVALID_CUSTOM_TOKEN;errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_MISMATCH]=fireauth.authenum.Error.CREDENTIAL_MISMATCH;errorMap[fireauth.RpcHandler.ServerError.MISSING_CUSTOM_TOKEN]=
fireauth.authenum.Error.INTERNAL_ERROR;errorMap[fireauth.RpcHandler.ServerError.INVALID_IDENTIFIER]=fireauth.authenum.Error.INVALID_EMAIL;errorMap[fireauth.RpcHandler.ServerError.MISSING_CONTINUE_URI]=fireauth.authenum.Error.INTERNAL_ERROR;errorMap[fireauth.RpcHandler.ServerError.INVALID_EMAIL]=fireauth.authenum.Error.INVALID_EMAIL;errorMap[fireauth.RpcHandler.ServerError.INVALID_PASSWORD]=fireauth.authenum.Error.INVALID_PASSWORD;errorMap[fireauth.RpcHandler.ServerError.USER_DISABLED]=fireauth.authenum.Error.USER_DISABLED;
errorMap[fireauth.RpcHandler.ServerError.MISSING_PASSWORD]=fireauth.authenum.Error.INTERNAL_ERROR;errorMap[fireauth.RpcHandler.ServerError.EMAIL_EXISTS]=fireauth.authenum.Error.EMAIL_EXISTS;errorMap[fireauth.RpcHandler.ServerError.PASSWORD_LOGIN_DISABLED]=fireauth.authenum.Error.OPERATION_NOT_ALLOWED;errorMap[fireauth.RpcHandler.ServerError.INVALID_IDP_RESPONSE]=fireauth.authenum.Error.INVALID_IDP_RESPONSE;errorMap[fireauth.RpcHandler.ServerError.FEDERATED_USER_ID_ALREADY_LINKED]=fireauth.authenum.Error.CREDENTIAL_ALREADY_IN_USE;
errorMap[fireauth.RpcHandler.ServerError.INVALID_MESSAGE_PAYLOAD]=fireauth.authenum.Error.INVALID_MESSAGE_PAYLOAD;errorMap[fireauth.RpcHandler.ServerError.INVALID_RECIPIENT_EMAIL]=fireauth.authenum.Error.INVALID_RECIPIENT_EMAIL;errorMap[fireauth.RpcHandler.ServerError.INVALID_SENDER]=fireauth.authenum.Error.INVALID_SENDER;errorMap[fireauth.RpcHandler.ServerError.EMAIL_NOT_FOUND]=fireauth.authenum.Error.USER_DELETED;errorMap[fireauth.RpcHandler.ServerError.EXPIRED_OOB_CODE]=fireauth.authenum.Error.EXPIRED_OOB_CODE;
errorMap[fireauth.RpcHandler.ServerError.INVALID_OOB_CODE]=fireauth.authenum.Error.INVALID_OOB_CODE;errorMap[fireauth.RpcHandler.ServerError.MISSING_OOB_CODE]=fireauth.authenum.Error.INTERNAL_ERROR;errorMap[fireauth.RpcHandler.ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]=fireauth.authenum.Error.CREDENTIAL_TOO_OLD_LOGIN_AGAIN;errorMap[fireauth.RpcHandler.ServerError.INVALID_ID_TOKEN]=fireauth.authenum.Error.INVALID_AUTH;errorMap[fireauth.RpcHandler.ServerError.TOKEN_EXPIRED]=fireauth.authenum.Error.TOKEN_EXPIRED;
errorMap[fireauth.RpcHandler.ServerError.USER_NOT_FOUND]=fireauth.authenum.Error.TOKEN_EXPIRED;errorMap[fireauth.RpcHandler.ServerError.CORS_UNSUPPORTED]=fireauth.authenum.Error.CORS_UNSUPPORTED;errorMap[fireauth.RpcHandler.ServerError.DYNAMIC_LINK_NOT_ACTIVATED]=fireauth.authenum.Error.DYNAMIC_LINK_NOT_ACTIVATED;errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_ID]=fireauth.authenum.Error.INVALID_APP_ID;errorMap[fireauth.RpcHandler.ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]=fireauth.authenum.Error.TOO_MANY_ATTEMPTS_TRY_LATER;
errorMap[fireauth.RpcHandler.ServerError.WEAK_PASSWORD]=fireauth.authenum.Error.WEAK_PASSWORD;errorMap[fireauth.RpcHandler.ServerError.OPERATION_NOT_ALLOWED]=fireauth.authenum.Error.OPERATION_NOT_ALLOWED;errorMap[fireauth.RpcHandler.ServerError.USER_CANCELLED]=fireauth.authenum.Error.USER_CANCELLED;errorMap[fireauth.RpcHandler.ServerError.CAPTCHA_CHECK_FAILED]=fireauth.authenum.Error.CAPTCHA_CHECK_FAILED;errorMap[fireauth.RpcHandler.ServerError.INVALID_APP_CREDENTIAL]=fireauth.authenum.Error.INVALID_APP_CREDENTIAL;
errorMap[fireauth.RpcHandler.ServerError.INVALID_CODE]=fireauth.authenum.Error.INVALID_CODE;errorMap[fireauth.RpcHandler.ServerError.INVALID_PHONE_NUMBER]=fireauth.authenum.Error.INVALID_PHONE_NUMBER;errorMap[fireauth.RpcHandler.ServerError.INVALID_SESSION_INFO]=fireauth.authenum.Error.INVALID_SESSION_INFO;errorMap[fireauth.RpcHandler.ServerError.INVALID_TEMPORARY_PROOF]=fireauth.authenum.Error.INVALID_IDP_RESPONSE;errorMap[fireauth.RpcHandler.ServerError.MISSING_APP_CREDENTIAL]=fireauth.authenum.Error.MISSING_APP_CREDENTIAL;
errorMap[fireauth.RpcHandler.ServerError.MISSING_CODE]=fireauth.authenum.Error.MISSING_CODE;errorMap[fireauth.RpcHandler.ServerError.MISSING_PHONE_NUMBER]=fireauth.authenum.Error.MISSING_PHONE_NUMBER;errorMap[fireauth.RpcHandler.ServerError.MISSING_SESSION_INFO]=fireauth.authenum.Error.MISSING_SESSION_INFO;errorMap[fireauth.RpcHandler.ServerError.QUOTA_EXCEEDED]=fireauth.authenum.Error.QUOTA_EXCEEDED;errorMap[fireauth.RpcHandler.ServerError.SESSION_EXPIRED]=fireauth.authenum.Error.CODE_EXPIRED;errorMap[fireauth.RpcHandler.ServerError.INVALID_CONTINUE_URI]=
fireauth.authenum.Error.INVALID_CONTINUE_URI;errorMap[fireauth.RpcHandler.ServerError.MISSING_ANDROID_PACKAGE_NAME]=fireauth.authenum.Error.MISSING_ANDROID_PACKAGE_NAME;errorMap[fireauth.RpcHandler.ServerError.MISSING_IOS_BUNDLE_ID]=fireauth.authenum.Error.MISSING_IOS_BUNDLE_ID;errorMap[fireauth.RpcHandler.ServerError.UNAUTHORIZED_DOMAIN]=fireauth.authenum.Error.UNAUTHORIZED_DOMAIN;errorMap[fireauth.RpcHandler.ServerError.INVALID_OAUTH_CLIENT_ID]=fireauth.authenum.Error.INVALID_OAUTH_CLIENT_ID;errorMap[fireauth.RpcHandler.ServerError.INVALID_CERT_HASH]=
fireauth.authenum.Error.INVALID_CERT_HASH;var customErrorMap=opt_customErrorMap||{};goog.object.extend(errorMap,customErrorMap);errorMessage=fireauth.RpcHandler.getErrorCodeDetails(serverErrorCode);for(var prefixCode in errorMap)if(serverErrorCode.indexOf(prefixCode)===0)return new fireauth.AuthError(errorMap[prefixCode],errorMessage);if(!errorMessage&&response)errorMessage=fireauth.util.stringifyJSON(response);return new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,errorMessage)};
fireauth.RpcHandler.getErrorCodeDetails=function(serverMessage){var matches=serverMessage.match(/^[^\s]+\s*:\s*(.*)$/);if(matches&&matches.length>1)return matches[1];return undefined};
fireauth.RpcHandler.getApiaryError_=function(response){var error=response["error"]&&response["error"]["errors"]&&response["error"]["errors"][0]||{};var reason=error["reason"]||"";var errorReasonMap={"keyInvalid":fireauth.authenum.Error.INVALID_API_KEY,"ipRefererBlocked":fireauth.authenum.Error.APP_NOT_AUTHORIZED};if(errorReasonMap[reason])return new fireauth.AuthError(errorReasonMap[reason]);return null};
fireauth.RpcHandler.getErrorCode_=function(resp){return resp["error"]&&resp["error"]["message"]||""};goog.provide("fireauth.constants");goog.provide("fireauth.constants.AuthEventType");fireauth.constants.OperationType={LINK:"link",REAUTHENTICATE:"reauthenticate",SIGN_IN:"signIn"};fireauth.constants.AuthEventType={FRAMEWORK_CHANGED:"frameworkChanged",LANGUAGE_CODE_CHANGED:"languageCodeChanged"};fireauth.constants.EndpointSettings;
fireauth.constants.Endpoint={PRODUCTION:{firebaseAuthEndpoint:"https://www.googleapis.com/identitytoolkit/v3/"+"relyingparty/",secureTokenEndpoint:"https://securetoken.googleapis.com/v1/token",id:"p"},STAGING:{firebaseAuthEndpoint:"https://staging-www.sandbox.googleapis.com/"+"identitytoolkit/v3/relyingparty/",secureTokenEndpoint:"https://staging-securetoken.sandbox.googleapis.com"+"/v1/token",id:"s"},TEST:{firebaseAuthEndpoint:"https://www-googleapis-test.sandbox.google.com/"+"identitytoolkit/v3/relyingparty/",
secureTokenEndpoint:"https://test-securetoken.sandbox.googleapis.com/v1"+"/token",id:"t"}};fireauth.constants.getEndpointConfig=function(opt_id){for(var endpointKey in fireauth.constants.Endpoint)if(fireauth.constants.Endpoint[endpointKey].id===opt_id){var endpoint=fireauth.constants.Endpoint[endpointKey];return{"firebaseEndpoint":endpoint.firebaseAuthEndpoint,"secureTokenEndpoint":endpoint.secureTokenEndpoint}}return null};
fireauth.constants.getEndpointId=function(opt_id){if(opt_id&&fireauth.constants.getEndpointConfig(opt_id))return opt_id;return undefined};fireauth.constants.clientEndpoint=fireauth.constants.getEndpointId("__EID__");goog.provide("fireauth.iframeclient.IframeWrapper");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.net.jsloader");goog.require("goog.string.Const");fireauth.iframeclient.IframeWrapper=function(url){this.url_=url;this.iframe_=null;this.onIframeOpen_=this.open_()};fireauth.iframeclient.IframeWrapper.Message;fireauth.iframeclient.IframeWrapper.prototype.getPath_=function(){return this.url_};
fireauth.iframeclient.IframeWrapper.prototype.onReady=function(){return this.onIframeOpen_};fireauth.iframeclient.IframeWrapper.prototype.getOptions_=function(){var options={"where":document.body,"url":this.getPath_(),"messageHandlersFilter":fireauth.util.getObjectRef("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),"attributes":{"style":{"position":"absolute","top":"-100px","width":"1px","height":"1px"}},"dontclear":true};return options};
fireauth.iframeclient.IframeWrapper.prototype.open_=function(){var self=this;return fireauth.iframeclient.IframeWrapper.loadGApiJs_().then(function(){return new goog.Promise(function(resolve,reject){var onOpen=function(iframe){self.iframe_=iframe;self.iframe_.restyle({"setHideOnLeave":false});var networkErrorTimer=setTimeout(function(){reject(new Error("Network Error"))},fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_.get());var clearTimerAndResolve=function(){clearTimeout(networkErrorTimer);resolve()};
iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve,function(error){reject(new Error("Network Error"))})};fireauth.util.getObjectRef("gapi.iframes.getContext")().open(self.getOptions_(),onOpen)})})};fireauth.iframeclient.IframeWrapper.prototype.sendMessage=function(message){var self=this;return this.onIframeOpen_.then(function(){return new goog.Promise(function(resolve,reject){self.iframe_.send(message["type"],message,resolve,fireauth.util.getObjectRef("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})};
fireauth.iframeclient.IframeWrapper.prototype.registerEvent=function(eventName,handler){var self=this;this.onIframeOpen_.then(function(){self.iframe_.register(eventName,handler,fireauth.util.getObjectRef("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})};fireauth.iframeclient.IframeWrapper.prototype.unregisterEvent=function(eventName,handler){var self=this;this.onIframeOpen_.then(function(){self.iframe_.unregister(eventName,handler)})};fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_=goog.string.Const.from("https://apis.google.com/js/api.js?onload=%{onload}");
fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_=new fireauth.util.Delay(3E4,6E4);fireauth.iframeclient.IframeWrapper.PING_TIMEOUT_=new fireauth.util.Delay(5E3,15E3);fireauth.iframeclient.IframeWrapper.cachedGApiLoader_=null;fireauth.iframeclient.IframeWrapper.resetCachedGApiLoader=function(){fireauth.iframeclient.IframeWrapper.cachedGApiLoader_=null};
fireauth.iframeclient.IframeWrapper.loadGApiJs_=function(){if(fireauth.iframeclient.IframeWrapper.cachedGApiLoader_)return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_;fireauth.iframeclient.IframeWrapper.cachedGApiLoader_=(new goog.Promise(function(resolve,reject){if(!fireauth.util.isOnline()){reject(new Error("Network Error"));return}var onGapiLoad=function(){fireauth.util.resetUnloadedGapiModules();var loader=fireauth.util.getObjectRef("gapi.load");loader("gapi.iframes",{"callback":resolve,
"ontimeout":function(){fireauth.util.resetUnloadedGapiModules();reject(new Error("Network Error"))},"timeout":fireauth.iframeclient.IframeWrapper.NETWORK_TIMEOUT_.get()})};if(fireauth.util.getObjectRef("gapi.iframes.Iframe"))resolve();else if(fireauth.util.getObjectRef("gapi.load"))onGapiLoad();else{var cbName="__iframefcb"+Math.floor(Math.random()*1E6).toString();goog.global[cbName]=function(){if(fireauth.util.getObjectRef("gapi.load"))onGapiLoad();else reject(new Error("Network Error"))};var url=
goog.html.TrustedResourceUrl.format(fireauth.iframeclient.IframeWrapper.GAPI_LOADER_SRC_,{"onload":cbName});var result=goog.Promise.resolve(goog.net.jsloader.safeLoad(url));result.thenCatch(function(error){reject(new Error("Network Error"))})}})).thenCatch(function(error){fireauth.iframeclient.IframeWrapper.cachedGApiLoader_=null;throw error;});return fireauth.iframeclient.IframeWrapper.cachedGApiLoader_};goog.provide("fireauth.iframeclient.IfcHandler");goog.provide("fireauth.iframeclient.IframeUrlBuilder");goog.provide("fireauth.iframeclient.OAuthUrlBuilder");goog.require("fireauth.AuthError");goog.require("fireauth.AuthEvent");goog.require("fireauth.AuthProvider");goog.require("fireauth.InvalidOriginError");goog.require("fireauth.OAuthSignInHandler");goog.require("fireauth.RpcHandler");goog.require("fireauth.authenum.Error");goog.require("fireauth.constants");goog.require("fireauth.iframeclient.IframeWrapper");
goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");goog.require("goog.Uri");goog.require("goog.array");goog.require("goog.object");fireauth.iframeclient.SCHEME="https";fireauth.iframeclient.PORT_NUMBER=null;
fireauth.iframeclient.IframeUrlBuilder=function(authDomain,apiKey,appName){this.authDomain_=authDomain;this.apiKey_=apiKey;this.appName_=appName;this.v_=null;this.uri_=goog.Uri.create(fireauth.iframeclient.SCHEME,null,this.authDomain_,fireauth.iframeclient.PORT_NUMBER,"/__/auth/iframe",null,null);this.uri_.setParameterValue("apiKey",this.apiKey_);this.uri_.setParameterValue("appName",this.appName_);this.endpointId_=null;this.frameworks_=[]};
fireauth.iframeclient.IframeUrlBuilder.prototype.setVersion=function(v){this.v_=v;return this};fireauth.iframeclient.IframeUrlBuilder.prototype.setEndpointId=function(eid){this.endpointId_=eid;return this};fireauth.iframeclient.IframeUrlBuilder.prototype.setFrameworks=function(frameworks){this.frameworks_=goog.array.clone(frameworks||[]);return this};
fireauth.iframeclient.IframeUrlBuilder.prototype.toString=function(){if(this.v_)this.uri_.setParameterValue("v",this.v_);else this.uri_.removeParameter("v");if(this.endpointId_)this.uri_.setParameterValue("eid",this.endpointId_);else this.uri_.removeParameter("eid");if(this.frameworks_.length)this.uri_.setParameterValue("fw",this.frameworks_.join(","));else this.uri_.removeParameter("fw");return this.uri_.toString()};
fireauth.iframeclient.OAuthUrlBuilder=function(authDomain,apiKey,appName,authType,provider){this.authDomain_=authDomain;this.apiKey_=apiKey;this.appName_=appName;this.authType_=authType;this.redirectUrl_=null;this.eventId_=null;this.v_=null;this.provider_=provider;this.endpointId_=null};fireauth.iframeclient.OAuthUrlBuilder.prototype.setRedirectUrl=function(redirectUrl){this.redirectUrl_=redirectUrl;return this};
fireauth.iframeclient.OAuthUrlBuilder.prototype.setEventId=function(eventId){this.eventId_=eventId;return this};fireauth.iframeclient.OAuthUrlBuilder.prototype.setVersion=function(v){this.v_=v;return this};fireauth.iframeclient.OAuthUrlBuilder.prototype.setEndpointId=function(eid){this.endpointId_=eid;return this};fireauth.iframeclient.OAuthUrlBuilder.prototype.setAdditionalParameters=function(additionalParams){this.additionalParams_=goog.object.clone(additionalParams||null);return this};
fireauth.iframeclient.OAuthUrlBuilder.prototype.toString=function(){var uri=goog.Uri.create(fireauth.iframeclient.SCHEME,null,this.authDomain_,fireauth.iframeclient.PORT_NUMBER,"/__/auth/handler",null,null);uri.setParameterValue("apiKey",this.apiKey_);uri.setParameterValue("appName",this.appName_);uri.setParameterValue("authType",this.authType_);if(this.provider_["isOAuthProvider"]){this.provider_.setDefaultLanguage(this.getAuthLanguage_());uri.setParameterValue("providerId",this.provider_["providerId"]);
var customParameters=this.provider_.getCustomParameters();if(!goog.object.isEmpty(customParameters))uri.setParameterValue("customParameters",fireauth.util.stringifyJSON(customParameters))}if(typeof this.provider_.getScopes==="function"){var scopes=this.provider_.getScopes();if(scopes.length)uri.setParameterValue("scopes",scopes.join(","))}if(this.redirectUrl_)uri.setParameterValue("redirectUrl",this.redirectUrl_);else uri.removeParameter("redirectUrl");if(this.eventId_)uri.setParameterValue("eventId",
this.eventId_);else uri.removeParameter("eventId");if(this.v_)uri.setParameterValue("v",this.v_);else uri.removeParameter("v");if(this.additionalParams_)for(var key in this.additionalParams_)if(this.additionalParams_.hasOwnProperty(key)&&!uri.getParameterValue(key))uri.setParameterValue(key,this.additionalParams_[key]);if(this.endpointId_)uri.setParameterValue("eid",this.endpointId_);else uri.removeParameter("eid");var frameworks=this.getAuthFrameworks_();if(frameworks.length)uri.setParameterValue("fw",
frameworks.join(","));return uri.toString()};fireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthLanguage_=function(){try{return firebase["app"](this.appName_)["auth"]().getLanguageCode()}catch(e){return null}};fireauth.iframeclient.OAuthUrlBuilder.prototype.getAuthFrameworks_=function(){return fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(this.appName_)};fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_=function(appName){try{return firebase["app"](appName)["auth"]().getFramework()}catch(e){return[]}};
fireauth.iframeclient.IfcHandler=function(authDomain,apiKey,appName,opt_clientVersion,opt_endpointId){this.authDomain_=authDomain;this.apiKey_=apiKey;this.appName_=appName;this.clientVersion_=opt_clientVersion||null;this.endpointId_=opt_endpointId||null;this.fullClientVersion_=null;this.iframeUrl_=null;this.rpcHandler_=null;this.authEventListeners_=[];this.originValidator_=null;this.isInitialized_=null};
fireauth.iframeclient.IfcHandler.getOriginValidator_=function(rpcHandler,opt_origin){var origin=opt_origin||fireauth.util.getCurrentUrl();return rpcHandler.getAuthorizedDomains().then(function(authorizedDomains){if(!fireauth.util.isAuthorizedDomain(authorizedDomains,origin))throw new fireauth.InvalidOriginError(fireauth.util.getCurrentUrl());})};
fireauth.iframeclient.IfcHandler.prototype.initialize=function(){if(this.isInitialized_)return this.isInitialized_;var self=this;this.isInitialized_=fireauth.util.onDomReady().then(function(){self.iframeWrapper_=new fireauth.iframeclient.IframeWrapper(self.getIframeUrl());self.registerEvents_()});return this.isInitialized_};
fireauth.iframeclient.IfcHandler.prototype.startPopupTimeout=function(popupWin,onError,timeoutDuration){var popupClosedByUserError=new fireauth.AuthError(fireauth.authenum.Error.POPUP_CLOSED_BY_USER);var webStorageNotSupportedError=new fireauth.AuthError(fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);var self=this;var isResolved=false;return this.initializeAndWait().then(function(){self.isWebStorageSupported().then(function(isSupported){if(!isSupported){if(popupWin)fireauth.util.closeWindow(popupWin);
onError(webStorageNotSupportedError);isResolved=true}})}).thenCatch(function(error){return}).then(function(){if(isResolved)return;return fireauth.util.onPopupClose(popupWin)}).then(function(){if(isResolved)return;return goog.Timer.promise(timeoutDuration).then(function(){onError(popupClosedByUserError)})})};fireauth.iframeclient.IfcHandler.prototype.shouldBeInitializedEarly=function(){var ua=fireauth.util.getUserAgentString();return!fireauth.util.runsInBackground(ua)&&!fireauth.util.iframeCanSyncWebStorage(ua)};
fireauth.iframeclient.IfcHandler.prototype.hasVolatileStorage=function(){return false};
fireauth.iframeclient.IfcHandler.prototype.processPopup=function(popupWin,mode,provider,onInitialize,onError,opt_eventId,opt_alreadyRedirected){if(!popupWin)return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.POPUP_BLOCKED));if(opt_alreadyRedirected&&!fireauth.util.runsInBackground()){this.initializeAndWait().thenCatch(function(error){fireauth.util.closeWindow(popupWin);onError(error)});onInitialize();return goog.Promise.resolve()}if(!this.originValidator_)this.originValidator_=
fireauth.iframeclient.IfcHandler.getOriginValidator_(this.getRpcHandler_());var self=this;return this.originValidator_.then(function(){var onReady=self.initializeAndWait().thenCatch(function(error){fireauth.util.closeWindow(popupWin);onError(error);throw error;});onInitialize();return onReady}).then(function(){fireauth.AuthProvider.checkIfOAuthSupported(provider);if(opt_alreadyRedirected)return;var oauthHelperWidgetUrl=fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(self.authDomain_,self.apiKey_,
self.appName_,mode,provider,null,opt_eventId,self.clientVersion_,undefined,self.endpointId_);fireauth.util.goTo(oauthHelperWidgetUrl,popupWin)}).thenCatch(function(e){if(e.code=="auth/network-request-failed")self.originValidator_=null;throw e;})};
fireauth.iframeclient.IfcHandler.prototype.getRpcHandler_=function(){if(!this.rpcHandler_){this.fullClientVersion_=this.clientVersion_?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,this.clientVersion_,fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(this.appName_)):null;this.rpcHandler_=new fireauth.RpcHandler(this.apiKey_,fireauth.constants.getEndpointConfig(this.endpointId_),this.fullClientVersion_)}return this.rpcHandler_};
fireauth.iframeclient.IfcHandler.prototype.processRedirect=function(mode,provider,opt_eventId){if(!this.originValidator_)this.originValidator_=fireauth.iframeclient.IfcHandler.getOriginValidator_(this.getRpcHandler_());var self=this;return this.originValidator_.then(function(){fireauth.AuthProvider.checkIfOAuthSupported(provider);var oauthHelperWidgetUrl=fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(self.authDomain_,self.apiKey_,self.appName_,mode,provider,fireauth.util.getCurrentUrl(),
opt_eventId,self.clientVersion_,undefined,self.endpointId_);fireauth.util.goTo(oauthHelperWidgetUrl)}).thenCatch(function(e){if(e.code=="auth/network-request-failed")self.originValidator_=null;throw e;})};
fireauth.iframeclient.IfcHandler.prototype.getIframeUrl=function(){if(!this.iframeUrl_)this.iframeUrl_=fireauth.iframeclient.IfcHandler.getAuthIframeUrl(this.authDomain_,this.apiKey_,this.appName_,this.clientVersion_,this.endpointId_,fireauth.iframeclient.OAuthUrlBuilder.getAuthFrameworksForApp_(this.appName_));return this.iframeUrl_};
fireauth.iframeclient.IfcHandler.prototype.initializeAndWait=function(){var self=this;return this.initialize().then(function(){return self.iframeWrapper_.onReady()}).thenCatch(function(error){self.originValidator_=null;throw new fireauth.AuthError(fireauth.authenum.Error.NETWORK_REQUEST_FAILED);})};fireauth.iframeclient.IfcHandler.prototype.unloadsOnRedirect=function(){return true};
fireauth.iframeclient.IfcHandler.getAuthIframeUrl=function(authDomain,apiKey,appName,opt_clientVersion,opt_endpointId,opt_frameworks){var builder=new fireauth.iframeclient.IframeUrlBuilder(authDomain,apiKey,appName);return builder.setVersion(opt_clientVersion).setEndpointId(opt_endpointId).setFrameworks(opt_frameworks).toString()};
fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl=function(authDomain,apiKey,appName,authType,provider,opt_redirectUrl,opt_eventId,opt_clientVersion,opt_additionalParams,opt_endpointId){var builder=new fireauth.iframeclient.OAuthUrlBuilder(authDomain,apiKey,appName,authType,provider);return builder.setRedirectUrl(opt_redirectUrl).setEventId(opt_eventId).setVersion(opt_clientVersion).setAdditionalParameters(opt_additionalParams).setEndpointId(opt_endpointId).toString()};
fireauth.iframeclient.IfcHandler.ReceiverEvent={AUTH_EVENT:"authEvent"};fireauth.iframeclient.IfcHandler.SenderEvent={WEB_STORAGE_SUPPORT_EVENT:"webStorageSupport"};fireauth.iframeclient.IfcHandler.Response={STATUS:"status",AUTH_EVENT:"authEvent",WEB_STORAGE_SUPPORT:"webStorageSupport"};fireauth.iframeclient.IfcHandler.Status={ACK:"ACK",ERROR:"ERROR"};
fireauth.iframeclient.IfcHandler.prototype.registerEvents_=function(){if(!this.iframeWrapper_)throw new Error("IfcHandler must be initialized!");var self=this;this.iframeWrapper_.registerEvent(fireauth.iframeclient.IfcHandler.ReceiverEvent.AUTH_EVENT,function(response){var resolveResponse={};if(response&&response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]){var isHandled=false;var authEvent=fireauth.AuthEvent.fromPlainObject(response[fireauth.iframeclient.IfcHandler.Response.AUTH_EVENT]);
for(var i=0;i<self.authEventListeners_.length;i++)isHandled=self.authEventListeners_[i](authEvent)||isHandled;resolveResponse={};resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS]=isHandled?fireauth.iframeclient.IfcHandler.Status.ACK:fireauth.iframeclient.IfcHandler.Status.ERROR;return goog.Promise.resolve(resolveResponse)}resolveResponse[fireauth.iframeclient.IfcHandler.Response.STATUS]=fireauth.iframeclient.IfcHandler.Status.ERROR;return goog.Promise.resolve(resolveResponse)})};
fireauth.iframeclient.IfcHandler.prototype.isWebStorageSupported=function(){var webStorageSupportEvent=fireauth.iframeclient.IfcHandler.SenderEvent.WEB_STORAGE_SUPPORT_EVENT;var message={"type":webStorageSupportEvent};var self=this;return this.initialize().then(function(){return self.iframeWrapper_.sendMessage(message)}).then(function(response){var key=fireauth.iframeclient.IfcHandler.Response.WEB_STORAGE_SUPPORT;if(response&&response.length&&typeof response[0][key]!=="undefined")return response[0][key];
throw new Error;})};fireauth.iframeclient.IfcHandler.prototype.addAuthEventListener=function(listener){this.authEventListeners_.push(listener)};fireauth.iframeclient.IfcHandler.prototype.removeAuthEventListener=function(listener){goog.array.removeAllIf(this.authEventListeners_,function(ele){return ele==listener})};goog.provide("fireauth.storage.Storage");fireauth.storage.Storage=function(){};fireauth.storage.Storage.prototype.get=function(key){};fireauth.storage.Storage.prototype.set=function(key,value){};fireauth.storage.Storage.prototype.remove=function(key){};fireauth.storage.Storage.prototype.addStorageListener=function(listener){};fireauth.storage.Storage.prototype.removeStorageListener=function(listener){};goog.provide("fireauth.storage.AsyncStorage");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.storage.Storage");goog.require("fireauth.util");goog.require("goog.Promise");
fireauth.storage.AsyncStorage=function(opt_asyncStorage){this.storage_=opt_asyncStorage||firebase.INTERNAL["reactNative"]&&firebase.INTERNAL["reactNative"]["AsyncStorage"];if(!this.storage_)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"The React Native compatibility library was not found.");};fireauth.storage.AsyncStorage.prototype.get=function(key){return goog.Promise.resolve(this.storage_["getItem"](key)).then(function(val){return val&&fireauth.util.parseJSON(val)})};
fireauth.storage.AsyncStorage.prototype.set=function(key,value){return goog.Promise.resolve(this.storage_["setItem"](key,fireauth.util.stringifyJSON(value)))};fireauth.storage.AsyncStorage.prototype.remove=function(key){return goog.Promise.resolve(this.storage_["removeItem"](key))};fireauth.storage.AsyncStorage.prototype.addStorageListener=function(listener){};fireauth.storage.AsyncStorage.prototype.removeStorageListener=function(listener){};goog.provide("fireauth.storage.InMemoryStorage");goog.require("goog.Promise");fireauth.storage.InMemoryStorage=function(){this.storage_={}};fireauth.storage.InMemoryStorage.prototype.get=function(key){return goog.Promise.resolve(this.storage_[key])};fireauth.storage.InMemoryStorage.prototype.set=function(key,value){this.storage_[key]=value;return goog.Promise.resolve()};fireauth.storage.InMemoryStorage.prototype.remove=function(key){delete this.storage_[key];return goog.Promise.resolve()};
fireauth.storage.InMemoryStorage.prototype.addStorageListener=function(listener){};fireauth.storage.InMemoryStorage.prototype.removeStorageListener=function(listener){};goog.provide("fireauth.storage.IndexedDB");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.storage.Storage");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");goog.require("goog.array");
fireauth.storage.IndexedDB=function(dbName,objectStoreName,dataKeyPath,valueKeyPath,version,opt_indexedDB){if(!fireauth.storage.IndexedDB.isAvailable())throw new fireauth.AuthError(fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);this.dbName_=dbName;this.objectStoreName_=objectStoreName;this.dataKeyPath_=dataKeyPath;this.valueKeyPath_=valueKeyPath;this.version_=version;this.localMap_={};this.storageListeners_=[];this.pendingOpsTracker_=0;this.indexedDB_=opt_indexedDB||goog.global.indexedDB};
fireauth.storage.IndexedDB.DB_NAME_="firebaseLocalStorageDb";fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_="firebaseLocalStorage";fireauth.storage.IndexedDB.DATA_KEY_PATH_="fbase_key";fireauth.storage.IndexedDB.VALUE_KEY_PATH_="value";fireauth.storage.IndexedDB.VERSION_=1;fireauth.storage.IndexedDB.POLLING_DELAY_=800;fireauth.storage.IndexedDB.STOP_ERROR_="STOP_EVENT";
fireauth.storage.IndexedDB.getFireauthManager=function(){if(!fireauth.storage.IndexedDB.managerInstance_)fireauth.storage.IndexedDB.managerInstance_=new fireauth.storage.IndexedDB(fireauth.storage.IndexedDB.DB_NAME_,fireauth.storage.IndexedDB.DATA_OBJECT_STORE_NAME_,fireauth.storage.IndexedDB.DATA_KEY_PATH_,fireauth.storage.IndexedDB.VALUE_KEY_PATH_,fireauth.storage.IndexedDB.VERSION_);return fireauth.storage.IndexedDB.managerInstance_};
fireauth.storage.IndexedDB.prototype.initializeDb_=function(){var self=this;return new goog.Promise(function(resolve,reject){var request=self.indexedDB_.open(self.dbName_,self.version_);request.onerror=function(event){reject(new Error(event.target.errorCode))};request.onupgradeneeded=function(event){var db=event.target.result;try{db.createObjectStore(self.objectStoreName_,{"keyPath":self.dataKeyPath_})}catch(e){reject(e)}};request.onsuccess=function(event){var db=event.target.result;resolve(db)}})};
fireauth.storage.IndexedDB.prototype.initializeDbAndRun_=function(){if(!this.initPromise_)this.initPromise_=this.initializeDb_();return this.initPromise_};fireauth.storage.IndexedDB.isAvailable=function(){try{return!!goog.global["indexedDB"]}catch(e){return false}};fireauth.storage.IndexedDB.prototype.getDataObjectStore_=function(tx){return tx.objectStore(this.objectStoreName_)};
fireauth.storage.IndexedDB.prototype.getTransaction_=function(db,isReadWrite){var tx=db.transaction([this.objectStoreName_],isReadWrite?"readwrite":"readonly");return tx};fireauth.storage.IndexedDB.prototype.onIDBRequest_=function(request){return new goog.Promise(function(resolve,reject){request.onsuccess=function(event){if(event&&event.target)resolve(event.target.result);else resolve()};request.onerror=function(event){reject(new Error(event.target.errorCode))}})};
fireauth.storage.IndexedDB.prototype.set=function(key,value){var isLocked=false;var dbTemp;var self=this;return this.initializeDbAndRun_().then(function(db){dbTemp=db;var objectStore=self.getDataObjectStore_(self.getTransaction_(dbTemp,true));return self.onIDBRequest_(objectStore.get(key))}).then(function(data){var objectStore=self.getDataObjectStore_(self.getTransaction_(dbTemp,true));if(data){data.value=value;return self.onIDBRequest_(objectStore.put(data))}self.pendingOpsTracker_++;isLocked=true;
var obj={};obj[self.dataKeyPath_]=key;obj[self.valueKeyPath_]=value;return self.onIDBRequest_(objectStore.add(obj))}).then(function(){self.localMap_[key]=value}).thenAlways(function(){if(isLocked)self.pendingOpsTracker_--})};fireauth.storage.IndexedDB.prototype.get=function(key){var self=this;return this.initializeDbAndRun_().then(function(db){return self.onIDBRequest_(self.getDataObjectStore_(self.getTransaction_(db,false)).get(key))}).then(function(response){return response&&response.value})};
fireauth.storage.IndexedDB.prototype.remove=function(key){var isLocked=false;var self=this;return this.initializeDbAndRun_().then(function(db){isLocked=true;self.pendingOpsTracker_++;return self.onIDBRequest_(self.getDataObjectStore_(self.getTransaction_(db,true))["delete"](key))}).then(function(){delete self.localMap_[key]}).thenAlways(function(){if(isLocked)self.pendingOpsTracker_--})};
fireauth.storage.IndexedDB.prototype.sync_=function(){var self=this;return this.initializeDbAndRun_().then(function(db){var objectStore=self.getDataObjectStore_(self.getTransaction_(db,false));if(objectStore["getAll"])return self.onIDBRequest_(objectStore["getAll"]());else return new goog.Promise(function(resolve,reject){var res=[];var request=objectStore.openCursor();request.onsuccess=function(event){var cursor=event.target.result;if(cursor){res.push(cursor.value);cursor["continue"]()}else resolve(res)};
request.onerror=function(event){reject(new Error(event.target.errorCode))}})}).then(function(res){var centralCopy={};var diffKeys=[];if(self.pendingOpsTracker_==0){for(var i=0;i<res.length;i++)centralCopy[res[i][self.dataKeyPath_]]=res[i][self.valueKeyPath_];diffKeys=fireauth.util.getKeyDiff(self.localMap_,centralCopy);self.localMap_=centralCopy}return diffKeys})};
fireauth.storage.IndexedDB.prototype.addStorageListener=function(listener){if(this.storageListeners_.length==0)this.startListeners_();this.storageListeners_.push(listener)};fireauth.storage.IndexedDB.prototype.removeStorageListener=function(listener){goog.array.removeAllIf(this.storageListeners_,function(ele){return ele==listener});if(this.storageListeners_.length==0)this.stopListeners_()};fireauth.storage.IndexedDB.prototype.removeAllStorageListeners=function(){this.storageListeners_=[];this.stopListeners_()};
fireauth.storage.IndexedDB.prototype.startListeners_=function(){var self=this;this.stopListeners_();var repeat=function(){self.poll_=goog.Timer.promise(fireauth.storage.IndexedDB.POLLING_DELAY_).then(goog.bind(self.sync_,self)).then(function(keys){if(keys.length>0)goog.array.forEach(self.storageListeners_,function(listener){listener(keys)})}).then(repeat).thenCatch(function(error){if(error.message!=fireauth.storage.IndexedDB.STOP_ERROR_)repeat()});return self.poll_};repeat()};
fireauth.storage.IndexedDB.prototype.stopListeners_=function(){if(this.poll_)this.poll_.cancel(fireauth.storage.IndexedDB.STOP_ERROR_)};goog.provide("fireauth.storage.LocalStorage");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.storage.Storage");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.events");
fireauth.storage.LocalStorage=function(){if(!fireauth.storage.LocalStorage.isAvailable()){if(fireauth.util.getEnvironment()==fireauth.util.Env.NODE)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"The LocalStorage compatibility library was not found.");throw new fireauth.AuthError(fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);}this.storage_=fireauth.storage.LocalStorage.getGlobalStorage()||firebase.INTERNAL["node"]["localStorage"]};
fireauth.storage.LocalStorage.getGlobalStorage=function(){try{var storage=goog.global["localStorage"];var key=fireauth.util.generateEventId();if(storage){storage["setItem"](key,"1");storage["removeItem"](key)}return storage}catch(e){return null}};fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_="__sak";
fireauth.storage.LocalStorage.isAvailable=function(){var isNode=fireauth.util.getEnvironment()==fireauth.util.Env.NODE;var storage=fireauth.storage.LocalStorage.getGlobalStorage()||isNode&&firebase.INTERNAL["node"]&&firebase.INTERNAL["node"]["localStorage"];if(!storage)return false;try{storage.setItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_,"1");storage.removeItem(fireauth.storage.LocalStorage.STORAGE_AVAILABLE_KEY_);return true}catch(e){return false}};
fireauth.storage.LocalStorage.prototype.get=function(key){var self=this;return goog.Promise.resolve().then(function(){var json=self.storage_.getItem(key);return fireauth.util.parseJSON(json)})};fireauth.storage.LocalStorage.prototype.set=function(key,value){var self=this;return goog.Promise.resolve().then(function(){var obj=fireauth.util.stringifyJSON(value);if(goog.isNull(obj))self.remove(key);else self.storage_.setItem(key,obj)})};
fireauth.storage.LocalStorage.prototype.remove=function(key){var self=this;return goog.Promise.resolve().then(function(){self.storage_.removeItem(key)})};fireauth.storage.LocalStorage.prototype.addStorageListener=function(listener){if(goog.global["window"])goog.events.listen(goog.global["window"],"storage",listener)};fireauth.storage.LocalStorage.prototype.removeStorageListener=function(listener){if(goog.global["window"])goog.events.unlisten(goog.global["window"],"storage",listener)};goog.provide("fireauth.storage.NullStorage");goog.require("goog.Promise");fireauth.storage.NullStorage=function(){this.storage_={}};fireauth.storage.NullStorage.prototype.get=function(key){return goog.Promise.resolve(null)};fireauth.storage.NullStorage.prototype.set=function(key,value){return goog.Promise.resolve()};fireauth.storage.NullStorage.prototype.remove=function(key){return goog.Promise.resolve()};fireauth.storage.NullStorage.prototype.addStorageListener=function(listener){};
fireauth.storage.NullStorage.prototype.removeStorageListener=function(listener){};goog.provide("fireauth.storage.SessionStorage");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.storage.Storage");goog.require("fireauth.util");goog.require("goog.Promise");
fireauth.storage.SessionStorage=function(){if(!fireauth.storage.SessionStorage.isAvailable()){if(fireauth.util.getEnvironment()==fireauth.util.Env.NODE)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"The SessionStorage compatibility library was not found.");throw new fireauth.AuthError(fireauth.authenum.Error.WEB_STORAGE_UNSUPPORTED);}this.storage_=fireauth.storage.SessionStorage.getGlobalStorage()||firebase.INTERNAL["node"]["sessionStorage"]};
fireauth.storage.SessionStorage.getGlobalStorage=function(){try{var storage=goog.global["sessionStorage"];var key=fireauth.util.generateEventId();if(storage){storage["setItem"](key,"1");storage["removeItem"](key)}return storage}catch(e){return null}};fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_="__sak";
fireauth.storage.SessionStorage.isAvailable=function(){var isNode=fireauth.util.getEnvironment()==fireauth.util.Env.NODE;var storage=fireauth.storage.SessionStorage.getGlobalStorage()||isNode&&firebase.INTERNAL["node"]&&firebase.INTERNAL["node"]["sessionStorage"];if(!storage)return false;try{storage.setItem(fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_,"1");storage.removeItem(fireauth.storage.SessionStorage.STORAGE_AVAILABLE_KEY_);return true}catch(e){return false}};
fireauth.storage.SessionStorage.prototype.get=function(key){var self=this;return goog.Promise.resolve().then(function(){var json=self.storage_.getItem(key);return fireauth.util.parseJSON(json)})};fireauth.storage.SessionStorage.prototype.set=function(key,value){var self=this;return goog.Promise.resolve().then(function(){var obj=fireauth.util.stringifyJSON(value);if(goog.isNull(obj))self.remove(key);else self.storage_.setItem(key,obj)})};
fireauth.storage.SessionStorage.prototype.remove=function(key){var self=this;return goog.Promise.resolve().then(function(){self.storage_.removeItem(key)})};fireauth.storage.SessionStorage.prototype.addStorageListener=function(listener){};fireauth.storage.SessionStorage.prototype.removeStorageListener=function(listener){};goog.provide("fireauth.storage.Factory");goog.provide("fireauth.storage.Factory.EnvConfig");goog.require("fireauth.storage.AsyncStorage");goog.require("fireauth.storage.InMemoryStorage");goog.require("fireauth.storage.IndexedDB");goog.require("fireauth.storage.LocalStorage");goog.require("fireauth.storage.NullStorage");goog.require("fireauth.storage.SessionStorage");goog.require("fireauth.util");fireauth.storage.Factory=function(env){this.env_=env};
fireauth.storage.Factory.getInstance=function(){if(!fireauth.storage.Factory.instance_)fireauth.storage.Factory.instance_=new fireauth.storage.Factory(fireauth.storage.Factory.getEnvConfig());return fireauth.storage.Factory.instance_};fireauth.storage.Factory.EnvConfigType;
fireauth.storage.Factory.EnvConfig={BROWSER:{persistent:fireauth.storage.LocalStorage,temporary:fireauth.storage.SessionStorage},NODE:{persistent:fireauth.storage.LocalStorage,temporary:fireauth.storage.SessionStorage},REACT_NATIVE:{persistent:fireauth.storage.AsyncStorage,temporary:fireauth.storage.NullStorage}};
fireauth.storage.Factory.getEnvConfig=function(){var envMap={};envMap[fireauth.util.Env.BROWSER]=fireauth.storage.Factory.EnvConfig.BROWSER;envMap[fireauth.util.Env.NODE]=fireauth.storage.Factory.EnvConfig.NODE;envMap[fireauth.util.Env.REACT_NATIVE]=fireauth.storage.Factory.EnvConfig.REACT_NATIVE;return envMap[fireauth.util.getEnvironment()]};
fireauth.storage.Factory.prototype.makePersistentStorage=function(){if(fireauth.util.isLocalStorageNotSynchronized())return fireauth.storage.IndexedDB.getFireauthManager();return new this.env_.persistent};fireauth.storage.Factory.prototype.makeTemporaryStorage=function(){return new this.env_.temporary};fireauth.storage.Factory.prototype.makeInMemoryStorage=function(){return new fireauth.storage.InMemoryStorage};goog.provide("fireauth.authStorage");goog.provide("fireauth.authStorage.Key");goog.provide("fireauth.authStorage.Manager");goog.provide("fireauth.authStorage.Persistence");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");goog.require("fireauth.storage.Factory");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.array");goog.require("goog.events");goog.require("goog.object");fireauth.authStorage.NAMESPACE_="firebase";
fireauth.authStorage.SEPARATOR_=":";fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY=10;fireauth.authStorage.Persistence={LOCAL:"local",NONE:"none",SESSION:"session"};
fireauth.authStorage.validatePersistenceArgument=function(arg){var invalidTypeError=new fireauth.AuthError(fireauth.authenum.Error.INVALID_PERSISTENCE);var unsupportedTypeError=new fireauth.AuthError(fireauth.authenum.Error.UNSUPPORTED_PERSISTENCE);if(!goog.object.containsValue(fireauth.authStorage.Persistence,arg)||typeof arg!=="string")throw invalidTypeError;switch(fireauth.util.getEnvironment()){case fireauth.util.Env.REACT_NATIVE:if(arg===fireauth.authStorage.Persistence.SESSION)throw unsupportedTypeError;
break;case fireauth.util.Env.NODE:if(arg!==fireauth.authStorage.Persistence.NONE)throw unsupportedTypeError;break;case fireauth.util.Env.BROWSER:default:if(!fireauth.util.isWebStorageSupported()&&arg!==fireauth.authStorage.Persistence.NONE)throw unsupportedTypeError;break}};fireauth.authStorage.Key;
fireauth.authStorage.Manager=function(namespace,separator,safariLocalStorageNotSynced,runsInBackground,webStorageSupported){this.namespace_=namespace;this.separator_=separator;this.safariLocalStorageNotSynced_=safariLocalStorageNotSynced;this.runsInBackground_=runsInBackground;this.webStorageSupported_=webStorageSupported;this.listeners_={};var storageFactory=fireauth.storage.Factory.getInstance();try{this.persistentStorage_=storageFactory.makePersistentStorage()}catch(e){this.persistentStorage_=
storageFactory.makeInMemoryStorage();this.localStorageNotSynchronized_=false;this.runsInBackground_=true}try{this.temporaryStorage_=storageFactory.makeTemporaryStorage()}catch(e$4){this.temporaryStorage_=storageFactory.makeInMemoryStorage()}this.inMemoryStorage_=storageFactory.makeInMemoryStorage();this.storageChangeEventHandler_=goog.bind(this.storageChangeEvent_,this);this.localMap_={}};
fireauth.authStorage.Manager.getInstance=function(){if(!fireauth.authStorage.Manager.instance_)fireauth.authStorage.Manager.instance_=new fireauth.authStorage.Manager(fireauth.authStorage.NAMESPACE_,fireauth.authStorage.SEPARATOR_,fireauth.util.isSafariLocalStorageNotSynced(),fireauth.util.runsInBackground(),fireauth.util.isWebStorageSupported());return fireauth.authStorage.Manager.instance_};
fireauth.authStorage.Manager.prototype.getStorage_=function(persistent){switch(persistent){case fireauth.authStorage.Persistence.SESSION:return this.temporaryStorage_;case fireauth.authStorage.Persistence.NONE:return this.inMemoryStorage_;case fireauth.authStorage.Persistence.LOCAL:default:return this.persistentStorage_}};fireauth.authStorage.Manager.prototype.getKeyName_=function(dataKey,opt_id){return this.namespace_+this.separator_+dataKey.name+(opt_id?this.separator_+opt_id:"")};
fireauth.authStorage.Manager.prototype.get=function(dataKey,opt_id){var keyName=this.getKeyName_(dataKey,opt_id);return this.getStorage_(dataKey.persistent).get(keyName)};fireauth.authStorage.Manager.prototype.remove=function(dataKey,opt_id){var keyName=this.getKeyName_(dataKey,opt_id);if(dataKey.persistent==fireauth.authStorage.Persistence.LOCAL)this.localMap_[keyName]=null;return this.getStorage_(dataKey.persistent).remove(keyName)};
fireauth.authStorage.Manager.prototype.set=function(dataKey,value,opt_id){var keyName=this.getKeyName_(dataKey,opt_id);var self=this;var storage=this.getStorage_(dataKey.persistent);return storage.set(keyName,value).then(function(){return storage.get(keyName)}).then(function(serializedValue){if(dataKey.persistent==fireauth.authStorage.Persistence.LOCAL)self.localMap_[keyName]=serializedValue})};
fireauth.authStorage.Manager.prototype.addListener=function(dataKey,id,listener){var key=this.getKeyName_(dataKey,id);if(this.webStorageSupported_)this.localMap_[key]=goog.global["localStorage"]["getItem"](key);if(goog.object.isEmpty(this.listeners_))this.startListeners_();if(!this.listeners_[key])this.listeners_[key]=[];this.listeners_[key].push(listener)};
fireauth.authStorage.Manager.prototype.removeListener=function(dataKey,id,listener){var key=this.getKeyName_(dataKey,id);if(this.listeners_[key]){goog.array.removeAllIf(this.listeners_[key],function(ele){return ele==listener});if(this.listeners_[key].length==0)delete this.listeners_[key]}if(goog.object.isEmpty(this.listeners_))this.stopListeners_()};fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_=1E3;
fireauth.authStorage.Manager.prototype.startListeners_=function(){this.getStorage_(fireauth.authStorage.Persistence.LOCAL).addStorageListener(this.storageChangeEventHandler_);if(!this.runsInBackground_&&!fireauth.util.isLocalStorageNotSynchronized()&&this.webStorageSupported_)this.startManualListeners_()};
fireauth.authStorage.Manager.prototype.startManualListeners_=function(){var self=this;this.stopManualListeners_();this.manualListenerTimer_=setInterval(function(){for(var key in self.listeners_){var currentValue=goog.global["localStorage"]["getItem"](key);var oldValue=self.localMap_[key];if(currentValue!=oldValue){self.localMap_[key]=currentValue;var event=new goog.events.BrowserEvent({type:"storage",key:key,target:window,oldValue:oldValue,newValue:currentValue,poll:true});self.storageChangeEvent_(event)}}},
fireauth.authStorage.Manager.LOCAL_STORAGE_POLLING_TIMER_)};fireauth.authStorage.Manager.prototype.stopManualListeners_=function(){if(this.manualListenerTimer_){clearInterval(this.manualListenerTimer_);this.manualListenerTimer_=null}};fireauth.authStorage.Manager.prototype.stopListeners_=function(){this.getStorage_(fireauth.authStorage.Persistence.LOCAL).removeStorageListener(this.storageChangeEventHandler_);this.stopManualListeners_()};
fireauth.authStorage.Manager.prototype.storageChangeEvent_=function(data){if(data&&data.getBrowserEvent){var event=data;var key=event.getBrowserEvent().key;if(key==null){for(var keyName in this.listeners_){var storedValue=this.localMap_[keyName];if(typeof storedValue==="undefined")storedValue=null;var realValue=goog.global["localStorage"]["getItem"](keyName);if(realValue!==storedValue){this.localMap_[keyName]=realValue;this.callListeners_(keyName)}}return}if(key.indexOf(this.namespace_+this.separator_)!=
0||!this.listeners_[key])return;if(typeof event.getBrowserEvent().poll!=="undefined")this.getStorage_(fireauth.authStorage.Persistence.LOCAL).removeStorageListener(this.storageChangeEventHandler_);else this.stopManualListeners_();if(this.safariLocalStorageNotSynced_){var currentValue=goog.global["localStorage"]["getItem"](key);var newValue=event.getBrowserEvent().newValue;if(newValue!==currentValue)if(newValue!==null)goog.global["localStorage"]["setItem"](key,newValue);else goog.global["localStorage"]["removeItem"](key);
else if(this.localMap_[key]===newValue&&typeof event.getBrowserEvent().poll==="undefined")return}var self=this;var triggerListeners=function(){if(typeof event.getBrowserEvent().poll==="undefined"&&self.localMap_[key]===goog.global["localStorage"]["getItem"](key))return;self.localMap_[key]=goog.global["localStorage"]["getItem"](key);self.callListeners_(key)};if(fireauth.util.isIe10()&&goog.global["localStorage"]["getItem"](key)!==event.getBrowserEvent().newValue&&event.getBrowserEvent().newValue!==
event.getBrowserEvent().oldValue)setTimeout(triggerListeners,fireauth.authStorage.IE10_LOCAL_STORAGE_SYNC_DELAY);else triggerListeners()}else{var keys=data;goog.array.forEach(keys,goog.bind(this.callListeners_,this))}};fireauth.authStorage.Manager.prototype.callListeners_=function(key){if(this.listeners_[key])goog.array.forEach(this.listeners_[key],function(listener){listener()})};goog.provide("fireauth.storage.AuthEventManager");goog.provide("fireauth.storage.AuthEventManager.Keys");goog.require("fireauth.AuthEvent");goog.require("fireauth.authStorage");fireauth.storage.AuthEventManager=function(appId,opt_manager){this.appId_=appId;this.manager_=opt_manager||fireauth.authStorage.Manager.getInstance()};fireauth.storage.AuthEventManager.Keys={AUTH_EVENT:{name:"authEvent",persistent:fireauth.authStorage.Persistence.LOCAL},REDIRECT_EVENT:{name:"redirectEvent",persistent:fireauth.authStorage.Persistence.SESSION}};
fireauth.storage.AuthEventManager.prototype.getAuthEvent=function(){return this.manager_.get(fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,this.appId_).then(function(response){return fireauth.AuthEvent.fromPlainObject(response)})};fireauth.storage.AuthEventManager.prototype.removeAuthEvent=function(){return this.manager_.remove(fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,this.appId_)};
fireauth.storage.AuthEventManager.prototype.addAuthEventListener=function(listener){this.manager_.addListener(fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,this.appId_,listener)};fireauth.storage.AuthEventManager.prototype.removeAuthEventListener=function(listener){this.manager_.removeListener(fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,this.appId_,listener)};
fireauth.storage.AuthEventManager.prototype.getRedirectEvent=function(){return this.manager_.get(fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,this.appId_).then(function(response){return fireauth.AuthEvent.fromPlainObject(response)})};fireauth.storage.AuthEventManager.prototype.removeRedirectEvent=function(){return this.manager_.remove(fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,this.appId_)};goog.provide("fireauth.OAuthHelperState");goog.require("fireauth.AuthEvent");
fireauth.OAuthHelperState=function(apiKey,appName,type,opt_eventId,opt_redirectUrl,opt_clientVersion,opt_displayName,opt_apn,opt_ibi,opt_eid,opt_frameworks,opt_clientId,opt_sha1Cert){this.apiKey_=apiKey;this.appName_=appName;this.type_=type;this.eventId_=opt_eventId||null;this.redirectUrl_=opt_redirectUrl||null;this.clientVersion_=opt_clientVersion||null;this.displayName_=opt_displayName||null;this.apn_=opt_apn||null;this.ibi_=opt_ibi||null;this.eid_=opt_eid||null;this.frameworks_=opt_frameworks||
[];this.clientId_=opt_clientId||null;this.sha1Cert_=opt_sha1Cert||null};fireauth.OAuthHelperState.prototype.getClientId=function(){return this.clientId_};fireauth.OAuthHelperState.prototype.getSha1Cert=function(){return this.sha1Cert_};fireauth.OAuthHelperState.prototype.getType=function(){return this.type_};fireauth.OAuthHelperState.prototype.getEventId=function(){return this.eventId_};fireauth.OAuthHelperState.prototype.getApiKey=function(){return this.apiKey_};
fireauth.OAuthHelperState.prototype.getAppName=function(){return this.appName_};fireauth.OAuthHelperState.prototype.getRedirectUrl=function(){return this.redirectUrl_};fireauth.OAuthHelperState.prototype.getClientVersion=function(){return this.clientVersion_};fireauth.OAuthHelperState.prototype.getDisplayName=function(){return this.displayName_};fireauth.OAuthHelperState.prototype.getApn=function(){return this.apn_};fireauth.OAuthHelperState.prototype.getIbi=function(){return this.ibi_};
fireauth.OAuthHelperState.prototype.getEndpointId=function(){return this.eid_};fireauth.OAuthHelperState.prototype.getFrameworks=function(){return this.frameworks_};
fireauth.OAuthHelperState.prototype.toPlainObject=function(){return{"apiKey":this.apiKey_,"appName":this.appName_,"type":this.type_,"eventId":this.eventId_,"redirectUrl":this.redirectUrl_,"clientVersion":this.clientVersion_,"displayName":this.displayName_,"apn":this.apn_,"ibi":this.ibi_,"eid":this.eid_,"fw":this.frameworks_,"clientId":this.clientId_,"sha1Cert":this.sha1Cert_}};
fireauth.OAuthHelperState.fromPlainObject=function(rawResponse){var response=rawResponse||{};if(response["type"]&&response["apiKey"])return new fireauth.OAuthHelperState(response["apiKey"],response["appName"]||"",response["type"],response["eventId"],response["redirectUrl"],response["clientVersion"],response["displayName"],response["apn"],response["ibi"],response["eid"],response["fw"],response["clientId"],response["sha1Cert"]);return null};goog.provide("fireauth.storage.OAuthHandlerManager");goog.require("fireauth.AuthEvent");goog.require("fireauth.OAuthHelperState");goog.require("fireauth.authStorage");goog.require("fireauth.storage.AuthEventManager.Keys");fireauth.storage.OAuthHandlerManager=function(opt_manager){this.manager_=opt_manager||fireauth.authStorage.Manager.getInstance()};
fireauth.storage.OAuthHandlerManager.Keys_={OAUTH_HELPER_STATE:{name:"oauthHelperState",persistent:fireauth.authStorage.Persistence.SESSION},SESSION_ID:{name:"sessionId",persistent:fireauth.authStorage.Persistence.SESSION}};fireauth.storage.OAuthHandlerManager.prototype.getSessionId=function(appId){return this.manager_.get(fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID,appId)};
fireauth.storage.OAuthHandlerManager.prototype.removeSessionId=function(appId){return this.manager_.remove(fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID,appId)};fireauth.storage.OAuthHandlerManager.prototype.setSessionId=function(appId,sessionId){return this.manager_.set(fireauth.storage.OAuthHandlerManager.Keys_.SESSION_ID,sessionId,appId)};fireauth.storage.OAuthHandlerManager.prototype.getOAuthHelperState=function(){return this.manager_.get(fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE).then(function(response){return fireauth.OAuthHelperState.fromPlainObject(response)})};
fireauth.storage.OAuthHandlerManager.prototype.removeOAuthHelperState=function(){return this.manager_.remove(fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE)};fireauth.storage.OAuthHandlerManager.prototype.setOAuthHelperState=function(state){return this.manager_.set(fireauth.storage.OAuthHandlerManager.Keys_.OAUTH_HELPER_STATE,state.toPlainObject())};
fireauth.storage.OAuthHandlerManager.prototype.setAuthEvent=function(appId,authEvent){return this.manager_.set(fireauth.storage.AuthEventManager.Keys.AUTH_EVENT,authEvent.toPlainObject(),appId)};fireauth.storage.OAuthHandlerManager.prototype.setRedirectEvent=function(appId,authEvent){return this.manager_.set(fireauth.storage.AuthEventManager.Keys.REDIRECT_EVENT,authEvent.toPlainObject(),appId)};goog.provide("fireauth.CordovaHandler");goog.require("fireauth.AuthError");goog.require("fireauth.AuthEvent");goog.require("fireauth.AuthProvider");goog.require("fireauth.DynamicLink");goog.require("fireauth.OAuthSignInHandler");goog.require("fireauth.authenum.Error");goog.require("fireauth.iframeclient.IfcHandler");goog.require("fireauth.storage.AuthEventManager");goog.require("fireauth.storage.OAuthHandlerManager");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");
goog.require("goog.Uri");goog.require("goog.array");goog.require("goog.crypt");goog.require("goog.crypt.Sha256");
fireauth.CordovaHandler=function(authDomain,apiKey,appName,opt_clientVersion,opt_initialTimeout,opt_redirectTimeout,opt_endpointId){this.authDomain_=authDomain;this.apiKey_=apiKey;this.appName_=appName;this.clientVersion_=opt_clientVersion||null;this.endpointId_=opt_endpointId||null;this.storageKey_=fireauth.util.createStorageKey(apiKey,appName);this.savePartialEventManager_=new fireauth.storage.OAuthHandlerManager;this.getAndDeletePartialEventManager_=new fireauth.storage.AuthEventManager(this.storageKey_);
this.initialAuthEvent_=null;this.authEventListeners_=[];this.initialTimeout_=opt_initialTimeout||fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_;this.redirectTimeout_=opt_redirectTimeout||fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_;this.pendingRedirect_=null;this.inAppBrowserRef_=null};fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_=20;fireauth.CordovaHandler.INITIAL_TIMEOUT_MS_=500;fireauth.CordovaHandler.REDIRECT_TIMEOUT_MS_=2E3;
fireauth.CordovaHandler.getError_=function(opt_message){return new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION,opt_message)};
fireauth.CordovaHandler.prototype.initializeAndWait=function(){if(this.isReady_)return this.isReady_;this.isReady_=fireauth.util.checkIfCordova().then(function(){var subscribe=fireauth.util.getObjectRef("universalLinks.subscribe",goog.global);if(typeof subscribe!=="function")throw fireauth.CordovaHandler.getError_("cordova-universal-links-plugin is not installed");var appIdentifier=fireauth.util.getObjectRef("BuildInfo.packageName",goog.global);if(typeof appIdentifier==="undefined")throw fireauth.CordovaHandler.getError_("cordova-plugin-buildinfo is not installed");
var openUrl=fireauth.util.getObjectRef("cordova.plugins.browsertab.openUrl",goog.global);if(typeof openUrl!=="function")throw fireauth.CordovaHandler.getError_("cordova-plugin-browsertab is not installed");var openInAppBrowser=fireauth.util.getObjectRef("cordova.InAppBrowser.open",goog.global);if(typeof openInAppBrowser!=="function")throw fireauth.CordovaHandler.getError_("cordova-plugin-inappbrowser is not installed");},function(error){throw new fireauth.AuthError(fireauth.authenum.Error.CORDOVA_NOT_READY);
});return this.isReady_};fireauth.CordovaHandler.prototype.generateSessionId_=function(numOfChars){var chars=[];var allowedChars="1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";while(numOfChars>0){var index=Math.floor(Math.random()*allowedChars.length);chars.push(allowedChars.charAt(index));numOfChars--}return chars.join("")};fireauth.CordovaHandler.prototype.computeSecureHash_=function(str){var sha256=new goog.crypt.Sha256;sha256.update(str);return goog.crypt.byteArrayToHex(sha256.digest())};
fireauth.CordovaHandler.prototype.startPopupTimeout=function(popupWin,onError,timeoutDuration){onError(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));return goog.Promise.resolve()};fireauth.CordovaHandler.prototype.processPopup=function(popupWin,mode,provider,onInitialize,onError,opt_eventId,opt_alreadyRedirected){return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED))};fireauth.CordovaHandler.prototype.unloadsOnRedirect=function(){return false};
fireauth.CordovaHandler.prototype.shouldBeInitializedEarly=function(){return true};fireauth.CordovaHandler.prototype.hasVolatileStorage=function(){return true};
fireauth.CordovaHandler.prototype.processRedirect=function(mode,provider,opt_eventId){if(this.pendingRedirect_)return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.REDIRECT_OPERATION_PENDING));var self=this;var doc=goog.global.document;var onClose=null;var authEventCallback=null;var onResume=null;var onVisibilityChange=null;var cleanup=function(){if(onResume)doc.removeEventListener("resume",onResume,false);if(onVisibilityChange)doc.removeEventListener("visibilitychange",onVisibilityChange,
false);if(onClose)onClose.cancel();if(authEventCallback)self.removeAuthEventListener(authEventCallback);self.pendingRedirect_=null};this.pendingRedirect_=goog.Promise.resolve().then(function(){fireauth.AuthProvider.checkIfOAuthSupported(provider);return self.getInitialAuthEvent_()}).then(function(){return self.processRedirectInternal_(mode,provider,opt_eventId)}).then(function(){return(new goog.Promise(function(resolve,reject){authEventCallback=function(event){var closeBrowsertab=fireauth.util.getObjectRef("cordova.plugins.browsertab.close",
goog.global);resolve();if(typeof closeBrowsertab==="function")closeBrowsertab();if(self.inAppBrowserRef_&&typeof self.inAppBrowserRef_["close"]==="function"){self.inAppBrowserRef_["close"]();self.inAppBrowserRef_=null}return false};self.addAuthEventListener(authEventCallback);onResume=function(){if(onClose)return;onClose=goog.Timer.promise(self.redirectTimeout_).then(function(){reject(new fireauth.AuthError(fireauth.authenum.Error.REDIRECT_CANCELLED_BY_USER))})};onVisibilityChange=function(){if(fireauth.util.isAppVisible())onResume()};
doc.addEventListener("resume",onResume,false);if(!fireauth.util.isAndroid())doc.addEventListener("visibilitychange",onVisibilityChange,false)})).thenCatch(function(error){return self.getPartialStoredEvent_().then(function(){throw error;})})}).thenAlways(cleanup);return this.pendingRedirect_};
fireauth.CordovaHandler.prototype.processRedirectInternal_=function(mode,provider,opt_eventId){var self=this;var sessionId=this.generateSessionId_(fireauth.CordovaHandler.SESSION_ID_TOTAL_CHARS_);var event=new fireauth.AuthEvent(mode,opt_eventId,null,sessionId,new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));var appIdentifier=fireauth.util.getObjectRef("BuildInfo.packageName",goog.global);if(typeof appIdentifier!=="string")throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);
var appDisplayName=fireauth.util.getObjectRef("BuildInfo.displayName",goog.global);var additionalParams={};if(fireauth.util.isIOS())additionalParams["ibi"]=appIdentifier;else if(fireauth.util.isAndroid())additionalParams["apn"]=appIdentifier;else return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));if(appDisplayName)additionalParams["appDisplayName"]=appDisplayName;var hashedSessionId=this.computeSecureHash_(sessionId);additionalParams["sessionId"]=hashedSessionId;
var oauthHelperWidgetUrl=fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(this.authDomain_,this.apiKey_,this.appName_,mode,provider,null,opt_eventId,this.clientVersion_,additionalParams,this.endpointId_);return this.initializeAndWait().then(function(){return self.savePartialEventManager_.setAuthEvent(self.storageKey_,event)}).then(function(){var isAvailable=fireauth.util.getObjectRef("cordova.plugins.browsertab.isAvailable",goog.global);if(typeof isAvailable!=="function")throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);
var openUrl=null;isAvailable(function(result){if(result){openUrl=fireauth.util.getObjectRef("cordova.plugins.browsertab.openUrl",goog.global);if(typeof openUrl!=="function")throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);openUrl(oauthHelperWidgetUrl)}else{openUrl=fireauth.util.getObjectRef("cordova.InAppBrowser.open",goog.global);if(typeof openUrl!=="function")throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);self.inAppBrowserRef_=
openUrl(oauthHelperWidgetUrl,fireauth.util.isIOS7Or8()?"_blank":"_system","location=yes")}})})};fireauth.CordovaHandler.prototype.dispatchEvent_=function(event){for(var i=0;i<this.authEventListeners_.length;i++)try{this.authEventListeners_[i](event)}catch(e){}};
fireauth.CordovaHandler.prototype.getInitialAuthEvent_=function(){var self=this;if(!this.initialAuthEvent_)this.initialAuthEvent_=this.initializeAndWait().then(function(){return new goog.Promise(function(resolve,reject){var authEventCallback=function(event){resolve(event);self.removeAuthEventListener(authEventCallback);return false};self.addAuthEventListener(authEventCallback);self.setAuthEventListener_()})});return this.initialAuthEvent_};
fireauth.CordovaHandler.prototype.getPartialStoredEvent_=function(){var event=null;var self=this;return this.getAndDeletePartialEventManager_.getAuthEvent().then(function(authEvent){event=authEvent;return self.getAndDeletePartialEventManager_.removeAuthEvent()}).then(function(){return event})};
fireauth.CordovaHandler.prototype.extractAuthEventFromUrl_=function(partialEvent,url){var authEvent=null;var callbackUrl=fireauth.DynamicLink.parseDeepLink(url);if(callbackUrl.indexOf("/__/auth/callback")!=-1){var uri=goog.Uri.parse(callbackUrl);var errorObject=fireauth.util.parseJSON(uri.getParameterValue("firebaseError")||null);var error=typeof errorObject==="object"?fireauth.AuthError.fromPlainObject(errorObject):null;if(error)authEvent=new fireauth.AuthEvent(partialEvent.getType(),partialEvent.getEventId(),
null,null,error);else authEvent=new fireauth.AuthEvent(partialEvent.getType(),partialEvent.getEventId(),callbackUrl,partialEvent.getSessionId())}return authEvent};
fireauth.CordovaHandler.prototype.setAuthEventListener_=function(){var self=this;var subscribe=fireauth.util.getObjectRef("universalLinks.subscribe",goog.global);if(typeof subscribe!=="function")throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_CORDOVA_CONFIGURATION);var noEvent=new fireauth.AuthEvent(fireauth.AuthEvent.Type.UNKNOWN,null,null,null,new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));var initialResolve=false;var noEventTimer=goog.Timer.promise(this.initialTimeout_).then(function(){return self.getPartialStoredEvent_().then(function(event){if(!initialResolve)self.dispatchEvent_(noEvent)})});
var universalLinkCb=function(eventData){initialResolve=true;if(noEventTimer)noEventTimer.cancel();self.getPartialStoredEvent_().then(function(event){var authEvent=noEvent;if(event&&eventData&&eventData["url"])authEvent=self.extractAuthEventFromUrl_(event,eventData["url"])||noEvent;self.dispatchEvent_(authEvent)})};var existingHandlerOpenURL=goog.global["handleOpenURL"];goog.global["handleOpenURL"]=function(url){var appIdentifier=fireauth.util.getObjectRef("BuildInfo.packageName",goog.global);if(url.toLowerCase().indexOf(appIdentifier.toLowerCase()+
"://")==0)universalLinkCb({"url":url});if(typeof existingHandlerOpenURL==="function")try{existingHandlerOpenURL(url)}catch(e){console.error(e)}};subscribe(null,universalLinkCb)};
fireauth.CordovaHandler.prototype.addAuthEventListener=function(listener){this.authEventListeners_.push(listener);this.getInitialAuthEvent_().thenCatch(function(error){if(error.code==="auth/invalid-cordova-configuration"){var noEvent=new fireauth.AuthEvent(fireauth.AuthEvent.Type.UNKNOWN,null,null,null,new fireauth.AuthError(fireauth.authenum.Error.NO_AUTH_EVENT));listener(noEvent)}})};
fireauth.CordovaHandler.prototype.removeAuthEventListener=function(listener){goog.array.removeAllIf(this.authEventListeners_,function(ele){return ele==listener})};goog.provide("fireauth.storage.PendingRedirectManager");goog.require("fireauth.authStorage");fireauth.storage.PendingRedirectManager=function(appId,opt_manager){this.appId_=appId;this.manager_=opt_manager||fireauth.authStorage.Manager.getInstance()};fireauth.storage.PendingRedirectManager.PENDING_FLAG_="pending";fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_={name:"pendingRedirect",persistent:fireauth.authStorage.Persistence.SESSION};
fireauth.storage.PendingRedirectManager.prototype.setPendingStatus=function(){return this.manager_.set(fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,fireauth.storage.PendingRedirectManager.PENDING_FLAG_,this.appId_)};fireauth.storage.PendingRedirectManager.prototype.removePendingStatus=function(){return this.manager_.remove(fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,this.appId_)};
fireauth.storage.PendingRedirectManager.prototype.getPendingStatus=function(){return this.manager_.get(fireauth.storage.PendingRedirectManager.PENDING_REDIRECT_KEY_,this.appId_).then(function(response){return response==fireauth.storage.PendingRedirectManager.PENDING_FLAG_})};goog.provide("fireauth.AuthEventHandler");goog.provide("fireauth.AuthEventManager");goog.provide("fireauth.AuthEventManager.Result");goog.provide("fireauth.PopupAuthEventProcessor");goog.provide("fireauth.RedirectAuthEventProcessor");goog.require("fireauth.AuthCredential");goog.require("fireauth.AuthError");goog.require("fireauth.AuthEvent");goog.require("fireauth.CordovaHandler");goog.require("fireauth.authenum.Error");goog.require("fireauth.constants");goog.require("fireauth.iframeclient.IfcHandler");
goog.require("fireauth.storage.PendingRedirectManager");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");goog.require("goog.array");
fireauth.AuthEventManager=function(authDomain,apiKey,appName){this.authDomain_=authDomain;this.apiKey_=apiKey;this.appName_=appName;this.subscribedHandlers_=[];this.initialized_=false;this.authEventHandler_=goog.bind(this.handleAuthEvent_,this);this.redirectAuthEventProcessor_=new fireauth.RedirectAuthEventProcessor(this);this.popupAuthEventProcessor_=new fireauth.PopupAuthEventProcessor(this);this.pendingRedirectStorageManager_=new fireauth.storage.PendingRedirectManager(fireauth.AuthEventManager.getKey_(this.apiKey_,
this.appName_));this.typeToManager_={};this.typeToManager_[fireauth.AuthEvent.Type.UNKNOWN]=this.redirectAuthEventProcessor_;this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT]=this.redirectAuthEventProcessor_;this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_REDIRECT]=this.redirectAuthEventProcessor_;this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT]=this.redirectAuthEventProcessor_;this.typeToManager_[fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP]=this.popupAuthEventProcessor_;
this.typeToManager_[fireauth.AuthEvent.Type.LINK_VIA_POPUP]=this.popupAuthEventProcessor_;this.typeToManager_[fireauth.AuthEvent.Type.REAUTH_VIA_POPUP]=this.popupAuthEventProcessor_;this.oauthSignInHandler_=fireauth.AuthEventManager.instantiateOAuthSignInHandler(this.authDomain_,this.apiKey_,this.appName_,firebase.SDK_VERSION||null,fireauth.constants.clientEndpoint)};
fireauth.AuthEventManager.instantiateOAuthSignInHandler=function(authDomain,apiKey,appName,version,opt_endpointId){return fireauth.util.isAndroidOrIosFileEnvironment()?new fireauth.CordovaHandler(authDomain,apiKey,appName,version,undefined,undefined,opt_endpointId):new fireauth.iframeclient.IfcHandler(authDomain,apiKey,appName,version,opt_endpointId)};
fireauth.AuthEventManager.prototype.reset=function(){this.initialized_=false;this.oauthSignInHandler_.removeAuthEventListener(this.authEventHandler_);this.oauthSignInHandler_=fireauth.AuthEventManager.instantiateOAuthSignInHandler(this.authDomain_,this.apiKey_,this.appName_,firebase.SDK_VERSION||null)};fireauth.AuthEventManager.Result;fireauth.AuthEventManager.ENABLED=true;
fireauth.AuthEventManager.prototype.initialize=function(){var self=this;if(!this.initialized_){this.initialized_=true;this.oauthSignInHandler_.addAuthEventListener(this.authEventHandler_)}var previousOauthSignInHandler=this.oauthSignInHandler_;return this.oauthSignInHandler_.initializeAndWait().thenCatch(function(error){if(self.oauthSignInHandler_==previousOauthSignInHandler)self.reset();throw error;})};
fireauth.AuthEventManager.prototype.initializeWithNoPendingRedirectResult_=function(){var self=this;if(this.oauthSignInHandler_.shouldBeInitializedEarly())this.initialize().thenCatch(function(error){var notSupportedEvent=new fireauth.AuthEvent(fireauth.AuthEvent.Type.UNKNOWN,null,null,null,new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));if(fireauth.AuthEventManager.isCordovaFalsePositive_(error))self.handleAuthEvent_(notSupportedEvent)});if(!this.oauthSignInHandler_.hasVolatileStorage())this.redirectAuthEventProcessor_.defaultToEmptyResponse()};
fireauth.AuthEventManager.prototype.subscribe=function(handler){if(!goog.array.contains(this.subscribedHandlers_,handler))this.subscribedHandlers_.push(handler);if(this.initialized_)return;var self=this;this.pendingRedirectStorageManager_.getPendingStatus().then(function(status){if(status)self.pendingRedirectStorageManager_.removePendingStatus().then(function(){self.initialize().thenCatch(function(error){var notSupportedEvent=new fireauth.AuthEvent(fireauth.AuthEvent.Type.UNKNOWN,null,null,null,new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));
if(fireauth.AuthEventManager.isCordovaFalsePositive_(error))self.handleAuthEvent_(notSupportedEvent)})});else self.initializeWithNoPendingRedirectResult_()}).thenCatch(function(error){self.initializeWithNoPendingRedirectResult_()})};fireauth.AuthEventManager.prototype.isSubscribed=function(handler){return goog.array.contains(this.subscribedHandlers_,handler)};
fireauth.AuthEventManager.prototype.unsubscribe=function(handler){goog.array.removeAllIf(this.subscribedHandlers_,function(ele){return ele==handler})};
fireauth.AuthEventManager.prototype.handleAuthEvent_=function(authEvent){if(!authEvent)throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT);var processed=false;for(var i=0;i<this.subscribedHandlers_.length;i++){var potentialHandler=this.subscribedHandlers_[i];if(potentialHandler.canHandleAuthEvent(authEvent.getType(),authEvent.getEventId())){var eventManager=this.typeToManager_[authEvent.getType()];if(eventManager)eventManager.processAuthEvent(authEvent,potentialHandler);processed=
true;break}}this.redirectAuthEventProcessor_.defaultToEmptyResponse();return processed};fireauth.AuthEventManager.POPUP_TIMEOUT_MS_=new fireauth.util.Delay(2E3,1E4);fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_=new fireauth.util.Delay(3E4,6E4);fireauth.AuthEventManager.prototype.getRedirectResult=function(){return this.redirectAuthEventProcessor_.getRedirectResult()};
fireauth.AuthEventManager.prototype.processPopup=function(popupWin,mode,provider,opt_eventId,opt_alreadyRedirected){var self=this;return this.oauthSignInHandler_.processPopup(popupWin,mode,provider,function(){if(!self.initialized_){self.initialized_=true;self.oauthSignInHandler_.addAuthEventListener(self.authEventHandler_)}},function(error){self.reset()},opt_eventId,opt_alreadyRedirected)};
fireauth.AuthEventManager.isCordovaFalsePositive_=function(error){if(error&&error["code"]=="auth/cordova-not-ready")return true;return false};
fireauth.AuthEventManager.prototype.processRedirect=function(mode,provider,opt_eventId){var self=this;var error;return this.pendingRedirectStorageManager_.setPendingStatus().then(function(){return self.oauthSignInHandler_.processRedirect(mode,provider,opt_eventId).thenCatch(function(e){if(fireauth.AuthEventManager.isCordovaFalsePositive_(e))throw new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED);error=e;return self.pendingRedirectStorageManager_.removePendingStatus().then(function(){throw error;
})}).then(function(){if(!self.oauthSignInHandler_.unloadsOnRedirect())return self.pendingRedirectStorageManager_.removePendingStatus().then(function(){return self.getRedirectResult()}).then(function(result){}).thenCatch(function(error){});else return new goog.Promise(function(resolve,reject){})})})};
fireauth.AuthEventManager.prototype.startPopupTimeout=function(owner,mode,popupWin,opt_eventId){return this.oauthSignInHandler_.startPopupTimeout(popupWin,function(error){owner.resolvePendingPopupEvent(mode,null,error,opt_eventId)},fireauth.AuthEventManager.POPUP_TIMEOUT_MS_.get())};fireauth.AuthEventManager.manager_={};fireauth.AuthEventManager.KEY_SEPARATOR_=":";fireauth.AuthEventManager.getKey_=function(apiKey,appName){return apiKey+fireauth.AuthEventManager.KEY_SEPARATOR_+appName};
fireauth.AuthEventManager.getManager=function(authDomain,apiKey,appName){var key=fireauth.AuthEventManager.getKey_(apiKey,appName);if(!fireauth.AuthEventManager.manager_[key])fireauth.AuthEventManager.manager_[key]=new fireauth.AuthEventManager(authDomain,apiKey,appName);return fireauth.AuthEventManager.manager_[key]};fireauth.AuthEventProcessor=function(){};fireauth.AuthEventProcessor.prototype.processAuthEvent=function(authEvent,owner){};
fireauth.RedirectAuthEventProcessor=function(manager){this.manager_=manager;this.redirectedUserPromise_=null;this.redirectResolve_=[];this.redirectReject_=[];this.redirectTimeoutPromise_=null;this.redirectResultResolved_=false};fireauth.RedirectAuthEventProcessor.prototype.reset=function(){this.redirectedUserPromise_=null;if(this.redirectTimeoutPromise_){this.redirectTimeoutPromise_.cancel();this.redirectTimeoutPromise_=null}};
fireauth.RedirectAuthEventProcessor.prototype.processAuthEvent=function(authEvent,owner){if(!authEvent)return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));this.reset();this.redirectResultResolved_=true;var mode=authEvent.getType();var eventId=authEvent.getEventId();var isWebStorageNotSupported=authEvent.getError()&&authEvent.getError()["code"]=="auth/web-storage-unsupported";var isOperationNotSupported=authEvent.getError()&&authEvent.getError()["code"]==
"auth/operation-not-supported-in-this-"+"environment";if(mode==fireauth.AuthEvent.Type.UNKNOWN&&!isWebStorageNotSupported&&!isOperationNotSupported)return this.processUnknownEvent_();else if(authEvent.hasError())return this.processErrorEvent_(authEvent,owner);else if(owner.getAuthEventHandlerFinisher(mode,eventId))return this.processSuccessEvent_(authEvent,owner);else return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT))};
fireauth.RedirectAuthEventProcessor.prototype.defaultToEmptyResponse=function(){if(!this.redirectResultResolved_){this.redirectResultResolved_=true;this.setRedirectResult_(false,null,null)}};fireauth.RedirectAuthEventProcessor.prototype.processUnknownEvent_=function(){this.setRedirectResult_(false,null,null);return goog.Promise.resolve()};fireauth.RedirectAuthEventProcessor.prototype.processErrorEvent_=function(authEvent,owner){this.setRedirectResult_(true,null,authEvent.getError());return goog.Promise.resolve()};
fireauth.RedirectAuthEventProcessor.prototype.processSuccessEvent_=function(authEvent,owner){var self=this;var eventId=authEvent.getEventId();var mode=authEvent.getType();var handler=owner.getAuthEventHandlerFinisher(mode,eventId);var requestUri=authEvent.getUrlResponse();var sessionId=authEvent.getSessionId();var isRedirect=fireauth.AuthEvent.isRedirect(authEvent);return handler(requestUri,sessionId).then(function(popupRedirectResponse){self.setRedirectResult_(isRedirect,popupRedirectResponse,null)}).thenCatch(function(error){self.setRedirectResult_(isRedirect,
null,error);return})};fireauth.RedirectAuthEventProcessor.prototype.setRedirectReject_=function(error){this.redirectedUserPromise_=function(){return goog.Promise.reject(error)};if(this.redirectReject_.length)for(var i=0;i<this.redirectReject_.length;i++)this.redirectReject_[i](error)};
fireauth.RedirectAuthEventProcessor.prototype.setRedirectResolve_=function(popupRedirectResult){this.redirectedUserPromise_=function(){return goog.Promise.resolve(popupRedirectResult)};if(this.redirectResolve_.length)for(var i=0;i<this.redirectResolve_.length;i++)this.redirectResolve_[i](popupRedirectResult)};
fireauth.RedirectAuthEventProcessor.prototype.setRedirectResult_=function(isRedirect,popupRedirectResult,error){if(isRedirect)if(error)this.setRedirectReject_(error);else this.setRedirectResolve_(popupRedirectResult);else this.setRedirectResolve_({"user":null});this.redirectResolve_=[];this.redirectReject_=[]};
fireauth.RedirectAuthEventProcessor.prototype.getRedirectResult=function(){var self=this;var p=new goog.Promise(function(resolve,reject){if(!self.redirectedUserPromise_){self.redirectResolve_.push(resolve);self.redirectReject_.push(reject);self.startRedirectTimeout_()}else self.redirectedUserPromise_().then(resolve,reject)});return p};
fireauth.RedirectAuthEventProcessor.prototype.startRedirectTimeout_=function(){var self=this;var error=new fireauth.AuthError(fireauth.authenum.Error.TIMEOUT);if(this.redirectTimeoutPromise_)this.redirectTimeoutPromise_.cancel();this.redirectTimeoutPromise_=goog.Timer.promise(fireauth.AuthEventManager.REDIRECT_TIMEOUT_MS_.get()).then(function(){if(!self.redirectedUserPromise_)self.setRedirectResult_(true,null,error)})};fireauth.PopupAuthEventProcessor=function(manager){this.manager_=manager};
fireauth.PopupAuthEventProcessor.prototype.processAuthEvent=function(authEvent,owner){if(!authEvent)return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT));var mode=authEvent.getType();var eventId=authEvent.getEventId();if(authEvent.hasError())return this.processErrorEvent_(authEvent,owner);else if(owner.getAuthEventHandlerFinisher(mode,eventId))return this.processSuccessEvent_(authEvent,owner);else return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.INVALID_AUTH_EVENT))};
fireauth.PopupAuthEventProcessor.prototype.processErrorEvent_=function(authEvent,owner){var eventId=authEvent.getEventId();var mode=authEvent.getType();owner.resolvePendingPopupEvent(mode,null,authEvent.getError(),eventId);return goog.Promise.resolve()};
fireauth.PopupAuthEventProcessor.prototype.processSuccessEvent_=function(authEvent,owner){var eventId=authEvent.getEventId();var mode=authEvent.getType();var handler=owner.getAuthEventHandlerFinisher(mode,eventId);var requestUri=authEvent.getUrlResponse();var sessionId=authEvent.getSessionId();return handler(requestUri,sessionId).then(function(popupRedirectResponse){owner.resolvePendingPopupEvent(mode,popupRedirectResponse,null,eventId)}).thenCatch(function(error){owner.resolvePendingPopupEvent(mode,
null,error,eventId);return})};fireauth.AuthEventHandler=function(){};fireauth.AuthEventHandler.prototype.canHandleAuthEvent=function(mode,opt_eventId){};fireauth.AuthEventHandler.prototype.resolvePendingPopupEvent=function(mode,popupRedirectResult,error,opt_eventId){};fireauth.AuthEventHandler.prototype.getAuthEventHandlerFinisher=function(mode,opt_eventId){};goog.provide("fireauth.ConfirmationResult");goog.require("fireauth.PhoneAuthProvider");goog.require("fireauth.object");goog.require("goog.Promise");fireauth.ConfirmationResult=function(verificationId,credentialResolver){this.credentialResolver_=credentialResolver;fireauth.object.setReadonlyProperty(this,"verificationId",verificationId)};
fireauth.ConfirmationResult.prototype.confirm=function(verificationCode){var credential=fireauth.PhoneAuthProvider.credential(this["verificationId"],verificationCode);return this.credentialResolver_(credential)};
fireauth.ConfirmationResult.initialize=function(auth,phoneNumber,appVerifier,credentialResolver){var phoneAuthProvider=new fireauth.PhoneAuthProvider(auth);return phoneAuthProvider.verifyPhoneNumber(phoneNumber,appVerifier).then(function(verificationId){return new fireauth.ConfirmationResult(verificationId,credentialResolver)})};goog.provide("fireauth.ProactiveRefresh");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.Timer");
fireauth.ProactiveRefresh=function(operation,retryPolicy,getWaitDuration,lowerBound,upperBound,opt_runInBackground){this.operation_=operation;this.retryPolicy_=retryPolicy;this.getWaitDuration_=getWaitDuration;this.lowerBound_=lowerBound;this.upperBound_=upperBound;this.runInBackground_=!!opt_runInBackground;this.pending_=null;this.nextErrorWaitInterval_=this.lowerBound_;if(this.upperBound_<this.lowerBound_)throw new Error("Proactive refresh lower bound greater than upper bound!");};
fireauth.ProactiveRefresh.prototype.start=function(){this.nextErrorWaitInterval_=this.lowerBound_;this.process_(true)};fireauth.ProactiveRefresh.prototype.getNextRun_=function(hasSucceeded){if(hasSucceeded){this.nextErrorWaitInterval_=this.lowerBound_;return this.getWaitDuration_()}else{var currentErrorWaitInterval=this.nextErrorWaitInterval_;this.nextErrorWaitInterval_*=2;if(this.nextErrorWaitInterval_>this.upperBound_)this.nextErrorWaitInterval_=this.upperBound_;return currentErrorWaitInterval}};
fireauth.ProactiveRefresh.prototype.process_=function(hasSucceeded){var self=this;this.stop();this.pending_=goog.Timer.promise(this.getNextRun_(hasSucceeded)).then(function(){return self.waitUntilReady_()}).then(function(){return self.operation_()}).then(function(){self.process_(true)}).thenCatch(function(error){if(self.retryPolicy_(error))self.process_(false)})};fireauth.ProactiveRefresh.prototype.waitUntilReady_=function(){if(this.runInBackground_)return goog.Promise.resolve();else return fireauth.util.onAppVisible()};
fireauth.ProactiveRefresh.prototype.stop=function(){if(this.pending_){this.pending_.cancel();this.pending_=null}};fireauth.ProactiveRefresh.prototype.isRunning=function(){return!!this.pending_};goog.provide("fireauth.StsTokenManager");goog.provide("fireauth.StsTokenManager.Response");goog.provide("fireauth.StsTokenManager.ResponseData");goog.require("fireauth.AuthError");goog.require("fireauth.RpcHandler");goog.require("fireauth.authenum.Error");goog.require("goog.Promise");goog.require("goog.asserts");fireauth.StsTokenManager=function(rpcHandler){this.rpcHandler_=rpcHandler;this.refreshToken_=null;this.accessToken_=null;this.expirationTime_=0};
fireauth.StsTokenManager.prototype.toPlainObject=function(){return{"apiKey":this.rpcHandler_.getApiKey(),"refreshToken":this.refreshToken_,"accessToken":this.accessToken_,"expirationTime":this.expirationTime_}};
fireauth.StsTokenManager.fromPlainObject=function(rpcHandler,obj){var stsTokenManager=null;if(obj&&obj["apiKey"]){goog.asserts.assert(obj["apiKey"]==rpcHandler.getApiKey());stsTokenManager=new fireauth.StsTokenManager(rpcHandler);stsTokenManager.setRefreshToken(obj["refreshToken"]);stsTokenManager.setAccessToken(obj["accessToken"],obj["expirationTime"]||0)}return stsTokenManager};fireauth.StsTokenManager.Response;fireauth.StsTokenManager.ResponseData;
fireauth.StsTokenManager.prototype.setRefreshToken=function(refreshToken){this.refreshToken_=refreshToken};fireauth.StsTokenManager.prototype.setAccessToken=function(accessToken,expirationTime){this.accessToken_=accessToken;this.expirationTime_=expirationTime};fireauth.StsTokenManager.prototype.getRefreshToken=function(){return this.refreshToken_};fireauth.StsTokenManager.prototype.getExpirationTime=function(){return this.expirationTime_};fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_=30*1E3;
fireauth.StsTokenManager.prototype.isExpired_=function(){return goog.now()>this.expirationTime_-fireauth.StsTokenManager.TOKEN_REFRESH_BUFFER_};
fireauth.StsTokenManager.prototype.parseServerResponse=function(response){var idToken=response[fireauth.RpcHandler.AuthServerField.ID_TOKEN];var refreshToken=response[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN];var expirationTime=fireauth.StsTokenManager.calcOffsetTimestamp_(response[fireauth.RpcHandler.AuthServerField.EXPIRES_IN]);this.setAccessToken(idToken,expirationTime);this.setRefreshToken(refreshToken);return idToken};
fireauth.StsTokenManager.calcOffsetTimestamp_=function(offset){return goog.now()+parseInt(offset,10)*1E3};fireauth.StsTokenManager.prototype.exchangeRefreshToken_=function(){var data={"grant_type":"refresh_token","refresh_token":this.refreshToken_};return this.requestToken_(data)};
fireauth.StsTokenManager.prototype.requestToken_=function(data){var self=this;return this.rpcHandler_.requestStsToken(data).then(function(resp){var response=resp;self.accessToken_=response[fireauth.RpcHandler.StsServerField.ACCESS_TOKEN];self.expirationTime_=fireauth.StsTokenManager.calcOffsetTimestamp_(response[fireauth.RpcHandler.StsServerField.EXPIRES_IN]);self.refreshToken_=response[fireauth.RpcHandler.StsServerField.REFRESH_TOKEN];return{"accessToken":self.accessToken_,"expirationTime":self.expirationTime_,
"refreshToken":self.refreshToken_}}).thenCatch(function(error){if(error["code"]=="auth/user-token-expired")self.refreshToken_=null;throw error;})};fireauth.StsTokenManager.prototype.isRefreshTokenExpired=function(){return!!(this.accessToken_&&!this.refreshToken_)};
fireauth.StsTokenManager.prototype.getToken=function(opt_forceRefresh){var self=this;var forceRefresh=!!opt_forceRefresh;if(this.isRefreshTokenExpired())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.TOKEN_EXPIRED));if(!forceRefresh&&this.accessToken_&&!this.isExpired_())return goog.Promise.resolve({"accessToken":self.accessToken_,"expirationTime":self.expirationTime_,"refreshToken":self.refreshToken_});else if(this.refreshToken_)return this.exchangeRefreshToken_();else return goog.Promise.resolve(null)};goog.provide("fireauth.AuthUser");goog.provide("fireauth.AuthUser.AccountInfo");goog.provide("fireauth.AuthUserInfo");goog.provide("fireauth.TokenRefreshTime");goog.provide("fireauth.UserEvent");goog.provide("fireauth.UserEventType");goog.provide("fireauth.UserMetadata");goog.require("fireauth.ActionCodeSettings");goog.require("fireauth.AdditionalUserInfo");goog.require("fireauth.AuthCredential");goog.require("fireauth.AuthError");goog.require("fireauth.AuthEvent");goog.require("fireauth.AuthEventHandler");
goog.require("fireauth.AuthEventManager");goog.require("fireauth.AuthProvider");goog.require("fireauth.ConfirmationResult");goog.require("fireauth.PhoneAuthProvider");goog.require("fireauth.ProactiveRefresh");goog.require("fireauth.RpcHandler");goog.require("fireauth.StsTokenManager");goog.require("fireauth.authenum.Error");goog.require("fireauth.constants");goog.require("fireauth.constants.AuthEventType");goog.require("fireauth.deprecation");goog.require("fireauth.idp");goog.require("fireauth.iframeclient.IfcHandler");
goog.require("fireauth.object");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.array");goog.require("goog.events");goog.require("goog.events.Event");goog.require("goog.events.EventTarget");goog.require("goog.object");
fireauth.UserMetadata=function(opt_createdAt,opt_lastLoginAt){this.createdAt_=opt_createdAt||null;this.lastLoginAt_=opt_lastLoginAt||null;fireauth.object.setReadonlyProperties(this,{"lastSignInTime":fireauth.util.utcTimestampToDateString(opt_lastLoginAt||null),"creationTime":fireauth.util.utcTimestampToDateString(opt_createdAt||null)})};fireauth.UserMetadata.prototype.clone=function(){return new fireauth.UserMetadata(this.createdAt_,this.lastLoginAt_)};
fireauth.UserMetadata.prototype.toPlainObject=function(){return{"lastLoginAt":this.lastLoginAt_,"createdAt":this.createdAt_}};fireauth.AuthUserInfo=function(uid,providerId,opt_email,opt_displayName,opt_photoURL,opt_phoneNumber){fireauth.object.setReadonlyProperties(this,{"uid":uid,"displayName":opt_displayName||null,"photoURL":opt_photoURL||null,"email":opt_email||null,"phoneNumber":opt_phoneNumber||null,"providerId":providerId})};
fireauth.UserEvent=function(type,opt_properties){goog.events.Event.call(this,type);for(var key in opt_properties)this[key]=opt_properties[key]};goog.inherits(fireauth.UserEvent,goog.events.Event);fireauth.UserEventType={TOKEN_CHANGED:"tokenChanged",USER_DELETED:"userDeleted",USER_INVALIDATED:"userInvalidated"};fireauth.TokenRefreshTime={OFFSET_DURATION:5*60*1E3,RETRIAL_MIN_WAIT:30*1E3,RETRIAL_MAX_WAIT:16*60*1E3};
fireauth.AuthUser=function(appOptions,stsTokenResponse,opt_accountInfo){this.pendingPromises_=[];this.apiKey_=appOptions["apiKey"];this.appName_=appOptions["appName"];this.authDomain_=appOptions["authDomain"]||null;var clientFullVersion=firebase.SDK_VERSION?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,firebase.SDK_VERSION):null;this.rpcHandler_=new fireauth.RpcHandler(this.apiKey_,fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),clientFullVersion);
this.stsTokenManager_=new fireauth.StsTokenManager(this.rpcHandler_);this.setLastAccessToken_(stsTokenResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);this.stsTokenManager_.parseServerResponse(stsTokenResponse);fireauth.object.setReadonlyProperty(this,"refreshToken",this.stsTokenManager_.getRefreshToken());this.setAccountInfo(opt_accountInfo||{});fireauth.AuthUser.base(this,"constructor");this.popupRedirectEnabled_=false;if(this.authDomain_&&fireauth.AuthEventManager.ENABLED&&fireauth.util.isPopupRedirectSupported())this.authEventManager_=
fireauth.AuthEventManager.getManager(this.authDomain_,this.apiKey_,this.appName_);this.stateChangeListeners_=[];this.userInvalidatedError_=null;this.proactiveRefresh_=this.initializeProactiveRefreshUtility_();this.userTokenChangeListener_=goog.bind(this.handleUserTokenChange_,this);var self=this;this.languageCode_=null;this.onLanguageCodeChanged_=function(event){self.setLanguageCode(event.languageCode)};this.languageCodeChangeEventDispatcher_=null;this.frameworks_=[];this.onFrameworkChanged_=function(event){self.setFramework(event.frameworks)};
this.frameworkChangeEventDispatcher_=null};goog.inherits(fireauth.AuthUser,goog.events.EventTarget);fireauth.AuthUser.prototype.setLanguageCode=function(languageCode){this.languageCode_=languageCode;this.rpcHandler_.updateCustomLocaleHeader(languageCode)};fireauth.AuthUser.prototype.getLanguageCode=function(){return this.languageCode_};
fireauth.AuthUser.prototype.setLanguageCodeChangeDispatcher=function(dispatcher){if(this.languageCodeChangeEventDispatcher_)goog.events.unlisten(this.languageCodeChangeEventDispatcher_,fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,this.onLanguageCodeChanged_);this.languageCodeChangeEventDispatcher_=dispatcher;if(dispatcher)goog.events.listen(dispatcher,fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED,this.onLanguageCodeChanged_)};
fireauth.AuthUser.prototype.setFramework=function(framework){this.frameworks_=framework;this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,firebase.SDK_VERSION,this.frameworks_):null)};fireauth.AuthUser.prototype.getFramework=function(){return goog.array.clone(this.frameworks_)};
fireauth.AuthUser.prototype.setFrameworkChangeDispatcher=function(dispatcher){if(this.frameworkChangeEventDispatcher_)goog.events.unlisten(this.frameworkChangeEventDispatcher_,fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,this.onFrameworkChanged_);this.frameworkChangeEventDispatcher_=dispatcher;if(dispatcher)goog.events.listen(dispatcher,fireauth.constants.AuthEventType.FRAMEWORK_CHANGED,this.onFrameworkChanged_)};
fireauth.AuthUser.prototype.handleUserTokenChange_=function(event){if(this.proactiveRefresh_.isRunning()){this.proactiveRefresh_.stop();this.proactiveRefresh_.start()}};fireauth.AuthUser.prototype.getAuth_=function(){try{return firebase["app"](this.appName_)["auth"]()}catch(e){throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"No firebase.auth.Auth instance is available for the Firebase App "+"'"+this.appName_+"'!");}};
fireauth.AuthUser.prototype.initializeProactiveRefreshUtility_=function(){var self=this;return new fireauth.ProactiveRefresh(function(){return self.getIdToken(true)},function(error){if(error&&error.code=="auth/network-request-failed")return true;return false},function(){var waitInterval=self.stsTokenManager_.getExpirationTime()-goog.now()-fireauth.TokenRefreshTime.OFFSET_DURATION;return waitInterval>0?waitInterval:0},fireauth.TokenRefreshTime.RETRIAL_MIN_WAIT,fireauth.TokenRefreshTime.RETRIAL_MAX_WAIT,
false)};fireauth.AuthUser.prototype.startProactiveRefresh=function(){if(!this.destroyed_&&!this.proactiveRefresh_.isRunning()){this.proactiveRefresh_.start();goog.events.unlisten(this,fireauth.UserEventType.TOKEN_CHANGED,this.userTokenChangeListener_);goog.events.listen(this,fireauth.UserEventType.TOKEN_CHANGED,this.userTokenChangeListener_)}};fireauth.AuthUser.prototype.stopProactiveRefresh=function(){goog.events.unlisten(this,fireauth.UserEventType.TOKEN_CHANGED,this.userTokenChangeListener_);this.proactiveRefresh_.stop()};
fireauth.AuthUser.prototype.setLastAccessToken_=function(lastAccessToken){this.lastAccessToken_=lastAccessToken;fireauth.object.setReadonlyProperty(this,"_lat",lastAccessToken)};fireauth.AuthUser.prototype.addStateChangeListener=function(listener){this.stateChangeListeners_.push(listener)};fireauth.AuthUser.prototype.removeStateChangeListener=function(listener){goog.array.removeAllIf(this.stateChangeListeners_,function(ele){return ele==listener})};
fireauth.AuthUser.prototype.notifyStateChangeListeners_=function(){var promises=[];var self=this;for(var i=0;i<this.stateChangeListeners_.length;i++)promises.push(this.stateChangeListeners_[i](this));return goog.Promise.allSettled(promises).then(function(results){return self})};fireauth.AuthUser.prototype.setPopupEventId=function(eventId){this.popupEventId_=eventId};fireauth.AuthUser.prototype.getPopupEventId=function(){return this.popupEventId_||null};
fireauth.AuthUser.prototype.setRedirectEventId=function(eventId){this.redirectEventId_=eventId};fireauth.AuthUser.prototype.getRedirectEventId=function(){return this.redirectEventId_||null};fireauth.AuthUser.prototype.enablePopupRedirect=function(){if(this.authEventManager_&&!this.popupRedirectEnabled_){this.popupRedirectEnabled_=true;this.authEventManager_.subscribe(this)}};fireauth.AuthUser.GET_ACCOUNT_INFO_USERS="users";
fireauth.AuthUser.GetAccountInfoField={CREATED_AT:"createdAt",DISPLAY_NAME:"displayName",EMAIL:"email",LAST_LOGIN_AT:"lastLoginAt",LOCAL_ID:"localId",PASSWORD_HASH:"passwordHash",PASSWORD_UPDATED_AT:"passwordUpdatedAt",PHONE_NUMBER:"phoneNumber",PHOTO_URL:"photoUrl",PROVIDER_USER_INFO:"providerUserInfo",EMAIL_VERIFIED:"emailVerified"};fireauth.AuthUser.SetAccountInfoField={DISPLAY_NAME:"displayName",EMAIL:"email",PHOTO_URL:"photoUrl",PROVIDER_ID:"providerId",PROVIDER_USER_INFO:"providerUserInfo"};
fireauth.AuthUser.GetAccountInfoProviderField={DISPLAY_NAME:"displayName",EMAIL:"email",PHOTO_URL:"photoUrl",PHONE_NUMBER:"phoneNumber",PROVIDER_ID:"providerId",RAW_ID:"rawId"};fireauth.AuthUser.VerifyAssertionField={ID_TOKEN:"idToken",PROVIDER_ID:"providerId"};fireauth.AuthUser.prototype.getStsTokenManager=function(){return this.stsTokenManager_};
fireauth.AuthUser.prototype.setAccountInfo=function(accountInfo){fireauth.object.setReadonlyProperties(this,{"uid":accountInfo["uid"],"displayName":accountInfo["displayName"]||null,"photoURL":accountInfo["photoURL"]||null,"email":accountInfo["email"]||null,"emailVerified":accountInfo["emailVerified"]||false,"phoneNumber":accountInfo["phoneNumber"]||null,"isAnonymous":accountInfo["isAnonymous"]||false,"metadata":new fireauth.UserMetadata(accountInfo["createdAt"],accountInfo["lastLoginAt"]),"providerData":[]})};
fireauth.AuthUser.AccountInfo;fireauth.object.setReadonlyProperty(fireauth.AuthUser.prototype,"providerId",fireauth.idp.ProviderId.FIREBASE);fireauth.AuthUser.returnNothing_=function(){};fireauth.AuthUser.prototype.checkDestroyed_=function(){var self=this;return goog.Promise.resolve().then(function(){if(self.destroyed_)throw new fireauth.AuthError(fireauth.authenum.Error.MODULE_DESTROYED);})};fireauth.AuthUser.prototype.getProviderIds=function(){return goog.array.map(this["providerData"],function(userInfo){return userInfo["providerId"]})};
fireauth.AuthUser.prototype.addProviderData=function(providerData){if(!providerData)return;this.removeProviderData(providerData["providerId"]);this["providerData"].push(providerData)};fireauth.AuthUser.prototype.removeProviderData=function(providerId){goog.array.removeAllIf(this["providerData"],function(userInfo){return userInfo["providerId"]==providerId})};
fireauth.AuthUser.prototype.updateProperty=function(propName,value){if(propName=="uid"&&!value)return;if(this.hasOwnProperty(propName))fireauth.object.setReadonlyProperty(this,propName,value)};fireauth.AuthUser.prototype.hasSameUserIdAs=function(otherUser){var thisId=this["uid"];var thatId=otherUser["uid"];if(thisId===undefined||thisId===null||thisId===""||thatId===undefined||thatId===null||thatId==="")return false;return thisId==thatId};
fireauth.AuthUser.prototype.copy=function(userToCopy){var self=this;if(self==userToCopy)return;fireauth.object.setReadonlyProperties(this,{"uid":userToCopy["uid"],"displayName":userToCopy["displayName"],"photoURL":userToCopy["photoURL"],"email":userToCopy["email"],"emailVerified":userToCopy["emailVerified"],"phoneNumber":userToCopy["phoneNumber"],"isAnonymous":userToCopy["isAnonymous"],"providerData":[]});if(userToCopy["metadata"])fireauth.object.setReadonlyProperty(this,"metadata",userToCopy["metadata"].clone());
else fireauth.object.setReadonlyProperty(this,"metadata",new fireauth.UserMetadata);goog.array.forEach(userToCopy["providerData"],function(userInfo){self.addProviderData(userInfo)});this.stsTokenManager_=userToCopy.getStsTokenManager();fireauth.object.setReadonlyProperty(this,"refreshToken",this.stsTokenManager_.getRefreshToken())};fireauth.AuthUser.prototype.setRedirectStorageManager=function(redirectStorageManager){this.redirectStorageManager_=redirectStorageManager};
fireauth.AuthUser.prototype.reload=function(){var self=this;return this.registerPendingPromise_(this.checkDestroyed_().then(function(){return self.reloadWithoutSaving_().then(function(){return self.notifyStateChangeListeners_()}).then(fireauth.AuthUser.returnNothing_)}))};
fireauth.AuthUser.prototype.reloadWithoutSaving_=function(){var self=this;return this.getIdToken().then(function(idToken){var isAnonymous=self["isAnonymous"];return self.setUserAccountInfoFromToken_(idToken).then(function(user){if(!isAnonymous)self.updateProperty("isAnonymous",false);return idToken})})};
fireauth.AuthUser.prototype.getIdToken=function(opt_forceRefresh){var self=this;return this.registerPendingPromise_(this.checkDestroyed_().then(function(){return self.stsTokenManager_.getToken(opt_forceRefresh)}).then(function(response){if(!response)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);if(response["accessToken"]!=self.lastAccessToken_){self.setLastAccessToken_(response["accessToken"]);self.notifyAuthListeners_()}self.updateProperty("refreshToken",response["refreshToken"]);
return response["accessToken"]}))};fireauth.AuthUser.prototype.getToken=function(opt_forceRefresh){fireauth.deprecation.log(fireauth.deprecation.Deprecations.USER_GET_TOKEN);return this.getIdToken(opt_forceRefresh)};fireauth.AuthUser.isUserInvalidated_=function(error){return!!(error&&(error.code=="auth/user-disabled"||error.code=="auth/user-token-expired"))};
fireauth.AuthUser.prototype.updateTokensIfPresent_=function(response){if(response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]&&this.lastAccessToken_!=response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]){this.stsTokenManager_.parseServerResponse(response);this.notifyAuthListeners_();this.setLastAccessToken_(response[fireauth.RpcHandler.AuthServerField.ID_TOKEN]);this.updateProperty("refreshToken",this.stsTokenManager_.getRefreshToken())}};fireauth.AuthUser.prototype.notifyAuthListeners_=function(){this.dispatchEvent(new fireauth.UserEvent(fireauth.UserEventType.TOKEN_CHANGED))};
fireauth.AuthUser.prototype.notifyUserDeletedListeners_=function(){this.dispatchEvent(new fireauth.UserEvent(fireauth.UserEventType.USER_DELETED))};fireauth.AuthUser.prototype.notifyUserInvalidatedListeners_=function(){this.dispatchEvent(new fireauth.UserEvent(fireauth.UserEventType.USER_INVALIDATED))};fireauth.AuthUser.prototype.setUserAccountInfoFromToken_=function(idToken){return this.rpcHandler_.getAccountInfoByIdToken(idToken).then(goog.bind(this.parseAccountInfo_,this))};
fireauth.AuthUser.prototype.parseAccountInfo_=function(resp){var users=resp[fireauth.AuthUser.GET_ACCOUNT_INFO_USERS];if(!users||!users.length)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);var user=users[0];var accountInfo={"uid":user[fireauth.AuthUser.GetAccountInfoField.LOCAL_ID],"displayName":user[fireauth.AuthUser.GetAccountInfoField.DISPLAY_NAME],"photoURL":user[fireauth.AuthUser.GetAccountInfoField.PHOTO_URL],"email":user[fireauth.AuthUser.GetAccountInfoField.EMAIL],"emailVerified":!!user[fireauth.AuthUser.GetAccountInfoField.EMAIL_VERIFIED],
"phoneNumber":user[fireauth.AuthUser.GetAccountInfoField.PHONE_NUMBER],"lastLoginAt":user[fireauth.AuthUser.GetAccountInfoField.LAST_LOGIN_AT],"createdAt":user[fireauth.AuthUser.GetAccountInfoField.CREATED_AT]};this.setAccountInfo(accountInfo);var linkedAccounts=this.extractLinkedAccounts_(user);for(var i=0;i<linkedAccounts.length;i++)this.addProviderData(linkedAccounts[i]);var isAnonymous=!(this["email"]&&user[fireauth.AuthUser.GetAccountInfoField.PASSWORD_HASH])&&!(this["providerData"]&&this["providerData"].length);
this.updateProperty("isAnonymous",isAnonymous)};
fireauth.AuthUser.prototype.extractLinkedAccounts_=function(resp){var providerInfo=resp[fireauth.AuthUser.GetAccountInfoField.PROVIDER_USER_INFO];if(!providerInfo||!providerInfo.length)return[];return goog.array.map(providerInfo,function(info){return new fireauth.AuthUserInfo(info[fireauth.AuthUser.GetAccountInfoProviderField.RAW_ID],info[fireauth.AuthUser.GetAccountInfoProviderField.PROVIDER_ID],info[fireauth.AuthUser.GetAccountInfoProviderField.EMAIL],info[fireauth.AuthUser.GetAccountInfoProviderField.DISPLAY_NAME],
info[fireauth.AuthUser.GetAccountInfoProviderField.PHOTO_URL],info[fireauth.AuthUser.GetAccountInfoProviderField.PHONE_NUMBER])})};
fireauth.AuthUser.prototype.reauthenticateAndRetrieveDataWithCredential=function(credential){var self=this;var userCredential=null;return this.registerPendingPromise_(credential.matchIdTokenWithUid(this.rpcHandler_,this["uid"]).then(function(response){self.updateTokensIfPresent_(response);userCredential=self.getUserCredential_(response,fireauth.constants.OperationType.REAUTHENTICATE);self.userInvalidatedError_=null;return self.reload()}).then(function(){return userCredential}),true)};
fireauth.AuthUser.prototype.reauthenticateWithCredential=function(credential){return this.reauthenticateAndRetrieveDataWithCredential(credential).then(function(result){})};
fireauth.AuthUser.prototype.checkIfAlreadyLinked_=function(providerId){var self=this;return this.reloadWithoutSaving_().then(function(){if(goog.array.contains(self.getProviderIds(),providerId))return self.notifyStateChangeListeners_().then(function(){throw new fireauth.AuthError(fireauth.authenum.Error.PROVIDER_ALREADY_LINKED);})})};
fireauth.AuthUser.prototype.linkAndRetrieveDataWithCredential=function(credential){var self=this;var userCredential=null;return this.registerPendingPromise_(this.checkIfAlreadyLinked_(credential["providerId"]).then(function(){return self.getIdToken()}).then(function(idToken){return credential.linkToIdToken(self.rpcHandler_,idToken)}).then(function(response){userCredential=self.getUserCredential_(response,fireauth.constants.OperationType.LINK);return self.finalizeLinking_(response)}).then(function(user){return userCredential}))};
fireauth.AuthUser.prototype.linkWithCredential=function(credential){return this.linkAndRetrieveDataWithCredential(credential).then(function(result){return result["user"]})};
fireauth.AuthUser.prototype.linkWithPhoneNumber=function(phoneNumber,appVerifier){var self=this;return this.registerPendingPromise_(this.checkIfAlreadyLinked_(fireauth.idp.ProviderId.PHONE).then(function(){return fireauth.ConfirmationResult.initialize(self.getAuth_(),phoneNumber,appVerifier,goog.bind(self.linkAndRetrieveDataWithCredential,self))}))};
fireauth.AuthUser.prototype.reauthenticateWithPhoneNumber=function(phoneNumber,appVerifier){var self=this;return this.registerPendingPromise_(goog.Promise.resolve().then(function(){return fireauth.ConfirmationResult.initialize(self.getAuth_(),phoneNumber,appVerifier,goog.bind(self.reauthenticateAndRetrieveDataWithCredential,self))}),true)};
fireauth.AuthUser.prototype.getUserCredential_=function(idTokenResponse,operationType){var credential=fireauth.AuthProvider.getCredentialFromResponse(idTokenResponse);var additionalUserInfo=fireauth.AdditionalUserInfo.fromPlainObject(idTokenResponse);return fireauth.object.makeReadonlyCopy({"user":this,"credential":credential,"additionalUserInfo":additionalUserInfo,"operationType":operationType})};
fireauth.AuthUser.prototype.finalizeLinking_=function(response){this.updateTokensIfPresent_(response);var self=this;return this.reload().then(function(){return self})};fireauth.AuthUser.prototype.updateEmail=function(newEmail){var self=this;return this.registerPendingPromise_(this.getIdToken().then(function(idToken){return self.rpcHandler_.updateEmail(idToken,newEmail)}).then(function(response){self.updateTokensIfPresent_(response);return self.reload()}))};
fireauth.AuthUser.prototype.updatePhoneNumber=function(phoneCredential){var self=this;return this.registerPendingPromise_(this.getIdToken().then(function(idToken){return phoneCredential.linkToIdToken(self.rpcHandler_,idToken)}).then(function(response){self.updateTokensIfPresent_(response);return self.reload()}))};
fireauth.AuthUser.prototype.updatePassword=function(newPassword){var self=this;return this.registerPendingPromise_(this.getIdToken().then(function(idToken){return self.rpcHandler_.updatePassword(idToken,newPassword)}).then(function(response){self.updateTokensIfPresent_(response);return self.reload()}))};
fireauth.AuthUser.prototype.updateProfile=function(profile){if(profile["displayName"]===undefined&&profile["photoURL"]===undefined)return this.checkDestroyed_();var self=this;return this.registerPendingPromise_(this.getIdToken().then(function(idToken){var profileRequest={"displayName":profile["displayName"],"photoUrl":profile["photoURL"]};return self.rpcHandler_.updateProfile(idToken,profileRequest)}).then(function(response){self.updateTokensIfPresent_(response);self.updateProperty("displayName",
response[fireauth.AuthUser.SetAccountInfoField.DISPLAY_NAME]||null);self.updateProperty("photoURL",response[fireauth.AuthUser.SetAccountInfoField.PHOTO_URL]||null);goog.array.forEach(self["providerData"],function(userInfo){if(userInfo["providerId"]===fireauth.idp.ProviderId.PASSWORD){fireauth.object.setReadonlyProperty(userInfo,"displayName",self["displayName"]);fireauth.object.setReadonlyProperty(userInfo,"photoURL",self["photoURL"])}});return self.notifyStateChangeListeners_()}).then(fireauth.AuthUser.returnNothing_))};
fireauth.AuthUser.prototype.unlink=function(providerId){var self=this;return this.registerPendingPromise_(this.reloadWithoutSaving_().then(function(idToken){if(!goog.array.contains(self.getProviderIds(),providerId))return self.notifyStateChangeListeners_().then(function(){throw new fireauth.AuthError(fireauth.authenum.Error.NO_SUCH_PROVIDER);});return self.rpcHandler_.deleteLinkedAccounts(idToken,[providerId]).then(function(resp){var remainingProviderIds={};var userInfo=resp[fireauth.AuthUser.SetAccountInfoField.PROVIDER_USER_INFO]||
[];goog.array.forEach(userInfo,function(obj){remainingProviderIds[obj[fireauth.AuthUser.SetAccountInfoField.PROVIDER_ID]]=true});goog.array.forEach(self.getProviderIds(),function(pId){if(!remainingProviderIds[pId])self.removeProviderData(pId)});if(!remainingProviderIds[fireauth.PhoneAuthProvider["PROVIDER_ID"]])fireauth.object.setReadonlyProperty(self,"phoneNumber",null);return self.notifyStateChangeListeners_()})}))};fireauth.AuthUser.prototype.delete=function(){var self=this;return this.registerPendingPromise_(this.getIdToken().then(function(idToken){return self.rpcHandler_.deleteAccount(idToken)}).then(function(){self.notifyUserDeletedListeners_()})).then(function(){self.destroy()})};
fireauth.AuthUser.prototype.canHandleAuthEvent=function(mode,opt_eventId){if(mode==fireauth.AuthEvent.Type.LINK_VIA_POPUP&&this.getPopupEventId()==opt_eventId&&this.pendingPopupResolvePromise_)return true;else if(mode==fireauth.AuthEvent.Type.REAUTH_VIA_POPUP&&this.getPopupEventId()==opt_eventId&&this.pendingPopupResolvePromise_)return true;else if(mode==fireauth.AuthEvent.Type.LINK_VIA_REDIRECT&&this.getRedirectEventId()==opt_eventId)return true;else if(mode==fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT&&
this.getRedirectEventId()==opt_eventId)return true;return false};
fireauth.AuthUser.prototype.resolvePendingPopupEvent=function(mode,popupRedirectResult,error,opt_eventId){if(mode!=fireauth.AuthEvent.Type.LINK_VIA_POPUP&&mode!=fireauth.AuthEvent.Type.REAUTH_VIA_POPUP||opt_eventId!=this.getPopupEventId())return;if(error&&this.pendingPopupRejectPromise_)this.pendingPopupRejectPromise_(error);else if(popupRedirectResult&&!error&&this.pendingPopupResolvePromise_)this.pendingPopupResolvePromise_(popupRedirectResult);if(this.popupTimeoutPromise_){this.popupTimeoutPromise_.cancel();
this.popupTimeoutPromise_=null}delete this.pendingPopupResolvePromise_;delete this.pendingPopupRejectPromise_};
fireauth.AuthUser.prototype.getAuthEventHandlerFinisher=function(mode,opt_eventId){if(mode==fireauth.AuthEvent.Type.LINK_VIA_POPUP&&opt_eventId==this.getPopupEventId())return goog.bind(this.finishPopupAndRedirectLink,this);else if(mode==fireauth.AuthEvent.Type.REAUTH_VIA_POPUP&&opt_eventId==this.getPopupEventId())return goog.bind(this.finishPopupAndRedirectReauth,this);else if(mode==fireauth.AuthEvent.Type.LINK_VIA_REDIRECT&&this.getRedirectEventId()==opt_eventId)return goog.bind(this.finishPopupAndRedirectLink,
this);else if(mode==fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT&&this.getRedirectEventId()==opt_eventId)return goog.bind(this.finishPopupAndRedirectReauth,this);return null};fireauth.AuthUser.prototype.generateEventId_=function(){return fireauth.util.generateEventId(this["uid"]+":::")};
fireauth.AuthUser.prototype.linkWithPopup=function(provider){var self=this;var additionalCheck=function(){return self.checkIfAlreadyLinked_(provider["providerId"]).then(function(){return self.notifyStateChangeListeners_()})};return this.runOperationWithPopup_(fireauth.AuthEvent.Type.LINK_VIA_POPUP,provider,additionalCheck,false)};
fireauth.AuthUser.prototype.reauthenticateWithPopup=function(provider){var additionalCheck=function(){return goog.Promise.resolve()};return this.runOperationWithPopup_(fireauth.AuthEvent.Type.REAUTH_VIA_POPUP,provider,additionalCheck,true)};
fireauth.AuthUser.prototype.runOperationWithPopup_=function(mode,provider,additionalCheck,isReauthOperation){if(!fireauth.util.isPopupRedirectSupported())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));if(this.userInvalidatedError_&&!isReauthOperation)return goog.Promise.reject(this.userInvalidatedError_);var self=this;var settings=fireauth.idp.getIdpSettings(provider["providerId"]);var eventId=this.generateEventId_();var oauthHelperWidgetUrl=null;
if((!fireauth.util.runsInBackground()||fireauth.util.isIframe())&&this.authDomain_&&provider["isOAuthProvider"])oauthHelperWidgetUrl=fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(this.authDomain_,this.apiKey_,this.appName_,mode,provider,null,eventId,firebase.SDK_VERSION||null);var popupWin=fireauth.util.popup(oauthHelperWidgetUrl,fireauth.util.generateRandomString(),settings&&settings.popupWidth,settings&&settings.popupHeight);var p=additionalCheck().then(function(){self.getAuthEventManager();
if(!isReauthOperation)return self.getIdToken().then(function(idToken){})}).then(function(){return self.authEventManager_.processPopup(popupWin,mode,provider,eventId,!!oauthHelperWidgetUrl)}).then(function(){return new goog.Promise(function(resolve,reject){self.resolvePendingPopupEvent(mode,null,new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),self.getPopupEventId());self.pendingPopupResolvePromise_=resolve;self.pendingPopupRejectPromise_=reject;self.setPopupEventId(eventId);self.popupTimeoutPromise_=
self.authEventManager_.startPopupTimeout(self,mode,popupWin,eventId)})}).then(function(result){if(popupWin)fireauth.util.closeWindow(popupWin);if(result)return fireauth.object.makeReadonlyCopy(result);return null}).thenCatch(function(error){if(popupWin)fireauth.util.closeWindow(popupWin);throw error;});return this.registerPendingPromise_(p,isReauthOperation)};
fireauth.AuthUser.prototype.linkWithRedirect=function(provider){var mode=fireauth.AuthEvent.Type.LINK_VIA_REDIRECT;var self=this;var additionalCheck=function(){return self.checkIfAlreadyLinked_(provider["providerId"])};return this.runOperationWithRedirect_(mode,provider,additionalCheck,false)};
fireauth.AuthUser.prototype.reauthenticateWithRedirect=function(provider){var additionalCheck=function(){return goog.Promise.resolve()};return this.runOperationWithRedirect_(fireauth.AuthEvent.Type.REAUTH_VIA_REDIRECT,provider,additionalCheck,true)};
fireauth.AuthUser.prototype.runOperationWithRedirect_=function(mode,provider,additionalCheck,isReauthOperation){if(!fireauth.util.isPopupRedirectSupported())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));if(this.userInvalidatedError_&&!isReauthOperation)return goog.Promise.reject(this.userInvalidatedError_);var self=this;var errorThrown=null;var eventId=this.generateEventId_();var p=additionalCheck().then(function(){self.getAuthEventManager();if(!isReauthOperation)return self.getIdToken().then(function(idToken){})}).then(function(){self.setRedirectEventId(eventId);
return self.notifyStateChangeListeners_()}).then(function(user){if(self.redirectStorageManager_)return self.redirectStorageManager_.setRedirectUser(self);return user}).then(function(user){return self.authEventManager_.processRedirect(mode,provider,eventId)}).thenCatch(function(error){errorThrown=error;if(self.redirectStorageManager_)return self.redirectStorageManager_.removeRedirectUser();throw errorThrown;}).then(function(){if(errorThrown)throw errorThrown;});return this.registerPendingPromise_(p,
isReauthOperation)};fireauth.AuthUser.prototype.getAuthEventManager=function(){if(this.authEventManager_&&this.popupRedirectEnabled_)return this.authEventManager_;else if(this.authEventManager_&&!this.popupRedirectEnabled_)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR);throw new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN);};
fireauth.AuthUser.prototype.finishPopupAndRedirectLink=function(requestUri,sessionId){var self=this;if(this.popupTimeoutPromise_){this.popupTimeoutPromise_.cancel();this.popupTimeoutPromise_=null}var userCredential=null;var p=this.getIdToken().then(function(idToken){var request={"requestUri":requestUri,"sessionId":sessionId,"idToken":idToken};return self.rpcHandler_.verifyAssertionForLinking(request)}).then(function(response){userCredential=self.getUserCredential_(response,fireauth.constants.OperationType.LINK);
return self.finalizeLinking_(response)}).then(function(user){return userCredential});return this.registerPendingPromise_(p)};
fireauth.AuthUser.prototype.finishPopupAndRedirectReauth=function(requestUri,sessionId){var self=this;if(this.popupTimeoutPromise_){this.popupTimeoutPromise_.cancel();this.popupTimeoutPromise_=null}var userCredential=null;var p=goog.Promise.resolve().then(function(){var request={"requestUri":requestUri,"sessionId":sessionId};return fireauth.AuthCredential.verifyTokenResponseUid(self.rpcHandler_.verifyAssertionForExisting(request),self["uid"])}).then(function(response){userCredential=self.getUserCredential_(response,
fireauth.constants.OperationType.REAUTHENTICATE);self.updateTokensIfPresent_(response);self.userInvalidatedError_=null;return self.reload()}).then(function(){return userCredential});return this.registerPendingPromise_(p,true)};
fireauth.AuthUser.prototype.sendEmailVerification=function(opt_actionCodeSettings){var self=this;var idToken=null;return this.registerPendingPromise_(this.getIdToken().then(function(latestIdToken){idToken=latestIdToken;if(typeof opt_actionCodeSettings!=="undefined"&&!goog.object.isEmpty(opt_actionCodeSettings))return(new fireauth.ActionCodeSettings(opt_actionCodeSettings)).buildRequest();return{}}).then(function(additionalRequestData){return self.rpcHandler_.sendEmailVerification(idToken,additionalRequestData)}).then(function(email){if(self["email"]!=
email)return self.reload()}).then(function(){}))};fireauth.AuthUser.prototype.destroy=function(){for(var i=0;i<this.pendingPromises_.length;i++)this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);this.setLanguageCodeChangeDispatcher(null);this.setFrameworkChangeDispatcher(null);this.pendingPromises_=[];this.destroyed_=true;this.stopProactiveRefresh();fireauth.object.setReadonlyProperty(this,"refreshToken",null);if(this.authEventManager_)this.authEventManager_.unsubscribe(this)};
fireauth.AuthUser.prototype.registerPendingPromise_=function(p,opt_skipInvalidationCheck){var self=this;var processedP=this.checkIfInvalidated_(p,opt_skipInvalidationCheck);this.pendingPromises_.push(processedP);processedP.thenAlways(function(){goog.array.remove(self.pendingPromises_,processedP)});return processedP};
fireauth.AuthUser.prototype.checkIfInvalidated_=function(p,opt_skipInvalidationCheck){var self=this;if(this.userInvalidatedError_&&!opt_skipInvalidationCheck){p.cancel();return goog.Promise.reject(this.userInvalidatedError_)}return p.thenCatch(function(error){if(fireauth.AuthUser.isUserInvalidated_(error)){if(!self.userInvalidatedError_)self.notifyUserInvalidatedListeners_();self.userInvalidatedError_=error}throw error;})};fireauth.AuthUser.prototype.toJSON=function(){return this.toPlainObject()};
fireauth.AuthUser.prototype.toPlainObject=function(){var obj={"uid":this["uid"],"displayName":this["displayName"],"photoURL":this["photoURL"],"email":this["email"],"emailVerified":this["emailVerified"],"phoneNumber":this["phoneNumber"],"isAnonymous":this["isAnonymous"],"providerData":[],"apiKey":this.apiKey_,"appName":this.appName_,"authDomain":this.authDomain_,"stsTokenManager":this.stsTokenManager_.toPlainObject(),"redirectEventId":this.getRedirectEventId()};if(this["metadata"])goog.object.extend(obj,
this["metadata"].toPlainObject());goog.array.forEach(this["providerData"],function(userInfo){obj["providerData"].push(fireauth.object.makeWritableCopy(userInfo))});return obj};
fireauth.AuthUser.fromPlainObject=function(user){if(!user["apiKey"])return null;var options={"apiKey":user["apiKey"],"authDomain":user["authDomain"],"appName":user["appName"]};var stsTokenManagerResponse={};if(user["stsTokenManager"]&&user["stsTokenManager"]["accessToken"]&&user["stsTokenManager"]["expirationTime"]){stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.ID_TOKEN]=user["stsTokenManager"]["accessToken"];stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.REFRESH_TOKEN]=
user["stsTokenManager"]["refreshToken"]||null;stsTokenManagerResponse[fireauth.RpcHandler.AuthServerField.EXPIRES_IN]=(user["stsTokenManager"]["expirationTime"]-goog.now())/1E3}else return null;var firebaseUser=new fireauth.AuthUser(options,stsTokenManagerResponse,user);if(user["providerData"])goog.array.forEach(user["providerData"],function(userInfo){if(userInfo)firebaseUser.addProviderData(fireauth.object.makeReadonlyCopy(userInfo))});if(user["redirectEventId"])firebaseUser.setRedirectEventId(user["redirectEventId"]);
return firebaseUser};fireauth.AuthUser.initializeFromIdTokenResponse=function(appOptions,stsTokenResponse,opt_redirectStorageManager,opt_frameworks){var user=new fireauth.AuthUser(appOptions,stsTokenResponse);if(opt_redirectStorageManager)user.setRedirectStorageManager(opt_redirectStorageManager);if(opt_frameworks)user.setFramework(opt_frameworks);return user.reload().then(function(){return user})};goog.provide("fireauth.storage.RedirectUserManager");goog.require("fireauth.AuthUser");goog.require("fireauth.authStorage");fireauth.storage.RedirectUserManager=function(appId,opt_manager){this.appId_=appId;this.manager_=opt_manager||fireauth.authStorage.Manager.getInstance()};fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_={name:"redirectUser",persistent:fireauth.authStorage.Persistence.SESSION};
fireauth.storage.RedirectUserManager.prototype.setRedirectUser=function(redirectUser){return this.manager_.set(fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_,redirectUser.toPlainObject(),this.appId_)};fireauth.storage.RedirectUserManager.prototype.removeRedirectUser=function(){return this.manager_.remove(fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_,this.appId_)};
fireauth.storage.RedirectUserManager.prototype.getRedirectUser=function(opt_authDomain){return this.manager_.get(fireauth.storage.RedirectUserManager.REDIRECT_USER_KEY_,this.appId_).then(function(response){if(response&&opt_authDomain)response["authDomain"]=opt_authDomain;return fireauth.AuthUser.fromPlainObject(response||{})})};goog.provide("fireauth.storage.UserManager");goog.require("fireauth.AuthUser");goog.require("fireauth.authStorage");fireauth.storage.UserManager=function(appId,opt_manager){this.appId_=appId;this.manager_=opt_manager||fireauth.authStorage.Manager.getInstance();this.currentAuthUserKey_=null;this.onReady_=this.initialize_();this.manager_.addListener(fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.LOCAL),this.appId_,goog.bind(this.switchToLocalOnExternalEvent_,this))};
fireauth.storage.UserManager.prototype.switchToLocalOnExternalEvent_=function(){var self=this;var localKey=fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.LOCAL);this.waitForReady_(function(){return goog.Promise.resolve().then(function(){if(self.currentAuthUserKey_&&self.currentAuthUserKey_.persistent!=fireauth.authStorage.Persistence.LOCAL)return self.manager_.get(localKey,self.appId_);return null}).then(function(response){if(response)return self.removeAllExcept_(fireauth.authStorage.Persistence.LOCAL).then(function(){self.currentAuthUserKey_=
localKey})})})};fireauth.storage.UserManager.prototype.removeAllExcept_=function(persistence){var promises=[];for(var key in fireauth.authStorage.Persistence)if(fireauth.authStorage.Persistence[key]!==persistence){var storageKey=fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence[key]);promises.push(this.manager_.remove(storageKey,this.appId_))}promises.push(this.manager_.remove(fireauth.storage.UserManager.PERSISTENCE_KEY_,this.appId_));return goog.Promise.all(promises)};
fireauth.storage.UserManager.prototype.initialize_=function(){var self=this;var localKey=fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.LOCAL);var sessionKey=fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.SESSION);var inMemoryKey=fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.NONE);return this.manager_.get(sessionKey,this.appId_).then(function(response){if(response)return sessionKey;else return self.manager_.get(inMemoryKey,
self.appId_).then(function(response){if(response)return inMemoryKey;else return self.manager_.get(localKey,self.appId_).then(function(response){if(response)return localKey;else return self.manager_.get(fireauth.storage.UserManager.PERSISTENCE_KEY_,self.appId_).then(function(persistence){if(persistence)return fireauth.storage.UserManager.getAuthUserKey_(persistence);else return localKey})})})}).then(function(currentKey){self.currentAuthUserKey_=currentKey;return self.removeAllExcept_(currentKey.persistent)}).thenCatch(function(error){if(!self.currentAuthUserKey_)self.currentAuthUserKey_=
localKey})};fireauth.storage.UserManager.AUTH_USER_KEY_NAME_="authUser";fireauth.storage.UserManager.PERSISTENCE_KEY_={name:"persistence",persistent:fireauth.authStorage.Persistence.SESSION};fireauth.storage.UserManager.getAuthUserKey_=function(persistence){return{name:fireauth.storage.UserManager.AUTH_USER_KEY_NAME_,persistent:persistence}};
fireauth.storage.UserManager.prototype.setPersistence=function(persistence){var currentUser=null;var self=this;fireauth.authStorage.validatePersistenceArgument(persistence);return this.waitForReady_(function(){if(persistence!=self.currentAuthUserKey_.persistent)return self.manager_.get(self.currentAuthUserKey_,self.appId_).then(function(result){currentUser=result;return self.removeAllExcept_(persistence)}).then(function(){self.currentAuthUserKey_=fireauth.storage.UserManager.getAuthUserKey_(persistence);
if(currentUser)return self.manager_.set(self.currentAuthUserKey_,currentUser,self.appId_)});return goog.Promise.resolve()})};fireauth.storage.UserManager.prototype.savePersistenceForRedirect=function(){var self=this;return this.waitForReady_(function(){return self.manager_.set(fireauth.storage.UserManager.PERSISTENCE_KEY_,self.currentAuthUserKey_.persistent,self.appId_)})};
fireauth.storage.UserManager.prototype.setCurrentUser=function(currentUser){var self=this;return this.waitForReady_(function(){return self.manager_.set(self.currentAuthUserKey_,currentUser.toPlainObject(),self.appId_)})};fireauth.storage.UserManager.prototype.removeCurrentUser=function(){var self=this;return this.waitForReady_(function(){return self.manager_.remove(self.currentAuthUserKey_,self.appId_)})};
fireauth.storage.UserManager.prototype.getCurrentUser=function(opt_authDomain){var self=this;return this.waitForReady_(function(){return self.manager_.get(self.currentAuthUserKey_,self.appId_).then(function(response){if(response&&opt_authDomain)response["authDomain"]=opt_authDomain;return fireauth.AuthUser.fromPlainObject(response||{})})})};fireauth.storage.UserManager.prototype.waitForReady_=function(cb){this.onReady_=this.onReady_.then(cb,cb);return this.onReady_};
fireauth.storage.UserManager.prototype.addCurrentUserChangeListener=function(listener){this.manager_.addListener(fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.LOCAL),this.appId_,listener)};fireauth.storage.UserManager.prototype.removeCurrentUserChangeListener=function(listener){this.manager_.removeListener(fireauth.storage.UserManager.getAuthUserKey_(fireauth.authStorage.Persistence.LOCAL),this.appId_,listener)};goog.provide("fireauth.Auth");goog.require("fireauth.ActionCodeInfo");goog.require("fireauth.ActionCodeSettings");goog.require("fireauth.AdditionalUserInfo");goog.require("fireauth.AuthCredential");goog.require("fireauth.AuthError");goog.require("fireauth.AuthEvent");goog.require("fireauth.AuthEventHandler");goog.require("fireauth.AuthEventManager");goog.require("fireauth.AuthProvider");goog.require("fireauth.AuthUser");goog.require("fireauth.ConfirmationResult");goog.require("fireauth.RpcHandler");
goog.require("fireauth.UserEventType");goog.require("fireauth.authenum.Error");goog.require("fireauth.constants");goog.require("fireauth.idp");goog.require("fireauth.iframeclient.IfcHandler");goog.require("fireauth.object");goog.require("fireauth.storage.RedirectUserManager");goog.require("fireauth.storage.UserManager");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.array");goog.require("goog.events");goog.require("goog.events.Event");goog.require("goog.events.EventTarget");
goog.require("goog.object");
fireauth.Auth=function(app){this.deleted_=false;fireauth.object.setReadonlyProperty(this,"app",app);if(this.app_().options&&this.app_().options["apiKey"]){var clientFullVersion=firebase.SDK_VERSION?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,firebase.SDK_VERSION):null;this.rpcHandler_=new fireauth.RpcHandler(this.app_().options&&this.app_().options["apiKey"],fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint),clientFullVersion)}else throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);this.pendingPromises_=
[];this.authListeners_=[];this.userChangeListeners_=[];this.onIdTokenChanged_=firebase.INTERNAL.createSubscribe(goog.bind(this.initIdTokenChangeObserver_,this));this.userStateChangeUid_=undefined;this.onUserStateChanged_=firebase.INTERNAL.createSubscribe(goog.bind(this.initUserStateObserver_,this));this.setCurrentUser_(null);this.userStorageManager_=new fireauth.storage.UserManager(this.getStorageKey());this.redirectUserStorageManager_=new fireauth.storage.RedirectUserManager(this.getStorageKey());
this.authStateLoaded_=this.registerPendingPromise_(this.initAuthState_());this.redirectStateIsReady_=this.registerPendingPromise_(this.initAuthRedirectState_());this.isStateResolved_=false;this.getSyncAuthUserChanges_=goog.bind(this.syncAuthUserChanges_,this);this.userStateChangeListener_=goog.bind(this.handleUserStateChange_,this);this.userTokenChangeListener_=goog.bind(this.handleUserTokenChange_,this);this.userDeleteListener_=goog.bind(this.handleUserDelete_,this);this.userInvalidatedListener_=
goog.bind(this.handleUserInvalidated_,this);if(fireauth.AuthEventManager.ENABLED)this.initAuthEventManager_();this.INTERNAL={};this.INTERNAL["delete"]=goog.bind(this.delete,this);this.INTERNAL["logFramework"]=goog.bind(this.logFramework,this);this.firebaseServices_=0;fireauth.Auth.base(this,"constructor");this.initializeReadableWritableProps_();this.frameworks_=[]};goog.inherits(fireauth.Auth,goog.events.EventTarget);
fireauth.Auth.LanguageCodeChangeEvent=function(languageCode){goog.events.Event.call(this,fireauth.constants.AuthEventType.LANGUAGE_CODE_CHANGED);this.languageCode=languageCode};goog.inherits(fireauth.Auth.LanguageCodeChangeEvent,goog.events.Event);fireauth.Auth.FrameworkChangeEvent=function(frameworks){goog.events.Event.call(this,fireauth.constants.AuthEventType.FRAMEWORK_CHANGED);this.frameworks=frameworks};goog.inherits(fireauth.Auth.FrameworkChangeEvent,goog.events.Event);
fireauth.Auth.prototype.setPersistence=function(persistence){var p=this.userStorageManager_.setPersistence(persistence);return this.registerPendingPromise_(p)};fireauth.Auth.prototype.app;fireauth.Auth.prototype.setLanguageCode=function(languageCode){if(this.languageCode_!==languageCode&&!this.deleted_){this.languageCode_=languageCode;this.rpcHandler_.updateCustomLocaleHeader(this.languageCode_);this.notifyLanguageCodeListeners_()}};fireauth.Auth.prototype.getLanguageCode=function(){return this.languageCode_};
fireauth.Auth.prototype.useDeviceLanguage=function(){this.setLanguageCode(fireauth.util.getUserLanguage())};fireauth.Auth.prototype.logFramework=function(frameworkId){this.frameworks_.push(frameworkId);this.rpcHandler_.updateClientVersion(firebase.SDK_VERSION?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,firebase.SDK_VERSION,this.frameworks_):null);this.dispatchEvent(new fireauth.Auth.FrameworkChangeEvent(this.frameworks_))};fireauth.Auth.prototype.getFramework=function(){return goog.array.clone(this.frameworks_)};
fireauth.Auth.prototype.setUserFramework_=function(user){user.setFramework(this.frameworks_);user.setFrameworkChangeDispatcher(this)};fireauth.Auth.prototype.initializeReadableWritableProps_=function(){Object.defineProperty(this,"lc",{get:function(){return this.getLanguageCode()},set:function(value){this.setLanguageCode(value)},enumerable:false});this.languageCode_=null};fireauth.Auth.prototype.notifyLanguageCodeListeners_=function(){this.dispatchEvent(new fireauth.Auth.LanguageCodeChangeEvent(this.getLanguageCode()))};
fireauth.Auth.prototype.toJSON=function(){return{"apiKey":this.app_().options["apiKey"],"authDomain":this.app_().options["authDomain"],"appName":this.app_().name,"currentUser":this.currentUser_()&&this.currentUser_().toPlainObject()}};fireauth.Auth.prototype.getAuthEventManager_=function(){return this.eventManagerProviderPromise_||goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.MISSING_AUTH_DOMAIN))};
fireauth.Auth.prototype.initAuthEventManager_=function(){var self=this;var authDomain=this.app_().options["authDomain"];var apiKey=this.app_().options["apiKey"];if(authDomain&&fireauth.util.isPopupRedirectSupported())this.eventManagerProviderPromise_=this.authStateLoaded_.then(function(){if(self.deleted_)return;self.authEventManager_=fireauth.AuthEventManager.getManager(authDomain,apiKey,self.app_().name);self.authEventManager_.subscribe(self);if(self.currentUser_())self.currentUser_().enablePopupRedirect();
if(self.redirectUser_){self.redirectUser_.enablePopupRedirect();self.setUserLanguage_(self.redirectUser_);self.setUserFramework_(self.redirectUser_);self.redirectUser_=null}return self.authEventManager_})};
fireauth.Auth.prototype.canHandleAuthEvent=function(mode,opt_eventId){switch(mode){case fireauth.AuthEvent.Type.UNKNOWN:case fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT:return true;case fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP:return this.popupEventId_==opt_eventId&&!!this.pendingPopupResolvePromise_;default:return false}};
fireauth.Auth.prototype.resolvePendingPopupEvent=function(mode,popupRedirectResult,error,opt_eventId){if(mode!=fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP||this.popupEventId_!=opt_eventId)return;if(error&&this.pendingPopupRejectPromise_)this.pendingPopupRejectPromise_(error);else if(popupRedirectResult&&!error&&this.pendingPopupResolvePromise_)this.pendingPopupResolvePromise_(popupRedirectResult);if(this.popupTimeoutPromise_){this.popupTimeoutPromise_.cancel();this.popupTimeoutPromise_=null}delete this.pendingPopupResolvePromise_;
delete this.pendingPopupRejectPromise_};fireauth.Auth.prototype.getAuthEventHandlerFinisher=function(mode,opt_eventId){if(mode==fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT)return goog.bind(this.finishPopupAndRedirectSignIn,this);else if(mode==fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP&&this.popupEventId_==opt_eventId&&this.pendingPopupResolvePromise_)return goog.bind(this.finishPopupAndRedirectSignIn,this);return null};
fireauth.Auth.prototype.finishPopupAndRedirectSignIn=function(requestUri,sessionId){var self=this;var request={"requestUri":requestUri,"sessionId":sessionId};if(this.popupTimeoutPromise_){this.popupTimeoutPromise_.cancel();this.popupTimeoutPromise_=null}var credential=null;var additionalUserInfo=null;var idTokenResolver=self.rpcHandler_.verifyAssertion(request).then(function(response){credential=fireauth.AuthProvider.getCredentialFromResponse(response);additionalUserInfo=fireauth.AdditionalUserInfo.fromPlainObject(response);
return response});var p=self.authStateLoaded_.then(function(){return idTokenResolver}).then(function(idTokenResponse){return self.signInWithIdTokenResponse(idTokenResponse)}).then(function(){return fireauth.object.makeReadonlyCopy({"user":self.currentUser_(),"credential":credential,"additionalUserInfo":additionalUserInfo,"operationType":fireauth.constants.OperationType.SIGN_IN})});return this.registerPendingPromise_(p)};fireauth.Auth.prototype.generateEventId_=function(){return fireauth.util.generateEventId()};
fireauth.Auth.prototype.signInWithPopup=function(provider){if(!fireauth.util.isPopupRedirectSupported())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));var mode=fireauth.AuthEvent.Type.SIGN_IN_VIA_POPUP;var self=this;var settings=fireauth.idp.getIdpSettings(provider["providerId"]);var eventId=this.generateEventId_();var oauthHelperWidgetUrl=null;if((!fireauth.util.runsInBackground()||fireauth.util.isIframe())&&this.app_().options["authDomain"]&&
provider["isOAuthProvider"])oauthHelperWidgetUrl=fireauth.iframeclient.IfcHandler.getOAuthHelperWidgetUrl(this.app_().options["authDomain"],this.app_().options["apiKey"],this.app_().name,mode,provider,null,eventId,firebase.SDK_VERSION||null);var popupWin=fireauth.util.popup(oauthHelperWidgetUrl,fireauth.util.generateRandomString(),settings&&settings.popupWidth,settings&&settings.popupHeight);var p=this.getAuthEventManager_().then(function(manager){return manager.processPopup(popupWin,mode,provider,
eventId,!!oauthHelperWidgetUrl)}).then(function(){return new goog.Promise(function(resolve,reject){self.resolvePendingPopupEvent(mode,null,new fireauth.AuthError(fireauth.authenum.Error.EXPIRED_POPUP_REQUEST),self.popupEventId_);self.pendingPopupResolvePromise_=resolve;self.pendingPopupRejectPromise_=reject;self.popupEventId_=eventId;self.popupTimeoutPromise_=self.authEventManager_.startPopupTimeout(self,mode,popupWin,eventId)})}).then(function(result){if(popupWin)fireauth.util.closeWindow(popupWin);
if(result)return fireauth.object.makeReadonlyCopy(result);return null}).thenCatch(function(error){if(popupWin)fireauth.util.closeWindow(popupWin);throw error;});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.signInWithRedirect=function(provider){if(!fireauth.util.isPopupRedirectSupported())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));var self=this;var mode=fireauth.AuthEvent.Type.SIGN_IN_VIA_REDIRECT;var p=this.getAuthEventManager_().then(function(manager){return self.userStorageManager_.savePersistenceForRedirect()}).then(function(){return self.authEventManager_.processRedirect(mode,provider)});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.getRedirectResult=function(){if(!fireauth.util.isPopupRedirectSupported())return goog.Promise.reject(new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED));var self=this;var p=this.getAuthEventManager_().then(function(manager){return self.authEventManager_.getRedirectResult()}).then(function(result){if(result)return fireauth.object.makeReadonlyCopy(result);return null});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.signInWithIdTokenResponse=function(idTokenResponse){var self=this;var options={};options["apiKey"]=self.app_().options["apiKey"];options["authDomain"]=self.app_().options["authDomain"];options["appName"]=self.app_().name;return this.authStateLoaded_.then(function(){return fireauth.AuthUser.initializeFromIdTokenResponse(options,idTokenResponse,self.redirectUserStorageManager_,self.getFramework())}).then(function(user){if(self.currentUser_()&&user["uid"]==self.currentUser_()["uid"]){self.currentUser_().copy(user);
return self.handleUserStateChange_(user)}self.setCurrentUser_(user);user.enablePopupRedirect();return self.handleUserStateChange_(user)}).then(function(){self.notifyAuthListeners_()})};fireauth.Auth.prototype.setCurrentUser_=function(user){this.attachEventListeners_(user);fireauth.object.setReadonlyProperty(this,"currentUser",user);if(user){this.setUserLanguage_(user);this.setUserFramework_(user)}};
fireauth.Auth.prototype.signOut=function(){var self=this;var p=this.redirectStateIsReady_.then(function(){if(!self.currentUser_())return goog.Promise.resolve();self.setCurrentUser_(null);return self.userStorageManager_.removeCurrentUser().then(function(){self.notifyAuthListeners_()})});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.initRedirectUser_=function(){var self=this;var authDomain=this.app_().options["authDomain"];var p=this.redirectUserStorageManager_.getRedirectUser(authDomain).then(function(user){self.redirectUser_=user;if(user)user.setRedirectStorageManager(self.redirectUserStorageManager_);return self.redirectUserStorageManager_.removeRedirectUser()});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.initAuthState_=function(){var self=this;var authDomain=this.app_().options["authDomain"];var p=this.initRedirectUser_().then(function(){return self.userStorageManager_.getCurrentUser(authDomain)}).then(function(user){if(user){user.setRedirectStorageManager(self.redirectUserStorageManager_);if(self.redirectUser_&&self.redirectUser_.getRedirectEventId()==user.getRedirectEventId())return user;return user.reload().then(function(){return self.userStorageManager_.setCurrentUser(user).then(function(){return user})}).thenCatch(function(error){if(error["code"]==
"auth/network-request-failed")return user;return self.userStorageManager_.removeCurrentUser()})}return null}).then(function(user){self.setCurrentUser_(user||null)});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.initAuthRedirectState_=function(){var self=this;return this.authStateLoaded_.then(function(){return self.getRedirectResult()}).thenCatch(function(error){return}).then(function(){if(self.deleted_)return;return self.getSyncAuthUserChanges_()}).thenCatch(function(error){return}).then(function(){if(self.deleted_)return;self.isStateResolved_=true;self.userStorageManager_.addCurrentUserChangeListener(self.getSyncAuthUserChanges_)})};
fireauth.Auth.prototype.syncAuthUserChanges_=function(){var self=this;var authDomain=this.app_().options["authDomain"];return this.userStorageManager_.getCurrentUser(authDomain).then(function(user){if(self.deleted_)return;if(self.currentUser_()&&user&&self.currentUser_().hasSameUserIdAs(user)){self.currentUser_().copy(user);return self.currentUser_().getIdToken()}else if(!self.currentUser_()&&!user)return;else{self.setCurrentUser_(user);if(user){user.enablePopupRedirect();user.setRedirectStorageManager(self.redirectUserStorageManager_)}if(self.authEventManager_)self.authEventManager_.subscribe(self);
self.notifyAuthListeners_()}})};fireauth.Auth.prototype.setUserLanguage_=function(user){user.setLanguageCode(this.getLanguageCode());user.setLanguageCodeChangeDispatcher(this)};fireauth.Auth.prototype.handleUserStateChange_=function(user){return this.userStorageManager_.setCurrentUser(user)};fireauth.Auth.prototype.handleUserTokenChange_=function(event){this.notifyAuthListeners_();this.handleUserStateChange_(this.currentUser_())};fireauth.Auth.prototype.handleUserDelete_=function(event){this.signOut()};
fireauth.Auth.prototype.handleUserInvalidated_=function(event){this.signOut()};
fireauth.Auth.prototype.attachEventListeners_=function(user){if(this.currentUser_()){this.currentUser_().removeStateChangeListener(this.userStateChangeListener_);goog.events.unlisten(this.currentUser_(),fireauth.UserEventType.TOKEN_CHANGED,this.userTokenChangeListener_);goog.events.unlisten(this.currentUser_(),fireauth.UserEventType.USER_DELETED,this.userDeleteListener_);goog.events.unlisten(this.currentUser_(),fireauth.UserEventType.USER_INVALIDATED,this.userInvalidatedListener_);this.currentUser_().stopProactiveRefresh()}if(user){user.addStateChangeListener(this.userStateChangeListener_);
goog.events.listen(user,fireauth.UserEventType.TOKEN_CHANGED,this.userTokenChangeListener_);goog.events.listen(user,fireauth.UserEventType.USER_DELETED,this.userDeleteListener_);goog.events.listen(user,fireauth.UserEventType.USER_INVALIDATED,this.userInvalidatedListener_);if(this.firebaseServices_>0)user.startProactiveRefresh()}};
fireauth.Auth.prototype.signInWithIdTokenProvider_=function(idTokenPromise){var self=this;var credential=null;var additionalUserInfo=null;return this.registerPendingPromise_(idTokenPromise.then(function(idTokenResponse){credential=fireauth.AuthProvider.getCredentialFromResponse(idTokenResponse);additionalUserInfo=fireauth.AdditionalUserInfo.fromPlainObject(idTokenResponse);return self.signInWithIdTokenResponse(idTokenResponse)}).then(function(){return fireauth.object.makeReadonlyCopy({"user":self.currentUser_(),
"credential":credential,"additionalUserInfo":additionalUserInfo,"operationType":fireauth.constants.OperationType.SIGN_IN})}))};fireauth.Auth.prototype.initIdTokenChangeObserver_=function(observer){var self=this;this.addAuthTokenListener(function(accessToken){observer.next(self.currentUser_())})};fireauth.Auth.prototype.initUserStateObserver_=function(observer){var self=this;this.addUserChangeListener_(function(accessToken){observer.next(self.currentUser_())})};
fireauth.Auth.prototype.onIdTokenChanged=function(nextOrObserver,opt_error,opt_completed){var self=this;if(this.isStateResolved_)firebase.Promise.resolve().then(function(){if(goog.isFunction(nextOrObserver))nextOrObserver(self.currentUser_());else if(goog.isFunction(nextOrObserver["next"]))nextOrObserver["next"](self.currentUser_())});return this.onIdTokenChanged_(nextOrObserver,opt_error,opt_completed)};
fireauth.Auth.prototype.onAuthStateChanged=function(nextOrObserver,opt_error,opt_completed){var self=this;if(this.isStateResolved_)firebase.Promise.resolve().then(function(){self.userStateChangeUid_=self.getUid();if(goog.isFunction(nextOrObserver))nextOrObserver(self.currentUser_());else if(goog.isFunction(nextOrObserver["next"]))nextOrObserver["next"](self.currentUser_())});return this.onUserStateChanged_(nextOrObserver,opt_error,opt_completed)};
fireauth.Auth.prototype.getIdTokenInternal=function(opt_forceRefresh){var self=this;var p=this.redirectStateIsReady_.then(function(){if(self.currentUser_())return self.currentUser_().getIdToken(opt_forceRefresh).then(function(stsAccessToken){return{"accessToken":stsAccessToken}});return null});return this.registerPendingPromise_(p)};
fireauth.Auth.prototype.signInWithCustomToken=function(token){var self=this;return this.redirectStateIsReady_.then(function(){return self.signInWithIdTokenProvider_(self.getRpcHandler().verifyCustomToken(token))}).then(function(result){var user=result["user"];user.updateProperty("isAnonymous",false);return self.handleUserStateChange_(user)}).then(function(){return self.currentUser_()})};
fireauth.Auth.prototype.signInWithEmailAndPassword=function(email,password){var self=this;return this.redirectStateIsReady_.then(function(){return self.signInWithIdTokenProvider_(self.getRpcHandler().verifyPassword(email,password))}).then(function(result){return result["user"]})};
fireauth.Auth.prototype.createUserWithEmailAndPassword=function(email,password){var self=this;return this.redirectStateIsReady_.then(function(){return self.signInWithIdTokenProvider_(self.getRpcHandler().createAccount(email,password))}).then(function(result){return result["user"]})};fireauth.Auth.prototype.signInWithCredential=function(credential){return this.signInAndRetrieveDataWithCredential(credential).then(function(result){return result["user"]})};
fireauth.Auth.prototype.signInAndRetrieveDataWithCredential=function(credential){var self=this;return this.redirectStateIsReady_.then(function(){return self.signInWithIdTokenProvider_(credential.getIdTokenProvider(self.getRpcHandler()))})};
fireauth.Auth.prototype.signInAnonymously=function(){var self=this;return this.redirectStateIsReady_.then(function(){var user=self.currentUser_();if(user&&user["isAnonymous"])return user;else return self.signInWithIdTokenProvider_(self.getRpcHandler().signInAnonymously()).then(function(result){var user=result["user"];user.updateProperty("isAnonymous",true);return self.handleUserStateChange_(user)}).then(function(){return self.currentUser_()})})};
fireauth.Auth.prototype.getStorageKey=function(){return fireauth.util.createStorageKey(this.app_().options["apiKey"],this.app_().name)};fireauth.Auth.prototype.app_=function(){return this["app"]};fireauth.Auth.prototype.getRpcHandler=function(){return this.rpcHandler_};fireauth.Auth.prototype.currentUser_=function(){return this["currentUser"]};fireauth.Auth.prototype.getUid=function(){return this.currentUser_()&&this.currentUser_()["uid"]||null};
fireauth.Auth.prototype.getLastAccessToken_=function(){return this.currentUser_()&&this.currentUser_()["_lat"]||null};fireauth.Auth.prototype.notifyAuthListeners_=function(){if(this.isStateResolved_){for(var i=0;i<this.authListeners_.length;i++)if(this.authListeners_[i])this.authListeners_[i](this.getLastAccessToken_());if(this.userStateChangeUid_!==this.getUid()&&this.userChangeListeners_.length){this.userStateChangeUid_=this.getUid();for(var i=0;i<this.userChangeListeners_.length;i++)if(this.userChangeListeners_[i])this.userChangeListeners_[i](this.getLastAccessToken_())}}};
fireauth.Auth.prototype.addAuthTokenListenerInternal=function(listener){this.addAuthTokenListener(listener);this.firebaseServices_++;if(this.firebaseServices_>0&&this.currentUser_())this.currentUser_().startProactiveRefresh()};
fireauth.Auth.prototype.removeAuthTokenListenerInternal=function(listener){var self=this;goog.array.forEach(this.authListeners_,function(ele){if(ele==listener)self.firebaseServices_--});if(this.firebaseServices_<0)this.firebaseServices_=0;if(this.firebaseServices_==0&&this.currentUser_())this.currentUser_().stopProactiveRefresh();this.removeAuthTokenListener(listener)};
fireauth.Auth.prototype.addAuthTokenListener=function(listener){var self=this;this.authListeners_.push(listener);this.registerPendingPromise_(this.redirectStateIsReady_.then(function(){if(self.deleted_)return;if(goog.array.contains(self.authListeners_,listener))listener(self.getLastAccessToken_())}))};fireauth.Auth.prototype.removeAuthTokenListener=function(listener){goog.array.removeAllIf(this.authListeners_,function(ele){return ele==listener})};
fireauth.Auth.prototype.addUserChangeListener_=function(listener){var self=this;this.userChangeListeners_.push(listener);this.registerPendingPromise_(this.redirectStateIsReady_.then(function(){if(self.deleted_)return;if(goog.array.contains(self.userChangeListeners_,listener))if(self.userStateChangeUid_!==self.getUid()){self.userStateChangeUid_=self.getUid();listener(self.getLastAccessToken_())}}))};
fireauth.Auth.prototype.delete=function(){this.deleted_=true;for(var i=0;i<this.pendingPromises_.length;i++)this.pendingPromises_[i].cancel(fireauth.authenum.Error.MODULE_DESTROYED);this.pendingPromises_=[];if(this.userStorageManager_)this.userStorageManager_.removeCurrentUserChangeListener(this.getSyncAuthUserChanges_);if(this.authEventManager_)this.authEventManager_.unsubscribe(this);return firebase.Promise.resolve()};
fireauth.Auth.prototype.hasPendingPromises=function(){return this.pendingPromises_.length!=0};fireauth.Auth.prototype.registerPendingPromise_=function(p){var self=this;this.pendingPromises_.push(p);p.thenAlways(function(){goog.array.remove(self.pendingPromises_,p)});return p};fireauth.Auth.prototype.fetchProvidersForEmail=function(email){return this.registerPendingPromise_(this.getRpcHandler().fetchProvidersForIdentifier(email))};fireauth.Auth.prototype.verifyPasswordResetCode=function(code){return this.checkActionCode(code).then(function(info){return info["data"]["email"]})};
fireauth.Auth.prototype.confirmPasswordReset=function(code,newPassword){return this.registerPendingPromise_(this.getRpcHandler().confirmPasswordReset(code,newPassword).then(function(email){}))};fireauth.Auth.prototype.checkActionCode=function(code){return this.registerPendingPromise_(this.getRpcHandler().checkActionCode(code).then(function(response){return new fireauth.ActionCodeInfo(response)}))};fireauth.Auth.prototype.applyActionCode=function(code){return this.registerPendingPromise_(this.getRpcHandler().applyActionCode(code).then(function(email){}))};
fireauth.Auth.prototype.sendPasswordResetEmail=function(email,opt_actionCodeSettings){var self=this;return this.registerPendingPromise_(goog.Promise.resolve().then(function(){if(typeof opt_actionCodeSettings!=="undefined"&&!goog.object.isEmpty(opt_actionCodeSettings))return(new fireauth.ActionCodeSettings(opt_actionCodeSettings)).buildRequest();return{}}).then(function(additionalRequestData){return self.getRpcHandler().sendPasswordResetEmail(email,additionalRequestData)}).then(function(email){}))};
fireauth.Auth.prototype.signInWithPhoneNumber=function(phoneNumber,appVerifier){return this.registerPendingPromise_(fireauth.ConfirmationResult.initialize(this,phoneNumber,appVerifier,goog.bind(this.signInAndRetrieveDataWithCredential,this)))};goog.provide("fireauth.args");goog.provide("fireauth.args.Argument");goog.require("fireauth.Auth");goog.require("fireauth.AuthError");goog.require("fireauth.authenum.Error");fireauth.args.Argument;
fireauth.args.validate=function(apiName,expected,actual,opt_isSetter){var actualAsArray=Array.prototype.slice.call(actual);var errorMessage=fireauth.args.validateAndGetMessage_(expected,actualAsArray,opt_isSetter);if(errorMessage)throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,apiName+" failed: "+errorMessage);};
fireauth.args.validateAndGetMessage_=function(expected,actual,opt_isSetter){var minNumArgs=fireauth.args.calcNumRequiredArgs_(expected);var maxNumArgs=expected.length;if(actual.length<minNumArgs||maxNumArgs<actual.length)return fireauth.args.makeLengthError_(minNumArgs,maxNumArgs,actual.length);for(var i=0;i<actual.length;i++){var optionalUndefined=expected[i].optional&&actual[i]===undefined;if(!expected[i].validator(actual[i])&&!optionalUndefined)return fireauth.args.makeErrorAtPosition_(i,expected[i],
opt_isSetter)}return null};fireauth.args.calcNumRequiredArgs_=function(expected){var numRequiredArgs=0;var isOptionalSection=false;for(var i=0;i<expected.length;i++)if(expected[i].optional)isOptionalSection=true;else{if(isOptionalSection)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"Argument validator encountered a required argument after an "+"optional argument.");numRequiredArgs++}return numRequiredArgs};
fireauth.args.makeLengthError_=function(min,max,actual){var numExpectedString;if(min==max)if(min==1)numExpectedString="1 argument";else numExpectedString=min+" arguments";else numExpectedString=min+"-"+max+" arguments";return"Expected "+numExpectedString+" but got "+actual+"."};
fireauth.args.makeErrorAtPosition_=function(position,expectedType,opt_isSetter){var ordinal=fireauth.args.makeOrdinal_(position);var argName=expectedType.name?fireauth.args.quoteString_(expectedType.name)+" ":"";var errorPrefix=!!opt_isSetter?"":ordinal+" argument ";return errorPrefix+argName+"must be "+expectedType.typeLabel+"."};fireauth.args.ORDINAL_NUMBERS_=["First","Second","Third","Fourth","Fifth","Sixth","Seventh","Eighth","Ninth"];
fireauth.args.makeOrdinal_=function(cardinal){if(cardinal<0||cardinal>=fireauth.args.ORDINAL_NUMBERS_.length)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"Argument validator received an unsupported number of arguments.");return fireauth.args.ORDINAL_NUMBERS_[cardinal]};fireauth.args.string=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"a valid string",optional:!!opt_optional,validator:goog.isString}};
fireauth.args.bool=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"a boolean",optional:!!opt_optional,validator:goog.isBoolean}};fireauth.args.number=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"a valid number",optional:!!opt_optional,validator:goog.isNumber}};fireauth.args.object=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"a valid object",optional:!!opt_optional,validator:goog.isObject}};
fireauth.args.func=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"a function",optional:!!opt_optional,validator:goog.isFunction}};fireauth.args.null=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"null",optional:!!opt_optional,validator:goog.isNull}};fireauth.args.element=function(opt_name,opt_optional){return{name:opt_name||"",typeLabel:"an HTML element",optional:!!opt_optional,validator:function(element){return!!(element&&element instanceof Element)}}};
fireauth.args.firebaseAuth=function(opt_optional){return{name:"auth",typeLabel:"an instance of Firebase Auth",optional:!!opt_optional,validator:function(auth){return!!(auth&&auth instanceof fireauth.Auth)}}};fireauth.args.firebaseApp=function(opt_optional){return{name:"app",typeLabel:"an instance of Firebase App",optional:!!opt_optional,validator:function(app){return!!(app&&app instanceof firebase.app.App)}}};
fireauth.args.authCredential=function(opt_requiredProviderId,opt_name,opt_optional){var name=opt_name||(opt_requiredProviderId?opt_requiredProviderId+"Credential":"credential");var typeLabel=opt_requiredProviderId?"a valid "+opt_requiredProviderId+" credential":"a valid credential";return{name:name,typeLabel:typeLabel,optional:!!opt_optional,validator:function(credential){if(!credential)return false;var matchesRequiredProvider=!opt_requiredProviderId||credential["providerId"]===opt_requiredProviderId;
return!!(credential.getIdTokenProvider&&matchesRequiredProvider)}}};fireauth.args.authProvider=function(opt_name,opt_optional){return{name:opt_name||"authProvider",typeLabel:"a valid Auth provider",optional:!!opt_optional,validator:function(provider){return!!(provider&&provider["providerId"]&&provider.hasOwnProperty&&provider.hasOwnProperty("isOAuthProvider"))}}};
fireauth.args.applicationVerifier=function(opt_optional){return{name:"applicationVerifier",typeLabel:"an implementation of firebase.auth.ApplicationVerifier",optional:!!opt_optional,validator:function(applicationVerifier){return!!(applicationVerifier&&goog.isString(applicationVerifier.type)&&goog.isFunction(applicationVerifier.verify))}}};
fireauth.args.or=function(optionA,optionB,opt_name,opt_optional){return{name:opt_name||"",typeLabel:optionA.typeLabel+" or "+optionB.typeLabel,optional:!!opt_optional,validator:function(value){return optionA.validator(value)||optionB.validator(value)}}};fireauth.args.quoteString_=function(str){return'"'+str+'"'};goog.provide("fireauth.BaseRecaptchaVerifier");goog.provide("fireauth.RecaptchaVerifier");goog.require("fireauth.AuthError");goog.require("fireauth.RpcHandler");goog.require("fireauth.authenum.Error");goog.require("fireauth.constants");goog.require("fireauth.object");goog.require("fireauth.util");goog.require("goog.Promise");goog.require("goog.array");goog.require("goog.dom");goog.require("goog.html.TrustedResourceUrl");goog.require("goog.net.jsloader");goog.require("goog.string.Const");
fireauth.BaseRecaptchaVerifier=function(apiKey,container,opt_parameters,opt_getLanguageCode,opt_clientVersion,opt_rpcHandlerConfig){fireauth.object.setReadonlyProperty(this,"type","recaptcha");this.cachedReadyPromise_=null;this.widgetId_=null;this.destroyed_=false;this.container_=container;this.parameters_=opt_parameters||{"theme":"light","type":"image"};this.pendingPromises_=[];if(this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY])throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,
"sitekey should not be provided for reCAPTCHA as one is "+"automatically provisioned for the current project.");this.isInvisible_=this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SIZE]==="invisible";if(!goog.dom.getElement(container)||!this.isInvisible_&&goog.dom.getElement(container).hasChildNodes())throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"reCAPTCHA container is either not found or already contains inner "+"elements!");this.rpcHandler_=new fireauth.RpcHandler(apiKey,
opt_rpcHandlerConfig||null,opt_clientVersion||null);this.getLanguageCode_=opt_getLanguageCode||function(){return null};var self=this;this.tokenListeners_=[];var existingCallback=this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK];this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.CALLBACK]=function(response){self.dispatchEvent_(response);if(typeof existingCallback==="function")existingCallback(response);else if(typeof existingCallback==="string"){var cb=fireauth.util.getObjectRef(existingCallback,
goog.global);if(typeof cb==="function")cb(response)}};var existingExpiredCallback=this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK];this.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.EXPIRED_CALLBACK]=function(){self.dispatchEvent_(null);if(typeof existingExpiredCallback==="function")existingExpiredCallback();else if(typeof existingExpiredCallback==="string"){var cb=fireauth.util.getObjectRef(existingExpiredCallback,goog.global);if(typeof cb==="function")cb()}}};
fireauth.BaseRecaptchaVerifier.ParamName={CALLBACK:"callback",EXPIRED_CALLBACK:"expired-callback",SITEKEY:"sitekey",SIZE:"size"};fireauth.BaseRecaptchaVerifier.prototype.dispatchEvent_=function(token){for(var i=0;i<this.tokenListeners_.length;i++)try{this.tokenListeners_[i](token)}catch(e){}};fireauth.BaseRecaptchaVerifier.prototype.addTokenChangeListener_=function(listener){this.tokenListeners_.push(listener)};
fireauth.BaseRecaptchaVerifier.prototype.removeTokenChangeListener_=function(listener){goog.array.removeAllIf(this.tokenListeners_,function(ele){return ele==listener})};fireauth.BaseRecaptchaVerifier.prototype.registerPendingPromise_=function(p){var self=this;this.pendingPromises_.push(p);p.thenAlways(function(){goog.array.remove(self.pendingPromises_,p)});return p};fireauth.BaseRecaptchaVerifier.prototype.hasPendingPromises=function(){return this.pendingPromises_.length!=0};
fireauth.BaseRecaptchaVerifier.prototype.isReady_=function(){var self=this;if(this.cachedReadyPromise_)return this.cachedReadyPromise_;this.cachedReadyPromise_=this.registerPendingPromise_(goog.Promise.resolve().then(function(){if(fireauth.util.isHttpOrHttps())return fireauth.util.onDomReady();else throw new fireauth.AuthError(fireauth.authenum.Error.OPERATION_NOT_SUPPORTED,"RecaptchaVerifier is only supported in a browser HTTP/HTTPS "+"environment.");}).then(function(){return fireauth.BaseRecaptchaVerifier.Loader.getInstance().loadRecaptchaDeps(self.getLanguageCode_())}).then(function(){return self.rpcHandler_.getRecaptchaParam()}).then(function(result){self.parameters_[fireauth.BaseRecaptchaVerifier.ParamName.SITEKEY]=
result[fireauth.RpcHandler.AuthServerField.RECAPTCHA_SITE_KEY]}).thenCatch(function(error){self.cachedReadyPromise_=null;throw error;}));return this.cachedReadyPromise_};
fireauth.BaseRecaptchaVerifier.prototype.render=function(){this.checkIfDestroyed_();var self=this;return this.registerPendingPromise_(this.isReady_().then(function(){if(self.widgetId_===null){var container=self.container_;if(!self.isInvisible_){var outerContainer=goog.dom.getElement(container);container=goog.dom.createDom(goog.dom.TagName.DIV);outerContainer.appendChild(container)}self.widgetId_=grecaptcha.render(container,self.parameters_)}return self.widgetId_}))};
fireauth.BaseRecaptchaVerifier.prototype.verify=function(){this.checkIfDestroyed_();var self=this;return this.registerPendingPromise_(this.render().then(function(widgetId){return new goog.Promise(function(resolve,reject){var recaptchaToken=grecaptcha.getResponse(widgetId);if(recaptchaToken)resolve(recaptchaToken);else{var cb=function(token){if(!token)return;self.removeTokenChangeListener_(cb);resolve(token)};self.addTokenChangeListener_(cb);if(self.isInvisible_)grecaptcha.execute(self.widgetId_)}})}))};
fireauth.BaseRecaptchaVerifier.prototype.reset=function(){this.checkIfDestroyed_();if(this.widgetId_!==null)grecaptcha.reset(this.widgetId_)};fireauth.BaseRecaptchaVerifier.prototype.checkIfDestroyed_=function(){if(this.destroyed_)throw new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"RecaptchaVerifier instance has been destroyed.");};
fireauth.BaseRecaptchaVerifier.prototype.clear=function(){this.checkIfDestroyed_();this.destroyed_=true;fireauth.BaseRecaptchaVerifier.Loader.getInstance().clearSingleRecaptcha();for(var i=0;i<this.pendingPromises_.length;i++)this.pendingPromises_[i].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.isInvisible_)goog.dom.removeChildren(goog.dom.getElement(this.container_))};
fireauth.BaseRecaptchaVerifier.RECAPTCHA_SRC_=goog.string.Const.from("https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit"+"&hl=%{hl}");fireauth.BaseRecaptchaVerifier.Loader=function(){this.counter_=goog.global["grecaptcha"]?Infinity:0;this.hl_=null;this.cbName_="__rcb"+Math.floor(Math.random()*1E6).toString()};
fireauth.BaseRecaptchaVerifier.Loader.prototype.loadRecaptchaDeps=function(hl){var self=this;return new goog.Promise(function(resolve,reject){if(!fireauth.util.isOnline()){reject(new fireauth.AuthError(fireauth.authenum.Error.NETWORK_REQUEST_FAILED));return}if(!goog.global["grecaptcha"]||hl!==self.hl_&&!self.counter_){goog.global[self.cbName_]=function(){if(!goog.global["grecaptcha"])reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR));else{self.hl_=hl;var render=goog.global["grecaptcha"]["render"];
goog.global["grecaptcha"]["render"]=function(container,parameters){var widgetId=render(container,parameters);self.counter_++;return widgetId};resolve()}delete goog.global[self.cbName_]};var url=goog.html.TrustedResourceUrl.format(fireauth.BaseRecaptchaVerifier.RECAPTCHA_SRC_,{"onload":self.cbName_,"hl":hl||""});goog.Promise.resolve(goog.net.jsloader.safeLoad(url)).thenCatch(function(error){reject(new fireauth.AuthError(fireauth.authenum.Error.INTERNAL_ERROR,"Unable to load external reCAPTCHA dependencies!"))})}else resolve()})};
fireauth.BaseRecaptchaVerifier.Loader.prototype.clearSingleRecaptcha=function(){this.counter_--};fireauth.BaseRecaptchaVerifier.Loader.instance_=null;fireauth.BaseRecaptchaVerifier.Loader.getInstance=function(){if(!fireauth.BaseRecaptchaVerifier.Loader.instance_)fireauth.BaseRecaptchaVerifier.Loader.instance_=new fireauth.BaseRecaptchaVerifier.Loader;return fireauth.BaseRecaptchaVerifier.Loader.instance_};
fireauth.RecaptchaVerifier=function(container,opt_parameters,opt_app){var apiKey;try{this.app_=opt_app||firebase.app()}catch(error){throw new fireauth.AuthError(fireauth.authenum.Error.ARGUMENT_ERROR,"No firebase.app.App instance is currently initialized.");}if(this.app_.options&&this.app_.options["apiKey"])apiKey=this.app_.options["apiKey"];else throw new fireauth.AuthError(fireauth.authenum.Error.INVALID_API_KEY);var self=this;var getLanguageCode=function(){var languageCode;try{languageCode=self.app_["auth"]().getLanguageCode()}catch(e){languageCode=
null}return languageCode};var frameworkVersion=null;try{frameworkVersion=this.app_["auth"]().getFramework()}catch(e){}var clientFullVersion=firebase.SDK_VERSION?fireauth.util.getClientVersion(fireauth.util.ClientImplementation.JSCORE,firebase.SDK_VERSION,frameworkVersion):null;fireauth.RecaptchaVerifier.base(this,"constructor",apiKey,container,opt_parameters,getLanguageCode,clientFullVersion,fireauth.constants.getEndpointConfig(fireauth.constants.clientEndpoint))};
goog.inherits(fireauth.RecaptchaVerifier,fireauth.BaseRecaptchaVerifier);goog.provide("fireauth.exportlib");goog.provide("fireauth.exportlib.ExportedMethod");goog.require("fireauth.args");fireauth.exportlib.AUTH_TYPE="auth";fireauth.exportlib.ExportedMethod;fireauth.exportlib.ExportedProperty;fireauth.exportlib.exportPrototypeMethods=function(protObj,fnMap){for(var obfuscatedFnName in fnMap){var unobfuscatedFnName=fnMap[obfuscatedFnName].name;protObj[unobfuscatedFnName]=fireauth.exportlib.wrapMethodWithArgumentVerifier_(unobfuscatedFnName,protObj[obfuscatedFnName],fnMap[obfuscatedFnName].args)}};
fireauth.exportlib.exportPrototypeProperties=function(protObj,propMap){for(var obfuscatedPropName in propMap){var unobfuscatedPropName=propMap[obfuscatedPropName].name;if(unobfuscatedPropName===obfuscatedPropName)continue;var expectedArg=propMap[obfuscatedPropName].arg;Object.defineProperty(protObj,unobfuscatedPropName,{get:function(){return this[obfuscatedPropName]},set:function(value){fireauth.args.validate(unobfuscatedPropName,[expectedArg],[value],true);this[obfuscatedPropName]=value},enumerable:true})}};
fireauth.exportlib.exportFunction=function(parentObj,name,func,opt_expectedArgs){parentObj[name]=fireauth.exportlib.wrapMethodWithArgumentVerifier_(name,func,opt_expectedArgs)};
fireauth.exportlib.wrapMethodWithArgumentVerifier_=function(methodName,method,opt_expectedArgs){if(!opt_expectedArgs)return method;var shortName=fireauth.exportlib.extractMethodNameFromFullPath_(methodName);var wrapper=function(){var argumentsAsArray=Array.prototype.slice.call(arguments);fireauth.args.validate(shortName,opt_expectedArgs,argumentsAsArray);return method.apply(this,argumentsAsArray)};for(var key in method)wrapper[key]=method[key];for(var key in method.prototype)wrapper.prototype[key]=
method.prototype[key];return wrapper};fireauth.exportlib.extractMethodNameFromFullPath_=function(path){var parts=path.split(".");return parts[parts.length-1]};goog.provide("fireauth.exports");goog.require("fireauth.Auth");goog.require("fireauth.AuthError");goog.require("fireauth.AuthErrorWithCredential");goog.require("fireauth.AuthUser");goog.require("fireauth.ConfirmationResult");goog.require("fireauth.EmailAuthProvider");goog.require("fireauth.FacebookAuthProvider");goog.require("fireauth.GithubAuthProvider");goog.require("fireauth.GoogleAuthProvider");goog.require("fireauth.InvalidOriginError");goog.require("fireauth.OAuthProvider");goog.require("fireauth.PhoneAuthProvider");
goog.require("fireauth.RecaptchaVerifier");goog.require("fireauth.TwitterAuthProvider");goog.require("fireauth.args");goog.require("fireauth.authStorage.Persistence");goog.require("fireauth.exportlib");goog.require("fireauth.idp.ProviderId");goog.require("goog.Promise");
fireauth.exportlib.exportPrototypeMethods(fireauth.Auth.prototype,{applyActionCode:{name:"applyActionCode",args:[fireauth.args.string("code")]},checkActionCode:{name:"checkActionCode",args:[fireauth.args.string("code")]},confirmPasswordReset:{name:"confirmPasswordReset",args:[fireauth.args.string("code"),fireauth.args.string("newPassword")]},createUserWithEmailAndPassword:{name:"createUserWithEmailAndPassword",args:[fireauth.args.string("email"),fireauth.args.string("password")]},fetchProvidersForEmail:{name:"fetchProvidersForEmail",
args:[fireauth.args.string("email")]},getRedirectResult:{name:"getRedirectResult",args:[]},onAuthStateChanged:{name:"onAuthStateChanged",args:[fireauth.args.or(fireauth.args.object(),fireauth.args.func(),"nextOrObserver"),fireauth.args.func("opt_error",true),fireauth.args.func("opt_completed",true)]},onIdTokenChanged:{name:"onIdTokenChanged",args:[fireauth.args.or(fireauth.args.object(),fireauth.args.func(),"nextOrObserver"),fireauth.args.func("opt_error",true),fireauth.args.func("opt_completed",
true)]},sendPasswordResetEmail:{name:"sendPasswordResetEmail",args:[fireauth.args.string("email"),fireauth.args.or(fireauth.args.object("opt_actionCodeSettings",true),fireauth.args.null(null,true),"opt_actionCodeSettings",true)]},setPersistence:{name:"setPersistence",args:[fireauth.args.string("persistence")]},signInAndRetrieveDataWithCredential:{name:"signInAndRetrieveDataWithCredential",args:[fireauth.args.authCredential()]},signInAnonymously:{name:"signInAnonymously",args:[]},signInWithCredential:{name:"signInWithCredential",
args:[fireauth.args.authCredential()]},signInWithCustomToken:{name:"signInWithCustomToken",args:[fireauth.args.string("token")]},signInWithEmailAndPassword:{name:"signInWithEmailAndPassword",args:[fireauth.args.string("email"),fireauth.args.string("password")]},signInWithPhoneNumber:{name:"signInWithPhoneNumber",args:[fireauth.args.string("phoneNumber"),fireauth.args.applicationVerifier()]},signInWithPopup:{name:"signInWithPopup",args:[fireauth.args.authProvider()]},signInWithRedirect:{name:"signInWithRedirect",
args:[fireauth.args.authProvider()]},signOut:{name:"signOut",args:[]},toJSON:{name:"toJSON",args:[fireauth.args.string(null,true)]},useDeviceLanguage:{name:"useDeviceLanguage",args:[]},verifyPasswordResetCode:{name:"verifyPasswordResetCode",args:[fireauth.args.string("code")]}});fireauth.exportlib.exportPrototypeProperties(fireauth.Auth.prototype,{"lc":{name:"languageCode",arg:fireauth.args.or(fireauth.args.string(),fireauth.args.null(),"languageCode")}});fireauth.Auth["Persistence"]=fireauth.authStorage.Persistence;
fireauth.Auth["Persistence"]["LOCAL"]=fireauth.authStorage.Persistence.LOCAL;fireauth.Auth["Persistence"]["SESSION"]=fireauth.authStorage.Persistence.SESSION;fireauth.Auth["Persistence"]["NONE"]=fireauth.authStorage.Persistence.NONE;
fireauth.exportlib.exportPrototypeMethods(fireauth.AuthUser.prototype,{"delete":{name:"delete",args:[]},getIdToken:{name:"getIdToken",args:[fireauth.args.bool("opt_forceRefresh",true)]},getToken:{name:"getToken",args:[fireauth.args.bool("opt_forceRefresh",true)]},linkAndRetrieveDataWithCredential:{name:"linkAndRetrieveDataWithCredential",args:[fireauth.args.authCredential()]},linkWithCredential:{name:"linkWithCredential",args:[fireauth.args.authCredential()]},linkWithPhoneNumber:{name:"linkWithPhoneNumber",
args:[fireauth.args.string("phoneNumber"),fireauth.args.applicationVerifier()]},linkWithPopup:{name:"linkWithPopup",args:[fireauth.args.authProvider()]},linkWithRedirect:{name:"linkWithRedirect",args:[fireauth.args.authProvider()]},reauthenticateAndRetrieveDataWithCredential:{name:"reauthenticateAndRetrieveDataWithCredential",args:[fireauth.args.authCredential()]},reauthenticateWithCredential:{name:"reauthenticateWithCredential",args:[fireauth.args.authCredential()]},reauthenticateWithPhoneNumber:{name:"reauthenticateWithPhoneNumber",
args:[fireauth.args.string("phoneNumber"),fireauth.args.applicationVerifier()]},reauthenticateWithPopup:{name:"reauthenticateWithPopup",args:[fireauth.args.authProvider()]},reauthenticateWithRedirect:{name:"reauthenticateWithRedirect",args:[fireauth.args.authProvider()]},reload:{name:"reload",args:[]},sendEmailVerification:{name:"sendEmailVerification",args:[fireauth.args.or(fireauth.args.object("opt_actionCodeSettings",true),fireauth.args.null(null,true),"opt_actionCodeSettings",true)]},toJSON:{name:"toJSON",
args:[fireauth.args.string(null,true)]},unlink:{name:"unlink",args:[fireauth.args.string("provider")]},updateEmail:{name:"updateEmail",args:[fireauth.args.string("email")]},updatePassword:{name:"updatePassword",args:[fireauth.args.string("password")]},updatePhoneNumber:{name:"updatePhoneNumber",args:[fireauth.args.authCredential(fireauth.idp.ProviderId.PHONE)]},updateProfile:{name:"updateProfile",args:[fireauth.args.object("profile")]}});
fireauth.exportlib.exportPrototypeMethods(goog.Promise.prototype,{thenCatch:{name:"catch"},then:{name:"then"}});fireauth.exportlib.exportPrototypeMethods(fireauth.ConfirmationResult.prototype,{confirm:{name:"confirm",args:[fireauth.args.string("verificationCode")]}});fireauth.exportlib.exportFunction(fireauth.EmailAuthProvider,"credential",fireauth.EmailAuthProvider.credential,[fireauth.args.string("email"),fireauth.args.string("password")]);
fireauth.exportlib.exportPrototypeMethods(fireauth.FacebookAuthProvider.prototype,{addScope:{name:"addScope",args:[fireauth.args.string("scope")]},setCustomParameters:{name:"setCustomParameters",args:[fireauth.args.object("customOAuthParameters")]}});fireauth.exportlib.exportFunction(fireauth.FacebookAuthProvider,"credential",fireauth.FacebookAuthProvider.credential,[fireauth.args.or(fireauth.args.string(),fireauth.args.object(),"token")]);
fireauth.exportlib.exportPrototypeMethods(fireauth.GithubAuthProvider.prototype,{addScope:{name:"addScope",args:[fireauth.args.string("scope")]},setCustomParameters:{name:"setCustomParameters",args:[fireauth.args.object("customOAuthParameters")]}});fireauth.exportlib.exportFunction(fireauth.GithubAuthProvider,"credential",fireauth.GithubAuthProvider.credential,[fireauth.args.or(fireauth.args.string(),fireauth.args.object(),"token")]);
fireauth.exportlib.exportPrototypeMethods(fireauth.GoogleAuthProvider.prototype,{addScope:{name:"addScope",args:[fireauth.args.string("scope")]},setCustomParameters:{name:"setCustomParameters",args:[fireauth.args.object("customOAuthParameters")]}});
fireauth.exportlib.exportFunction(fireauth.GoogleAuthProvider,"credential",fireauth.GoogleAuthProvider.credential,[fireauth.args.or(fireauth.args.string(),fireauth.args.or(fireauth.args.object(),fireauth.args.null()),"idToken"),fireauth.args.or(fireauth.args.string(),fireauth.args.null(),"accessToken",true)]);fireauth.exportlib.exportPrototypeMethods(fireauth.TwitterAuthProvider.prototype,{setCustomParameters:{name:"setCustomParameters",args:[fireauth.args.object("customOAuthParameters")]}});
fireauth.exportlib.exportFunction(fireauth.TwitterAuthProvider,"credential",fireauth.TwitterAuthProvider.credential,[fireauth.args.or(fireauth.args.string(),fireauth.args.object(),"token"),fireauth.args.string("secret",true)]);
fireauth.exportlib.exportPrototypeMethods(fireauth.OAuthProvider.prototype,{addScope:{name:"addScope",args:[fireauth.args.string("scope")]},credential:{name:"credential",args:[fireauth.args.or(fireauth.args.string(),fireauth.args.null(),"idToken",true),fireauth.args.or(fireauth.args.string(),fireauth.args.null(),"accessToken",true)]},setCustomParameters:{name:"setCustomParameters",args:[fireauth.args.object("customOAuthParameters")]}});
fireauth.exportlib.exportFunction(fireauth.PhoneAuthProvider,"credential",fireauth.PhoneAuthProvider.credential,[fireauth.args.string("verificationId"),fireauth.args.string("verificationCode")]);fireauth.exportlib.exportPrototypeMethods(fireauth.PhoneAuthProvider.prototype,{verifyPhoneNumber:{name:"verifyPhoneNumber",args:[fireauth.args.string("phoneNumber"),fireauth.args.applicationVerifier()]}});
fireauth.exportlib.exportPrototypeMethods(fireauth.AuthError.prototype,{toJSON:{name:"toJSON",args:[fireauth.args.string(null,true)]}});fireauth.exportlib.exportPrototypeMethods(fireauth.AuthErrorWithCredential.prototype,{toJSON:{name:"toJSON",args:[fireauth.args.string(null,true)]}});fireauth.exportlib.exportPrototypeMethods(fireauth.InvalidOriginError.prototype,{toJSON:{name:"toJSON",args:[fireauth.args.string(null,true)]}});
fireauth.exportlib.exportPrototypeMethods(fireauth.RecaptchaVerifier.prototype,{clear:{name:"clear",args:[]},render:{name:"render",args:[]},verify:{name:"verify",args:[]}});
(function(){if(typeof firebase==="undefined"||!firebase.INTERNAL||!firebase.INTERNAL.registerService)throw new Error("Cannot find the firebase namespace; be sure to include "+"firebase-app.js before this library.");else{var factory=function(app,extendApp){var auth=new fireauth.Auth(app);extendApp({"INTERNAL":{"getUid":goog.bind(auth.getUid,auth),"getToken":goog.bind(auth.getIdTokenInternal,auth),"addAuthTokenListener":goog.bind(auth.addAuthTokenListenerInternal,auth),"removeAuthTokenListener":goog.bind(auth.removeAuthTokenListenerInternal,
auth)}});return auth};var namespace={"Auth":fireauth.Auth,"Error":fireauth.AuthError};fireauth.exportlib.exportFunction(namespace,"EmailAuthProvider",fireauth.EmailAuthProvider,[]);fireauth.exportlib.exportFunction(namespace,"FacebookAuthProvider",fireauth.FacebookAuthProvider,[]);fireauth.exportlib.exportFunction(namespace,"GithubAuthProvider",fireauth.GithubAuthProvider,[]);fireauth.exportlib.exportFunction(namespace,"GoogleAuthProvider",fireauth.GoogleAuthProvider,[]);fireauth.exportlib.exportFunction(namespace,
"TwitterAuthProvider",fireauth.TwitterAuthProvider,[]);fireauth.exportlib.exportFunction(namespace,"OAuthProvider",fireauth.OAuthProvider,[fireauth.args.string("providerId")]);fireauth.exportlib.exportFunction(namespace,"PhoneAuthProvider",fireauth.PhoneAuthProvider,[fireauth.args.firebaseAuth(true)]);fireauth.exportlib.exportFunction(namespace,"RecaptchaVerifier",fireauth.RecaptchaVerifier,[fireauth.args.or(fireauth.args.string(),fireauth.args.element(),"recaptchaContainer"),fireauth.args.object("recaptchaParameters",
true),fireauth.args.firebaseApp(true)]);firebase.INTERNAL.registerService(fireauth.exportlib.AUTH_TYPE,factory,namespace,function(event,app){if(event==="create")try{app[fireauth.exportlib.AUTH_TYPE]()}catch(e){}});firebase.INTERNAL.extendNamespace({"User":fireauth.AuthUser})}})();
}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)))

/***/ })

},[76]);
        } catch(error) {
          throw new Error(
            'Cannot instantiate firebase-auth.js - ' +
            'be sure to load firebase-app.js first.'
          )
        }

/*!
 * @license Firebase v4.6.2
 * Build: rev-61e817a
 * Terms: https://firebase.google.com/terms/
 */
try {
        webpackJsonpFirebase([0],[
/* 0 */,
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var util_3 = __webpack_require__(0);
var util_4 = __webpack_require__(0);
var util_5 = __webpack_require__(0);
var util_6 = __webpack_require__(0);
var storage_1 = __webpack_require__(12);
var util_7 = __webpack_require__(0);
/**
 * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).
 * @type {function(): number} Generated ID.
 */
exports.LUIDGenerator = (function () {
    var id = 1;
    return function () {
        return id++;
    };
})();
/**
 * Sha1 hash of the input string
 * @param {!string} str The string to hash
 * @return {!string} The resulting hash
 */
exports.sha1 = function (str) {
    var utf8Bytes = util_5.stringToByteArray(str);
    var sha1 = new util_4.Sha1();
    sha1.update(utf8Bytes);
    var sha1Bytes = sha1.digest();
    return util_3.base64.encodeByteArray(sha1Bytes);
};
/**
 * @param {...*} var_args
 * @return {string}
 * @private
 */
var buildLogMessage_ = function () {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    var message = '';
    for (var i = 0; i < var_args.length; i++) {
        if (Array.isArray(var_args[i]) ||
            (var_args[i] &&
                typeof var_args[i] === 'object' &&
                typeof var_args[i].length === 'number')) {
            message += buildLogMessage_.apply(null, var_args[i]);
        }
        else if (typeof var_args[i] === 'object') {
            message += util_6.stringify(var_args[i]);
        }
        else {
            message += var_args[i];
        }
        message += ' ';
    }
    return message;
};
/**
 * Use this for all debug messages in Firebase.
 * @type {?function(string)}
 */
exports.logger = null;
/**
 * Flag to check for log availability on first log message
 * @type {boolean}
 * @private
 */
var firstLog_ = true;
/**
 * The implementation of Firebase.enableLogging (defined here to break dependencies)
 * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger
 * @param {boolean=} persistent Whether or not to persist logging settings across refreshes
 */
exports.enableLogging = function (logger_, persistent) {
    util_1.assert(!persistent || (logger_ === true || logger_ === false), "Can't turn on custom loggers persistently.");
    if (logger_ === true) {
        if (typeof console !== 'undefined') {
            if (typeof console.log === 'function') {
                exports.logger = console.log.bind(console);
            }
            else if (typeof console.log === 'object') {
                // IE does this.
                exports.logger = function (message) {
                    console.log(message);
                };
            }
        }
        if (persistent)
            storage_1.SessionStorage.set('logging_enabled', true);
    }
    else if (typeof logger_ === 'function') {
        exports.logger = logger_;
    }
    else {
        exports.logger = null;
        storage_1.SessionStorage.remove('logging_enabled');
    }
};
/**
 *
 * @param {...(string|Arguments)} var_args
 */
exports.log = function () {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    if (firstLog_ === true) {
        firstLog_ = false;
        if (exports.logger === null && storage_1.SessionStorage.get('logging_enabled') === true)
            exports.enableLogging(true);
    }
    if (exports.logger) {
        var message = buildLogMessage_.apply(null, var_args);
        exports.logger(message);
    }
};
/**
 * @param {!string} prefix
 * @return {function(...[*])}
 */
exports.logWrapper = function (prefix) {
    return function () {
        var var_args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            var_args[_i] = arguments[_i];
        }
        exports.log.apply(void 0, [prefix].concat(var_args));
    };
};
/**
 * @param {...string} var_args
 */
exports.error = function () {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    if (typeof console !== 'undefined') {
        var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);
        if (typeof console.error !== 'undefined') {
            console.error(message);
        }
        else {
            console.log(message);
        }
    }
};
/**
 * @param {...string} var_args
 */
exports.fatal = function () {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    var message = buildLogMessage_.apply(void 0, var_args);
    throw new Error('FIREBASE FATAL ERROR: ' + message);
};
/**
 * @param {...*} var_args
 */
exports.warn = function () {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    if (typeof console !== 'undefined') {
        var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);
        if (typeof console.warn !== 'undefined') {
            console.warn(message);
        }
        else {
            console.log(message);
        }
    }
};
/**
 * Logs a warning if the containing page uses https. Called when a call to new Firebase
 * does not use https.
 */
exports.warnIfPageIsSecure = function () {
    // Be very careful accessing browser globals. Who knows what may or may not exist.
    if (typeof window !== 'undefined' &&
        window.location &&
        window.location.protocol &&
        window.location.protocol.indexOf('https:') !== -1) {
        exports.warn('Insecure Firebase access from a secure page. ' +
            'Please use https in calls to new Firebase().');
    }
};
/**
 * @param {!String} methodName
 */
exports.warnAboutUnsupportedMethod = function (methodName) {
    exports.warn(methodName +
        ' is unsupported and will likely change soon.  ' +
        'Please do not use.');
};
/**
 * Returns true if data is NaN, or +/- Infinity.
 * @param {*} data
 * @return {boolean}
 */
exports.isInvalidJSONNumber = function (data) {
    return (typeof data === 'number' &&
        (data != data || // NaN
            data == Number.POSITIVE_INFINITY ||
            data == Number.NEGATIVE_INFINITY));
};
/**
 * @param {function()} fn
 */
exports.executeWhenDOMReady = function (fn) {
    if (util_7.isNodeSdk() || document.readyState === 'complete') {
        fn();
    }
    else {
        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which
        // fire before onload), but fall back to onload.
        var called_1 = false;
        var wrappedFn_1 = function () {
            if (!document.body) {
                setTimeout(wrappedFn_1, Math.floor(10));
                return;
            }
            if (!called_1) {
                called_1 = true;
                fn();
            }
        };
        if (document.addEventListener) {
            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);
            // fallback to onload.
            window.addEventListener('load', wrappedFn_1, false);
        }
        else if (document.attachEvent) {
            // IE.
            document.attachEvent('onreadystatechange', function () {
                if (document.readyState === 'complete')
                    wrappedFn_1();
            });
            // fallback to onload.
            window.attachEvent('onload', wrappedFn_1);
            // jQuery has an extra hack for IE that we could employ (based on
            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.
            // I'm hoping we don't need it.
        }
    }
};
/**
 * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names
 * @type {!string}
 */
exports.MIN_NAME = '[MIN_NAME]';
/**
 * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names
 * @type {!string}
 */
exports.MAX_NAME = '[MAX_NAME]';
/**
 * Compares valid Firebase key names, plus min and max name
 * @param {!string} a
 * @param {!string} b
 * @return {!number}
 */
exports.nameCompare = function (a, b) {
    if (a === b) {
        return 0;
    }
    else if (a === exports.MIN_NAME || b === exports.MAX_NAME) {
        return -1;
    }
    else if (b === exports.MIN_NAME || a === exports.MAX_NAME) {
        return 1;
    }
    else {
        var aAsInt = exports.tryParseInt(a), bAsInt = exports.tryParseInt(b);
        if (aAsInt !== null) {
            if (bAsInt !== null) {
                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;
            }
            else {
                return -1;
            }
        }
        else if (bAsInt !== null) {
            return 1;
        }
        else {
            return a < b ? -1 : 1;
        }
    }
};
/**
 * @param {!string} a
 * @param {!string} b
 * @return {!number} comparison result.
 */
exports.stringCompare = function (a, b) {
    if (a === b) {
        return 0;
    }
    else if (a < b) {
        return -1;
    }
    else {
        return 1;
    }
};
/**
 * @param {string} key
 * @param {Object} obj
 * @return {*}
 */
exports.requireKey = function (key, obj) {
    if (obj && key in obj) {
        return obj[key];
    }
    else {
        throw new Error('Missing required key (' + key + ') in object: ' + util_6.stringify(obj));
    }
};
/**
 * @param {*} obj
 * @return {string}
 */
exports.ObjectToUniqueKey = function (obj) {
    if (typeof obj !== 'object' || obj === null)
        return util_6.stringify(obj);
    var keys = [];
    for (var k in obj) {
        keys.push(k);
    }
    // Export as json, but with the keys sorted.
    keys.sort();
    var key = '{';
    for (var i = 0; i < keys.length; i++) {
        if (i !== 0)
            key += ',';
        key += util_6.stringify(keys[i]);
        key += ':';
        key += exports.ObjectToUniqueKey(obj[keys[i]]);
    }
    key += '}';
    return key;
};
/**
 * Splits a string into a number of smaller segments of maximum size
 * @param {!string} str The string
 * @param {!number} segsize The maximum number of chars in the string.
 * @return {Array.<string>} The string, split into appropriately-sized chunks
 */
exports.splitStringBySize = function (str, segsize) {
    var len = str.length;
    if (len <= segsize) {
        return [str];
    }
    var dataSegs = [];
    for (var c = 0; c < len; c += segsize) {
        if (c + segsize > len) {
            dataSegs.push(str.substring(c, len));
        }
        else {
            dataSegs.push(str.substring(c, c + segsize));
        }
    }
    return dataSegs;
};
/**
 * Apply a function to each (key, value) pair in an object or
 * apply a function to each (index, value) pair in an array
 * @param {!(Object|Array)} obj The object or array to iterate over
 * @param {function(?, ?)} fn The function to apply
 */
exports.each = function (obj, fn) {
    if (Array.isArray(obj)) {
        for (var i = 0; i < obj.length; ++i) {
            fn(i, obj[i]);
        }
    }
    else {
        /**
         * in the conversion of code we removed the goog.object.forEach
         * function which did a value,key callback. We standardized on
         * a single impl that does a key, value callback. So we invert
         * to not have to touch the `each` code points
         */
        util_2.forEach(obj, function (key, val) { return fn(val, key); });
    }
};
/**
 * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.
 * @param {function(*)} callback Callback function.
 * @param {?Object=} context Optional context to bind to.
 * @return {function(*)}
 */
exports.bindCallback = function (callback, context) {
    return context ? callback.bind(context) : callback;
};
/**
 * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)
 * I made one modification at the end and removed the NaN / Infinity
 * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.
 * @param {!number} v A double
 * @return {string}
 */
exports.doubleToIEEE754String = function (v) {
    util_1.assert(!exports.isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL
    var ebits = 11, fbits = 52;
    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;
    // Compute sign, exponent, fraction
    // Skip NaN / Infinity handling --MJL.
    if (v === 0) {
        e = 0;
        f = 0;
        s = 1 / v === -Infinity ? 1 : 0;
    }
    else {
        s = v < 0;
        v = Math.abs(v);
        if (v >= Math.pow(2, 1 - bias)) {
            // Normalized
            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);
            e = ln + bias;
            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));
        }
        else {
            // Denormalized
            e = 0;
            f = Math.round(v / Math.pow(2, 1 - bias - fbits));
        }
    }
    // Pack sign, exponent, fraction
    bits = [];
    for (i = fbits; i; i -= 1) {
        bits.push(f % 2 ? 1 : 0);
        f = Math.floor(f / 2);
    }
    for (i = ebits; i; i -= 1) {
        bits.push(e % 2 ? 1 : 0);
        e = Math.floor(e / 2);
    }
    bits.push(s ? 1 : 0);
    bits.reverse();
    str = bits.join('');
    // Return the data as a hex string. --MJL
    var hexByteString = '';
    for (i = 0; i < 64; i += 8) {
        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);
        if (hexByte.length === 1)
            hexByte = '0' + hexByte;
        hexByteString = hexByteString + hexByte;
    }
    return hexByteString.toLowerCase();
};
/**
 * Used to detect if we're in a Chrome content script (which executes in an
 * isolated environment where long-polling doesn't work).
 * @return {boolean}
 */
exports.isChromeExtensionContentScript = function () {
    return !!(typeof window === 'object' &&
        window['chrome'] &&
        window['chrome']['extension'] &&
        !/^chrome/.test(window.location.href));
};
/**
 * Used to detect if we're in a Windows 8 Store app.
 * @return {boolean}
 */
exports.isWindowsStoreApp = function () {
    // Check for the presence of a couple WinRT globals
    return typeof Windows === 'object' && typeof Windows.UI === 'object';
};
/**
 * Converts a server error code to a Javascript Error
 * @param {!string} code
 * @param {!Query} query
 * @return {Error}
 */
exports.errorForServerCode = function (code, query) {
    var reason = 'Unknown Error';
    if (code === 'too_big') {
        reason =
            'The data requested exceeds the maximum size ' +
                'that can be accessed with a single request.';
    }
    else if (code == 'permission_denied') {
        reason = "Client doesn't have permission to access the desired data.";
    }
    else if (code == 'unavailable') {
        reason = 'The service is unavailable';
    }
    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);
    error.code = code.toUpperCase();
    return error;
};
/**
 * Used to test for integer-looking strings
 * @type {RegExp}
 * @private
 */
exports.INTEGER_REGEXP_ = new RegExp('^-?\\d{1,10}$');
/**
 * If the string contains a 32-bit integer, return it.  Else return null.
 * @param {!string} str
 * @return {?number}
 */
exports.tryParseInt = function (str) {
    if (exports.INTEGER_REGEXP_.test(str)) {
        var intVal = Number(str);
        if (intVal >= -2147483648 && intVal <= 2147483647) {
            return intVal;
        }
    }
    return null;
};
/**
 * Helper to run some code but catch any exceptions and re-throw them later.
 * Useful for preventing user callbacks from breaking internal code.
 *
 * Re-throwing the exception from a setTimeout is a little evil, but it's very
 * convenient (we don't have to try to figure out when is a safe point to
 * re-throw it), and the behavior seems reasonable:
 *
 * * If you aren't pausing on exceptions, you get an error in the console with
 *   the correct stack trace.
 * * If you're pausing on all exceptions, the debugger will pause on your
 *   exception and then again when we rethrow it.
 * * If you're only pausing on uncaught exceptions, the debugger will only pause
 *   on us re-throwing it.
 *
 * @param {!function()} fn The code to guard.
 */
exports.exceptionGuard = function (fn) {
    try {
        fn();
    }
    catch (e) {
        // Re-throw exception when it's safe.
        setTimeout(function () {
            // It used to be that "throw e" would result in a good console error with
            // relevant context, but as of Chrome 39, you just get the firebase.js
            // file/line number where we re-throw it, which is useless. So we log
            // e.stack explicitly.
            var stack = e.stack || '';
            exports.warn('Exception was thrown by user callback.', stack);
            throw e;
        }, Math.floor(0));
    }
};
/**
 * Helper function to safely call opt_callback with the specified arguments.  It:
 * 1. Turns into a no-op if opt_callback is null or undefined.
 * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.
 *
 * @param {?Function=} callback Optional onComplete callback.
 * @param {...*} var_args Arbitrary args to be passed to opt_onComplete
 */
exports.callUserCallback = function (callback) {
    var var_args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        var_args[_i - 1] = arguments[_i];
    }
    if (typeof callback === 'function') {
        exports.exceptionGuard(function () {
            callback.apply(void 0, var_args);
        });
    }
};
/**
 * @return {boolean} true if we think we're currently being crawled.
 */
exports.beingCrawled = function () {
    var userAgent = (typeof window === 'object' &&
        window['navigator'] &&
        window['navigator']['userAgent']) ||
        '';
    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we
    // believe to support JavaScript/AJAX rendering.
    // NOTE: Google Webmaster Tools doesn't really belong, but their "This is how a visitor to your website
    // would have seen the page" is flaky if we don't treat it as a crawler.
    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);
};
/**
 * Export a property of an object using a getter function.
 *
 * @param {!Object} object
 * @param {string} name
 * @param {!function(): *} fnGet
 */
exports.exportPropGetter = function (object, name, fnGet) {
    Object.defineProperty(object, name, { get: fnGet });
};
/**
 * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.
 *
 * It is removed with clearTimeout() as normal.
 *
 * @param {Function} fn Function to run.
 * @param {number} time Milliseconds to wait before running.
 * @return {number|Object} The setTimeout() return value.
 */
exports.setTimeoutNonBlocking = function (fn, time) {
    var timeout = setTimeout(fn, time);
    if (typeof timeout === 'object' && timeout['unref']) {
        timeout['unref']();
    }
    return timeout;
};

//# sourceMappingURL=util.js.map


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
var util_2 = __webpack_require__(0);
/**
 * An immutable object representing a parsed path.  It's immutable so that you
 * can pass them around to other functions without worrying about them changing
 * it.
 */
var Path = /** @class */ (function () {
    /**
     * @param {string|Array.<string>} pathOrString Path string to parse,
     *      or another path, or the raw tokens array
     * @param {number=} pieceNum
     */
    function Path(pathOrString, pieceNum) {
        if (pieceNum === void 0) {
            this.pieces_ = pathOrString.split('/');
            // Remove empty pieces.
            var copyTo = 0;
            for (var i = 0; i < this.pieces_.length; i++) {
                if (this.pieces_[i].length > 0) {
                    this.pieces_[copyTo] = this.pieces_[i];
                    copyTo++;
                }
            }
            this.pieces_.length = copyTo;
            this.pieceNum_ = 0;
        }
        else {
            this.pieces_ = pathOrString;
            this.pieceNum_ = pieceNum;
        }
    }
    Object.defineProperty(Path, "Empty", {
        /**
         * Singleton to represent an empty path
         *
         * @const
         */
        get: function () {
            return new Path('');
        },
        enumerable: true,
        configurable: true
    });
    Path.prototype.getFront = function () {
        if (this.pieceNum_ >= this.pieces_.length)
            return null;
        return this.pieces_[this.pieceNum_];
    };
    /**
     * @return {number} The number of segments in this path
     */
    Path.prototype.getLength = function () {
        return this.pieces_.length - this.pieceNum_;
    };
    /**
     * @return {!Path}
     */
    Path.prototype.popFront = function () {
        var pieceNum = this.pieceNum_;
        if (pieceNum < this.pieces_.length) {
            pieceNum++;
        }
        return new Path(this.pieces_, pieceNum);
    };
    /**
     * @return {?string}
     */
    Path.prototype.getBack = function () {
        if (this.pieceNum_ < this.pieces_.length)
            return this.pieces_[this.pieces_.length - 1];
        return null;
    };
    Path.prototype.toString = function () {
        var pathString = '';
        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {
            if (this.pieces_[i] !== '')
                pathString += '/' + this.pieces_[i];
        }
        return pathString || '/';
    };
    Path.prototype.toUrlEncodedString = function () {
        var pathString = '';
        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {
            if (this.pieces_[i] !== '')
                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));
        }
        return pathString || '/';
    };
    /**
     * Shallow copy of the parts of the path.
     *
     * @param {number=} begin
     * @return {!Array<string>}
     */
    Path.prototype.slice = function (begin) {
        if (begin === void 0) { begin = 0; }
        return this.pieces_.slice(this.pieceNum_ + begin);
    };
    /**
     * @return {?Path}
     */
    Path.prototype.parent = function () {
        if (this.pieceNum_ >= this.pieces_.length)
            return null;
        var pieces = [];
        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)
            pieces.push(this.pieces_[i]);
        return new Path(pieces, 0);
    };
    /**
     * @param {string|!Path} childPathObj
     * @return {!Path}
     */
    Path.prototype.child = function (childPathObj) {
        var pieces = [];
        for (var i = this.pieceNum_; i < this.pieces_.length; i++)
            pieces.push(this.pieces_[i]);
        if (childPathObj instanceof Path) {
            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {
                pieces.push(childPathObj.pieces_[i]);
            }
        }
        else {
            var childPieces = childPathObj.split('/');
            for (var i = 0; i < childPieces.length; i++) {
                if (childPieces[i].length > 0)
                    pieces.push(childPieces[i]);
            }
        }
        return new Path(pieces, 0);
    };
    /**
     * @return {boolean} True if there are no segments in this path
     */
    Path.prototype.isEmpty = function () {
        return this.pieceNum_ >= this.pieces_.length;
    };
    /**
     * @param {!Path} outerPath
     * @param {!Path} innerPath
     * @return {!Path} The path from outerPath to innerPath
     */
    Path.relativePath = function (outerPath, innerPath) {
        var outer = outerPath.getFront(), inner = innerPath.getFront();
        if (outer === null) {
            return innerPath;
        }
        else if (outer === inner) {
            return Path.relativePath(outerPath.popFront(), innerPath.popFront());
        }
        else {
            throw new Error('INTERNAL ERROR: innerPath (' +
                innerPath +
                ') is not within ' +
                'outerPath (' +
                outerPath +
                ')');
        }
    };
    /**
     * @param {!Path} left
     * @param {!Path} right
     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.
     */
    Path.comparePaths = function (left, right) {
        var leftKeys = left.slice();
        var rightKeys = right.slice();
        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {
            var cmp = util_1.nameCompare(leftKeys[i], rightKeys[i]);
            if (cmp !== 0)
                return cmp;
        }
        if (leftKeys.length === rightKeys.length)
            return 0;
        return leftKeys.length < rightKeys.length ? -1 : 1;
    };
    /**
     *
     * @param {Path} other
     * @return {boolean} true if paths are the same.
     */
    Path.prototype.equals = function (other) {
        if (this.getLength() !== other.getLength()) {
            return false;
        }
        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {
            if (this.pieces_[i] !== other.pieces_[j]) {
                return false;
            }
        }
        return true;
    };
    /**
     *
     * @param {!Path} other
     * @return {boolean} True if this path is a parent (or the same as) other
     */
    Path.prototype.contains = function (other) {
        var i = this.pieceNum_;
        var j = other.pieceNum_;
        if (this.getLength() > other.getLength()) {
            return false;
        }
        while (i < this.pieces_.length) {
            if (this.pieces_[i] !== other.pieces_[j]) {
                return false;
            }
            ++i;
            ++j;
        }
        return true;
    };
    return Path;
}()); // end Path
exports.Path = Path;
/**
 * Dynamic (mutable) path used to count path lengths.
 *
 * This class is used to efficiently check paths for valid
 * length (in UTF8 bytes) and depth (used in path validation).
 *
 * Throws Error exception if path is ever invalid.
 *
 * The definition of a path always begins with '/'.
 */
var ValidationPath = /** @class */ (function () {
    /**
     * @param {!Path} path Initial Path.
     * @param {string} errorPrefix_ Prefix for any error messages.
     */
    function ValidationPath(path, errorPrefix_) {
        this.errorPrefix_ = errorPrefix_;
        /** @type {!Array<string>} */
        this.parts_ = path.slice();
        /** @type {number} Initialize to number of '/' chars needed in path. */
        this.byteLength_ = Math.max(1, this.parts_.length);
        for (var i = 0; i < this.parts_.length; i++) {
            this.byteLength_ += util_2.stringLength(this.parts_[i]);
        }
        this.checkValid_();
    }
    Object.defineProperty(ValidationPath, "MAX_PATH_DEPTH", {
        /** @const {number} Maximum key depth. */
        get: function () {
            return 32;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValidationPath, "MAX_PATH_LENGTH_BYTES", {
        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */
        get: function () {
            return 768;
        },
        enumerable: true,
        configurable: true
    });
    /** @param {string} child */
    ValidationPath.prototype.push = function (child) {
        // Count the needed '/'
        if (this.parts_.length > 0) {
            this.byteLength_ += 1;
        }
        this.parts_.push(child);
        this.byteLength_ += util_2.stringLength(child);
        this.checkValid_();
    };
    ValidationPath.prototype.pop = function () {
        var last = this.parts_.pop();
        this.byteLength_ -= util_2.stringLength(last);
        // Un-count the previous '/'
        if (this.parts_.length > 0) {
            this.byteLength_ -= 1;
        }
    };
    ValidationPath.prototype.checkValid_ = function () {
        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {
            throw new Error(this.errorPrefix_ +
                'has a key path longer than ' +
                ValidationPath.MAX_PATH_LENGTH_BYTES +
                ' bytes (' +
                this.byteLength_ +
                ').');
        }
        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {
            throw new Error(this.errorPrefix_ +
                'path specified exceeds the maximum depth that can be written (' +
                ValidationPath.MAX_PATH_DEPTH +
                ') or object contains a cycle ' +
                this.toErrorString());
        }
    };
    /**
     * String for use in error messages - uses '.' notation for path.
     *
     * @return {string}
     */
    ValidationPath.prototype.toErrorString = function () {
        if (this.parts_.length == 0) {
            return '';
        }
        return "in property '" + this.parts_.join('.') + "'";
    };
    return ValidationPath;
}());
exports.ValidationPath = ValidationPath;

//# sourceMappingURL=Path.js.map


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Index_1 = __webpack_require__(14);
var util_1 = __webpack_require__(1);
var Node_1 = __webpack_require__(5);
var LeafNode_1 = __webpack_require__(15);
var nodeFromJSON;
var MAX_NODE;
function setNodeFromJSON(val) {
    nodeFromJSON = val;
}
exports.setNodeFromJSON = setNodeFromJSON;
function setMaxNode(val) {
    MAX_NODE = val;
}
exports.setMaxNode = setMaxNode;
/**
 * @constructor
 * @extends {Index}
 * @private
 */
var PriorityIndex = /** @class */ (function (_super) {
    __extends(PriorityIndex, _super);
    function PriorityIndex() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @inheritDoc
     */
    PriorityIndex.prototype.compare = function (a, b) {
        var aPriority = a.node.getPriority();
        var bPriority = b.node.getPriority();
        var indexCmp = aPriority.compareTo(bPriority);
        if (indexCmp === 0) {
            return util_1.nameCompare(a.name, b.name);
        }
        else {
            return indexCmp;
        }
    };
    /**
     * @inheritDoc
     */
    PriorityIndex.prototype.isDefinedOn = function (node) {
        return !node.getPriority().isEmpty();
    };
    /**
     * @inheritDoc
     */
    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
        return !oldNode.getPriority().equals(newNode.getPriority());
    };
    /**
     * @inheritDoc
     */
    PriorityIndex.prototype.minPost = function () {
        return Node_1.NamedNode.MIN;
    };
    /**
     * @inheritDoc
     */
    PriorityIndex.prototype.maxPost = function () {
        return new Node_1.NamedNode(util_1.MAX_NAME, new LeafNode_1.LeafNode('[PRIORITY-POST]', MAX_NODE));
    };
    /**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */
    PriorityIndex.prototype.makePost = function (indexValue, name) {
        var priorityNode = nodeFromJSON(indexValue);
        return new Node_1.NamedNode(name, new LeafNode_1.LeafNode('[PRIORITY-POST]', priorityNode));
    };
    /**
     * @return {!string} String representation for inclusion in a query spec
     */
    PriorityIndex.prototype.toString = function () {
        return '.priority';
    };
    return PriorityIndex;
}(Index_1.Index));
exports.PriorityIndex = PriorityIndex;
exports.PRIORITY_INDEX = new PriorityIndex();

//# sourceMappingURL=PriorityIndex.js.map


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var SortedMap_1 = __webpack_require__(16);
var Node_1 = __webpack_require__(5);
var snap_1 = __webpack_require__(37);
var PriorityIndex_1 = __webpack_require__(3);
var KeyIndex_1 = __webpack_require__(10);
var IndexMap_1 = __webpack_require__(39);
var LeafNode_1 = __webpack_require__(15);
var comparators_1 = __webpack_require__(41);
// TODO: For memory savings, don't store priorityNode_ if it's empty.
var EMPTY_NODE;
/**
 * ChildrenNode is a class for storing internal nodes in a DataSnapshot
 * (i.e. nodes with children).  It implements Node and stores the
 * list of children in the children property, sorted by child name.
 *
 * @constructor
 * @implements {Node}
 */
var ChildrenNode = /** @class */ (function () {
    /**
     *
     * @param {!SortedMap.<string, !Node>} children_ List of children
     * of this node..
     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).
     * @param {!IndexMap} indexMap_
     */
    function ChildrenNode(children_, priorityNode_, indexMap_) {
        this.children_ = children_;
        this.priorityNode_ = priorityNode_;
        this.indexMap_ = indexMap_;
        this.lazyHash_ = null;
        /**
         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use
         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own
         * class instead of an empty ChildrenNode.
         */
        if (this.priorityNode_) {
            snap_1.validatePriorityNode(this.priorityNode_);
        }
        if (this.children_.isEmpty()) {
            util_1.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');
        }
    }
    Object.defineProperty(ChildrenNode, "EMPTY_NODE", {
        get: function () {
            return (EMPTY_NODE ||
                (EMPTY_NODE = new ChildrenNode(new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), null, IndexMap_1.IndexMap.Default)));
        },
        enumerable: true,
        configurable: true
    });
    /** @inheritDoc */
    ChildrenNode.prototype.isLeafNode = function () {
        return false;
    };
    /** @inheritDoc */
    ChildrenNode.prototype.getPriority = function () {
        return this.priorityNode_ || EMPTY_NODE;
    };
    /** @inheritDoc */
    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {
        if (this.children_.isEmpty()) {
            // Don't allow priorities on empty nodes
            return this;
        }
        else {
            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);
        }
    };
    /** @inheritDoc */
    ChildrenNode.prototype.getImmediateChild = function (childName) {
        // Hack to treat priority as a regular child
        if (childName === '.priority') {
            return this.getPriority();
        }
        else {
            var child = this.children_.get(childName);
            return child === null ? EMPTY_NODE : child;
        }
    };
    /** @inheritDoc */
    ChildrenNode.prototype.getChild = function (path) {
        var front = path.getFront();
        if (front === null)
            return this;
        return this.getImmediateChild(front).getChild(path.popFront());
    };
    /** @inheritDoc */
    ChildrenNode.prototype.hasChild = function (childName) {
        return this.children_.get(childName) !== null;
    };
    /** @inheritDoc */
    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {
        util_1.assert(newChildNode, 'We should always be passing snapshot nodes');
        if (childName === '.priority') {
            return this.updatePriority(newChildNode);
        }
        else {
            var namedNode = new Node_1.NamedNode(childName, newChildNode);
            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;
            if (newChildNode.isEmpty()) {
                newChildren = this.children_.remove(childName);
                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);
            }
            else {
                newChildren = this.children_.insert(childName, newChildNode);
                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);
            }
            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;
            return new ChildrenNode(newChildren, newPriority, newIndexMap);
        }
    };
    /** @inheritDoc */
    ChildrenNode.prototype.updateChild = function (path, newChildNode) {
        var front = path.getFront();
        if (front === null) {
            return newChildNode;
        }
        else {
            util_1.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');
            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);
            return this.updateImmediateChild(front, newImmediateChild);
        }
    };
    /** @inheritDoc */
    ChildrenNode.prototype.isEmpty = function () {
        return this.children_.isEmpty();
    };
    /** @inheritDoc */
    ChildrenNode.prototype.numChildren = function () {
        return this.children_.count();
    };
    /** @inheritDoc */
    ChildrenNode.prototype.val = function (exportFormat) {
        if (this.isEmpty())
            return null;
        var obj = {};
        var numKeys = 0, maxKey = 0, allIntegerKeys = true;
        this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
            obj[key] = childNode.val(exportFormat);
            numKeys++;
            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {
                maxKey = Math.max(maxKey, Number(key));
            }
            else {
                allIntegerKeys = false;
            }
        });
        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {
            // convert to array.
            var array = [];
            for (var key in obj)
                array[key] = obj[key];
            return array;
        }
        else {
            if (exportFormat && !this.getPriority().isEmpty()) {
                obj['.priority'] = this.getPriority().val();
            }
            return obj;
        }
    };
    /** @inheritDoc */
    ChildrenNode.prototype.hash = function () {
        if (this.lazyHash_ === null) {
            var toHash_1 = '';
            if (!this.getPriority().isEmpty())
                toHash_1 +=
                    'priority:' +
                        snap_1.priorityHashText(this.getPriority().val()) +
                        ':';
            this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
                var childHash = childNode.hash();
                if (childHash !== '')
                    toHash_1 += ':' + key + ':' + childHash;
            });
            this.lazyHash_ = toHash_1 === '' ? '' : util_2.sha1(toHash_1);
        }
        return this.lazyHash_;
    };
    /** @inheritDoc */
    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {
        var idx = this.resolveIndex_(index);
        if (idx) {
            var predecessor = idx.getPredecessorKey(new Node_1.NamedNode(childName, childNode));
            return predecessor ? predecessor.name : null;
        }
        else {
            return this.children_.getPredecessorKey(childName);
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {?string}
     */
    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {
        var idx = this.resolveIndex_(indexDefinition);
        if (idx) {
            var minKey = idx.minKey();
            return minKey && minKey.name;
        }
        else {
            return this.children_.minKey();
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {?NamedNode}
     */
    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {
        var minKey = this.getFirstChildName(indexDefinition);
        if (minKey) {
            return new Node_1.NamedNode(minKey, this.children_.get(minKey));
        }
        else {
            return null;
        }
    };
    /**
     * Given an index, return the key name of the largest value we have, according to that index
     * @param {!Index} indexDefinition
     * @return {?string}
     */
    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {
        var idx = this.resolveIndex_(indexDefinition);
        if (idx) {
            var maxKey = idx.maxKey();
            return maxKey && maxKey.name;
        }
        else {
            return this.children_.maxKey();
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {?NamedNode}
     */
    ChildrenNode.prototype.getLastChild = function (indexDefinition) {
        var maxKey = this.getLastChildName(indexDefinition);
        if (maxKey) {
            return new Node_1.NamedNode(maxKey, this.children_.get(maxKey));
        }
        else {
            return null;
        }
    };
    /**
     * @inheritDoc
     */
    ChildrenNode.prototype.forEachChild = function (index, action) {
        var idx = this.resolveIndex_(index);
        if (idx) {
            return idx.inorderTraversal(function (wrappedNode) {
                return action(wrappedNode.name, wrappedNode.node);
            });
        }
        else {
            return this.children_.inorderTraversal(action);
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {SortedMapIterator}
     */
    ChildrenNode.prototype.getIterator = function (indexDefinition) {
        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);
    };
    /**
     *
     * @param {!NamedNode} startPost
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */
    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {
        var idx = this.resolveIndex_(indexDefinition);
        if (idx) {
            return idx.getIteratorFrom(startPost, function (key) { return key; });
        }
        else {
            var iterator = this.children_.getIteratorFrom(startPost.name, Node_1.NamedNode.Wrap);
            var next = iterator.peek();
            while (next != null && indexDefinition.compare(next, startPost) < 0) {
                iterator.getNext();
                next = iterator.peek();
            }
            return iterator;
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */
    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {
        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);
    };
    /**
     * @param {!NamedNode} endPost
     * @param {!Index} indexDefinition
     * @return {!SortedMapIterator}
     */
    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {
        var idx = this.resolveIndex_(indexDefinition);
        if (idx) {
            return idx.getReverseIteratorFrom(endPost, function (key) {
                return key;
            });
        }
        else {
            var iterator = this.children_.getReverseIteratorFrom(endPost.name, Node_1.NamedNode.Wrap);
            var next = iterator.peek();
            while (next != null && indexDefinition.compare(next, endPost) > 0) {
                iterator.getNext();
                next = iterator.peek();
            }
            return iterator;
        }
    };
    /**
     * @inheritDoc
     */
    ChildrenNode.prototype.compareTo = function (other) {
        if (this.isEmpty()) {
            if (other.isEmpty()) {
                return 0;
            }
            else {
                return -1;
            }
        }
        else if (other.isLeafNode() || other.isEmpty()) {
            return 1;
        }
        else if (other === exports.MAX_NODE) {
            return -1;
        }
        else {
            // Must be another node with children.
            return 0;
        }
    };
    /**
     * @inheritDoc
     */
    ChildrenNode.prototype.withIndex = function (indexDefinition) {
        if (indexDefinition === KeyIndex_1.KEY_INDEX ||
            this.indexMap_.hasIndex(indexDefinition)) {
            return this;
        }
        else {
            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);
            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);
        }
    };
    /**
     * @inheritDoc
     */
    ChildrenNode.prototype.isIndexed = function (index) {
        return index === KeyIndex_1.KEY_INDEX || this.indexMap_.hasIndex(index);
    };
    /**
     * @inheritDoc
     */
    ChildrenNode.prototype.equals = function (other) {
        if (other === this) {
            return true;
        }
        else if (other.isLeafNode()) {
            return false;
        }
        else {
            var otherChildrenNode = other;
            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {
                return false;
            }
            else if (this.children_.count() === otherChildrenNode.children_.count()) {
                var thisIter = this.getIterator(PriorityIndex_1.PRIORITY_INDEX);
                var otherIter = otherChildrenNode.getIterator(PriorityIndex_1.PRIORITY_INDEX);
                var thisCurrent = thisIter.getNext();
                var otherCurrent = otherIter.getNext();
                while (thisCurrent && otherCurrent) {
                    if (thisCurrent.name !== otherCurrent.name ||
                        !thisCurrent.node.equals(otherCurrent.node)) {
                        return false;
                    }
                    thisCurrent = thisIter.getNext();
                    otherCurrent = otherIter.getNext();
                }
                return thisCurrent === null && otherCurrent === null;
            }
            else {
                return false;
            }
        }
    };
    /**
     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used
     * instead.
     *
     * @private
     * @param {!Index} indexDefinition
     * @return {?SortedMap.<NamedNode, Node>}
     */
    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {
        if (indexDefinition === KeyIndex_1.KEY_INDEX) {
            return null;
        }
        else {
            return this.indexMap_.get(indexDefinition.toString());
        }
    };
    /**
     * @private
     * @type {RegExp}
     */
    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/;
    return ChildrenNode;
}());
exports.ChildrenNode = ChildrenNode;
/**
 * @constructor
 * @extends {ChildrenNode}
 * @private
 */
var MaxNode = /** @class */ (function (_super) {
    __extends(MaxNode, _super);
    function MaxNode() {
        return _super.call(this, new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap_1.IndexMap.Default) || this;
    }
    MaxNode.prototype.compareTo = function (other) {
        if (other === this) {
            return 0;
        }
        else {
            return 1;
        }
    };
    MaxNode.prototype.equals = function (other) {
        // Not that we every compare it, but MAX_NODE is only ever equal to itself
        return other === this;
    };
    MaxNode.prototype.getPriority = function () {
        return this;
    };
    MaxNode.prototype.getImmediateChild = function (childName) {
        return ChildrenNode.EMPTY_NODE;
    };
    MaxNode.prototype.isEmpty = function () {
        return false;
    };
    return MaxNode;
}(ChildrenNode));
exports.MaxNode = MaxNode;
/**
 * Marker that will sort higher than any other snapshot.
 * @type {!MAX_NODE}
 * @const
 */
exports.MAX_NODE = new MaxNode();
Object.defineProperties(Node_1.NamedNode, {
    MIN: {
        value: new Node_1.NamedNode(util_2.MIN_NAME, ChildrenNode.EMPTY_NODE)
    },
    MAX: {
        value: new Node_1.NamedNode(util_2.MAX_NAME, exports.MAX_NODE)
    }
});
/**
 * Reference Extensions
 */
KeyIndex_1.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;
LeafNode_1.LeafNode.__childrenNodeConstructor = ChildrenNode;
snap_1.setMaxNode(exports.MAX_NODE);
PriorityIndex_1.setMaxNode(exports.MAX_NODE);

//# sourceMappingURL=ChildrenNode.js.map


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 * @param {!string} name
 * @param {!Node} node
 * @constructor
 * @struct
 */
var NamedNode = /** @class */ (function () {
    function NamedNode(name, node) {
        this.name = name;
        this.node = node;
    }
    /**
     *
     * @param {!string} name
     * @param {!Node} node
     * @return {NamedNode}
     */
    NamedNode.Wrap = function (name, node) {
        return new NamedNode(name, node);
    };
    return NamedNode;
}());
exports.NamedNode = NamedNode;

//# sourceMappingURL=Node.js.map


/***/ }),
/* 6 */,
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Path_1 = __webpack_require__(2);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var util_3 = __webpack_require__(0);
var util_4 = __webpack_require__(0);
/**
 * True for invalid Firebase keys
 * @type {RegExp}
 * @private
 */
exports.INVALID_KEY_REGEX_ = /[\[\].#$\/\u0000-\u001F\u007F]/;
/**
 * True for invalid Firebase paths.
 * Allows '/' in paths.
 * @type {RegExp}
 * @private
 */
exports.INVALID_PATH_REGEX_ = /[\[\].#$\u0000-\u001F\u007F]/;
/**
 * Maximum number of characters to allow in leaf value
 * @type {number}
 * @private
 */
exports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;
/**
 * @param {*} key
 * @return {boolean}
 */
exports.isValidKey = function (key) {
    return (typeof key === 'string' && key.length !== 0 && !exports.INVALID_KEY_REGEX_.test(key));
};
/**
 * @param {string} pathString
 * @return {boolean}
 */
exports.isValidPathString = function (pathString) {
    return (typeof pathString === 'string' &&
        pathString.length !== 0 &&
        !exports.INVALID_PATH_REGEX_.test(pathString));
};
/**
 * @param {string} pathString
 * @return {boolean}
 */
exports.isValidRootPathString = function (pathString) {
    if (pathString) {
        // Allow '/.info/' at the beginning.
        pathString = pathString.replace(/^\/*\.info(\/|$)/, '/');
    }
    return exports.isValidPathString(pathString);
};
/**
 * @param {*} priority
 * @return {boolean}
 */
exports.isValidPriority = function (priority) {
    return (priority === null ||
        typeof priority === 'string' ||
        (typeof priority === 'number' && !util_2.isInvalidJSONNumber(priority)) ||
        (priority && typeof priority === 'object' && util_1.contains(priority, '.sv')));
};
/**
 * Pre-validate a datum passed as an argument to Firebase function.
 *
 * @param {string} fnName
 * @param {number} argumentNumber
 * @param {*} data
 * @param {!Path} path
 * @param {boolean} optional
 */
exports.validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {
    if (optional && data === undefined)
        return;
    exports.validateFirebaseData(util_3.errorPrefix(fnName, argumentNumber, optional), data, path);
};
/**
 * Validate a data object client-side before sending to server.
 *
 * @param {string} errorPrefix
 * @param {*} data
 * @param {!Path|!ValidationPath} path_
 */
exports.validateFirebaseData = function (errorPrefix, data, path_) {
    var path = path_ instanceof Path_1.Path ? new Path_1.ValidationPath(path_, errorPrefix) : path_;
    if (data === undefined) {
        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());
    }
    if (typeof data === 'function') {
        throw new Error(errorPrefix +
            'contains a function ' +
            path.toErrorString() +
            ' with contents = ' +
            data.toString());
    }
    if (util_2.isInvalidJSONNumber(data)) {
        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());
    }
    // Check max leaf size, but try to avoid the utf8 conversion if we can.
    if (typeof data === 'string' &&
        data.length > exports.MAX_LEAF_SIZE_ / 3 &&
        util_4.stringLength(data) > exports.MAX_LEAF_SIZE_) {
        throw new Error(errorPrefix +
            'contains a string greater than ' +
            exports.MAX_LEAF_SIZE_ +
            ' utf8 bytes ' +
            path.toErrorString() +
            " ('" +
            data.substring(0, 50) +
            "...')");
    }
    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON
    // to save extra walking of large objects.
    if (data && typeof data === 'object') {
        var hasDotValue_1 = false, hasActualChild_1 = false;
        util_1.forEach(data, function (key, value) {
            if (key === '.value') {
                hasDotValue_1 = true;
            }
            else if (key !== '.priority' && key !== '.sv') {
                hasActualChild_1 = true;
                if (!exports.isValidKey(key)) {
                    throw new Error(errorPrefix +
                        ' contains an invalid key (' +
                        key +
                        ') ' +
                        path.toErrorString() +
                        '.  Keys must be non-empty strings ' +
                        'and can\'t contain ".", "#", "$", "/", "[", or "]"');
                }
            }
            path.push(key);
            exports.validateFirebaseData(errorPrefix, value, path);
            path.pop();
        });
        if (hasDotValue_1 && hasActualChild_1) {
            throw new Error(errorPrefix +
                ' contains ".value" child ' +
                path.toErrorString() +
                ' in addition to actual children.');
        }
    }
};
/**
 * Pre-validate paths passed in the firebase function.
 *
 * @param {string} errorPrefix
 * @param {Array<!Path>} mergePaths
 */
exports.validateFirebaseMergePaths = function (errorPrefix, mergePaths) {
    var i, curPath;
    for (i = 0; i < mergePaths.length; i++) {
        curPath = mergePaths[i];
        var keys = curPath.slice();
        for (var j = 0; j < keys.length; j++) {
            if (keys[j] === '.priority' && j === keys.length - 1) {
                // .priority is OK
            }
            else if (!exports.isValidKey(keys[j])) {
                throw new Error(errorPrefix +
                    'contains an invalid key (' +
                    keys[j] +
                    ') in path ' +
                    curPath.toString() +
                    '. Keys must be non-empty strings ' +
                    'and can\'t contain ".", "#", "$", "/", "[", or "]"');
            }
        }
    }
    // Check that update keys are not descendants of each other.
    // We rely on the property that sorting guarantees that ancestors come
    // right before descendants.
    mergePaths.sort(Path_1.Path.comparePaths);
    var prevPath = null;
    for (i = 0; i < mergePaths.length; i++) {
        curPath = mergePaths[i];
        if (prevPath !== null && prevPath.contains(curPath)) {
            throw new Error(errorPrefix +
                'contains a path ' +
                prevPath.toString() +
                ' that is ancestor of another path ' +
                curPath.toString());
        }
        prevPath = curPath;
    }
};
/**
 * pre-validate an object passed as an argument to firebase function (
 * must be an object - e.g. for firebase.update()).
 *
 * @param {string} fnName
 * @param {number} argumentNumber
 * @param {*} data
 * @param {!Path} path
 * @param {boolean} optional
 */
exports.validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {
    if (optional && data === undefined)
        return;
    var errorPrefix = util_3.errorPrefix(fnName, argumentNumber, optional);
    if (!(data && typeof data === 'object') || Array.isArray(data)) {
        throw new Error(errorPrefix + ' must be an object containing the children to replace.');
    }
    var mergePaths = [];
    util_1.forEach(data, function (key, value) {
        var curPath = new Path_1.Path(key);
        exports.validateFirebaseData(errorPrefix, value, path.child(curPath));
        if (curPath.getBack() === '.priority') {
            if (!exports.isValidPriority(value)) {
                throw new Error(errorPrefix +
                    "contains an invalid value for '" +
                    curPath.toString() +
                    "', which must be a valid " +
                    'Firebase priority (a string, finite number, server value, or null).');
            }
        }
        mergePaths.push(curPath);
    });
    exports.validateFirebaseMergePaths(errorPrefix, mergePaths);
};
exports.validatePriority = function (fnName, argumentNumber, priority, optional) {
    if (optional && priority === undefined)
        return;
    if (util_2.isInvalidJSONNumber(priority))
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'is ' +
            priority.toString() +
            ', but must be a valid Firebase priority (a string, finite number, ' +
            'server value, or null).');
    // Special case to allow importing data with a .sv.
    if (!exports.isValidPriority(priority))
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid Firebase priority ' +
            '(a string, finite number, server value, or null).');
};
exports.validateEventType = function (fnName, argumentNumber, eventType, optional) {
    if (optional && eventType === undefined)
        return;
    switch (eventType) {
        case 'value':
        case 'child_added':
        case 'child_removed':
        case 'child_changed':
        case 'child_moved':
            break;
        default:
            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
                'must be a valid event type = "value", "child_added", "child_removed", ' +
                '"child_changed", or "child_moved".');
    }
};
exports.validateKey = function (fnName, argumentNumber, key, optional) {
    if (optional && key === undefined)
        return;
    if (!exports.isValidKey(key))
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'was an invalid key = "' +
            key +
            '".  Firebase keys must be non-empty strings and ' +
            'can\'t contain ".", "#", "$", "/", "[", or "]").');
};
exports.validatePathString = function (fnName, argumentNumber, pathString, optional) {
    if (optional && pathString === undefined)
        return;
    if (!exports.isValidPathString(pathString))
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'was an invalid path = "' +
            pathString +
            '". Paths must be non-empty strings and ' +
            'can\'t contain ".", "#", "$", "[", or "]"');
};
exports.validateRootPathString = function (fnName, argumentNumber, pathString, optional) {
    if (pathString) {
        // Allow '/.info/' at the beginning.
        pathString = pathString.replace(/^\/*\.info(\/|$)/, '/');
    }
    exports.validatePathString(fnName, argumentNumber, pathString, optional);
};
exports.validateWritablePath = function (fnName, path) {
    if (path.getFront() === '.info') {
        throw new Error(fnName + " failed = Can't modify data under /.info/");
    }
};
exports.validateUrl = function (fnName, argumentNumber, parsedUrl) {
    // TODO = Validate server better.
    var pathString = parsedUrl.path.toString();
    if (!(typeof parsedUrl.repoInfo.host === 'string') ||
        parsedUrl.repoInfo.host.length === 0 ||
        !exports.isValidKey(parsedUrl.repoInfo.namespace) ||
        (pathString.length !== 0 && !exports.isValidRootPathString(pathString))) {
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, false) +
            'must be a valid firebase URL and ' +
            'the path can\'t contain ".", "#", "$", "[", or "]".');
    }
};
exports.validateCredential = function (fnName, argumentNumber, cred, optional) {
    if (optional && cred === undefined)
        return;
    if (!(typeof cred === 'string'))
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid credential (a string).');
};
exports.validateBoolean = function (fnName, argumentNumber, bool, optional) {
    if (optional && bool === undefined)
        return;
    if (typeof bool !== 'boolean')
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');
};
exports.validateString = function (fnName, argumentNumber, string, optional) {
    if (optional && string === undefined)
        return;
    if (!(typeof string === 'string')) {
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid string.');
    }
};
exports.validateObject = function (fnName, argumentNumber, obj, optional) {
    if (optional && obj === undefined)
        return;
    if (!(obj && typeof obj === 'object') || obj === null) {
        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid object.');
    }
};
exports.validateObjectContainsKey = function (fnName, argumentNumber, obj, key, optional, opt_type) {
    var objectContainsKey = obj && typeof obj === 'object' && util_1.contains(obj, key);
    if (!objectContainsKey) {
        if (optional) {
            return;
        }
        else {
            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
                'must contain the key "' +
                key +
                '"');
        }
    }
    if (opt_type) {
        var val = util_1.safeGet(obj, key);
        if ((opt_type === 'number' && !(typeof val === 'number')) ||
            (opt_type === 'string' && !(typeof val === 'string')) ||
            (opt_type === 'boolean' && !(typeof val === 'boolean')) ||
            (opt_type === 'function' && !(typeof val === 'function')) ||
            (opt_type === 'object' && !(typeof val === 'object') && val)) {
            if (optional) {
                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
                    'contains invalid value for key "' +
                    key +
                    '" (must be of type "' +
                    opt_type +
                    '")');
            }
            else {
                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +
                    'must contain the key "' +
                    key +
                    '" with type "' +
                    opt_type +
                    '"');
            }
        }
    }
};

//# sourceMappingURL=validation.js.map


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 *
 * @enum
 */
var OperationType;
(function (OperationType) {
    OperationType[OperationType["OVERWRITE"] = 0] = "OVERWRITE";
    OperationType[OperationType["MERGE"] = 1] = "MERGE";
    OperationType[OperationType["ACK_USER_WRITE"] = 2] = "ACK_USER_WRITE";
    OperationType[OperationType["LISTEN_COMPLETE"] = 3] = "LISTEN_COMPLETE";
})(OperationType = exports.OperationType || (exports.OperationType = {}));
/**
 * @param {boolean} fromUser
 * @param {boolean} fromServer
 * @param {?string} queryId
 * @param {boolean} tagged
 * @constructor
 */
var OperationSource = /** @class */ (function () {
    function OperationSource(fromUser, fromServer, queryId, tagged) {
        this.fromUser = fromUser;
        this.fromServer = fromServer;
        this.queryId = queryId;
        this.tagged = tagged;
        util_1.assert(!tagged || fromServer, 'Tagged queries must be from server.');
    }
    /**
     * @const
     * @type {!OperationSource}
     */
    OperationSource.User = new OperationSource(
    /*fromUser=*/ true, false, null, 
    /*tagged=*/ false);
    /**
     * @const
     * @type {!OperationSource}
     */
    OperationSource.Server = new OperationSource(false, 
    /*fromServer=*/ true, null, 
    /*tagged=*/ false);
    /**
     * @param {string} queryId
     * @return {!OperationSource}
     */
    OperationSource.forServerTaggedQuery = function (queryId) {
        return new OperationSource(false, 
        /*fromServer=*/ true, queryId, 
        /*tagged=*/ true);
    };
    return OperationSource;
}());
exports.OperationSource = OperationSource;

//# sourceMappingURL=Operation.js.map


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @constructor
 * @struct
 * @param {!string} type The event type
 * @param {!Node} snapshotNode The data
 * @param {string=} childName The name for this child, if it's a child event
 * @param {Node=} oldSnap Used for intermediate processing of child changed events
 * @param {string=} prevName The name for the previous child, if applicable
 */
var Change = /** @class */ (function () {
    function Change(type, snapshotNode, childName, oldSnap, prevName) {
        this.type = type;
        this.snapshotNode = snapshotNode;
        this.childName = childName;
        this.oldSnap = oldSnap;
        this.prevName = prevName;
    }
    /**
     * @param {!Node} snapshot
     * @return {!Change}
     */
    Change.valueChange = function (snapshot) {
        return new Change(Change.VALUE, snapshot);
    };
    /**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */
    Change.childAddedChange = function (childKey, snapshot) {
        return new Change(Change.CHILD_ADDED, snapshot, childKey);
    };
    /**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */
    Change.childRemovedChange = function (childKey, snapshot) {
        return new Change(Change.CHILD_REMOVED, snapshot, childKey);
    };
    /**
     * @param {string} childKey
     * @param {!Node} newSnapshot
     * @param {!Node} oldSnapshot
     * @return {!Change}
     */
    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {
        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);
    };
    /**
     * @param {string} childKey
     * @param {!Node} snapshot
     * @return {!Change}
     */
    Change.childMovedChange = function (childKey, snapshot) {
        return new Change(Change.CHILD_MOVED, snapshot, childKey);
    };
    //event types
    /** Event type for a child added */
    Change.CHILD_ADDED = 'child_added';
    /** Event type for a child removed */
    Change.CHILD_REMOVED = 'child_removed';
    /** Event type for a child changed */
    Change.CHILD_CHANGED = 'child_changed';
    /** Event type for a child moved */
    Change.CHILD_MOVED = 'child_moved';
    /** Event type for a value change */
    Change.VALUE = 'value';
    return Change;
}());
exports.Change = Change;

//# sourceMappingURL=Change.js.map


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Index_1 = __webpack_require__(14);
var Node_1 = __webpack_require__(5);
var util_1 = __webpack_require__(1);
var util_2 = __webpack_require__(0);
var __EMPTY_NODE;
var KeyIndex = /** @class */ (function (_super) {
    __extends(KeyIndex, _super);
    function KeyIndex() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(KeyIndex, "__EMPTY_NODE", {
        get: function () {
            return __EMPTY_NODE;
        },
        set: function (val) {
            __EMPTY_NODE = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @inheritDoc
     */
    KeyIndex.prototype.compare = function (a, b) {
        return util_1.nameCompare(a.name, b.name);
    };
    /**
     * @inheritDoc
     */
    KeyIndex.prototype.isDefinedOn = function (node) {
        // We could probably return true here (since every node has a key), but it's never called
        // so just leaving unimplemented for now.
        throw util_2.assertionError('KeyIndex.isDefinedOn not expected to be called.');
    };
    /**
     * @inheritDoc
     */
    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
        return false; // The key for a node never changes.
    };
    /**
     * @inheritDoc
     */
    KeyIndex.prototype.minPost = function () {
        return Node_1.NamedNode.MIN;
    };
    /**
     * @inheritDoc
     */
    KeyIndex.prototype.maxPost = function () {
        // TODO: This should really be created once and cached in a static property, but
        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.
        return new Node_1.NamedNode(util_1.MAX_NAME, __EMPTY_NODE);
    };
    /**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */
    KeyIndex.prototype.makePost = function (indexValue, name) {
        util_2.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');
        // We just use empty node, but it'll never be compared, since our comparator only looks at name.
        return new Node_1.NamedNode(indexValue, __EMPTY_NODE);
    };
    /**
     * @return {!string} String representation for inclusion in a query spec
     */
    KeyIndex.prototype.toString = function () {
        return '.key';
    };
    return KeyIndex;
}(Index_1.Index));
exports.KeyIndex = KeyIndex;
exports.KEY_INDEX = new KeyIndex();

//# sourceMappingURL=KeyIndex.js.map


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ChildrenNode_1 = __webpack_require__(4);
var LeafNode_1 = __webpack_require__(15);
var Node_1 = __webpack_require__(5);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var childSet_1 = __webpack_require__(40);
var comparators_1 = __webpack_require__(41);
var IndexMap_1 = __webpack_require__(39);
var PriorityIndex_1 = __webpack_require__(3);
var USE_HINZE = true;
/**
 * Constructs a snapshot node representing the passed JSON and returns it.
 * @param {*} json JSON to create a node for.
 * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the
 * passed JSON contains a .priority property.
 * @return {!Node}
 */
function nodeFromJSON(json, priority) {
    if (priority === void 0) { priority = null; }
    if (json === null) {
        return ChildrenNode_1.ChildrenNode.EMPTY_NODE;
    }
    if (typeof json === 'object' && '.priority' in json) {
        priority = json['.priority'];
    }
    util_2.assert(priority === null ||
        typeof priority === 'string' ||
        typeof priority === 'number' ||
        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);
    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {
        json = json['.value'];
    }
    // Valid leaf nodes include non-objects or server-value wrapper objects
    if (typeof json !== 'object' || '.sv' in json) {
        var jsonLeaf = json;
        return new LeafNode_1.LeafNode(jsonLeaf, nodeFromJSON(priority));
    }
    if (!(json instanceof Array) && USE_HINZE) {
        var children_1 = [];
        var childrenHavePriority_1 = false;
        var hinzeJsonObj_1 = json;
        util_1.forEach(hinzeJsonObj_1, function (key, child) {
            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {
                // Ignore metadata nodes
                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);
                if (!childNode.isEmpty()) {
                    childrenHavePriority_1 =
                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();
                    children_1.push(new Node_1.NamedNode(key, childNode));
                }
            }
        });
        if (children_1.length == 0) {
            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        }
        var childSet = childSet_1.buildChildSet(children_1, comparators_1.NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, comparators_1.NAME_COMPARATOR);
        if (childrenHavePriority_1) {
            var sortedChildSet = childSet_1.buildChildSet(children_1, PriorityIndex_1.PRIORITY_INDEX.getCompare());
            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap_1.IndexMap({ '.priority': sortedChildSet }, { '.priority': PriorityIndex_1.PRIORITY_INDEX }));
        }
        else {
            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), IndexMap_1.IndexMap.Default);
        }
    }
    else {
        var node_1 = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        var jsonObj_1 = json;
        util_1.forEach(jsonObj_1, function (key, childData) {
            if (util_1.contains(jsonObj_1, key)) {
                if (key.substring(0, 1) !== '.') {
                    // ignore metadata nodes.
                    var childNode = nodeFromJSON(childData);
                    if (childNode.isLeafNode() || !childNode.isEmpty())
                        node_1 = node_1.updateImmediateChild(key, childNode);
                }
            }
        });
        return node_1.updatePriority(nodeFromJSON(priority));
    }
}
exports.nodeFromJSON = nodeFromJSON;
PriorityIndex_1.setNodeFromJSON(nodeFromJSON);

//# sourceMappingURL=nodeFromJSON.js.map


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var DOMStorageWrapper_1 = __webpack_require__(80);
var MemoryStorage_1 = __webpack_require__(81);
/**
 * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.
 * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change
 * to reflect this type
 *
 * @param {string} domStorageName Name of the underlying storage object
 *   (e.g. 'localStorage' or 'sessionStorage').
 * @return {?} Turning off type information until a common interface is defined.
 */
var createStoragefor = function (domStorageName) {
    try {
        // NOTE: just accessing "localStorage" or "window['localStorage']" may throw a security exception,
        // so it must be inside the try/catch.
        if (typeof window !== 'undefined' &&
            typeof window[domStorageName] !== 'undefined') {
            // Need to test cache. Just because it's here doesn't mean it works
            var domStorage = window[domStorageName];
            domStorage.setItem('firebase:sentinel', 'cache');
            domStorage.removeItem('firebase:sentinel');
            return new DOMStorageWrapper_1.DOMStorageWrapper(domStorage);
        }
    }
    catch (e) { }
    // Failed to create wrapper.  Just return in-memory storage.
    // TODO: log?
    return new MemoryStorage_1.MemoryStorage();
};
/** A storage object that lasts across sessions */
exports.PersistentStorage = createStoragefor('localStorage');
/** A storage object that only lasts one session */
exports.SessionStorage = createStoragefor('sessionStorage');

//# sourceMappingURL=storage.js.map


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PROTOCOL_VERSION = '5';
exports.VERSION_PARAM = 'v';
exports.TRANSPORT_SESSION_PARAM = 's';
exports.REFERER_PARAM = 'r';
exports.FORGE_REF = 'f';
exports.FORGE_DOMAIN = 'firebaseio.com';
exports.LAST_SESSION_PARAM = 'ls';
exports.WEBSOCKET = 'websocket';
exports.LONG_POLLING = 'long_polling';

//# sourceMappingURL=Constants.js.map


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Node_1 = __webpack_require__(5);
var util_1 = __webpack_require__(1);
/**
 *
 * @constructor
 */
var Index = /** @class */ (function () {
    function Index() {
    }
    /**
     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for
     * this index
     */
    Index.prototype.getCompare = function () {
        return this.compare.bind(this);
    };
    /**
     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,
     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.
     *
     * @param {!Node} oldNode
     * @param {!Node} newNode
     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode
     */
    Index.prototype.indexedValueChanged = function (oldNode, newNode) {
        var oldWrapped = new Node_1.NamedNode(util_1.MIN_NAME, oldNode);
        var newWrapped = new Node_1.NamedNode(util_1.MIN_NAME, newNode);
        return this.compare(oldWrapped, newWrapped) !== 0;
    };
    /**
     * @return {!NamedNode} a node wrapper that will sort equal to or less than
     * any other node wrapper, using this index
     */
    Index.prototype.minPost = function () {
        return Node_1.NamedNode.MIN;
    };
    return Index;
}());
exports.Index = Index;

//# sourceMappingURL=Index.js.map


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var snap_1 = __webpack_require__(37);
var __childrenNodeConstructor;
/**
 * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It
 * implements Node and stores the value of the node (a string,
 * number, or boolean) accessible via getValue().
 */
var LeafNode = /** @class */ (function () {
    /**
     * @implements {Node}
     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.
     *                                         The object type is possible in the event of a deferred value
     * @param {!Node=} priorityNode_ The priority of this node.
     */
    function LeafNode(value_, priorityNode_) {
        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }
        this.value_ = value_;
        this.priorityNode_ = priorityNode_;
        this.lazyHash_ = null;
        util_1.assert(this.value_ !== undefined && this.value_ !== null, "LeafNode shouldn't be created with null/undefined value.");
        snap_1.validatePriorityNode(this.priorityNode_);
    }
    Object.defineProperty(LeafNode, "__childrenNodeConstructor", {
        get: function () {
            return __childrenNodeConstructor;
        },
        set: function (val) {
            __childrenNodeConstructor = val;
        },
        enumerable: true,
        configurable: true
    });
    /** @inheritDoc */
    LeafNode.prototype.isLeafNode = function () {
        return true;
    };
    /** @inheritDoc */
    LeafNode.prototype.getPriority = function () {
        return this.priorityNode_;
    };
    /** @inheritDoc */
    LeafNode.prototype.updatePriority = function (newPriorityNode) {
        return new LeafNode(this.value_, newPriorityNode);
    };
    /** @inheritDoc */
    LeafNode.prototype.getImmediateChild = function (childName) {
        // Hack to treat priority as a regular child
        if (childName === '.priority') {
            return this.priorityNode_;
        }
        else {
            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;
        }
    };
    /** @inheritDoc */
    LeafNode.prototype.getChild = function (path) {
        if (path.isEmpty()) {
            return this;
        }
        else if (path.getFront() === '.priority') {
            return this.priorityNode_;
        }
        else {
            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;
        }
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.hasChild = function () {
        return false;
    };
    /** @inheritDoc */
    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {
        return null;
    };
    /** @inheritDoc */
    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {
        if (childName === '.priority') {
            return this.updatePriority(newChildNode);
        }
        else if (newChildNode.isEmpty() && childName !== '.priority') {
            return this;
        }
        else {
            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);
        }
    };
    /** @inheritDoc */
    LeafNode.prototype.updateChild = function (path, newChildNode) {
        var front = path.getFront();
        if (front === null) {
            return newChildNode;
        }
        else if (newChildNode.isEmpty() && front !== '.priority') {
            return this;
        }
        else {
            util_1.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');
            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));
        }
    };
    /** @inheritDoc */
    LeafNode.prototype.isEmpty = function () {
        return false;
    };
    /** @inheritDoc */
    LeafNode.prototype.numChildren = function () {
        return 0;
    };
    /** @inheritDoc */
    LeafNode.prototype.forEachChild = function (index, action) {
        return false;
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.val = function (exportFormat) {
        if (exportFormat && !this.getPriority().isEmpty())
            return {
                '.value': this.getValue(),
                '.priority': this.getPriority().val()
            };
        else
            return this.getValue();
    };
    /** @inheritDoc */
    LeafNode.prototype.hash = function () {
        if (this.lazyHash_ === null) {
            var toHash = '';
            if (!this.priorityNode_.isEmpty())
                toHash +=
                    'priority:' +
                        snap_1.priorityHashText(this.priorityNode_.val()) +
                        ':';
            var type = typeof this.value_;
            toHash += type + ':';
            if (type === 'number') {
                toHash += util_2.doubleToIEEE754String(this.value_);
            }
            else {
                toHash += this.value_;
            }
            this.lazyHash_ = util_2.sha1(toHash);
        }
        return this.lazyHash_;
    };
    /**
     * Returns the value of the leaf node.
     * @return {Object|string|number|boolean} The value of the node.
     */
    LeafNode.prototype.getValue = function () {
        return this.value_;
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.compareTo = function (other) {
        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {
            return 1;
        }
        else if (other instanceof LeafNode.__childrenNodeConstructor) {
            return -1;
        }
        else {
            util_1.assert(other.isLeafNode(), 'Unknown node type');
            return this.compareToLeafNode_(other);
        }
    };
    /**
     * Comparison specifically for two leaf nodes
     * @param {!LeafNode} otherLeaf
     * @return {!number}
     * @private
     */
    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {
        var otherLeafType = typeof otherLeaf.value_;
        var thisLeafType = typeof this.value_;
        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);
        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);
        util_1.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);
        util_1.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);
        if (otherIndex === thisIndex) {
            // Same type, compare values
            if (thisLeafType === 'object') {
                // Deferred value nodes are all equal, but we should also never get to this point...
                return 0;
            }
            else {
                // Note that this works because true > false, all others are number or string comparisons
                if (this.value_ < otherLeaf.value_) {
                    return -1;
                }
                else if (this.value_ === otherLeaf.value_) {
                    return 0;
                }
                else {
                    return 1;
                }
            }
        }
        else {
            return thisIndex - otherIndex;
        }
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.withIndex = function () {
        return this;
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.isIndexed = function () {
        return true;
    };
    /**
     * @inheritDoc
     */
    LeafNode.prototype.equals = function (other) {
        /**
         * @inheritDoc
         */
        if (other === this) {
            return true;
        }
        else if (other.isLeafNode()) {
            var otherLeaf = other;
            return (this.value_ === otherLeaf.value_ &&
                this.priorityNode_.equals(otherLeaf.priorityNode_));
        }
        else {
            return false;
        }
    };
    /**
     * The sort order for comparing leaf nodes of different types. If two leaf nodes have
     * the same type, the comparison falls back to their value
     * @type {Array.<!string>}
     * @const
     */
    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];
    return LeafNode;
}());
exports.LeafNode = LeafNode;

//# sourceMappingURL=LeafNode.js.map


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * An iterator over an LLRBNode.
 */
var SortedMapIterator = /** @class */ (function () {
    /**
     * @template K, V, T
     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.
     * @param {?K} startKey
     * @param {function(K, K): number} comparator
     * @param {boolean} isReverse_ Whether or not to iterate in reverse
     * @param {(function(K, V):T)=} resultGenerator_
     */
    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {
        if (resultGenerator_ === void 0) { resultGenerator_ = null; }
        this.isReverse_ = isReverse_;
        this.resultGenerator_ = resultGenerator_;
        /** @private
         * @type {Array.<!LLRBNode>}
         */
        this.nodeStack_ = [];
        var cmp = 1;
        while (!node.isEmpty()) {
            node = node;
            cmp = startKey ? comparator(node.key, startKey) : 1;
            // flip the comparison if we're going in reverse
            if (isReverse_)
                cmp *= -1;
            if (cmp < 0) {
                // This node is less than our start key. ignore it
                if (this.isReverse_) {
                    node = node.left;
                }
                else {
                    node = node.right;
                }
            }
            else if (cmp === 0) {
                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;
                this.nodeStack_.push(node);
                break;
            }
            else {
                // This node is greater than our start key, add it to the stack and move to the next one
                this.nodeStack_.push(node);
                if (this.isReverse_) {
                    node = node.right;
                }
                else {
                    node = node.left;
                }
            }
        }
    }
    SortedMapIterator.prototype.getNext = function () {
        if (this.nodeStack_.length === 0)
            return null;
        var node = this.nodeStack_.pop();
        var result;
        if (this.resultGenerator_)
            result = this.resultGenerator_(node.key, node.value);
        else
            result = { key: node.key, value: node.value };
        if (this.isReverse_) {
            node = node.left;
            while (!node.isEmpty()) {
                this.nodeStack_.push(node);
                node = node.right;
            }
        }
        else {
            node = node.right;
            while (!node.isEmpty()) {
                this.nodeStack_.push(node);
                node = node.left;
            }
        }
        return result;
    };
    SortedMapIterator.prototype.hasNext = function () {
        return this.nodeStack_.length > 0;
    };
    SortedMapIterator.prototype.peek = function () {
        if (this.nodeStack_.length === 0)
            return null;
        var node = this.nodeStack_[this.nodeStack_.length - 1];
        if (this.resultGenerator_) {
            return this.resultGenerator_(node.key, node.value);
        }
        else {
            return { key: node.key, value: node.value };
        }
    };
    return SortedMapIterator;
}());
exports.SortedMapIterator = SortedMapIterator;
/**
 * Represents a node in a Left-leaning Red-Black tree.
 */
var LLRBNode = /** @class */ (function () {
    /**
     * @template K, V
     * @param {!K} key Key associated with this node.
     * @param {!V} value Value associated with this node.
     * @param {?boolean} color Whether this node is red.
     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.
     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.
     */
    function LLRBNode(key, value, color, left, right) {
        this.key = key;
        this.value = value;
        this.color = color != null ? color : LLRBNode.RED;
        this.left =
            left != null ? left : SortedMap.EMPTY_NODE;
        this.right =
            right != null ? right : SortedMap.EMPTY_NODE;
    }
    /**
     * Returns a copy of the current node, optionally replacing pieces of it.
     *
     * @param {?K} key New key for the node, or null.
     * @param {?V} value New value for the node, or null.
     * @param {?boolean} color New color for the node, or null.
     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.
     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.
     * @return {!LLRBNode} The node copy.
     */
    LLRBNode.prototype.copy = function (key, value, color, left, right) {
        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);
    };
    /**
     * @return {number} The total number of nodes in the tree.
     */
    LLRBNode.prototype.count = function () {
        return this.left.count() + 1 + this.right.count();
    };
    /**
     * @return {boolean} True if the tree is empty.
     */
    LLRBNode.prototype.isEmpty = function () {
        return false;
    };
    /**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V):*} action Callback function to be called for each
     *   node.  If it returns true, traversal is aborted.
     * @return {*} The first truthy value returned by action, or the last falsey
     *   value returned by action
     */
    LLRBNode.prototype.inorderTraversal = function (action) {
        return (this.left.inorderTraversal(action) ||
            action(this.key, this.value) ||
            this.right.inorderTraversal(action));
    };
    /**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param {function(!Object, !Object)} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {*} True if traversal was aborted.
     */
    LLRBNode.prototype.reverseTraversal = function (action) {
        return (this.right.reverseTraversal(action) ||
            action(this.key, this.value) ||
            this.left.reverseTraversal(action));
    };
    /**
     * @return {!Object} The minimum node in the tree.
     * @private
     */
    LLRBNode.prototype.min_ = function () {
        if (this.left.isEmpty()) {
            return this;
        }
        else {
            return this.left.min_();
        }
    };
    /**
     * @return {!K} The maximum key in the tree.
     */
    LLRBNode.prototype.minKey = function () {
        return this.min_().key;
    };
    /**
     * @return {!K} The maximum key in the tree.
     */
    LLRBNode.prototype.maxKey = function () {
        if (this.right.isEmpty()) {
            return this.key;
        }
        else {
            return this.right.maxKey();
        }
    };
    /**
     *
     * @param {!Object} key Key to insert.
     * @param {!Object} value Value to insert.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode} New tree, with the key/value added.
     */
    LLRBNode.prototype.insert = function (key, value, comparator) {
        var cmp, n;
        n = this;
        cmp = comparator(key, n.key);
        if (cmp < 0) {
            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);
        }
        else if (cmp === 0) {
            n = n.copy(null, value, null, null, null);
        }
        else {
            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));
        }
        return n.fixUp_();
    };
    /**
     * @private
     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.
     */
    LLRBNode.prototype.removeMin_ = function () {
        if (this.left.isEmpty()) {
            return SortedMap.EMPTY_NODE;
        }
        var n = this;
        if (!n.left.isRed_() && !n.left.left.isRed_())
            n = n.moveRedLeft_();
        n = n.copy(null, null, null, n.left.removeMin_(), null);
        return n.fixUp_();
    };
    /**
     * @param {!Object} key The key of the item to remove.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.
     */
    LLRBNode.prototype.remove = function (key, comparator) {
        var n, smallest;
        n = this;
        if (comparator(key, n.key) < 0) {
            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {
                n = n.moveRedLeft_();
            }
            n = n.copy(null, null, null, n.left.remove(key, comparator), null);
        }
        else {
            if (n.left.isRed_())
                n = n.rotateRight_();
            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {
                n = n.moveRedRight_();
            }
            if (comparator(key, n.key) === 0) {
                if (n.right.isEmpty()) {
                    return SortedMap.EMPTY_NODE;
                }
                else {
                    smallest = n.right.min_();
                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());
                }
            }
            n = n.copy(null, null, null, null, n.right.remove(key, comparator));
        }
        return n.fixUp_();
    };
    /**
     * @private
     * @return {boolean} Whether this is a RED node.
     */
    LLRBNode.prototype.isRed_ = function () {
        return this.color;
    };
    /**
     * @private
     * @return {!LLRBNode} New tree after performing any needed rotations.
     */
    LLRBNode.prototype.fixUp_ = function () {
        var n = this;
        if (n.right.isRed_() && !n.left.isRed_())
            n = n.rotateLeft_();
        if (n.left.isRed_() && n.left.left.isRed_())
            n = n.rotateRight_();
        if (n.left.isRed_() && n.right.isRed_())
            n = n.colorFlip_();
        return n;
    };
    /**
     * @private
     * @return {!LLRBNode} New tree, after moveRedLeft.
     */
    LLRBNode.prototype.moveRedLeft_ = function () {
        var n = this.colorFlip_();
        if (n.right.left.isRed_()) {
            n = n.copy(null, null, null, null, n.right.rotateRight_());
            n = n.rotateLeft_();
            n = n.colorFlip_();
        }
        return n;
    };
    /**
     * @private
     * @return {!LLRBNode} New tree, after moveRedRight.
     */
    LLRBNode.prototype.moveRedRight_ = function () {
        var n = this.colorFlip_();
        if (n.left.left.isRed_()) {
            n = n.rotateRight_();
            n = n.colorFlip_();
        }
        return n;
    };
    /**
     * @private
     * @return {!LLRBNode} New tree, after rotateLeft.
     */
    LLRBNode.prototype.rotateLeft_ = function () {
        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);
        return this.right.copy(null, null, this.color, nl, null);
    };
    /**
     * @private
     * @return {!LLRBNode} New tree, after rotateRight.
     */
    LLRBNode.prototype.rotateRight_ = function () {
        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);
        return this.left.copy(null, null, this.color, null, nr);
    };
    /**
     * @private
     * @return {!LLRBNode} New tree, after colorFlip.
     */
    LLRBNode.prototype.colorFlip_ = function () {
        var left = this.left.copy(null, null, !this.left.color, null, null);
        var right = this.right.copy(null, null, !this.right.color, null, null);
        return this.copy(null, null, !this.color, left, right);
    };
    /**
     * For testing.
     *
     * @private
     * @return {boolean} True if all is well.
     */
    LLRBNode.prototype.checkMaxDepth_ = function () {
        var blackDepth = this.check_();
        return Math.pow(2.0, blackDepth) <= this.count() + 1;
    };
    /**
     * @private
     * @return {number} Not sure what this returns exactly. :-).
     */
    LLRBNode.prototype.check_ = function () {
        var blackDepth;
        if (this.isRed_() && this.left.isRed_()) {
            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');
        }
        if (this.right.isRed_()) {
            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');
        }
        blackDepth = this.left.check_();
        if (blackDepth !== this.right.check_()) {
            throw new Error('Black depths differ');
        }
        else {
            return blackDepth + (this.isRed_() ? 0 : 1);
        }
    };
    LLRBNode.RED = true;
    LLRBNode.BLACK = false;
    return LLRBNode;
}());
exports.LLRBNode = LLRBNode;
/**
 * Represents an empty node (a leaf node in the Red-Black Tree).
 */
var LLRBEmptyNode = /** @class */ (function () {
    function LLRBEmptyNode() {
    }
    /**
     * Returns a copy of the current node.
     *
     * @return {!LLRBEmptyNode} The node copy.
     */
    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {
        return this;
    };
    /**
     * Returns a copy of the tree, with the specified key/value added.
     *
     * @param {!K} key Key to be added.
     * @param {!V} value Value to be added.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBNode} New tree, with item added.
     */
    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {
        return new LLRBNode(key, value, null);
    };
    /**
     * Returns a copy of the tree, with the specified key removed.
     *
     * @param {!K} key The key to remove.
     * @param {Comparator} comparator Comparator.
     * @return {!LLRBEmptyNode} New tree, with item removed.
     */
    LLRBEmptyNode.prototype.remove = function (key, comparator) {
        return this;
    };
    /**
     * @return {number} The total number of nodes in the tree.
     */
    LLRBEmptyNode.prototype.count = function () {
        return 0;
    };
    /**
     * @return {boolean} True if the tree is empty.
     */
    LLRBEmptyNode.prototype.isEmpty = function () {
        return true;
    };
    /**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V):*} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {boolean} True if traversal was aborted.
     */
    LLRBEmptyNode.prototype.inorderTraversal = function (action) {
        return false;
    };
    /**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param {function(!K, !V)} action Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @return {boolean} True if traversal was aborted.
     */
    LLRBEmptyNode.prototype.reverseTraversal = function (action) {
        return false;
    };
    /**
     * @return {null}
     */
    LLRBEmptyNode.prototype.minKey = function () {
        return null;
    };
    /**
     * @return {null}
     */
    LLRBEmptyNode.prototype.maxKey = function () {
        return null;
    };
    /**
     * @private
     * @return {number} Not sure what this returns exactly. :-).
     */
    LLRBEmptyNode.prototype.check_ = function () {
        return 0;
    };
    /**
     * @private
     * @return {boolean} Whether this node is red.
     */
    LLRBEmptyNode.prototype.isRed_ = function () {
        return false;
    };
    return LLRBEmptyNode;
}());
exports.LLRBEmptyNode = LLRBEmptyNode;
/**
 * An immutable sorted map implementation, based on a Left-leaning Red-Black
 * tree.
 */
var SortedMap = /** @class */ (function () {
    /**
     * @template K, V
     * @param {function(K, K):number} comparator_ Key comparator.
     * @param {LLRBNode=} root_ (Optional) Root node for the map.
     */
    function SortedMap(comparator_, root_) {
        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }
        this.comparator_ = comparator_;
        this.root_ = root_;
    }
    /**
     * Returns a copy of the map, with the specified key/value added or replaced.
     * (TODO: We should perhaps rename this method to 'put')
     *
     * @param {!K} key Key to be added.
     * @param {!V} value Value to be added.
     * @return {!SortedMap.<K, V>} New map, with item added.
     */
    SortedMap.prototype.insert = function (key, value) {
        return new SortedMap(this.comparator_, this.root_
            .insert(key, value, this.comparator_)
            .copy(null, null, LLRBNode.BLACK, null, null));
    };
    /**
     * Returns a copy of the map, with the specified key removed.
     *
     * @param {!K} key The key to remove.
     * @return {!SortedMap.<K, V>} New map, with item removed.
     */
    SortedMap.prototype.remove = function (key) {
        return new SortedMap(this.comparator_, this.root_
            .remove(key, this.comparator_)
            .copy(null, null, LLRBNode.BLACK, null, null));
    };
    /**
     * Returns the value of the node with the given key, or null.
     *
     * @param {!K} key The key to look up.
     * @return {?V} The value of the node with the given key, or null if the
     * key doesn't exist.
     */
    SortedMap.prototype.get = function (key) {
        var cmp;
        var node = this.root_;
        while (!node.isEmpty()) {
            cmp = this.comparator_(key, node.key);
            if (cmp === 0) {
                return node.value;
            }
            else if (cmp < 0) {
                node = node.left;
            }
            else if (cmp > 0) {
                node = node.right;
            }
        }
        return null;
    };
    /**
     * Returns the key of the item *before* the specified key, or null if key is the first item.
     * @param {K} key The key to find the predecessor of
     * @return {?K} The predecessor key.
     */
    SortedMap.prototype.getPredecessorKey = function (key) {
        var cmp, node = this.root_, rightParent = null;
        while (!node.isEmpty()) {
            cmp = this.comparator_(key, node.key);
            if (cmp === 0) {
                if (!node.left.isEmpty()) {
                    node = node.left;
                    while (!node.right.isEmpty())
                        node = node.right;
                    return node.key;
                }
                else if (rightParent) {
                    return rightParent.key;
                }
                else {
                    return null; // first item.
                }
            }
            else if (cmp < 0) {
                node = node.left;
            }
            else if (cmp > 0) {
                rightParent = node;
                node = node.right;
            }
        }
        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');
    };
    /**
     * @return {boolean} True if the map is empty.
     */
    SortedMap.prototype.isEmpty = function () {
        return this.root_.isEmpty();
    };
    /**
     * @return {number} The total number of nodes in the map.
     */
    SortedMap.prototype.count = function () {
        return this.root_.count();
    };
    /**
     * @return {?K} The minimum key in the map.
     */
    SortedMap.prototype.minKey = function () {
        return this.root_.minKey();
    };
    /**
     * @return {?K} The maximum key in the map.
     */
    SortedMap.prototype.maxKey = function () {
        return this.root_.maxKey();
    };
    /**
     * Traverses the map in key order and calls the specified action function
     * for each key/value pair.
     *
     * @param {function(!K, !V):*} action Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @return {*} The first truthy value returned by action, or the last falsey
     *   value returned by action
     */
    SortedMap.prototype.inorderTraversal = function (action) {
        return this.root_.inorderTraversal(action);
    };
    /**
     * Traverses the map in reverse key order and calls the specified action function
     * for each key/value pair.
     *
     * @param {function(!Object, !Object)} action Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @return {*} True if the traversal was aborted.
     */
    SortedMap.prototype.reverseTraversal = function (action) {
        return this.root_.reverseTraversal(action);
    };
    /**
     * Returns an iterator over the SortedMap.
     * @template T
     * @param {(function(K, V):T)=} resultGenerator
     * @return {SortedMapIterator.<K, V, T>} The iterator.
     */
    SortedMap.prototype.getIterator = function (resultGenerator) {
        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);
    };
    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {
        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);
    };
    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {
        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);
    };
    SortedMap.prototype.getReverseIterator = function (resultGenerator) {
        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);
    };
    /**
     * Always use the same empty node, to reduce memory.
     * @const
     */
    SortedMap.EMPTY_NODE = new LLRBEmptyNode();
    return SortedMap;
}());
exports.SortedMap = SortedMap;

//# sourceMappingURL=SortedMap.js.map


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ServerValues_1 = __webpack_require__(43);
var nodeFromJSON_1 = __webpack_require__(11);
var Path_1 = __webpack_require__(2);
var SparseSnapshotTree_1 = __webpack_require__(44);
var SyncTree_1 = __webpack_require__(86);
var SnapshotHolder_1 = __webpack_require__(97);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var util_3 = __webpack_require__(0);
var AuthTokenProvider_1 = __webpack_require__(98);
var StatsManager_1 = __webpack_require__(25);
var StatsReporter_1 = __webpack_require__(100);
var StatsListener_1 = __webpack_require__(49);
var EventQueue_1 = __webpack_require__(101);
var PersistentConnection_1 = __webpack_require__(50);
var ReadonlyRestClient_1 = __webpack_require__(106);
var Database_1 = __webpack_require__(32);
var INTERRUPT_REASON = 'repo_interrupt';
/**
 * A connection to a single data repository.
 */
var Repo = /** @class */ (function () {
    /**
     * @param {!RepoInfo} repoInfo_
     * @param {boolean} forceRestClient
     * @param {!FirebaseApp} app
     */
    function Repo(repoInfo_, forceRestClient, app) {
        var _this = this;
        this.repoInfo_ = repoInfo_;
        this.app = app;
        this.dataUpdateCount = 0;
        this.statsListener_ = null;
        this.eventQueue_ = new EventQueue_1.EventQueue();
        this.nextWriteId_ = 1;
        this.interceptServerDataCallback_ = null;
        // A list of data pieces and paths to be set when this client disconnects.
        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();
        /**
         * TODO: This should be @private but it's used by test_access.js and internal.js
         * @type {?PersistentConnection}
         */
        this.persistentConnection_ = null;
        /** @type {!AuthTokenProvider} */
        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);
        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);
        if (forceRestClient || util_2.beingCrawled()) {
            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);
            // Minor hack: Fire onConnect immediately, since there's no actual connection.
            setTimeout(this.onConnectStatus_.bind(this, true), 0);
        }
        else {
            var authOverride = app.options['databaseAuthVariableOverride'];
            // Validate authOverride
            if (typeof authOverride !== 'undefined' && authOverride !== null) {
                if (typeof authOverride !== 'object') {
                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');
                }
                try {
                    util_1.stringify(authOverride);
                }
                catch (e) {
                    throw new Error('Invalid authOverride provided: ' + e);
                }
            }
            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);
            this.server_ = this.persistentConnection_;
        }
        authTokenProvider.addTokenChangeListener(function (token) {
            _this.server_.refreshAuthToken(token);
        });
        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),
        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.
        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });
        this.transactions_init_();
        // Used for .info.
        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();
        this.infoSyncTree_ = new SyncTree_1.SyncTree({
            startListening: function (query, tag, currentHashFn, onComplete) {
                var infoEvents = [];
                var node = _this.infoData_.getNode(query.path);
                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events
                // on initial data...
                if (!node.isEmpty()) {
                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);
                    setTimeout(function () {
                        onComplete('ok');
                    }, 0);
                }
                return infoEvents;
            },
            stopListening: function () { }
        });
        this.updateInfo_('connected', false);
        this.serverSyncTree_ = new SyncTree_1.SyncTree({
            startListening: function (query, tag, currentHashFn, onComplete) {
                _this.server_.listen(query, currentHashFn, tag, function (status, data) {
                    var events = onComplete(status, data);
                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);
                });
                // No synchronous events for network-backed sync trees
                return [];
            },
            stopListening: function (query, tag) {
                _this.server_.unlisten(query, tag);
            }
        });
    }
    /**
     * @return {string}  The URL corresponding to the root of this Firebase.
     */
    Repo.prototype.toString = function () {
        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);
    };
    /**
     * @return {!string} The namespace represented by the repo.
     */
    Repo.prototype.name = function () {
        return this.repoInfo_.namespace;
    };
    /**
     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.
     */
    Repo.prototype.serverTime = function () {
        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));
        var offset = offsetNode.val() || 0;
        return new Date().getTime() + offset;
    };
    /**
     * Generate ServerValues using some variables from the repo object.
     * @return {!Object}
     */
    Repo.prototype.generateServerValues = function () {
        return ServerValues_1.generateWithValues({
            timestamp: this.serverTime()
        });
    };
    /**
     * Called by realtime when we get new messages from the server.
     *
     * @private
     * @param {string} pathString
     * @param {*} data
     * @param {boolean} isMerge
     * @param {?number} tag
     */
    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {
        // For testing.
        this.dataUpdateCount++;
        var path = new Path_1.Path(pathString);
        data = this.interceptServerDataCallback_
            ? this.interceptServerDataCallback_(pathString, data)
            : data;
        var events = [];
        if (tag) {
            if (isMerge) {
                var taggedChildren = util_3.map(data, function (raw) {
                    return nodeFromJSON_1.nodeFromJSON(raw);
                });
                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);
            }
            else {
                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);
                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);
            }
        }
        else if (isMerge) {
            var changedChildren = util_3.map(data, function (raw) {
                return nodeFromJSON_1.nodeFromJSON(raw);
            });
            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);
        }
        else {
            var snap = nodeFromJSON_1.nodeFromJSON(data);
            events = this.serverSyncTree_.applyServerOverwrite(path, snap);
        }
        var affectedPath = path;
        if (events.length > 0) {
            // Since we have a listener outstanding for each transaction, receiving any events
            // is a proxy for some change having occurred.
            affectedPath = this.rerunTransactions_(path);
        }
        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);
    };
    /**
     * TODO: This should be @private but it's used by test_access.js and internal.js
     * @param {?function(!string, *):*} callback
     * @private
     */
    Repo.prototype.interceptServerData_ = function (callback) {
        this.interceptServerDataCallback_ = callback;
    };
    /**
     * @param {!boolean} connectStatus
     * @private
     */
    Repo.prototype.onConnectStatus_ = function (connectStatus) {
        this.updateInfo_('connected', connectStatus);
        if (connectStatus === false) {
            this.runOnDisconnectEvents_();
        }
    };
    /**
     * @param {!Object} updates
     * @private
     */
    Repo.prototype.onServerInfoUpdate_ = function (updates) {
        var _this = this;
        util_2.each(updates, function (value, key) {
            _this.updateInfo_(key, value);
        });
    };
    /**
     *
     * @param {!string} pathString
     * @param {*} value
     * @private
     */
    Repo.prototype.updateInfo_ = function (pathString, value) {
        var path = new Path_1.Path('/.info/' + pathString);
        var newNode = nodeFromJSON_1.nodeFromJSON(value);
        this.infoData_.updateSnapshot(path, newNode);
        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);
        this.eventQueue_.raiseEventsForChangedPath(path, events);
    };
    /**
     * @return {!number}
     * @private
     */
    Repo.prototype.getNextWriteId_ = function () {
        return this.nextWriteId_++;
    };
    /**
     * @param {!Path} path
     * @param {*} newVal
     * @param {number|string|null} newPriority
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {
        var _this = this;
        this.log_('set', {
            path: path.toString(),
            value: newVal,
            priority: newPriority
        });
        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or
        // (b) store unresolved paths on JSON parse
        var serverValues = this.generateServerValues();
        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);
        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);
        var writeId = this.getNextWriteId_();
        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);
        this.eventQueue_.queueEvents(events);
        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {
            var success = status === 'ok';
            if (!success) {
                util_2.warn('set at ' + path + ' failed: ' + status);
            }
            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);
            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);
            _this.callOnCompleteCallback(onComplete, status, errorReason);
        });
        var affectedPath = this.abortTransactions_(path);
        this.rerunTransactions_(affectedPath);
        // We queued the events above, so just flush the queue here
        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);
    };
    /**
     * @param {!Path} path
     * @param {!Object} childrenToMerge
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.update = function (path, childrenToMerge, onComplete) {
        var _this = this;
        this.log_('update', { path: path.toString(), value: childrenToMerge });
        // Start with our existing data and merge each child into it.
        var empty = true;
        var serverValues = this.generateServerValues();
        var changedChildren = {};
        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {
            empty = false;
            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);
            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);
        });
        if (!empty) {
            var writeId_1 = this.getNextWriteId_();
            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);
            this.eventQueue_.queueEvents(events);
            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {
                var success = status === 'ok';
                if (!success) {
                    util_2.warn('update at ' + path + ' failed: ' + status);
                }
                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);
                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;
                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);
                _this.callOnCompleteCallback(onComplete, status, errorReason);
            });
            util_3.forEach(childrenToMerge, function (changedPath) {
                var affectedPath = _this.abortTransactions_(path.child(changedPath));
                _this.rerunTransactions_(affectedPath);
            });
            // We queued the events above, so just flush the queue here
            this.eventQueue_.raiseEventsForChangedPath(path, []);
        }
        else {
            util_2.log("update() called with empty data.  Don't do anything.");
            this.callOnCompleteCallback(onComplete, 'ok');
        }
    };
    /**
     * Applies all of the changes stored up in the onDisconnect_ tree.
     * @private
     */
    Repo.prototype.runOnDisconnectEvents_ = function () {
        var _this = this;
        this.log_('onDisconnectEvents');
        var serverValues = this.generateServerValues();
        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);
        var events = [];
        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {
            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));
            var affectedPath = _this.abortTransactions_(path);
            _this.rerunTransactions_(affectedPath);
        });
        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();
        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);
    };
    /**
     * @param {!Path} path
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.onDisconnectCancel = function (path, onComplete) {
        var _this = this;
        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {
            if (status === 'ok') {
                _this.onDisconnect_.forget(path);
            }
            _this.callOnCompleteCallback(onComplete, status, errorReason);
        });
    };
    /**
     * @param {!Path} path
     * @param {*} value
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {
        var _this = this;
        var newNode = nodeFromJSON_1.nodeFromJSON(value);
        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {
            if (status === 'ok') {
                _this.onDisconnect_.remember(path, newNode);
            }
            _this.callOnCompleteCallback(onComplete, status, errorReason);
        });
    };
    /**
     * @param {!Path} path
     * @param {*} value
     * @param {*} priority
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {
        var _this = this;
        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);
        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {
            if (status === 'ok') {
                _this.onDisconnect_.remember(path, newNode);
            }
            _this.callOnCompleteCallback(onComplete, status, errorReason);
        });
    };
    /**
     * @param {!Path} path
     * @param {*} childrenToMerge
     * @param {?function(?Error, *=)} onComplete
     */
    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {
        var _this = this;
        if (util_3.isEmpty(childrenToMerge)) {
            util_2.log("onDisconnect().update() called with empty data.  Don't do anything.");
            this.callOnCompleteCallback(onComplete, 'ok');
            return;
        }
        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {
            if (status === 'ok') {
                util_3.forEach(childrenToMerge, function (childName, childNode) {
                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);
                    _this.onDisconnect_.remember(path.child(childName), newChildNode);
                });
            }
            _this.callOnCompleteCallback(onComplete, status, errorReason);
        });
    };
    /**
     * @param {!Query} query
     * @param {!EventRegistration} eventRegistration
     */
    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {
        var events;
        if (query.path.getFront() === '.info') {
            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);
        }
        else {
            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);
        }
        this.eventQueue_.raiseEventsAtPath(query.path, events);
    };
    /**
     * @param {!Query} query
     * @param {?EventRegistration} eventRegistration
     */
    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {
        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof
        // a little bit by handling the return values anyways.
        var events;
        if (query.path.getFront() === '.info') {
            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);
        }
        else {
            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);
        }
        this.eventQueue_.raiseEventsAtPath(query.path, events);
    };
    Repo.prototype.interrupt = function () {
        if (this.persistentConnection_) {
            this.persistentConnection_.interrupt(INTERRUPT_REASON);
        }
    };
    Repo.prototype.resume = function () {
        if (this.persistentConnection_) {
            this.persistentConnection_.resume(INTERRUPT_REASON);
        }
    };
    Repo.prototype.stats = function (showDelta) {
        if (showDelta === void 0) { showDelta = false; }
        if (typeof console === 'undefined')
            return;
        var stats;
        if (showDelta) {
            if (!this.statsListener_)
                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);
            stats = this.statsListener_.get();
        }
        else {
            stats = this.stats_.get();
        }
        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {
            return Math.max(currentValue.length, previousValue);
        }, 0);
        util_3.forEach(stats, function (stat, value) {
            // pad stat names to be the same length (plus 2 extra spaces).
            for (var i = stat.length; i < longestName + 2; i++)
                stat += ' ';
            console.log(stat + value);
        });
    };
    Repo.prototype.statsIncrementCounter = function (metric) {
        this.stats_.incrementCounter(metric);
        this.statsReporter_.includeStat(metric);
    };
    /**
     * @param {...*} var_args
     * @private
     */
    Repo.prototype.log_ = function () {
        var var_args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            var_args[_i] = arguments[_i];
        }
        var prefix = '';
        if (this.persistentConnection_) {
            prefix = this.persistentConnection_.id + ':';
        }
        util_2.log.apply(void 0, [prefix].concat(var_args));
    };
    /**
     * @param {?function(?Error, *=)} callback
     * @param {!string} status
     * @param {?string=} errorReason
     */
    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {
        if (callback) {
            util_2.exceptionGuard(function () {
                if (status == 'ok') {
                    callback(null);
                }
                else {
                    var code = (status || 'error').toUpperCase();
                    var message = code;
                    if (errorReason)
                        message += ': ' + errorReason;
                    var error = new Error(message);
                    error.code = code;
                    callback(error);
                }
            });
        }
    };
    Object.defineProperty(Repo.prototype, "database", {
        get: function () {
            return this.__database || (this.__database = new Database_1.Database(this));
        },
        enumerable: true,
        configurable: true
    });
    return Repo;
}());
exports.Repo = Repo;

//# sourceMappingURL=Repo.js.map


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully
 * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.
 * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks
 * whether a node potentially had children removed due to a filter.
 */
var CacheNode = /** @class */ (function () {
    /**
     * @param {!Node} node_
     * @param {boolean} fullyInitialized_
     * @param {boolean} filtered_
     */
    function CacheNode(node_, fullyInitialized_, filtered_) {
        this.node_ = node_;
        this.fullyInitialized_ = fullyInitialized_;
        this.filtered_ = filtered_;
    }
    /**
     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client
     * @return {boolean}
     */
    CacheNode.prototype.isFullyInitialized = function () {
        return this.fullyInitialized_;
    };
    /**
     * Returns whether this node is potentially missing children due to a filter applied to the node
     * @return {boolean}
     */
    CacheNode.prototype.isFiltered = function () {
        return this.filtered_;
    };
    /**
     * @param {!Path} path
     * @return {boolean}
     */
    CacheNode.prototype.isCompleteForPath = function (path) {
        if (path.isEmpty()) {
            return this.isFullyInitialized() && !this.filtered_;
        }
        var childKey = path.getFront();
        return this.isCompleteForChild(childKey);
    };
    /**
     * @param {!string} key
     * @return {boolean}
     */
    CacheNode.prototype.isCompleteForChild = function (key) {
        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));
    };
    /**
     * @return {!Node}
     */
    CacheNode.prototype.getNode = function () {
        return this.node_;
    };
    return CacheNode;
}());
exports.CacheNode = CacheNode;

//# sourceMappingURL=CacheNode.js.map


/***/ }),
/* 19 */,
/* 20 */,
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var onDisconnect_1 = __webpack_require__(35);
var TransactionResult_1 = __webpack_require__(82);
var util_1 = __webpack_require__(1);
var NextPushId_1 = __webpack_require__(83);
var Query_1 = __webpack_require__(36);
var Repo_1 = __webpack_require__(17);
var Path_1 = __webpack_require__(2);
var QueryParams_1 = __webpack_require__(107);
var validation_1 = __webpack_require__(7);
var util_2 = __webpack_require__(0);
var util_3 = __webpack_require__(0);
var SyncPoint_1 = __webpack_require__(47);
var Reference = /** @class */ (function (_super) {
    __extends(Reference, _super);
    /**
     * Call options:
     *   new Reference(Repo, Path) or
     *   new Reference(url: string, string|RepoManager)
     *
     * Externally - this is the firebase.database.Reference type.
     *
     * @param {!Repo} repo
     * @param {(!Path)} path
     * @extends {Query}
     */
    function Reference(repo, path) {
        var _this = this;
        if (!(repo instanceof Repo_1.Repo)) {
            throw new Error('new Reference() no longer supported - use app.database().');
        }
        // call Query's constructor, passing in the repo and path.
        _this = _super.call(this, repo, path, QueryParams_1.QueryParams.DEFAULT, false) || this;
        return _this;
    }
    /** @return {?string} */
    Reference.prototype.getKey = function () {
        util_2.validateArgCount('Reference.key', 0, 0, arguments.length);
        if (this.path.isEmpty())
            return null;
        else
            return this.path.getBack();
    };
    /**
     * @param {!(string|Path)} pathString
     * @return {!Reference}
     */
    Reference.prototype.child = function (pathString) {
        util_2.validateArgCount('Reference.child', 1, 1, arguments.length);
        if (typeof pathString === 'number') {
            pathString = String(pathString);
        }
        else if (!(pathString instanceof Path_1.Path)) {
            if (this.path.getFront() === null)
                validation_1.validateRootPathString('Reference.child', 1, pathString, false);
            else
                validation_1.validatePathString('Reference.child', 1, pathString, false);
        }
        return new Reference(this.repo, this.path.child(pathString));
    };
    /** @return {?Reference} */
    Reference.prototype.getParent = function () {
        util_2.validateArgCount('Reference.parent', 0, 0, arguments.length);
        var parentPath = this.path.parent();
        return parentPath === null ? null : new Reference(this.repo, parentPath);
    };
    /** @return {!Reference} */
    Reference.prototype.getRoot = function () {
        util_2.validateArgCount('Reference.root', 0, 0, arguments.length);
        var ref = this;
        while (ref.getParent() !== null) {
            ref = ref.getParent();
        }
        return ref;
    };
    /** @return {!Database} */
    Reference.prototype.databaseProp = function () {
        return this.repo.database;
    };
    /**
     * @param {*} newVal
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */
    Reference.prototype.set = function (newVal, onComplete) {
        util_2.validateArgCount('Reference.set', 1, 2, arguments.length);
        validation_1.validateWritablePath('Reference.set', this.path);
        validation_1.validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);
        util_2.validateCallback('Reference.set', 2, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo.setWithPriority(this.path, newVal, 
        /*priority=*/ null, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {!Object} objectToMerge
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */
    Reference.prototype.update = function (objectToMerge, onComplete) {
        util_2.validateArgCount('Reference.update', 1, 2, arguments.length);
        validation_1.validateWritablePath('Reference.update', this.path);
        if (Array.isArray(objectToMerge)) {
            var newObjectToMerge = {};
            for (var i = 0; i < objectToMerge.length; ++i) {
                newObjectToMerge['' + i] = objectToMerge[i];
            }
            objectToMerge = newObjectToMerge;
            util_1.warn('Passing an Array to Firebase.update() is deprecated. ' +
                'Use set() if you want to overwrite the existing data, or ' +
                'an Object with integer keys if you really do want to ' +
                'only update some of the children.');
        }
        validation_1.validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);
        util_2.validateCallback('Reference.update', 2, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {*} newVal
     * @param {string|number|null} newPriority
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */
    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {
        util_2.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);
        validation_1.validateWritablePath('Reference.setWithPriority', this.path);
        validation_1.validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);
        validation_1.validatePriority('Reference.setWithPriority', 2, newPriority, false);
        util_2.validateCallback('Reference.setWithPriority', 3, onComplete, true);
        if (this.getKey() === '.length' || this.getKey() === '.keys')
            throw 'Reference.setWithPriority failed: ' +
                this.getKey() +
                ' is a read-only object.';
        var deferred = new util_3.Deferred();
        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */
    Reference.prototype.remove = function (onComplete) {
        util_2.validateArgCount('Reference.remove', 0, 1, arguments.length);
        validation_1.validateWritablePath('Reference.remove', this.path);
        util_2.validateCallback('Reference.remove', 1, onComplete, true);
        return this.set(null, onComplete);
    };
    /**
     * @param {function(*):*} transactionUpdate
     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete
     * @param {boolean=} applyLocally
     * @return {!Promise}
     */
    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {
        util_2.validateArgCount('Reference.transaction', 1, 3, arguments.length);
        validation_1.validateWritablePath('Reference.transaction', this.path);
        util_2.validateCallback('Reference.transaction', 1, transactionUpdate, false);
        util_2.validateCallback('Reference.transaction', 2, onComplete, true);
        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how
        // to expose it.
        validation_1.validateBoolean('Reference.transaction', 3, applyLocally, true);
        if (this.getKey() === '.length' || this.getKey() === '.keys')
            throw 'Reference.transaction failed: ' +
                this.getKey() +
                ' is a read-only object.';
        if (applyLocally === undefined)
            applyLocally = true;
        var deferred = new util_3.Deferred();
        if (typeof onComplete === 'function') {
            deferred.promise.catch(function () { });
        }
        var promiseComplete = function (error, committed, snapshot) {
            if (error) {
                deferred.reject(error);
            }
            else {
                deferred.resolve(new TransactionResult_1.TransactionResult(committed, snapshot));
            }
            if (typeof onComplete === 'function') {
                onComplete(error, committed, snapshot);
            }
        };
        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);
        return deferred.promise;
    };
    /**
     * @param {string|number|null} priority
     * @param {function(?Error)=} onComplete
     * @return {!Promise}
     */
    Reference.prototype.setPriority = function (priority, onComplete) {
        util_2.validateArgCount('Reference.setPriority', 1, 2, arguments.length);
        validation_1.validateWritablePath('Reference.setPriority', this.path);
        validation_1.validatePriority('Reference.setPriority', 1, priority, false);
        util_2.validateCallback('Reference.setPriority', 2, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {*=} value
     * @param {function(?Error)=} onComplete
     * @return {!Reference}
     */
    Reference.prototype.push = function (value, onComplete) {
        util_2.validateArgCount('Reference.push', 0, 2, arguments.length);
        validation_1.validateWritablePath('Reference.push', this.path);
        validation_1.validateFirebaseDataArg('Reference.push', 1, value, this.path, true);
        util_2.validateCallback('Reference.push', 2, onComplete, true);
        var now = this.repo.serverTime();
        var name = NextPushId_1.nextPushId(now);
        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.
        // We use child() to create handles to two different references. The first is turned into a
        // ThennableReference below by adding then() and catch() methods and is used as the
        // return value of push(). The second remains a regular Reference and is used as the fulfilled
        // value of the first ThennableReference.
        var thennablePushRef = this.child(name);
        var pushRef = this.child(name);
        var promise;
        if (value != null) {
            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });
        }
        else {
            promise = Promise.resolve(pushRef);
        }
        thennablePushRef.then = promise.then.bind(promise);
        thennablePushRef.catch = promise.then.bind(promise, undefined);
        if (typeof onComplete === 'function') {
            promise.catch(function () { });
        }
        return thennablePushRef;
    };
    /**
     * @return {!OnDisconnect}
     */
    Reference.prototype.onDisconnect = function () {
        validation_1.validateWritablePath('Reference.onDisconnect', this.path);
        return new onDisconnect_1.OnDisconnect(this.repo, this.path);
    };
    Object.defineProperty(Reference.prototype, "database", {
        get: function () {
            return this.databaseProp();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "key", {
        get: function () {
            return this.getKey();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "parent", {
        get: function () {
            return this.getParent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "root", {
        get: function () {
            return this.getRoot();
        },
        enumerable: true,
        configurable: true
    });
    return Reference;
}(Query_1.Query));
exports.Reference = Reference;
/**
 * Define reference constructor in various modules
 *
 * We are doing this here to avoid several circular
 * dependency issues
 */
Query_1.Query.__referenceConstructor = Reference;
SyncPoint_1.SyncPoint.__referenceConstructor = Reference;

//# sourceMappingURL=Reference.js.map


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var validation_1 = __webpack_require__(7);
var Path_1 = __webpack_require__(2);
var PriorityIndex_1 = __webpack_require__(3);
/**
 * Class representing a firebase data snapshot.  It wraps a SnapshotNode and
 * surfaces the public methods (val, forEach, etc.) we want to expose.
 */
var DataSnapshot = /** @class */ (function () {
    /**
     * @param {!Node} node_ A SnapshotNode to wrap.
     * @param {!Reference} ref_ The ref of the location this snapshot came from.
     * @param {!Index} index_ The iteration order for this snapshot
     */
    function DataSnapshot(node_, ref_, index_) {
        this.node_ = node_;
        this.ref_ = ref_;
        this.index_ = index_;
    }
    /**
     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is
     * empty.
     *
     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
     */
    DataSnapshot.prototype.val = function () {
        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);
        return this.node_.val();
    };
    /**
     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting
     * the entire node contents.
     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
     */
    DataSnapshot.prototype.exportVal = function () {
        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);
        return this.node_.val(true);
    };
    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
    // for end-users
    DataSnapshot.prototype.toJSON = function () {
        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content
        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);
        return this.exportVal();
    };
    /**
     * Returns whether the snapshot contains a non-null value.
     *
     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.
     */
    DataSnapshot.prototype.exists = function () {
        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);
        return !this.node_.isEmpty();
    };
    /**
     * Returns a DataSnapshot of the specified child node's contents.
     *
     * @param {!string} childPathString Path to a child.
     * @return {!DataSnapshot} DataSnapshot for child node.
     */
    DataSnapshot.prototype.child = function (childPathString) {
        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);
        // Ensure the childPath is a string (can be a number)
        childPathString = String(childPathString);
        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);
        var childPath = new Path_1.Path(childPathString);
        var childRef = this.ref_.child(childPath);
        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);
    };
    /**
     * Returns whether the snapshot contains a child at the specified path.
     *
     * @param {!string} childPathString Path to a child.
     * @return {boolean} Whether the child exists.
     */
    DataSnapshot.prototype.hasChild = function (childPathString) {
        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);
        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);
        var childPath = new Path_1.Path(childPathString);
        return !this.node_.getChild(childPath).isEmpty();
    };
    /**
     * Returns the priority of the object, or null if no priority was set.
     *
     * @return {string|number|null} The priority.
     */
    DataSnapshot.prototype.getPriority = function () {
        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);
        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)
        return this.node_.getPriority().val();
    };
    /**
     * Iterates through child nodes and calls the specified action for each one.
     *
     * @param {function(!DataSnapshot)} action Callback function to be called
     * for each child.
     * @return {boolean} True if forEach was canceled by action returning true for
     * one of the child nodes.
     */
    DataSnapshot.prototype.forEach = function (action) {
        var _this = this;
        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);
        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);
        if (this.node_.isLeafNode())
            return false;
        var childrenNode = this.node_;
        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...
        return !!childrenNode.forEachChild(this.index_, function (key, node) {
            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));
        });
    };
    /**
     * Returns whether this DataSnapshot has children.
     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.
     */
    DataSnapshot.prototype.hasChildren = function () {
        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);
        if (this.node_.isLeafNode())
            return false;
        else
            return !this.node_.isEmpty();
    };
    Object.defineProperty(DataSnapshot.prototype, "key", {
        get: function () {
            return this.ref_.getKey();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the number of children for this DataSnapshot.
     * @return {number} The number of children that this DataSnapshot contains.
     */
    DataSnapshot.prototype.numChildren = function () {
        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);
        return this.node_.numChildren();
    };
    /**
     * @return {Reference} The Firebase reference for the location this snapshot's data came from.
     */
    DataSnapshot.prototype.getRef = function () {
        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);
        return this.ref_;
    };
    Object.defineProperty(DataSnapshot.prototype, "ref", {
        get: function () {
            return this.getRef();
        },
        enumerable: true,
        configurable: true
    });
    return DataSnapshot;
}());
exports.DataSnapshot = DataSnapshot;

//# sourceMappingURL=DataSnapshot.js.map


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var SortedMap_1 = __webpack_require__(16);
var Path_1 = __webpack_require__(2);
var util_1 = __webpack_require__(1);
var util_2 = __webpack_require__(0);
var emptyChildrenSingleton;
/**
 * Singleton empty children collection.
 *
 * @const
 * @type {!SortedMap.<string, !ImmutableTree.<?>>}
 */
var EmptyChildren = function () {
    if (!emptyChildrenSingleton) {
        emptyChildrenSingleton = new SortedMap_1.SortedMap(util_1.stringCompare);
    }
    return emptyChildrenSingleton;
};
/**
 * A tree with immutable elements.
 */
var ImmutableTree = /** @class */ (function () {
    /**
     * @template T
     * @param {?T} value
     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children
     */
    function ImmutableTree(value, children) {
        if (children === void 0) { children = EmptyChildren(); }
        this.value = value;
        this.children = children;
    }
    /**
     * @template T
     * @param {!Object.<string, !T>} obj
     * @return {!ImmutableTree.<!T>}
     */
    ImmutableTree.fromObject = function (obj) {
        var tree = ImmutableTree.Empty;
        util_2.forEach(obj, function (childPath, childSnap) {
            tree = tree.set(new Path_1.Path(childPath), childSnap);
        });
        return tree;
    };
    /**
     * True if the value is empty and there are no children
     * @return {boolean}
     */
    ImmutableTree.prototype.isEmpty = function () {
        return this.value === null && this.children.isEmpty();
    };
    /**
     * Given a path and predicate, return the first node and the path to that node
     * where the predicate returns true.
     *
     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects
     * on the way back out, it may be better to pass down a pathSoFar obj.
     *
     * @param {!Path} relativePath The remainder of the path
     * @param {function(T):boolean} predicate The predicate to satisfy to return a
     *   node
     * @return {?{path:!Path, value:!T}}
     */
    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {
        if (this.value != null && predicate(this.value)) {
            return { path: Path_1.Path.Empty, value: this.value };
        }
        else {
            if (relativePath.isEmpty()) {
                return null;
            }
            else {
                var front = relativePath.getFront();
                var child = this.children.get(front);
                if (child !== null) {
                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);
                    if (childExistingPathAndValue != null) {
                        var fullPath = new Path_1.Path(front).child(childExistingPathAndValue.path);
                        return { path: fullPath, value: childExistingPathAndValue.value };
                    }
                    else {
                        return null;
                    }
                }
                else {
                    return null;
                }
            }
        }
    };
    /**
     * Find, if it exists, the shortest subpath of the given path that points a defined
     * value in the tree
     * @param {!Path} relativePath
     * @return {?{path: !Path, value: !T}}
     */
    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {
        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });
    };
    /**
     * @param {!Path} relativePath
     * @return {!ImmutableTree.<T>} The subtree at the given path
     */
    ImmutableTree.prototype.subtree = function (relativePath) {
        if (relativePath.isEmpty()) {
            return this;
        }
        else {
            var front = relativePath.getFront();
            var childTree = this.children.get(front);
            if (childTree !== null) {
                return childTree.subtree(relativePath.popFront());
            }
            else {
                return ImmutableTree.Empty;
            }
        }
    };
    /**
     * Sets a value at the specified path.
     *
     * @param {!Path} relativePath Path to set value at.
     * @param {?T} toSet Value to set.
     * @return {!ImmutableTree.<T>} Resulting tree.
     */
    ImmutableTree.prototype.set = function (relativePath, toSet) {
        if (relativePath.isEmpty()) {
            return new ImmutableTree(toSet, this.children);
        }
        else {
            var front = relativePath.getFront();
            var child = this.children.get(front) || ImmutableTree.Empty;
            var newChild = child.set(relativePath.popFront(), toSet);
            var newChildren = this.children.insert(front, newChild);
            return new ImmutableTree(this.value, newChildren);
        }
    };
    /**
     * Removes the value at the specified path.
     *
     * @param {!Path} relativePath Path to value to remove.
     * @return {!ImmutableTree.<T>} Resulting tree.
     */
    ImmutableTree.prototype.remove = function (relativePath) {
        if (relativePath.isEmpty()) {
            if (this.children.isEmpty()) {
                return ImmutableTree.Empty;
            }
            else {
                return new ImmutableTree(null, this.children);
            }
        }
        else {
            var front = relativePath.getFront();
            var child = this.children.get(front);
            if (child) {
                var newChild = child.remove(relativePath.popFront());
                var newChildren = void 0;
                if (newChild.isEmpty()) {
                    newChildren = this.children.remove(front);
                }
                else {
                    newChildren = this.children.insert(front, newChild);
                }
                if (this.value === null && newChildren.isEmpty()) {
                    return ImmutableTree.Empty;
                }
                else {
                    return new ImmutableTree(this.value, newChildren);
                }
            }
            else {
                return this;
            }
        }
    };
    /**
     * Gets a value from the tree.
     *
     * @param {!Path} relativePath Path to get value for.
     * @return {?T} Value at path, or null.
     */
    ImmutableTree.prototype.get = function (relativePath) {
        if (relativePath.isEmpty()) {
            return this.value;
        }
        else {
            var front = relativePath.getFront();
            var child = this.children.get(front);
            if (child) {
                return child.get(relativePath.popFront());
            }
            else {
                return null;
            }
        }
    };
    /**
     * Replace the subtree at the specified path with the given new tree.
     *
     * @param {!Path} relativePath Path to replace subtree for.
     * @param {!ImmutableTree} newTree New tree.
     * @return {!ImmutableTree} Resulting tree.
     */
    ImmutableTree.prototype.setTree = function (relativePath, newTree) {
        if (relativePath.isEmpty()) {
            return newTree;
        }
        else {
            var front = relativePath.getFront();
            var child = this.children.get(front) || ImmutableTree.Empty;
            var newChild = child.setTree(relativePath.popFront(), newTree);
            var newChildren = void 0;
            if (newChild.isEmpty()) {
                newChildren = this.children.remove(front);
            }
            else {
                newChildren = this.children.insert(front, newChild);
            }
            return new ImmutableTree(this.value, newChildren);
        }
    };
    /**
     * Performs a depth first fold on this tree. Transforms a tree into a single
     * value, given a function that operates on the path to a node, an optional
     * current value, and a map of child names to folded subtrees
     * @template V
     * @param {function(Path, ?T, Object.<string, V>):V} fn
     * @return {V}
     */
    ImmutableTree.prototype.fold = function (fn) {
        return this.fold_(Path_1.Path.Empty, fn);
    };
    /**
     * Recursive helper for public-facing fold() method
     * @template V
     * @param {!Path} pathSoFar
     * @param {function(Path, ?T, Object.<string, V>):V} fn
     * @return {V}
     * @private
     */
    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {
        var accum = {};
        this.children.inorderTraversal(function (childKey, childTree) {
            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);
        });
        return fn(pathSoFar, this.value, accum);
    };
    /**
     * Find the first matching value on the given path. Return the result of applying f to it.
     * @template V
     * @param {!Path} path
     * @param {!function(!Path, !T):?V} f
     * @return {?V}
     */
    ImmutableTree.prototype.findOnPath = function (path, f) {
        return this.findOnPath_(path, Path_1.Path.Empty, f);
    };
    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {
        var result = this.value ? f(pathSoFar, this.value) : false;
        if (result) {
            return result;
        }
        else {
            if (pathToFollow.isEmpty()) {
                return null;
            }
            else {
                var front = pathToFollow.getFront();
                var nextChild = this.children.get(front);
                if (nextChild) {
                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);
                }
                else {
                    return null;
                }
            }
        }
    };
    /**
     *
     * @param {!Path} path
     * @param {!function(!Path, !T)} f
     * @returns {!ImmutableTree.<T>}
     */
    ImmutableTree.prototype.foreachOnPath = function (path, f) {
        return this.foreachOnPath_(path, Path_1.Path.Empty, f);
    };
    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {
        if (pathToFollow.isEmpty()) {
            return this;
        }
        else {
            if (this.value) {
                f(currentRelativePath, this.value);
            }
            var front = pathToFollow.getFront();
            var nextChild = this.children.get(front);
            if (nextChild) {
                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);
            }
            else {
                return ImmutableTree.Empty;
            }
        }
    };
    /**
     * Calls the given function for each node in the tree that has a value.
     *
     * @param {function(!Path, !T)} f A function to be called with
     *   the path from the root of the tree to a node, and the value at that node.
     *   Called in depth-first order.
     */
    ImmutableTree.prototype.foreach = function (f) {
        this.foreach_(Path_1.Path.Empty, f);
    };
    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {
        this.children.inorderTraversal(function (childName, childTree) {
            childTree.foreach_(currentRelativePath.child(childName), f);
        });
        if (this.value) {
            f(currentRelativePath, this.value);
        }
    };
    /**
     *
     * @param {function(string, !T)} f
     */
    ImmutableTree.prototype.foreachChild = function (f) {
        this.children.inorderTraversal(function (childName, childTree) {
            if (childTree.value) {
                f(childName, childTree.value);
            }
        });
    };
    ImmutableTree.Empty = new ImmutableTree(null);
    return ImmutableTree;
}());
exports.ImmutableTree = ImmutableTree;

//# sourceMappingURL=ImmutableTree.js.map


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Change_1 = __webpack_require__(9);
var ChildrenNode_1 = __webpack_require__(4);
var PriorityIndex_1 = __webpack_require__(3);
/**
 * Doesn't really filter nodes but applies an index to the node and keeps track of any changes
 *
 * @constructor
 * @implements {NodeFilter}
 * @param {!Index} index
 */
var IndexedFilter = /** @class */ (function () {
    function IndexedFilter(index_) {
        this.index_ = index_;
    }
    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
        util_1.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');
        var oldChild = snap.getImmediateChild(key);
        // Check if anything actually changed.
        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {
            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.
            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need
            // to avoid treating these cases as "nothing changed."
            if (oldChild.isEmpty() == newChild.isEmpty()) {
                // Nothing changed.
                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.
                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');
                return snap;
            }
        }
        if (optChangeAccumulator != null) {
            if (newChild.isEmpty()) {
                if (snap.hasChild(key)) {
                    optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, oldChild));
                }
                else {
                    util_1.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');
                }
            }
            else if (oldChild.isEmpty()) {
                optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, newChild));
            }
            else {
                optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, newChild, oldChild));
            }
        }
        if (snap.isLeafNode() && newChild.isEmpty()) {
            return snap;
        }
        else {
            // Make sure the node is indexed
            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);
        }
    };
    /**
     * @inheritDoc
     */
    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
        if (optChangeAccumulator != null) {
            if (!oldSnap.isLeafNode()) {
                oldSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
                    if (!newSnap.hasChild(key)) {
                        optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, childNode));
                    }
                });
            }
            if (!newSnap.isLeafNode()) {
                newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
                    if (oldSnap.hasChild(key)) {
                        var oldChild = oldSnap.getImmediateChild(key);
                        if (!oldChild.equals(childNode)) {
                            optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, childNode, oldChild));
                        }
                    }
                    else {
                        optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, childNode));
                    }
                });
            }
        }
        return newSnap.withIndex(this.index_);
    };
    /**
     * @inheritDoc
     */
    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
        if (oldSnap.isEmpty()) {
            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        }
        else {
            return oldSnap.updatePriority(newPriority);
        }
    };
    /**
     * @inheritDoc
     */
    IndexedFilter.prototype.filtersNodes = function () {
        return false;
    };
    /**
     * @inheritDoc
     */
    IndexedFilter.prototype.getIndexedFilter = function () {
        return this;
    };
    /**
     * @inheritDoc
     */
    IndexedFilter.prototype.getIndex = function () {
        return this.index_;
    };
    return IndexedFilter;
}());
exports.IndexedFilter = IndexedFilter;

//# sourceMappingURL=IndexedFilter.js.map


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var StatsCollection_1 = __webpack_require__(99);
var StatsManager = /** @class */ (function () {
    function StatsManager() {
    }
    StatsManager.getCollection = function (repoInfo) {
        var hashString = repoInfo.toString();
        if (!this.collections_[hashString]) {
            this.collections_[hashString] = new StatsCollection_1.StatsCollection();
        }
        return this.collections_[hashString];
    };
    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {
        var hashString = repoInfo.toString();
        if (!this.reporters_[hashString]) {
            this.reporters_[hashString] = creatorFunction();
        }
        return this.reporters_[hashString];
    };
    StatsManager.collections_ = {};
    StatsManager.reporters_ = {};
    return StatsManager;
}());
exports.StatsManager = StatsManager;

//# sourceMappingURL=StatsManager.js.map


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Repo_1 = __webpack_require__(17);
var util_2 = __webpack_require__(1);
var parser_1 = __webpack_require__(33);
var validation_1 = __webpack_require__(7);
__webpack_require__(109);
/** @const {string} */
var DATABASE_URL_OPTION = 'databaseURL';
var _staticInstance;
/**
 * Creates and caches Repo instances.
 */
var RepoManager = /** @class */ (function () {
    function RepoManager() {
        /**
         * @private {!Object.<string, Object<string, !fb.core.Repo>>}
         */
        this.repos_ = {};
        /**
         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).
         * @private {boolean}
         */
        this.useRestClient_ = false;
    }
    RepoManager.getInstance = function () {
        if (!_staticInstance) {
            _staticInstance = new RepoManager();
        }
        return _staticInstance;
    };
    // TODO(koss): Remove these functions unless used in tests?
    RepoManager.prototype.interrupt = function () {
        for (var appName in this.repos_) {
            for (var dbUrl in this.repos_[appName]) {
                this.repos_[appName][dbUrl].interrupt();
            }
        }
    };
    RepoManager.prototype.resume = function () {
        for (var appName in this.repos_) {
            for (var dbUrl in this.repos_[appName]) {
                this.repos_[appName][dbUrl].resume();
            }
        }
    };
    /**
     * This function should only ever be called to CREATE a new database instance.
     *
     * @param {!FirebaseApp} app
     * @return {!Database}
     */
    RepoManager.prototype.databaseFromApp = function (app, url) {
        var dbUrl = url || app.options[DATABASE_URL_OPTION];
        if (dbUrl === undefined) {
            util_2.fatal("Can't determine Firebase Database URL.  Be sure to include " +
                DATABASE_URL_OPTION +
                ' option when calling firebase.intializeApp().');
        }
        var parsedUrl = parser_1.parseRepoInfo(dbUrl);
        var repoInfo = parsedUrl.repoInfo;
        validation_1.validateUrl('Invalid Firebase Database URL', 1, parsedUrl);
        if (!parsedUrl.path.isEmpty()) {
            util_2.fatal('Database URL must point to the root of a Firebase Database ' +
                '(not including a child path).');
        }
        var repo = this.createRepo(repoInfo, app);
        return repo.database;
    };
    /**
     * Remove the repo and make sure it is disconnected.
     *
     * @param {!Repo} repo
     */
    RepoManager.prototype.deleteRepo = function (repo) {
        var appRepos = util_1.safeGet(this.repos_, repo.app.name);
        // This should never happen...
        if (!appRepos || util_1.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {
            util_2.fatal("Database " + repo.app.name + "(" + repo.repoInfo_ + ") has already been deleted.");
        }
        repo.interrupt();
        delete appRepos[repo.repoInfo_.toURLString()];
    };
    /**
     * Ensures a repo doesn't already exist and then creates one using the
     * provided app.
     *
     * @param {!RepoInfo} repoInfo The metadata about the Repo
     * @param {!FirebaseApp} app
     * @return {!Repo} The Repo object for the specified server / repoName.
     */
    RepoManager.prototype.createRepo = function (repoInfo, app) {
        var appRepos = util_1.safeGet(this.repos_, app.name);
        if (!appRepos) {
            appRepos = {};
            this.repos_[app.name] = appRepos;
        }
        var repo = util_1.safeGet(appRepos, repoInfo.toURLString());
        if (repo) {
            util_2.fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');
        }
        repo = new Repo_1.Repo(repoInfo, this.useRestClient_, app);
        appRepos[repoInfo.toURLString()] = repo;
        return repo;
    };
    /**
     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.
     * @param {boolean} forceRestClient
     */
    RepoManager.prototype.forceRestClient = function (forceRestClient) {
        this.useRestClient_ = forceRestClient;
    };
    return RepoManager;
}());
exports.RepoManager = RepoManager;

//# sourceMappingURL=RepoManager.js.map


/***/ }),
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
var parser_1 = __webpack_require__(33);
var Path_1 = __webpack_require__(2);
var Reference_1 = __webpack_require__(21);
var Repo_1 = __webpack_require__(17);
var RepoManager_1 = __webpack_require__(26);
var util_2 = __webpack_require__(0);
var validation_1 = __webpack_require__(7);
/**
 * Class representing a firebase database.
 * @implements {FirebaseService}
 */
var Database = /** @class */ (function () {
    /**
     * The constructor should not be called by users of our public API.
     * @param {!Repo} repo_
     */
    function Database(repo_) {
        this.repo_ = repo_;
        if (!(repo_ instanceof Repo_1.Repo)) {
            util_1.fatal("Don't call new Database() directly - please use firebase.database().");
        }
        /** @type {Reference} */
        this.root_ = new Reference_1.Reference(repo_, Path_1.Path.Empty);
        this.INTERNAL = new DatabaseInternals(this);
    }
    Object.defineProperty(Database.prototype, "app", {
        get: function () {
            return this.repo_.app;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a reference to the root or the path specified in opt_pathString.
     * @param {string=} pathString
     * @return {!Reference} Firebase reference.
     */
    Database.prototype.ref = function (pathString) {
        this.checkDeleted_('ref');
        util_2.validateArgCount('database.ref', 0, 1, arguments.length);
        return pathString !== undefined ? this.root_.child(pathString) : this.root_;
    };
    /**
     * Returns a reference to the root or the path specified in url.
     * We throw a exception if the url is not in the same domain as the
     * current repo.
     * @param {string} url
     * @return {!Reference} Firebase reference.
     */
    Database.prototype.refFromURL = function (url) {
        /** @const {string} */
        var apiName = 'database.refFromURL';
        this.checkDeleted_(apiName);
        util_2.validateArgCount(apiName, 1, 1, arguments.length);
        var parsedURL = parser_1.parseRepoInfo(url);
        validation_1.validateUrl(apiName, 1, parsedURL);
        var repoInfo = parsedURL.repoInfo;
        if (repoInfo.host !== this.repo_.repoInfo_.host) {
            util_1.fatal(apiName +
                ': Host name does not match the current database: ' +
                '(found ' +
                repoInfo.host +
                ' but expected ' +
                this.repo_.repoInfo_.host +
                ')');
        }
        return this.ref(parsedURL.path.toString());
    };
    /**
     * @param {string} apiName
     */
    Database.prototype.checkDeleted_ = function (apiName) {
        if (this.repo_ === null) {
            util_1.fatal('Cannot call ' + apiName + ' on a deleted database.');
        }
    };
    // Make individual repo go offline.
    Database.prototype.goOffline = function () {
        util_2.validateArgCount('database.goOffline', 0, 0, arguments.length);
        this.checkDeleted_('goOffline');
        this.repo_.interrupt();
    };
    Database.prototype.goOnline = function () {
        util_2.validateArgCount('database.goOnline', 0, 0, arguments.length);
        this.checkDeleted_('goOnline');
        this.repo_.resume();
    };
    Database.ServerValue = {
        TIMESTAMP: {
            '.sv': 'timestamp'
        }
    };
    return Database;
}());
exports.Database = Database;
var DatabaseInternals = /** @class */ (function () {
    /** @param {!Database} database */
    function DatabaseInternals(database) {
        this.database = database;
    }
    /** @return {Promise<void>} */
    DatabaseInternals.prototype.delete = function () {
        this.database.checkDeleted_('delete');
        RepoManager_1.RepoManager.getInstance().deleteRepo(this.database.repo_);
        this.database.repo_ = null;
        this.database.root_ = null;
        this.database.INTERNAL = null;
        this.database = null;
        return Promise.resolve();
    };
    return DatabaseInternals;
}());
exports.DatabaseInternals = DatabaseInternals;

//# sourceMappingURL=Database.js.map


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Path_1 = __webpack_require__(2);
var RepoInfo_1 = __webpack_require__(34);
var util_1 = __webpack_require__(1);
/**
 * @param {!string} pathString
 * @return {string}
 */
function decodePath(pathString) {
    var pathStringDecoded = '';
    var pieces = pathString.split('/');
    for (var i = 0; i < pieces.length; i++) {
        if (pieces[i].length > 0) {
            var piece = pieces[i];
            try {
                piece = decodeURIComponent(piece.replace(/\+/g, ' '));
            }
            catch (e) { }
            pathStringDecoded += '/' + piece;
        }
    }
    return pathStringDecoded;
}
/**
 *
 * @param {!string} dataURL
 * @return {{repoInfo: !RepoInfo, path: !Path}}
 */
exports.parseRepoInfo = function (dataURL) {
    var parsedUrl = exports.parseURL(dataURL), namespace = parsedUrl.subdomain;
    if (parsedUrl.domain === 'firebase') {
        util_1.fatal(parsedUrl.host +
            ' is no longer supported. ' +
            'Please use <YOUR FIREBASE>.firebaseio.com instead');
    }
    // Catch common error of uninitialized namespace value.
    if (!namespace || namespace == 'undefined') {
        util_1.fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');
    }
    if (!parsedUrl.secure) {
        util_1.warnIfPageIsSecure();
    }
    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';
    return {
        repoInfo: new RepoInfo_1.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),
        path: new Path_1.Path(parsedUrl.pathString)
    };
};
/**
 *
 * @param {!string} dataURL
 * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}
 */
exports.parseURL = function (dataURL) {
    // Default to empty strings in the event of a malformed string.
    var host = '', domain = '', subdomain = '', pathString = '';
    // Always default to SSL, unless otherwise specified.
    var secure = true, scheme = 'https', port = 443;
    // Don't do any validation here. The caller is responsible for validating the result of parsing.
    if (typeof dataURL === 'string') {
        // Parse scheme.
        var colonInd = dataURL.indexOf('//');
        if (colonInd >= 0) {
            scheme = dataURL.substring(0, colonInd - 1);
            dataURL = dataURL.substring(colonInd + 2);
        }
        // Parse host and path.
        var slashInd = dataURL.indexOf('/');
        if (slashInd === -1) {
            slashInd = dataURL.length;
        }
        host = dataURL.substring(0, slashInd);
        pathString = decodePath(dataURL.substring(slashInd));
        var parts = host.split('.');
        if (parts.length === 3) {
            // Normalize namespaces to lowercase to share storage / connection.
            domain = parts[1];
            subdomain = parts[0].toLowerCase();
        }
        else if (parts.length === 2) {
            domain = parts[0];
        }
        // If we have a port, use scheme for determining if it's secure.
        colonInd = host.indexOf(':');
        if (colonInd >= 0) {
            secure = scheme === 'https' || scheme === 'wss';
            port = parseInt(host.substring(colonInd + 1), 10);
        }
    }
    return {
        host: host,
        port: port,
        domain: domain,
        subdomain: subdomain,
        secure: secure,
        scheme: scheme,
        pathString: pathString
    };
};

//# sourceMappingURL=parser.js.map


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var storage_1 = __webpack_require__(12);
var Constants_1 = __webpack_require__(13);
/**
 * A class that holds metadata about a Repo object
 *
 * @constructor
 */
var RepoInfo = /** @class */ (function () {
    /**
     * @param {string} host Hostname portion of the url for the repo
     * @param {boolean} secure Whether or not this repo is accessed over ssl
     * @param {string} namespace The namespace represented by the repo
     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).
     * @param {string=} persistenceKey Override the default session persistence storage key
     */
    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {
        if (persistenceKey === void 0) { persistenceKey = ''; }
        this.secure = secure;
        this.namespace = namespace;
        this.webSocketOnly = webSocketOnly;
        this.persistenceKey = persistenceKey;
        this.host = host.toLowerCase();
        this.domain = this.host.substr(this.host.indexOf('.') + 1);
        this.internalHost = storage_1.PersistentStorage.get('host:' + host) || this.host;
    }
    RepoInfo.prototype.needsQueryParam = function () {
        return this.host !== this.internalHost;
    };
    RepoInfo.prototype.isCacheableHost = function () {
        return this.internalHost.substr(0, 2) === 's-';
    };
    RepoInfo.prototype.isDemoHost = function () {
        return this.domain === 'firebaseio-demo.com';
    };
    RepoInfo.prototype.isCustomHost = function () {
        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');
    };
    RepoInfo.prototype.updateHost = function (newHost) {
        if (newHost !== this.internalHost) {
            this.internalHost = newHost;
            if (this.isCacheableHost()) {
                storage_1.PersistentStorage.set('host:' + this.host, this.internalHost);
            }
        }
    };
    /**
     * Returns the websocket URL for this repo
     * @param {string} type of connection
     * @param {Object} params list
     * @return {string} The URL for this repo
     */
    RepoInfo.prototype.connectionURL = function (type, params) {
        util_1.assert(typeof type === 'string', 'typeof type must == string');
        util_1.assert(typeof params === 'object', 'typeof params must == object');
        var connURL;
        if (type === Constants_1.WEBSOCKET) {
            connURL =
                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';
        }
        else if (type === Constants_1.LONG_POLLING) {
            connURL =
                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';
        }
        else {
            throw new Error('Unknown connection type: ' + type);
        }
        if (this.needsQueryParam()) {
            params['ns'] = this.namespace;
        }
        var pairs = [];
        util_2.forEach(params, function (key, value) {
            pairs.push(key + '=' + value);
        });
        return connURL + pairs.join('&');
    };
    /** @return {string} */
    RepoInfo.prototype.toString = function () {
        var str = this.toURLString();
        if (this.persistenceKey) {
            str += '<' + this.persistenceKey + '>';
        }
        return str;
    };
    /** @return {string} */
    RepoInfo.prototype.toURLString = function () {
        return (this.secure ? 'https://' : 'http://') + this.host;
    };
    return RepoInfo;
}());
exports.RepoInfo = RepoInfo;

//# sourceMappingURL=RepoInfo.js.map


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var validation_1 = __webpack_require__(7);
var util_2 = __webpack_require__(1);
var util_3 = __webpack_require__(0);
/**
 * @constructor
 */
var OnDisconnect = /** @class */ (function () {
    /**
     * @param {!Repo} repo_
     * @param {!Path} path_
     */
    function OnDisconnect(repo_, path_) {
        this.repo_ = repo_;
        this.path_ = path_;
    }
    /**
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */
    OnDisconnect.prototype.cancel = function (onComplete) {
        util_1.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);
        util_1.validateCallback('OnDisconnect.cancel', 1, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */
    OnDisconnect.prototype.remove = function (onComplete) {
        util_1.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);
        validation_1.validateWritablePath('OnDisconnect.remove', this.path_);
        util_1.validateCallback('OnDisconnect.remove', 1, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {*} value
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */
    OnDisconnect.prototype.set = function (value, onComplete) {
        util_1.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);
        validation_1.validateWritablePath('OnDisconnect.set', this.path_);
        validation_1.validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);
        util_1.validateCallback('OnDisconnect.set', 2, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {*} value
     * @param {number|string|null} priority
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */
    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {
        util_1.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);
        validation_1.validateWritablePath('OnDisconnect.setWithPriority', this.path_);
        validation_1.validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);
        validation_1.validatePriority('OnDisconnect.setWithPriority', 2, priority, false);
        util_1.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    /**
     * @param {!Object} objectToMerge
     * @param {function(?Error)=} onComplete
     * @return {!firebase.Promise}
     */
    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {
        util_1.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);
        validation_1.validateWritablePath('OnDisconnect.update', this.path_);
        if (Array.isArray(objectToMerge)) {
            var newObjectToMerge = {};
            for (var i = 0; i < objectToMerge.length; ++i) {
                newObjectToMerge['' + i] = objectToMerge[i];
            }
            objectToMerge = newObjectToMerge;
            util_2.warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +
                'existing data, or an Object with integer keys if you really do want to only update some of the children.');
        }
        validation_1.validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);
        util_1.validateCallback('OnDisconnect.update', 2, onComplete, true);
        var deferred = new util_3.Deferred();
        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));
        return deferred.promise;
    };
    return OnDisconnect;
}());
exports.OnDisconnect = OnDisconnect;

//# sourceMappingURL=onDisconnect.js.map


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var KeyIndex_1 = __webpack_require__(10);
var PriorityIndex_1 = __webpack_require__(3);
var ValueIndex_1 = __webpack_require__(38);
var PathIndex_1 = __webpack_require__(42);
var util_2 = __webpack_require__(1);
var Path_1 = __webpack_require__(2);
var validation_1 = __webpack_require__(7);
var util_3 = __webpack_require__(0);
var EventRegistration_1 = __webpack_require__(84);
var util_4 = __webpack_require__(0);
var __referenceConstructor;
/**
 * A Query represents a filter to be applied to a firebase location.  This object purely represents the
 * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.
 *
 * Since every Firebase reference is a query, Firebase inherits from this object.
 */
var Query = /** @class */ (function () {
    function Query(repo, path, queryParams_, orderByCalled_) {
        this.repo = repo;
        this.path = path;
        this.queryParams_ = queryParams_;
        this.orderByCalled_ = orderByCalled_;
    }
    Object.defineProperty(Query, "__referenceConstructor", {
        get: function () {
            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');
            return __referenceConstructor;
        },
        set: function (val) {
            __referenceConstructor = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Validates start/end values for queries.
     * @param {!QueryParams} params
     * @private
     */
    Query.validateQueryEndpoints_ = function (params) {
        var startNode = null;
        var endNode = null;
        if (params.hasStart()) {
            startNode = params.getIndexStartValue();
        }
        if (params.hasEnd()) {
            endNode = params.getIndexEndValue();
        }
        if (params.getIndex() === KeyIndex_1.KEY_INDEX) {
            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +
                'startAt(), endAt(), or equalTo().';
            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +
                'or equalTo() must be a string.';
            if (params.hasStart()) {
                var startName = params.getIndexStartName();
                if (startName != util_2.MIN_NAME) {
                    throw new Error(tooManyArgsError);
                }
                else if (typeof startNode !== 'string') {
                    throw new Error(wrongArgTypeError);
                }
            }
            if (params.hasEnd()) {
                var endName = params.getIndexEndName();
                if (endName != util_2.MAX_NAME) {
                    throw new Error(tooManyArgsError);
                }
                else if (typeof endNode !== 'string') {
                    throw new Error(wrongArgTypeError);
                }
            }
        }
        else if (params.getIndex() === PriorityIndex_1.PRIORITY_INDEX) {
            if ((startNode != null && !validation_1.isValidPriority(startNode)) ||
                (endNode != null && !validation_1.isValidPriority(endNode))) {
                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +
                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');
            }
        }
        else {
            util_1.assert(params.getIndex() instanceof PathIndex_1.PathIndex ||
                params.getIndex() === ValueIndex_1.VALUE_INDEX, 'unknown index type.');
            if ((startNode != null && typeof startNode === 'object') ||
                (endNode != null && typeof endNode === 'object')) {
                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +
                    'an object.');
            }
        }
    };
    /**
     * Validates that limit* has been called with the correct combination of parameters
     * @param {!QueryParams} params
     * @private
     */
    Query.validateLimit_ = function (params) {
        if (params.hasStart() &&
            params.hasEnd() &&
            params.hasLimit() &&
            !params.hasAnchoredLimit()) {
            throw new Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");
        }
    };
    /**
     * Validates that no other order by call has been made
     * @param {!string} fnName
     * @private
     */
    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {
        if (this.orderByCalled_ === true) {
            throw new Error(fnName + ": You can't combine multiple orderBy calls.");
        }
    };
    /**
     * @return {!QueryParams}
     */
    Query.prototype.getQueryParams = function () {
        return this.queryParams_;
    };
    /**
     * @return {!Reference}
     */
    Query.prototype.getRef = function () {
        util_3.validateArgCount('Query.ref', 0, 0, arguments.length);
        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.
        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this
        // method gets called.
        return new Query.__referenceConstructor(this.repo, this.path);
    };
    /**
     * @param {!string} eventType
     * @param {!function(DataSnapshot, string=)} callback
     * @param {(function(Error)|Object)=} cancelCallbackOrContext
     * @param {Object=} context
     * @return {!function(DataSnapshot, string=)}
     */
    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {
        util_3.validateArgCount('Query.on', 2, 4, arguments.length);
        validation_1.validateEventType('Query.on', 1, eventType, false);
        util_3.validateCallback('Query.on', 2, callback, false);
        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);
        if (eventType === 'value') {
            this.onValueEvent(callback, ret.cancel, ret.context);
        }
        else {
            var callbacks = {};
            callbacks[eventType] = callback;
            this.onChildEvent(callbacks, ret.cancel, ret.context);
        }
        return callback;
    };
    /**
     * @param {!function(!DataSnapshot)} callback
     * @param {?function(Error)} cancelCallback
     * @param {?Object} context
     * @protected
     */
    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {
        var container = new EventRegistration_1.ValueEventRegistration(callback, cancelCallback || null, context || null);
        this.repo.addEventCallbackForQuery(this, container);
    };
    /**
     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks
     * @param {?function(Error)} cancelCallback
     * @param {?Object} context
     * @protected
     */
    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {
        var container = new EventRegistration_1.ChildEventRegistration(callbacks, cancelCallback, context);
        this.repo.addEventCallbackForQuery(this, container);
    };
    /**
     * @param {string=} eventType
     * @param {(function(!DataSnapshot, ?string=))=} callback
     * @param {Object=} context
     */
    Query.prototype.off = function (eventType, callback, context) {
        util_3.validateArgCount('Query.off', 0, 3, arguments.length);
        validation_1.validateEventType('Query.off', 1, eventType, true);
        util_3.validateCallback('Query.off', 2, callback, true);
        util_3.validateContextObject('Query.off', 3, context, true);
        var container = null;
        var callbacks = null;
        if (eventType === 'value') {
            var valueCallback = callback || null;
            container = new EventRegistration_1.ValueEventRegistration(valueCallback, null, context || null);
        }
        else if (eventType) {
            if (callback) {
                callbacks = {};
                callbacks[eventType] = callback;
            }
            container = new EventRegistration_1.ChildEventRegistration(callbacks, null, context || null);
        }
        this.repo.removeEventCallbackForQuery(this, container);
    };
    /**
     * Attaches a listener, waits for the first event, and then removes the listener
     * @param {!string} eventType
     * @param {!function(!DataSnapshot, string=)} userCallback
     * @param cancelOrContext
     * @param context
     * @return {!firebase.Promise}
     */
    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {
        var _this = this;
        util_3.validateArgCount('Query.once', 1, 4, arguments.length);
        validation_1.validateEventType('Query.once', 1, eventType, false);
        util_3.validateCallback('Query.once', 2, userCallback, true);
        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);
        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)
        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change
        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is
        // against the Promise specification.
        var firstCall = true;
        var deferred = new util_4.Deferred();
        // A dummy error handler in case a user wasn't expecting promises
        deferred.promise.catch(function () { });
        var onceCallback = function (snapshot) {
            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)
            // triggers multiple events (e.g. child_added or child_changed).
            if (firstCall) {
                firstCall = false;
                _this.off(eventType, onceCallback);
                if (userCallback) {
                    userCallback.bind(ret.context)(snapshot);
                }
                deferred.resolve(snapshot);
            }
        };
        this.on(eventType, onceCallback, 
        /*cancel=*/ function (err) {
            _this.off(eventType, onceCallback);
            if (ret.cancel)
                ret.cancel.bind(ret.context)(err);
            deferred.reject(err);
        });
        return deferred.promise;
    };
    /**
     * Set a limit and anchor it to the start of the window.
     * @param {!number} limit
     * @return {!Query}
     */
    Query.prototype.limitToFirst = function (limit) {
        util_3.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);
        if (typeof limit !== 'number' ||
            Math.floor(limit) !== limit ||
            limit <= 0) {
            throw new Error('Query.limitToFirst: First argument must be a positive integer.');
        }
        if (this.queryParams_.hasLimit()) {
            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +
                'limitToFirst, or limitToLast).');
        }
        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);
    };
    /**
     * Set a limit and anchor it to the end of the window.
     * @param {!number} limit
     * @return {!Query}
     */
    Query.prototype.limitToLast = function (limit) {
        util_3.validateArgCount('Query.limitToLast', 1, 1, arguments.length);
        if (typeof limit !== 'number' ||
            Math.floor(limit) !== limit ||
            limit <= 0) {
            throw new Error('Query.limitToLast: First argument must be a positive integer.');
        }
        if (this.queryParams_.hasLimit()) {
            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +
                'limitToFirst, or limitToLast).');
        }
        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);
    };
    /**
     * Given a child path, return a new query ordered by the specified grandchild path.
     * @param {!string} path
     * @return {!Query}
     */
    Query.prototype.orderByChild = function (path) {
        util_3.validateArgCount('Query.orderByChild', 1, 1, arguments.length);
        if (path === '$key') {
            throw new Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');
        }
        else if (path === '$priority') {
            throw new Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');
        }
        else if (path === '$value') {
            throw new Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');
        }
        validation_1.validatePathString('Query.orderByChild', 1, path, false);
        this.validateNoPreviousOrderByCall_('Query.orderByChild');
        var parsedPath = new Path_1.Path(path);
        if (parsedPath.isEmpty()) {
            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');
        }
        var index = new PathIndex_1.PathIndex(parsedPath);
        var newParams = this.queryParams_.orderBy(index);
        Query.validateQueryEndpoints_(newParams);
        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);
    };
    /**
     * Return a new query ordered by the KeyIndex
     * @return {!Query}
     */
    Query.prototype.orderByKey = function () {
        util_3.validateArgCount('Query.orderByKey', 0, 0, arguments.length);
        this.validateNoPreviousOrderByCall_('Query.orderByKey');
        var newParams = this.queryParams_.orderBy(KeyIndex_1.KEY_INDEX);
        Query.validateQueryEndpoints_(newParams);
        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);
    };
    /**
     * Return a new query ordered by the PriorityIndex
     * @return {!Query}
     */
    Query.prototype.orderByPriority = function () {
        util_3.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);
        this.validateNoPreviousOrderByCall_('Query.orderByPriority');
        var newParams = this.queryParams_.orderBy(PriorityIndex_1.PRIORITY_INDEX);
        Query.validateQueryEndpoints_(newParams);
        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);
    };
    /**
     * Return a new query ordered by the ValueIndex
     * @return {!Query}
     */
    Query.prototype.orderByValue = function () {
        util_3.validateArgCount('Query.orderByValue', 0, 0, arguments.length);
        this.validateNoPreviousOrderByCall_('Query.orderByValue');
        var newParams = this.queryParams_.orderBy(ValueIndex_1.VALUE_INDEX);
        Query.validateQueryEndpoints_(newParams);
        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);
    };
    /**
     * @param {number|string|boolean|null} value
     * @param {?string=} name
     * @return {!Query}
     */
    Query.prototype.startAt = function (value, name) {
        if (value === void 0) { value = null; }
        util_3.validateArgCount('Query.startAt', 0, 2, arguments.length);
        validation_1.validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);
        validation_1.validateKey('Query.startAt', 2, name, true);
        var newParams = this.queryParams_.startAt(value, name);
        Query.validateLimit_(newParams);
        Query.validateQueryEndpoints_(newParams);
        if (this.queryParams_.hasStart()) {
            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +
                'or equalTo).');
        }
        // Calling with no params tells us to start at the beginning.
        if (value === undefined) {
            value = null;
            name = null;
        }
        return new Query(this.repo, this.path, newParams, this.orderByCalled_);
    };
    /**
     * @param {number|string|boolean|null} value
     * @param {?string=} name
     * @return {!Query}
     */
    Query.prototype.endAt = function (value, name) {
        if (value === void 0) { value = null; }
        util_3.validateArgCount('Query.endAt', 0, 2, arguments.length);
        validation_1.validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);
        validation_1.validateKey('Query.endAt', 2, name, true);
        var newParams = this.queryParams_.endAt(value, name);
        Query.validateLimit_(newParams);
        Query.validateQueryEndpoints_(newParams);
        if (this.queryParams_.hasEnd()) {
            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +
                'equalTo).');
        }
        return new Query(this.repo, this.path, newParams, this.orderByCalled_);
    };
    /**
     * Load the selection of children with exactly the specified value, and, optionally,
     * the specified name.
     * @param {number|string|boolean|null} value
     * @param {string=} name
     * @return {!Query}
     */
    Query.prototype.equalTo = function (value, name) {
        util_3.validateArgCount('Query.equalTo', 1, 2, arguments.length);
        validation_1.validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);
        validation_1.validateKey('Query.equalTo', 2, name, true);
        if (this.queryParams_.hasStart()) {
            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +
                'equalTo).');
        }
        if (this.queryParams_.hasEnd()) {
            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +
                'equalTo).');
        }
        return this.startAt(value, name).endAt(value, name);
    };
    /**
     * @return {!string} URL for this location.
     */
    Query.prototype.toString = function () {
        util_3.validateArgCount('Query.toString', 0, 0, arguments.length);
        return this.repo.toString() + this.path.toUrlEncodedString();
    };
    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
    // for end-users.
    Query.prototype.toJSON = function () {
        // An optional spacer argument is unnecessary for a string.
        util_3.validateArgCount('Query.toJSON', 0, 1, arguments.length);
        return this.toString();
    };
    /**
     * An object representation of the query parameters used by this Query.
     * @return {!Object}
     */
    Query.prototype.queryObject = function () {
        return this.queryParams_.getQueryObject();
    };
    /**
     * @return {!string}
     */
    Query.prototype.queryIdentifier = function () {
        var obj = this.queryObject();
        var id = util_2.ObjectToUniqueKey(obj);
        return id === '{}' ? 'default' : id;
    };
    /**
     * Return true if this query and the provided query are equivalent; otherwise, return false.
     * @param {Query} other
     * @return {boolean}
     */
    Query.prototype.isEqual = function (other) {
        util_3.validateArgCount('Query.isEqual', 1, 1, arguments.length);
        if (!(other instanceof Query)) {
            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';
            throw new Error(error);
        }
        var sameRepo = this.repo === other.repo;
        var samePath = this.path.equals(other.path);
        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();
        return sameRepo && samePath && sameQueryIdentifier;
    };
    /**
     * Helper used by .on and .once to extract the context and or cancel arguments.
     * @param {!string} fnName The function name (on or once)
     * @param {(function(Error)|Object)=} cancelOrContext
     * @param {Object=} context
     * @return {{cancel: ?function(Error), context: ?Object}}
     * @private
     */
    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {
        var ret = { cancel: null, context: null };
        if (cancelOrContext && context) {
            ret.cancel = cancelOrContext;
            util_3.validateCallback(fnName, 3, ret.cancel, true);
            ret.context = context;
            util_3.validateContextObject(fnName, 4, ret.context, true);
        }
        else if (cancelOrContext) {
            // we have either a cancel callback or a context.
            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {
                // it's a context!
                ret.context = cancelOrContext;
            }
            else if (typeof cancelOrContext === 'function') {
                ret.cancel = cancelOrContext;
            }
            else {
                throw new Error(util_3.errorPrefix(fnName, 3, true) +
                    ' must either be a cancel callback or a context object.');
            }
        }
        return ret;
    };
    Object.defineProperty(Query.prototype, "ref", {
        get: function () {
            return this.getRef();
        },
        enumerable: true,
        configurable: true
    });
    return Query;
}());
exports.Query = Query;

//# sourceMappingURL=Query.js.map


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var util_3 = __webpack_require__(0);
var MAX_NODE;
function setMaxNode(val) {
    MAX_NODE = val;
}
exports.setMaxNode = setMaxNode;
/**
 * @param {(!string|!number)} priority
 * @return {!string}
 */
exports.priorityHashText = function (priority) {
    if (typeof priority === 'number')
        return 'number:' + util_2.doubleToIEEE754String(priority);
    else
        return 'string:' + priority;
};
/**
 * Validates that a priority snapshot Node is valid.
 *
 * @param {!Node} priorityNode
 */
exports.validatePriorityNode = function (priorityNode) {
    if (priorityNode.isLeafNode()) {
        var val = priorityNode.val();
        util_1.assert(typeof val === 'string' ||
            typeof val === 'number' ||
            (typeof val === 'object' && util_3.contains(val, '.sv')), 'Priority must be a string or number.');
    }
    else {
        util_1.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');
    }
    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.
    util_1.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), "Priority nodes can't have a priority of their own.");
};

//# sourceMappingURL=snap.js.map


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Index_1 = __webpack_require__(14);
var Node_1 = __webpack_require__(5);
var util_1 = __webpack_require__(1);
var nodeFromJSON_1 = __webpack_require__(11);
/**
 * @constructor
 * @extends {Index}
 * @private
 */
var ValueIndex = /** @class */ (function (_super) {
    __extends(ValueIndex, _super);
    function ValueIndex() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @inheritDoc
     */
    ValueIndex.prototype.compare = function (a, b) {
        var indexCmp = a.node.compareTo(b.node);
        if (indexCmp === 0) {
            return util_1.nameCompare(a.name, b.name);
        }
        else {
            return indexCmp;
        }
    };
    /**
     * @inheritDoc
     */
    ValueIndex.prototype.isDefinedOn = function (node) {
        return true;
    };
    /**
     * @inheritDoc
     */
    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
        return !oldNode.equals(newNode);
    };
    /**
     * @inheritDoc
     */
    ValueIndex.prototype.minPost = function () {
        return Node_1.NamedNode.MIN;
    };
    /**
     * @inheritDoc
     */
    ValueIndex.prototype.maxPost = function () {
        return Node_1.NamedNode.MAX;
    };
    /**
     * @param {*} indexValue
     * @param {string} name
     * @return {!NamedNode}
     */
    ValueIndex.prototype.makePost = function (indexValue, name) {
        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);
        return new Node_1.NamedNode(name, valueNode);
    };
    /**
     * @return {!string} String representation for inclusion in a query spec
     */
    ValueIndex.prototype.toString = function () {
        return '.value';
    };
    return ValueIndex;
}(Index_1.Index));
exports.ValueIndex = ValueIndex;
exports.VALUE_INDEX = new ValueIndex();

//# sourceMappingURL=ValueIndex.js.map


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var childSet_1 = __webpack_require__(40);
var util_2 = __webpack_require__(0);
var Node_1 = __webpack_require__(5);
var PriorityIndex_1 = __webpack_require__(3);
var KeyIndex_1 = __webpack_require__(10);
var _defaultIndexMap;
var fallbackObject = {};
/**
 *
 * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes
 * @param {Object.<string, Index>} indexSet
 * @constructor
 */
var IndexMap = /** @class */ (function () {
    function IndexMap(indexes_, indexSet_) {
        this.indexes_ = indexes_;
        this.indexSet_ = indexSet_;
    }
    Object.defineProperty(IndexMap, "Default", {
        /**
         * The default IndexMap for nodes without a priority
         * @type {!IndexMap}
         * @const
         */
        get: function () {
            util_1.assert(fallbackObject && PriorityIndex_1.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');
            _defaultIndexMap =
                _defaultIndexMap ||
                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PriorityIndex_1.PRIORITY_INDEX });
            return _defaultIndexMap;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     * @param {!string} indexKey
     * @return {?SortedMap.<NamedNode, Node>}
     */
    IndexMap.prototype.get = function (indexKey) {
        var sortedMap = util_2.safeGet(this.indexes_, indexKey);
        if (!sortedMap)
            throw new Error('No index defined for ' + indexKey);
        if (sortedMap === fallbackObject) {
            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the
            // regular child map
            return null;
        }
        else {
            return sortedMap;
        }
    };
    /**
     * @param {!Index} indexDefinition
     * @return {boolean}
     */
    IndexMap.prototype.hasIndex = function (indexDefinition) {
        return util_2.contains(this.indexSet_, indexDefinition.toString());
    };
    /**
     * @param {!Index} indexDefinition
     * @param {!SortedMap.<string, !Node>} existingChildren
     * @return {!IndexMap}
     */
    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {
        util_1.assert(indexDefinition !== KeyIndex_1.KEY_INDEX, "KeyIndex always exists and isn't meant to be added to the IndexMap.");
        var childList = [];
        var sawIndexedValue = false;
        var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);
        var next = iter.getNext();
        while (next) {
            sawIndexedValue =
                sawIndexedValue || indexDefinition.isDefinedOn(next.node);
            childList.push(next);
            next = iter.getNext();
        }
        var newIndex;
        if (sawIndexedValue) {
            newIndex = childSet_1.buildChildSet(childList, indexDefinition.getCompare());
        }
        else {
            newIndex = fallbackObject;
        }
        var indexName = indexDefinition.toString();
        var newIndexSet = util_2.clone(this.indexSet_);
        newIndexSet[indexName] = indexDefinition;
        var newIndexes = util_2.clone(this.indexes_);
        newIndexes[indexName] = newIndex;
        return new IndexMap(newIndexes, newIndexSet);
    };
    /**
     * Ensure that this node is properly tracked in any indexes that we're maintaining
     * @param {!NamedNode} namedNode
     * @param {!SortedMap.<string, !Node>} existingChildren
     * @return {!IndexMap}
     */
    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {
        var _this = this;
        var newIndexes = util_2.map(this.indexes_, function (indexedChildren, indexName) {
            var index = util_2.safeGet(_this.indexSet_, indexName);
            util_1.assert(index, 'Missing index implementation for ' + indexName);
            if (indexedChildren === fallbackObject) {
                // Check to see if we need to index everything
                if (index.isDefinedOn(namedNode.node)) {
                    // We need to build this index
                    var childList = [];
                    var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);
                    var next = iter.getNext();
                    while (next) {
                        if (next.name != namedNode.name) {
                            childList.push(next);
                        }
                        next = iter.getNext();
                    }
                    childList.push(namedNode);
                    return childSet_1.buildChildSet(childList, index.getCompare());
                }
                else {
                    // No change, this remains a fallback
                    return fallbackObject;
                }
            }
            else {
                var existingSnap = existingChildren.get(namedNode.name);
                var newChildren = indexedChildren;
                if (existingSnap) {
                    newChildren = newChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));
                }
                return newChildren.insert(namedNode, namedNode.node);
            }
        });
        return new IndexMap(newIndexes, this.indexSet_);
    };
    /**
     * Create a new IndexMap instance with the given value removed
     * @param {!NamedNode} namedNode
     * @param {!SortedMap.<string, !Node>} existingChildren
     * @return {!IndexMap}
     */
    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {
        var newIndexes = util_2.map(this.indexes_, function (indexedChildren) {
            if (indexedChildren === fallbackObject) {
                // This is the fallback. Just return it, nothing to do in this case
                return indexedChildren;
            }
            else {
                var existingSnap = existingChildren.get(namedNode.name);
                if (existingSnap) {
                    return indexedChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));
                }
                else {
                    // No record of this child
                    return indexedChildren;
                }
            }
        });
        return new IndexMap(newIndexes, this.indexSet_);
    };
    return IndexMap;
}());
exports.IndexMap = IndexMap;

//# sourceMappingURL=IndexMap.js.map


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var SortedMap_1 = __webpack_require__(16);
var SortedMap_2 = __webpack_require__(16);
var LOG_2 = Math.log(2);
/**
 * @constructor
 */
var Base12Num = /** @class */ (function () {
    /**
     * @param {number} length
     */
    function Base12Num(length) {
        var logBase2 = function (num) {
            return parseInt((Math.log(num) / LOG_2), 10);
        };
        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };
        this.count = logBase2(length + 1);
        this.current_ = this.count - 1;
        var mask = bitMask(this.count);
        this.bits_ = (length + 1) & mask;
    }
    /**
     * @return {boolean}
     */
    Base12Num.prototype.nextBitIsOne = function () {
        //noinspection JSBitwiseOperatorUsage
        var result = !(this.bits_ & (0x1 << this.current_));
        this.current_--;
        return result;
    };
    return Base12Num;
}());
/**
 * Takes a list of child nodes and constructs a SortedSet using the given comparison
 * function
 *
 * Uses the algorithm described in the paper linked here:
 * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458
 *
 * @template K, V
 * @param {Array.<!NamedNode>} childList Unsorted list of children
 * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used
 * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's
 *                                                        type is not NamedNode
 * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map
 * @return {SortedMap.<K, V>}
 */
exports.buildChildSet = function (childList, cmp, keyFn, mapSortFn) {
    childList.sort(cmp);
    var buildBalancedTree = function (low, high) {
        var length = high - low;
        var namedNode;
        var key;
        if (length == 0) {
            return null;
        }
        else if (length == 1) {
            namedNode = childList[low];
            key = keyFn ? keyFn(namedNode) : namedNode;
            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, null, null);
        }
        else {
            var middle = parseInt((length / 2), 10) + low;
            var left = buildBalancedTree(low, middle);
            var right = buildBalancedTree(middle + 1, high);
            namedNode = childList[middle];
            key = keyFn ? keyFn(namedNode) : namedNode;
            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, left, right);
        }
    };
    var buildFrom12Array = function (base12) {
        var node = null;
        var root = null;
        var index = childList.length;
        var buildPennant = function (chunkSize, color) {
            var low = index - chunkSize;
            var high = index;
            index -= chunkSize;
            var childTree = buildBalancedTree(low + 1, high);
            var namedNode = childList[low];
            var key = keyFn ? keyFn(namedNode) : namedNode;
            attachPennant(new SortedMap_1.LLRBNode(key, namedNode.node, color, null, childTree));
        };
        var attachPennant = function (pennant) {
            if (node) {
                node.left = pennant;
                node = pennant;
            }
            else {
                root = pennant;
                node = pennant;
            }
        };
        for (var i = 0; i < base12.count; ++i) {
            var isOne = base12.nextBitIsOne();
            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))
            var chunkSize = Math.pow(2, base12.count - (i + 1));
            if (isOne) {
                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);
            }
            else {
                // current == 2
                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);
                buildPennant(chunkSize, SortedMap_1.LLRBNode.RED);
            }
        }
        return root;
    };
    var base12 = new Base12Num(childList.length);
    var root = buildFrom12Array(base12);
    return new SortedMap_2.SortedMap(mapSortFn || cmp, root);
};

//# sourceMappingURL=childSet.js.map


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
function NAME_ONLY_COMPARATOR(left, right) {
    return util_1.nameCompare(left.name, right.name);
}
exports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;
function NAME_COMPARATOR(left, right) {
    return util_1.nameCompare(left, right);
}
exports.NAME_COMPARATOR = NAME_COMPARATOR;

//# sourceMappingURL=comparators.js.map


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var Index_1 = __webpack_require__(14);
var ChildrenNode_1 = __webpack_require__(4);
var Node_1 = __webpack_require__(5);
var nodeFromJSON_1 = __webpack_require__(11);
/**
 * @param {!Path} indexPath
 * @constructor
 * @extends {Index}
 */
var PathIndex = /** @class */ (function (_super) {
    __extends(PathIndex, _super);
    function PathIndex(indexPath_) {
        var _this = _super.call(this) || this;
        _this.indexPath_ = indexPath_;
        util_1.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', "Can't create PathIndex with empty path or .priority key");
        return _this;
    }
    /**
     * @param {!Node} snap
     * @return {!Node}
     * @protected
     */
    PathIndex.prototype.extractChild = function (snap) {
        return snap.getChild(this.indexPath_);
    };
    /**
     * @inheritDoc
     */
    PathIndex.prototype.isDefinedOn = function (node) {
        return !node.getChild(this.indexPath_).isEmpty();
    };
    /**
     * @inheritDoc
     */
    PathIndex.prototype.compare = function (a, b) {
        var aChild = this.extractChild(a.node);
        var bChild = this.extractChild(b.node);
        var indexCmp = aChild.compareTo(bChild);
        if (indexCmp === 0) {
            return util_2.nameCompare(a.name, b.name);
        }
        else {
            return indexCmp;
        }
    };
    /**
     * @inheritDoc
     */
    PathIndex.prototype.makePost = function (indexValue, name) {
        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);
        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);
        return new Node_1.NamedNode(name, node);
    };
    /**
     * @inheritDoc
     */
    PathIndex.prototype.maxPost = function () {
        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, ChildrenNode_1.MAX_NODE);
        return new Node_1.NamedNode(util_2.MAX_NAME, node);
    };
    /**
     * @inheritDoc
     */
    PathIndex.prototype.toString = function () {
        return this.indexPath_.slice().join('/');
    };
    return PathIndex;
}(Index_1.Index));
exports.PathIndex = PathIndex;

//# sourceMappingURL=PathIndex.js.map


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Path_1 = __webpack_require__(2);
var SparseSnapshotTree_1 = __webpack_require__(44);
var LeafNode_1 = __webpack_require__(15);
var nodeFromJSON_1 = __webpack_require__(11);
var PriorityIndex_1 = __webpack_require__(3);
/**
 * Generate placeholders for deferred values.
 * @param {?Object} values
 * @return {!Object}
 */
exports.generateWithValues = function (values) {
    values = values || {};
    values['timestamp'] = values['timestamp'] || new Date().getTime();
    return values;
};
/**
 * Value to use when firing local events. When writing server values, fire
 * local events with an approximate value, otherwise return value as-is.
 * @param {(Object|string|number|boolean)} value
 * @param {!Object} serverValues
 * @return {!(string|number|boolean)}
 */
exports.resolveDeferredValue = function (value, serverValues) {
    if (!value || typeof value !== 'object') {
        return value;
    }
    else {
        util_1.assert('.sv' in value, 'Unexpected leaf node or priority contents');
        return serverValues[value['.sv']];
    }
};
/**
 * Recursively replace all deferred values and priorities in the tree with the
 * specified generated replacement values.
 * @param {!SparseSnapshotTree} tree
 * @param {!Object} serverValues
 * @return {!SparseSnapshotTree}
 */
exports.resolveDeferredValueTree = function (tree, serverValues) {
    var resolvedTree = new SparseSnapshotTree_1.SparseSnapshotTree();
    tree.forEachTree(new Path_1.Path(''), function (path, node) {
        resolvedTree.remember(path, exports.resolveDeferredValueSnapshot(node, serverValues));
    });
    return resolvedTree;
};
/**
 * Recursively replace all deferred values and priorities in the node with the
 * specified generated replacement values.  If there are no server values in the node,
 * it'll be returned as-is.
 * @param {!Node} node
 * @param {!Object} serverValues
 * @return {!Node}
 */
exports.resolveDeferredValueSnapshot = function (node, serverValues) {
    var rawPri = node.getPriority().val();
    var priority = exports.resolveDeferredValue(rawPri, serverValues);
    var newNode;
    if (node.isLeafNode()) {
        var leafNode = node;
        var value = exports.resolveDeferredValue(leafNode.getValue(), serverValues);
        if (value !== leafNode.getValue() ||
            priority !== leafNode.getPriority().val()) {
            return new LeafNode_1.LeafNode(value, nodeFromJSON_1.nodeFromJSON(priority));
        }
        else {
            return node;
        }
    }
    else {
        var childrenNode = node;
        newNode = childrenNode;
        if (priority !== childrenNode.getPriority().val()) {
            newNode = newNode.updatePriority(new LeafNode_1.LeafNode(priority));
        }
        childrenNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {
            var newChildNode = exports.resolveDeferredValueSnapshot(childNode, serverValues);
            if (newChildNode !== childNode) {
                newNode = newNode.updateImmediateChild(childName, newChildNode);
            }
        });
        return newNode;
    }
};

//# sourceMappingURL=ServerValues.js.map


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Path_1 = __webpack_require__(2);
var PriorityIndex_1 = __webpack_require__(3);
var CountedSet_1 = __webpack_require__(45);
/**
 * Helper class to store a sparse set of snapshots.
 *
 * @constructor
 */
var SparseSnapshotTree = /** @class */ (function () {
    function SparseSnapshotTree() {
        /**
         * @private
         * @type {Node}
         */
        this.value_ = null;
        /**
         * @private
         * @type {CountedSet}
         */
        this.children_ = null;
    }
    /**
     * Gets the node stored at the given path if one exists.
     *
     * @param {!Path} path Path to look up snapshot for.
     * @return {?Node} The retrieved node, or null.
     */
    SparseSnapshotTree.prototype.find = function (path) {
        if (this.value_ != null) {
            return this.value_.getChild(path);
        }
        else if (!path.isEmpty() && this.children_ != null) {
            var childKey = path.getFront();
            path = path.popFront();
            if (this.children_.contains(childKey)) {
                var childTree = this.children_.get(childKey);
                return childTree.find(path);
            }
            else {
                return null;
            }
        }
        else {
            return null;
        }
    };
    /**
     * Stores the given node at the specified path. If there is already a node
     * at a shallower path, it merges the new data into that snapshot node.
     *
     * @param {!Path} path Path to look up snapshot for.
     * @param {!Node} data The new data, or null.
     */
    SparseSnapshotTree.prototype.remember = function (path, data) {
        if (path.isEmpty()) {
            this.value_ = data;
            this.children_ = null;
        }
        else if (this.value_ !== null) {
            this.value_ = this.value_.updateChild(path, data);
        }
        else {
            if (this.children_ == null) {
                this.children_ = new CountedSet_1.CountedSet();
            }
            var childKey = path.getFront();
            if (!this.children_.contains(childKey)) {
                this.children_.add(childKey, new SparseSnapshotTree());
            }
            var child = this.children_.get(childKey);
            path = path.popFront();
            child.remember(path, data);
        }
    };
    /**
     * Purge the data at path from the cache.
     *
     * @param {!Path} path Path to look up snapshot for.
     * @return {boolean} True if this node should now be removed.
     */
    SparseSnapshotTree.prototype.forget = function (path) {
        if (path.isEmpty()) {
            this.value_ = null;
            this.children_ = null;
            return true;
        }
        else {
            if (this.value_ !== null) {
                if (this.value_.isLeafNode()) {
                    // We're trying to forget a node that doesn't exist
                    return false;
                }
                else {
                    var value = this.value_;
                    this.value_ = null;
                    var self_1 = this;
                    value.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, tree) {
                        self_1.remember(new Path_1.Path(key), tree);
                    });
                    return this.forget(path);
                }
            }
            else if (this.children_ !== null) {
                var childKey = path.getFront();
                path = path.popFront();
                if (this.children_.contains(childKey)) {
                    var safeToRemove = this.children_.get(childKey).forget(path);
                    if (safeToRemove) {
                        this.children_.remove(childKey);
                    }
                }
                if (this.children_.isEmpty()) {
                    this.children_ = null;
                    return true;
                }
                else {
                    return false;
                }
            }
            else {
                return true;
            }
        }
    };
    /**
     * Recursively iterates through all of the stored tree and calls the
     * callback on each one.
     *
     * @param {!Path} prefixPath Path to look up node for.
     * @param {!Function} func The function to invoke for each tree.
     */
    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {
        if (this.value_ !== null) {
            func(prefixPath, this.value_);
        }
        else {
            this.forEachChild(function (key, tree) {
                var path = new Path_1.Path(prefixPath.toString() + '/' + key);
                tree.forEachTree(path, func);
            });
        }
    };
    /**
     * Iterates through each immediate child and triggers the callback.
     *
     * @param {!Function} func The function to invoke for each child.
     */
    SparseSnapshotTree.prototype.forEachChild = function (func) {
        if (this.children_ !== null) {
            this.children_.each(function (key, tree) {
                func(key, tree);
            });
        }
    };
    return SparseSnapshotTree;
}());
exports.SparseSnapshotTree = SparseSnapshotTree;

//# sourceMappingURL=SparseSnapshotTree.js.map


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Implements a set with a count of elements.
 *
 * @template K, V
 */
var CountedSet = /** @class */ (function () {
    function CountedSet() {
        this.set = {};
    }
    /**
     * @param {!K} item
     * @param {V} val
     */
    CountedSet.prototype.add = function (item, val) {
        this.set[item] = val !== null ? val : true;
    };
    /**
     * @param {!K} key
     * @return {boolean}
     */
    CountedSet.prototype.contains = function (key) {
        return util_1.contains(this.set, key);
    };
    /**
     * @param {!K} item
     * @return {V}
     */
    CountedSet.prototype.get = function (item) {
        return this.contains(item) ? this.set[item] : undefined;
    };
    /**
     * @param {!K} item
     */
    CountedSet.prototype.remove = function (item) {
        delete this.set[item];
    };
    /**
     * Deletes everything in the set
     */
    CountedSet.prototype.clear = function () {
        this.set = {};
    };
    /**
     * True if there's nothing in the set
     * @return {boolean}
     */
    CountedSet.prototype.isEmpty = function () {
        return util_1.isEmpty(this.set);
    };
    /**
     * @return {number} The number of items in the set
     */
    CountedSet.prototype.count = function () {
        return util_1.getCount(this.set);
    };
    /**
     * Run a function on each k,v pair in the set
     * @param {function(K, V)} fn
     */
    CountedSet.prototype.each = function (fn) {
        util_1.forEach(this.set, function (k, v) { return fn(k, v); });
    };
    /**
     * Mostly for debugging
     * @return {Array.<K>} The keys present in this CountedSet
     */
    CountedSet.prototype.keys = function () {
        var keys = [];
        util_1.forEach(this.set, function (k) {
            keys.push(k);
        });
        return keys;
    };
    return CountedSet;
}());
exports.CountedSet = CountedSet;

//# sourceMappingURL=CountedSet.js.map


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Operation_1 = __webpack_require__(8);
var Path_1 = __webpack_require__(2);
/**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @param {!Node} snap
 * @constructor
 * @implements {Operation}
 */
var Overwrite = /** @class */ (function () {
    function Overwrite(source, path, snap) {
        this.source = source;
        this.path = path;
        this.snap = snap;
        /** @inheritDoc */
        this.type = Operation_1.OperationType.OVERWRITE;
    }
    Overwrite.prototype.operationForChild = function (childName) {
        if (this.path.isEmpty()) {
            return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));
        }
        else {
            return new Overwrite(this.source, this.path.popFront(), this.snap);
        }
    };
    return Overwrite;
}());
exports.Overwrite = Overwrite;

//# sourceMappingURL=Overwrite.js.map


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var CacheNode_1 = __webpack_require__(18);
var ChildrenNode_1 = __webpack_require__(4);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var ViewCache_1 = __webpack_require__(48);
var View_1 = __webpack_require__(90);
var __referenceConstructor;
/**
 * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to
 * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes
 * and user writes (set, transaction, update).
 *
 * It's responsible for:
 *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).
 *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,
 *    applyUserOverwrite, etc.)
 */
var SyncPoint = /** @class */ (function () {
    function SyncPoint() {
        /**
         * The Views being tracked at this location in the tree, stored as a map where the key is a
         * queryId and the value is the View for that query.
         *
         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).
         *
         * @type {!Object.<!string, !View>}
         * @private
         */
        this.views_ = {};
    }
    Object.defineProperty(SyncPoint, "__referenceConstructor", {
        get: function () {
            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');
            return __referenceConstructor;
        },
        set: function (val) {
            util_1.assert(!__referenceConstructor, '__referenceConstructor has already been defined');
            __referenceConstructor = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {boolean}
     */
    SyncPoint.prototype.isEmpty = function () {
        return util_2.isEmpty(this.views_);
    };
    /**
     *
     * @param {!Operation} operation
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} optCompleteServerCache
     * @return {!Array.<!Event>}
     */
    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {
        var queryId = operation.source.queryId;
        if (queryId !== null) {
            var view = util_2.safeGet(this.views_, queryId);
            util_1.assert(view != null, 'SyncTree gave us an op for an invalid query.');
            return view.applyOperation(operation, writesCache, optCompleteServerCache);
        }
        else {
            var events_1 = [];
            util_2.forEach(this.views_, function (key, view) {
                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));
            });
            return events_1;
        }
    };
    /**
     * Add an event callback for the specified query.
     *
     * @param {!Query} query
     * @param {!EventRegistration} eventRegistration
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache Complete server cache, if we have it.
     * @param {boolean} serverCacheComplete
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {
        var queryId = query.queryIdentifier();
        var view = util_2.safeGet(this.views_, queryId);
        if (!view) {
            // TODO: make writesCache take flag for complete server node
            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);
            var eventCacheComplete = false;
            if (eventCache) {
                eventCacheComplete = true;
            }
            else if (serverCache instanceof ChildrenNode_1.ChildrenNode) {
                eventCache = writesCache.calcCompleteEventChildren(serverCache);
                eventCacheComplete = false;
            }
            else {
                eventCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                eventCacheComplete = false;
            }
            var viewCache = new ViewCache_1.ViewCache(new CacheNode_1.CacheNode(
            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode_1.CacheNode(
            /** @type {!Node} */ (serverCache), serverCacheComplete, false));
            view = new View_1.View(query, viewCache);
            this.views_[queryId] = view;
        }
        // This is guaranteed to exist now, we just created anything that was missing
        view.addEventRegistration(eventRegistration);
        return view.getInitialEvents(eventRegistration);
    };
    /**
     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.
     *
     * If query is the default query, we'll check all views for the specified eventRegistration.
     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).
     *
     * @param {!Query} query
     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events
     */
    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {
        var queryId = query.queryIdentifier();
        var removed = [];
        var cancelEvents = [];
        var hadCompleteView = this.hasCompleteView();
        if (queryId === 'default') {
            // When you do ref.off(...), we search all views for the registration to remove.
            var self_1 = this;
            util_2.forEach(this.views_, function (viewQueryId, view) {
                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));
                if (view.isEmpty()) {
                    delete self_1.views_[viewQueryId];
                    // We'll deal with complete views later.
                    if (!view
                        .getQuery()
                        .getQueryParams()
                        .loadsAllData()) {
                        removed.push(view.getQuery());
                    }
                }
            });
        }
        else {
            // remove the callback from the specific view.
            var view = util_2.safeGet(this.views_, queryId);
            if (view) {
                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));
                if (view.isEmpty()) {
                    delete this.views_[queryId];
                    // We'll deal with complete views later.
                    if (!view
                        .getQuery()
                        .getQueryParams()
                        .loadsAllData()) {
                        removed.push(view.getQuery());
                    }
                }
            }
        }
        if (hadCompleteView && !this.hasCompleteView()) {
            // We removed our last complete view.
            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));
        }
        return { removed: removed, events: cancelEvents };
    };
    /**
     * @return {!Array.<!View>}
     */
    SyncPoint.prototype.getQueryViews = function () {
        var _this = this;
        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });
        return values.filter(function (view) {
            return !view
                .getQuery()
                .getQueryParams()
                .loadsAllData();
        });
    };
    /**
     *
     * @param {!Path} path The path to the desired complete snapshot
     * @return {?Node} A complete cache, if it exists
     */
    SyncPoint.prototype.getCompleteServerCache = function (path) {
        var serverCache = null;
        util_2.forEach(this.views_, function (key, view) {
            serverCache = serverCache || view.getCompleteServerCache(path);
        });
        return serverCache;
    };
    /**
     * @param {!Query} query
     * @return {?View}
     */
    SyncPoint.prototype.viewForQuery = function (query) {
        var params = query.getQueryParams();
        if (params.loadsAllData()) {
            return this.getCompleteView();
        }
        else {
            var queryId = query.queryIdentifier();
            return util_2.safeGet(this.views_, queryId);
        }
    };
    /**
     * @param {!Query} query
     * @return {boolean}
     */
    SyncPoint.prototype.viewExistsForQuery = function (query) {
        return this.viewForQuery(query) != null;
    };
    /**
     * @return {boolean}
     */
    SyncPoint.prototype.hasCompleteView = function () {
        return this.getCompleteView() != null;
    };
    /**
     * @return {?View}
     */
    SyncPoint.prototype.getCompleteView = function () {
        var completeView = util_2.findValue(this.views_, function (view) {
            return view
                .getQuery()
                .getQueryParams()
                .loadsAllData();
        });
        return completeView || null;
    };
    return SyncPoint;
}());
exports.SyncPoint = SyncPoint;

//# sourceMappingURL=SyncPoint.js.map


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ChildrenNode_1 = __webpack_require__(4);
var CacheNode_1 = __webpack_require__(18);
/**
 * Stores the data we have cached for a view.
 *
 * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).
 *
 * @constructor
 */
var ViewCache = /** @class */ (function () {
    /**
     *
     * @param {!CacheNode} eventCache_
     * @param {!CacheNode} serverCache_
     */
    function ViewCache(eventCache_, serverCache_) {
        this.eventCache_ = eventCache_;
        this.serverCache_ = serverCache_;
    }
    /**
     * @param {!Node} eventSnap
     * @param {boolean} complete
     * @param {boolean} filtered
     * @return {!ViewCache}
     */
    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {
        return new ViewCache(new CacheNode_1.CacheNode(eventSnap, complete, filtered), this.serverCache_);
    };
    /**
     * @param {!Node} serverSnap
     * @param {boolean} complete
     * @param {boolean} filtered
     * @return {!ViewCache}
     */
    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {
        return new ViewCache(this.eventCache_, new CacheNode_1.CacheNode(serverSnap, complete, filtered));
    };
    /**
     * @return {!CacheNode}
     */
    ViewCache.prototype.getEventCache = function () {
        return this.eventCache_;
    };
    /**
     * @return {?Node}
     */
    ViewCache.prototype.getCompleteEventSnap = function () {
        return this.eventCache_.isFullyInitialized()
            ? this.eventCache_.getNode()
            : null;
    };
    /**
     * @return {!CacheNode}
     */
    ViewCache.prototype.getServerCache = function () {
        return this.serverCache_;
    };
    /**
     * @return {?Node}
     */
    ViewCache.prototype.getCompleteServerSnap = function () {
        return this.serverCache_.isFullyInitialized()
            ? this.serverCache_.getNode()
            : null;
    };
    /**
     * @const
     * @type {ViewCache}
     */
    ViewCache.Empty = new ViewCache(new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, 
    /*fullyInitialized=*/ false, 
    /*filtered=*/ false), new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, 
    /*fullyInitialized=*/ false, 
    /*filtered=*/ false));
    return ViewCache;
}());
exports.ViewCache = ViewCache;

//# sourceMappingURL=ViewCache.js.map


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Returns the delta from the previous call to get stats.
 *
 * @param collection_ The collection to "listen" to.
 * @constructor
 */
var StatsListener = /** @class */ (function () {
    function StatsListener(collection_) {
        this.collection_ = collection_;
        this.last_ = null;
    }
    StatsListener.prototype.get = function () {
        var newStats = this.collection_.get();
        var delta = util_1.clone(newStats);
        if (this.last_) {
            util_1.forEach(this.last_, function (stat, value) {
                delta[stat] = delta[stat] - value;
            });
        }
        this.last_ = newStats;
        return delta;
    };
    return StatsListener;
}());
exports.StatsListener = StatsListener;

//# sourceMappingURL=StatsListener.js.map


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var app_1 = __webpack_require__(6);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var util_3 = __webpack_require__(0);
var util_4 = __webpack_require__(1);
var Path_1 = __webpack_require__(2);
var VisibilityMonitor_1 = __webpack_require__(102);
var OnlineMonitor_1 = __webpack_require__(103);
var util_5 = __webpack_require__(0);
var Connection_1 = __webpack_require__(52);
var util_6 = __webpack_require__(0);
var util_7 = __webpack_require__(0);
var ServerActions_1 = __webpack_require__(55);
var RECONNECT_MIN_DELAY = 1000;
var RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)
var RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)
var RECONNECT_DELAY_MULTIPLIER = 1.3;
var RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.
var SERVER_KILL_INTERRUPT_REASON = 'server_kill';
// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.
var INVALID_AUTH_TOKEN_THRESHOLD = 3;
/**
 * Firebase connection.  Abstracts wire protocol and handles reconnecting.
 *
 * NOTE: All JSON objects sent to the realtime connection must have property names enclosed
 * in quotes to make sure the closure compiler does not minify them.
 */
var PersistentConnection = /** @class */ (function (_super) {
    __extends(PersistentConnection, _super);
    /**
     * @implements {ServerActions}
     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to
     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server
     * @param onConnectStatus_
     * @param onServerInfoUpdate_
     * @param authTokenProvider_
     * @param authOverride_
     */
    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {
        var _this = _super.call(this) || this;
        _this.repoInfo_ = repoInfo_;
        _this.onDataUpdate_ = onDataUpdate_;
        _this.onConnectStatus_ = onConnectStatus_;
        _this.onServerInfoUpdate_ = onServerInfoUpdate_;
        _this.authTokenProvider_ = authTokenProvider_;
        _this.authOverride_ = authOverride_;
        // Used for diagnostic logging.
        _this.id = PersistentConnection.nextPersistentConnectionId_++;
        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');
        /** @private {Object} */
        _this.interruptReasons_ = {};
        _this.listens_ = {};
        _this.outstandingPuts_ = [];
        _this.outstandingPutCount_ = 0;
        _this.onDisconnectRequestQueue_ = [];
        _this.connected_ = false;
        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;
        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;
        _this.securityDebugCallback_ = null;
        _this.lastSessionId = null;
        /** @private {number|null} */
        _this.establishConnectionTimer_ = null;
        /** @private {boolean} */
        _this.visible_ = false;
        // Before we get connected, we keep a queue of pending messages to send.
        _this.requestCBHash_ = {};
        _this.requestNumber_ = 0;
        /** @private {?{
         *   sendRequest(Object),
         *   close()
         * }} */
        _this.realtime_ = null;
        /** @private {string|null} */
        _this.authToken_ = null;
        _this.forceTokenRefresh_ = false;
        _this.invalidAuthTokenCount_ = 0;
        _this.firstConnection_ = true;
        _this.lastConnectionAttemptTime_ = null;
        _this.lastConnectionEstablishedTime_ = null;
        if (authOverride_ && !util_7.isNodeSdk()) {
            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');
        }
        _this.scheduleConnect_(0);
        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);
        if (repoInfo_.host.indexOf('fblocal') === -1) {
            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);
        }
        return _this;
    }
    /**
     * @param {!string} action
     * @param {*} body
     * @param {function(*)=} onResponse
     * @protected
     */
    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {
        var curReqNum = ++this.requestNumber_;
        var msg = { r: curReqNum, a: action, b: body };
        this.log_(util_2.stringify(msg));
        util_3.assert(this.connected_, "sendRequest call when we're not connected not allowed.");
        this.realtime_.sendRequest(msg);
        if (onResponse) {
            this.requestCBHash_[curReqNum] = onResponse;
        }
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {
        var queryId = query.queryIdentifier();
        var pathString = query.path.toString();
        this.log_('Listen called for ' + pathString + ' ' + queryId);
        this.listens_[pathString] = this.listens_[pathString] || {};
        util_3.assert(query.getQueryParams().isDefault() ||
            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');
        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');
        var listenSpec = {
            onComplete: onComplete,
            hashFn: currentHashFn,
            query: query,
            tag: tag
        };
        this.listens_[pathString][queryId] = listenSpec;
        if (this.connected_) {
            this.sendListen_(listenSpec);
        }
    };
    /**
     * @param {!{onComplete(),
     *           hashFn():!string,
     *           query: !Query,
     *           tag: ?number}} listenSpec
     * @private
     */
    PersistentConnection.prototype.sendListen_ = function (listenSpec) {
        var _this = this;
        var query = listenSpec.query;
        var pathString = query.path.toString();
        var queryId = query.queryIdentifier();
        this.log_('Listen on ' + pathString + ' for ' + queryId);
        var req = { /*path*/ p: pathString };
        var action = 'q';
        // Only bother to send query if it's non-default.
        if (listenSpec.tag) {
            req['q'] = query.queryObject();
            req['t'] = listenSpec.tag;
        }
        req['h'] = listenSpec.hashFn();
        this.sendRequest(action, req, function (message) {
            var payload = message['d'];
            var status = message['s'];
            // print warnings in any case...
            PersistentConnection.warnOnListenWarnings_(payload, query);
            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];
            // only trigger actions if the listen hasn't been removed and readded
            if (currentListenSpec === listenSpec) {
                _this.log_('listen response', message);
                if (status !== 'ok') {
                    _this.removeListen_(pathString, queryId);
                }
                if (listenSpec.onComplete) {
                    listenSpec.onComplete(status, payload);
                }
            }
        });
    };
    /**
     * @param {*} payload
     * @param {!Query} query
     * @private
     */
    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {
        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {
            var warnings = util_1.safeGet(payload, 'w');
            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {
                var indexSpec = '".indexOn": "' +
                    query
                        .getQueryParams()
                        .getIndex()
                        .toString() +
                    '"';
                var indexPath = query.path.toString();
                util_4.warn("Using an unspecified index. Your data will be downloaded and " +
                    ("filtered on the client. Consider adding " + indexSpec + " at ") +
                    (indexPath + " to your security rules for better performance."));
            }
        }
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.refreshAuthToken = function (token) {
        this.authToken_ = token;
        this.log_('Auth token refreshed');
        if (this.authToken_) {
            this.tryAuth();
        }
        else {
            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete
            //the credential so we dont become authenticated next time we connect.
            if (this.connected_) {
                this.sendRequest('unauth', {}, function () { });
            }
        }
        this.reduceReconnectDelayIfAdminCredential_(token);
    };
    /**
     * @param {!string} credential
     * @private
     */
    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {
        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).
        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.
        var isFirebaseSecret = credential && credential.length === 40;
        if (isFirebaseSecret || util_5.isAdmin(credential)) {
            this.log_('Admin auth credential detected.  Reducing max reconnect time.');
            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;
        }
    };
    /**
     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like
     * a auth revoked (the connection is closed).
     */
    PersistentConnection.prototype.tryAuth = function () {
        var _this = this;
        if (this.connected_ && this.authToken_) {
            var token_1 = this.authToken_;
            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';
            var requestData = { cred: token_1 };
            if (this.authOverride_ === null) {
                requestData['noauth'] = true;
            }
            else if (typeof this.authOverride_ === 'object') {
                requestData['authvar'] = this.authOverride_;
            }
            this.sendRequest(authMethod, requestData, function (res) {
                var status = res['s'];
                var data = res['d'] || 'error';
                if (_this.authToken_ === token_1) {
                    if (status === 'ok') {
                        _this.invalidAuthTokenCount_ = 0;
                    }
                    else {
                        // Triggers reconnect and force refresh for auth token
                        _this.onAuthRevoked_(status, data);
                    }
                }
            });
        }
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.unlisten = function (query, tag) {
        var pathString = query.path.toString();
        var queryId = query.queryIdentifier();
        this.log_('Unlisten called for ' + pathString + ' ' + queryId);
        util_3.assert(query.getQueryParams().isDefault() ||
            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');
        var listen = this.removeListen_(pathString, queryId);
        if (listen && this.connected_) {
            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);
        }
    };
    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {
        this.log_('Unlisten on ' + pathString + ' for ' + queryId);
        var req = { /*path*/ p: pathString };
        var action = 'n';
        // Only bother sending queryId if it's non-default.
        if (tag) {
            req['q'] = queryObj;
            req['t'] = tag;
        }
        this.sendRequest(action, req);
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {
        if (this.connected_) {
            this.sendOnDisconnect_('o', pathString, data, onComplete);
        }
        else {
            this.onDisconnectRequestQueue_.push({
                pathString: pathString,
                action: 'o',
                data: data,
                onComplete: onComplete
            });
        }
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {
        if (this.connected_) {
            this.sendOnDisconnect_('om', pathString, data, onComplete);
        }
        else {
            this.onDisconnectRequestQueue_.push({
                pathString: pathString,
                action: 'om',
                data: data,
                onComplete: onComplete
            });
        }
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {
        if (this.connected_) {
            this.sendOnDisconnect_('oc', pathString, null, onComplete);
        }
        else {
            this.onDisconnectRequestQueue_.push({
                pathString: pathString,
                action: 'oc',
                data: null,
                onComplete: onComplete
            });
        }
    };
    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {
        var request = { /*path*/ p: pathString, /*data*/ d: data };
        this.log_('onDisconnect ' + action, request);
        this.sendRequest(action, request, function (response) {
            if (onComplete) {
                setTimeout(function () {
                    onComplete(response['s'], response['d']);
                }, Math.floor(0));
            }
        });
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {
        this.putInternal('p', pathString, data, onComplete, hash);
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {
        this.putInternal('m', pathString, data, onComplete, hash);
    };
    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {
        var request = {
            /*path*/ p: pathString,
            /*data*/ d: data
        };
        if (hash !== undefined)
            request['h'] = hash;
        // TODO: Only keep track of the most recent put for a given path?
        this.outstandingPuts_.push({
            action: action,
            request: request,
            onComplete: onComplete
        });
        this.outstandingPutCount_++;
        var index = this.outstandingPuts_.length - 1;
        if (this.connected_) {
            this.sendPut_(index);
        }
        else {
            this.log_('Buffering put: ' + pathString);
        }
    };
    PersistentConnection.prototype.sendPut_ = function (index) {
        var _this = this;
        var action = this.outstandingPuts_[index].action;
        var request = this.outstandingPuts_[index].request;
        var onComplete = this.outstandingPuts_[index].onComplete;
        this.outstandingPuts_[index].queued = this.connected_;
        this.sendRequest(action, request, function (message) {
            _this.log_(action + ' response', message);
            delete _this.outstandingPuts_[index];
            _this.outstandingPutCount_--;
            // Clean up array occasionally.
            if (_this.outstandingPutCount_ === 0) {
                _this.outstandingPuts_ = [];
            }
            if (onComplete)
                onComplete(message['s'], message['d']);
        });
    };
    /**
     * @inheritDoc
     */
    PersistentConnection.prototype.reportStats = function (stats) {
        var _this = this;
        // If we're not connected, we just drop the stats.
        if (this.connected_) {
            var request = { /*counters*/ c: stats };
            this.log_('reportStats', request);
            this.sendRequest(/*stats*/ 's', request, function (result) {
                var status = result['s'];
                if (status !== 'ok') {
                    var errorReason = result['d'];
                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);
                }
            });
        }
    };
    /**
     * @param {*} message
     * @private
     */
    PersistentConnection.prototype.onDataMessage_ = function (message) {
        if ('r' in message) {
            // this is a response
            this.log_('from server: ' + util_2.stringify(message));
            var reqNum = message['r'];
            var onResponse = this.requestCBHash_[reqNum];
            if (onResponse) {
                delete this.requestCBHash_[reqNum];
                onResponse(message['b']);
            }
        }
        else if ('error' in message) {
            throw 'A server-side error has occurred: ' + message['error'];
        }
        else if ('a' in message) {
            // a and b are action and body, respectively
            this.onDataPush_(message['a'], message['b']);
        }
    };
    PersistentConnection.prototype.onDataPush_ = function (action, body) {
        this.log_('handleServerMessage', action, body);
        if (action === 'd')
            this.onDataUpdate_(body['p'], body['d'], 
            /*isMerge*/ false, body['t']);
        else if (action === 'm')
            this.onDataUpdate_(body['p'], body['d'], 
            /*isMerge=*/ true, body['t']);
        else if (action === 'c')
            this.onListenRevoked_(body['p'], body['q']);
        else if (action === 'ac')
            this.onAuthRevoked_(body['s'], body['d']);
        else if (action === 'sd')
            this.onSecurityDebugPacket_(body);
        else
            util_4.error('Unrecognized action received from server: ' +
                util_2.stringify(action) +
                '\nAre you using the latest client?');
    };
    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {
        this.log_('connection ready');
        this.connected_ = true;
        this.lastConnectionEstablishedTime_ = new Date().getTime();
        this.handleTimestamp_(timestamp);
        this.lastSessionId = sessionId;
        if (this.firstConnection_) {
            this.sendConnectStats_();
        }
        this.restoreState_();
        this.firstConnection_ = false;
        this.onConnectStatus_(true);
    };
    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {
        var _this = this;
        util_3.assert(!this.realtime_, "Scheduling a connect when we're already connected/ing?");
        if (this.establishConnectionTimer_) {
            clearTimeout(this.establishConnectionTimer_);
        }
        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating "Security Error" in
        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).
        this.establishConnectionTimer_ = setTimeout(function () {
            _this.establishConnectionTimer_ = null;
            _this.establishConnection_();
        }, Math.floor(timeout));
    };
    /**
     * @param {boolean} visible
     * @private
     */
    PersistentConnection.prototype.onVisible_ = function (visible) {
        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.
        if (visible &&
            !this.visible_ &&
            this.reconnectDelay_ === this.maxReconnectDelay_) {
            this.log_('Window became visible.  Reducing delay.');
            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
            if (!this.realtime_) {
                this.scheduleConnect_(0);
            }
        }
        this.visible_ = visible;
    };
    PersistentConnection.prototype.onOnline_ = function (online) {
        if (online) {
            this.log_('Browser went online.');
            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
            if (!this.realtime_) {
                this.scheduleConnect_(0);
            }
        }
        else {
            this.log_('Browser went offline.  Killing connection.');
            if (this.realtime_) {
                this.realtime_.close();
            }
        }
    };
    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {
        this.log_('data client disconnected');
        this.connected_ = false;
        this.realtime_ = null;
        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.
        this.cancelSentTransactions_();
        // Clear out the pending requests.
        this.requestCBHash_ = {};
        if (this.shouldReconnect_()) {
            if (!this.visible_) {
                this.log_("Window isn't visible.  Delaying reconnect.");
                this.reconnectDelay_ = this.maxReconnectDelay_;
                this.lastConnectionAttemptTime_ = new Date().getTime();
            }
            else if (this.lastConnectionEstablishedTime_) {
                // If we've been connected long enough, reset reconnect delay to minimum.
                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;
                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)
                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;
                this.lastConnectionEstablishedTime_ = null;
            }
            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;
            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);
            reconnectDelay = Math.random() * reconnectDelay;
            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');
            this.scheduleConnect_(reconnectDelay);
            // Adjust reconnect delay for next time.
            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);
        }
        this.onConnectStatus_(false);
    };
    PersistentConnection.prototype.establishConnection_ = function () {
        if (this.shouldReconnect_()) {
            this.log_('Making a connection attempt');
            this.lastConnectionAttemptTime_ = new Date().getTime();
            this.lastConnectionEstablishedTime_ = null;
            var onDataMessage_1 = this.onDataMessage_.bind(this);
            var onReady_1 = this.onReady_.bind(this);
            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);
            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;
            var self_1 = this;
            var lastSessionId_1 = this.lastSessionId;
            var canceled_1 = false;
            var connection_1 = null;
            var closeFn_1 = function () {
                if (connection_1) {
                    connection_1.close();
                }
                else {
                    canceled_1 = true;
                    onDisconnect_1();
                }
            };
            var sendRequestFn = function (msg) {
                util_3.assert(connection_1, "sendRequest call when we're not connected not allowed.");
                connection_1.sendRequest(msg);
            };
            this.realtime_ = {
                close: closeFn_1,
                sendRequest: sendRequestFn
            };
            var forceRefresh = this.forceTokenRefresh_;
            this.forceTokenRefresh_ = false;
            // First fetch auth token, and establish connection after fetching the token was successful
            this.authTokenProvider_
                .getToken(forceRefresh)
                .then(function (result) {
                if (!canceled_1) {
                    util_4.log('getToken() completed. Creating connection.');
                    self_1.authToken_ = result && result.accessToken;
                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, 
                    /* onKill= */ function (reason) {
                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');
                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);
                    }, lastSessionId_1);
                }
                else {
                    util_4.log('getToken() completed but was canceled');
                }
            })
                .then(null, function (error) {
                self_1.log_('Failed to get token: ' + error);
                if (!canceled_1) {
                    if (util_6.CONSTANTS.NODE_ADMIN) {
                        // This may be a critical error for the Admin Node.js SDK, so log a warning.
                        // But getToken() may also just have temporarily failed, so we still want to
                        // continue retrying.
                        util_4.warn(error);
                    }
                    closeFn_1();
                }
            });
        }
    };
    /**
     * @param {string} reason
     */
    PersistentConnection.prototype.interrupt = function (reason) {
        util_4.log('Interrupting connection for reason: ' + reason);
        this.interruptReasons_[reason] = true;
        if (this.realtime_) {
            this.realtime_.close();
        }
        else {
            if (this.establishConnectionTimer_) {
                clearTimeout(this.establishConnectionTimer_);
                this.establishConnectionTimer_ = null;
            }
            if (this.connected_) {
                this.onRealtimeDisconnect_();
            }
        }
    };
    /**
     * @param {string} reason
     */
    PersistentConnection.prototype.resume = function (reason) {
        util_4.log('Resuming connection for reason: ' + reason);
        delete this.interruptReasons_[reason];
        if (util_1.isEmpty(this.interruptReasons_)) {
            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
            if (!this.realtime_) {
                this.scheduleConnect_(0);
            }
        }
    };
    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {
        var delta = timestamp - new Date().getTime();
        this.onServerInfoUpdate_({ serverTimeOffset: delta });
    };
    PersistentConnection.prototype.cancelSentTransactions_ = function () {
        for (var i = 0; i < this.outstandingPuts_.length; i++) {
            var put = this.outstandingPuts_[i];
            if (put && /*hash*/ 'h' in put.request && put.queued) {
                if (put.onComplete)
                    put.onComplete('disconnect');
                delete this.outstandingPuts_[i];
                this.outstandingPutCount_--;
            }
        }
        // Clean up array occasionally.
        if (this.outstandingPutCount_ === 0)
            this.outstandingPuts_ = [];
    };
    /**
     * @param {!string} pathString
     * @param {Array.<*>=} query
     * @private
     */
    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {
        // Remove the listen and manufacture a "permission_denied" error for the failed listen.
        var queryId;
        if (!query) {
            queryId = 'default';
        }
        else {
            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');
        }
        var listen = this.removeListen_(pathString, queryId);
        if (listen && listen.onComplete)
            listen.onComplete('permission_denied');
    };
    /**
     * @param {!string} pathString
     * @param {!string} queryId
     * @return {{queries:Array.<Query>, onComplete:function(string)}}
     * @private
     */
    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {
        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.
        var listen;
        if (this.listens_[normalizedPathString] !== undefined) {
            listen = this.listens_[normalizedPathString][queryId];
            delete this.listens_[normalizedPathString][queryId];
            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {
                delete this.listens_[normalizedPathString];
            }
        }
        else {
            // all listens for this path has already been removed
            listen = undefined;
        }
        return listen;
    };
    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {
        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);
        this.authToken_ = null;
        this.forceTokenRefresh_ = true;
        this.realtime_.close();
        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {
            // We'll wait a couple times before logging the warning / increasing the
            // retry period since oauth tokens will report as "invalid" if they're
            // just expired. Plus there may be transient issues that resolve themselves.
            this.invalidAuthTokenCount_++;
            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {
                // Set a long reconnect delay because recovery is unlikely
                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;
                // Notify the auth token provider that the token is invalid, which will log
                // a warning
                this.authTokenProvider_.notifyForInvalidToken();
            }
        }
    };
    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {
        if (this.securityDebugCallback_) {
            this.securityDebugCallback_(body);
        }
        else {
            if ('msg' in body && typeof console !== 'undefined') {
                console.log('FIREBASE: ' + body['msg'].replace('\n', '\nFIREBASE: '));
            }
        }
    };
    PersistentConnection.prototype.restoreState_ = function () {
        var _this = this;
        //Re-authenticate ourselves if we have a credential stored.
        this.tryAuth();
        // Puts depend on having received the corresponding data update from the server before they complete, so we must
        // make sure to send listens before puts.
        util_1.forEach(this.listens_, function (pathString, queries) {
            util_1.forEach(queries, function (key, listenSpec) {
                _this.sendListen_(listenSpec);
            });
        });
        for (var i = 0; i < this.outstandingPuts_.length; i++) {
            if (this.outstandingPuts_[i])
                this.sendPut_(i);
        }
        while (this.onDisconnectRequestQueue_.length) {
            var request = this.onDisconnectRequestQueue_.shift();
            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);
        }
    };
    /**
     * Sends client stats for first connection
     * @private
     */
    PersistentConnection.prototype.sendConnectStats_ = function () {
        var stats = {};
        var clientName = 'js';
        if (util_6.CONSTANTS.NODE_ADMIN) {
            clientName = 'admin_node';
        }
        else if (util_6.CONSTANTS.NODE_CLIENT) {
            clientName = 'node';
        }
        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\./g, '-')] = 1;
        if (util_7.isMobileCordova()) {
            stats['framework.cordova'] = 1;
        }
        else if (util_7.isReactNative()) {
            stats['framework.reactnative'] = 1;
        }
        this.reportStats(stats);
    };
    /**
     * @return {boolean}
     * @private
     */
    PersistentConnection.prototype.shouldReconnect_ = function () {
        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();
        return util_1.isEmpty(this.interruptReasons_) && online;
    };
    /**
     * @private
     */
    PersistentConnection.nextPersistentConnectionId_ = 0;
    /**
     * Counter for number of connections created. Mainly used for tagging in the logs
     * @type {number}
     * @private
     */
    PersistentConnection.nextConnectionId_ = 0;
    return PersistentConnection;
}(ServerActions_1.ServerActions));
exports.PersistentConnection = PersistentConnection;

//# sourceMappingURL=PersistentConnection.js.map


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Base class to be used if you want to emit events. Call the constructor with
 * the set of allowed event names.
 */
var EventEmitter = /** @class */ (function () {
    /**
     * @param {!Array.<string>} allowedEvents_
     */
    function EventEmitter(allowedEvents_) {
        this.allowedEvents_ = allowedEvents_;
        this.listeners_ = {};
        util_1.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');
    }
    /**
     * To be called by derived classes to trigger events.
     * @param {!string} eventType
     * @param {...*} var_args
     */
    EventEmitter.prototype.trigger = function (eventType) {
        var var_args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            var_args[_i - 1] = arguments[_i];
        }
        if (Array.isArray(this.listeners_[eventType])) {
            // Clone the list, since callbacks could add/remove listeners.
            var listeners = this.listeners_[eventType].slice();
            for (var i = 0; i < listeners.length; i++) {
                listeners[i].callback.apply(listeners[i].context, var_args);
            }
        }
    };
    EventEmitter.prototype.on = function (eventType, callback, context) {
        this.validateEventType_(eventType);
        this.listeners_[eventType] = this.listeners_[eventType] || [];
        this.listeners_[eventType].push({ callback: callback, context: context });
        var eventData = this.getInitialEvent(eventType);
        if (eventData) {
            callback.apply(context, eventData);
        }
    };
    EventEmitter.prototype.off = function (eventType, callback, context) {
        this.validateEventType_(eventType);
        var listeners = this.listeners_[eventType] || [];
        for (var i = 0; i < listeners.length; i++) {
            if (listeners[i].callback === callback &&
                (!context || context === listeners[i].context)) {
                listeners.splice(i, 1);
                return;
            }
        }
    };
    EventEmitter.prototype.validateEventType_ = function (eventType) {
        util_1.assert(this.allowedEvents_.find(function (et) {
            return et === eventType;
        }), 'Unknown event: ' + eventType);
    };
    return EventEmitter;
}());
exports.EventEmitter = EventEmitter;

//# sourceMappingURL=EventEmitter.js.map


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
var storage_1 = __webpack_require__(12);
var Constants_1 = __webpack_require__(13);
var TransportManager_1 = __webpack_require__(104);
// Abort upgrade attempt if it takes longer than 60s.
var UPGRADE_TIMEOUT = 60000;
// For some transports (WebSockets), we need to "validate" the transport by exchanging a few requests and responses.
// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.
var DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;
// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)
// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout
// but we've sent/received enough bytes, we don't cancel the connection.
var BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;
var BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;
var MESSAGE_TYPE = 't';
var MESSAGE_DATA = 'd';
var CONTROL_SHUTDOWN = 's';
var CONTROL_RESET = 'r';
var CONTROL_ERROR = 'e';
var CONTROL_PONG = 'o';
var SWITCH_ACK = 'a';
var END_TRANSMISSION = 'n';
var PING = 'p';
var SERVER_HELLO = 'h';
/**
 * Creates a new real-time connection to the server using whichever method works
 * best in the current browser.
 *
 * @constructor
 */
var Connection = /** @class */ (function () {
    /**
     * @param {!string} id - an id for this connection
     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to
     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives
     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.
     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost
     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.
     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server
     */
    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {
        this.id = id;
        this.repoInfo_ = repoInfo_;
        this.onMessage_ = onMessage_;
        this.onReady_ = onReady_;
        this.onDisconnect_ = onDisconnect_;
        this.onKill_ = onKill_;
        this.lastSessionId = lastSessionId;
        this.connectionCount = 0;
        this.pendingDataMessages = [];
        this.state_ = 0 /* CONNECTING */;
        this.log_ = util_1.logWrapper('c:' + this.id + ':');
        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);
        this.log_('Connection created');
        this.start_();
    }
    /**
     * Starts a connection attempt
     * @private
     */
    Connection.prototype.start_ = function () {
        var _this = this;
        var conn = this.transportManager_.initialTransport();
        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);
        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we
        // can consider the transport healthy.
        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;
        var onMessageReceived = this.connReceiver_(this.conn_);
        var onConnectionLost = this.disconnReceiver_(this.conn_);
        this.tx_ = this.conn_;
        this.rx_ = this.conn_;
        this.secondaryConn_ = null;
        this.isHealthy_ = false;
        /*
         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.
         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.
         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should
         * still have the context of your originating frame.
         */
        setTimeout(function () {
            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it
            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);
        }, Math.floor(0));
        var healthyTimeout_ms = conn['healthyTimeout'] || 0;
        if (healthyTimeout_ms > 0) {
            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {
                _this.healthyTimeout_ = null;
                if (!_this.isHealthy_) {
                    if (_this.conn_ &&
                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {
                        _this.log_('Connection exceeded healthy timeout but has received ' +
                            _this.conn_.bytesReceived +
                            ' bytes.  Marking connection healthy.');
                        _this.isHealthy_ = true;
                        _this.conn_.markConnectionHealthy();
                    }
                    else if (_this.conn_ &&
                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {
                        _this.log_('Connection exceeded healthy timeout but has sent ' +
                            _this.conn_.bytesSent +
                            ' bytes.  Leaving connection alive.');
                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to
                        // the server.
                    }
                    else {
                        _this.log_('Closing unhealthy connection after timeout.');
                        _this.close();
                    }
                }
            }, Math.floor(healthyTimeout_ms));
        }
    };
    /**
     * @return {!string}
     * @private
     */
    Connection.prototype.nextTransportId_ = function () {
        return 'c:' + this.id + ':' + this.connectionCount++;
    };
    Connection.prototype.disconnReceiver_ = function (conn) {
        var _this = this;
        return function (everConnected) {
            if (conn === _this.conn_) {
                _this.onConnectionLost_(everConnected);
            }
            else if (conn === _this.secondaryConn_) {
                _this.log_('Secondary connection lost.');
                _this.onSecondaryConnectionLost_();
            }
            else {
                _this.log_('closing an old connection');
            }
        };
    };
    Connection.prototype.connReceiver_ = function (conn) {
        var _this = this;
        return function (message) {
            if (_this.state_ != 2 /* DISCONNECTED */) {
                if (conn === _this.rx_) {
                    _this.onPrimaryMessageReceived_(message);
                }
                else if (conn === _this.secondaryConn_) {
                    _this.onSecondaryMessageReceived_(message);
                }
                else {
                    _this.log_('message on old connection');
                }
            }
        };
    };
    /**
     *
     * @param {Object} dataMsg An arbitrary data message to be sent to the server
     */
    Connection.prototype.sendRequest = function (dataMsg) {
        // wrap in a data message envelope and send it on
        var msg = { t: 'd', d: dataMsg };
        this.sendData_(msg);
    };
    Connection.prototype.tryCleanupConnection = function () {
        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {
            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);
            this.conn_ = this.secondaryConn_;
            this.secondaryConn_ = null;
            // the server will shutdown the old connection
        }
    };
    Connection.prototype.onSecondaryControl_ = function (controlData) {
        if (MESSAGE_TYPE in controlData) {
            var cmd = controlData[MESSAGE_TYPE];
            if (cmd === SWITCH_ACK) {
                this.upgradeIfSecondaryHealthy_();
            }
            else if (cmd === CONTROL_RESET) {
                // Most likely the session wasn't valid. Abandon the switch attempt
                this.log_('Got a reset on secondary, closing it');
                this.secondaryConn_.close();
                // If we were already using this connection for something, than we need to fully close
                if (this.tx_ === this.secondaryConn_ ||
                    this.rx_ === this.secondaryConn_) {
                    this.close();
                }
            }
            else if (cmd === CONTROL_PONG) {
                this.log_('got pong on secondary.');
                this.secondaryResponsesRequired_--;
                this.upgradeIfSecondaryHealthy_();
            }
        }
    };
    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {
        var layer = util_1.requireKey('t', parsedData);
        var data = util_1.requireKey('d', parsedData);
        if (layer == 'c') {
            this.onSecondaryControl_(data);
        }
        else if (layer == 'd') {
            // got a data message, but we're still second connection. Need to buffer it up
            this.pendingDataMessages.push(data);
        }
        else {
            throw new Error('Unknown protocol layer: ' + layer);
        }
    };
    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {
        if (this.secondaryResponsesRequired_ <= 0) {
            this.log_('Secondary connection is healthy.');
            this.isHealthy_ = true;
            this.secondaryConn_.markConnectionHealthy();
            this.proceedWithUpgrade_();
        }
        else {
            // Send a ping to make sure the connection is healthy.
            this.log_('sending ping on secondary.');
            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });
        }
    };
    Connection.prototype.proceedWithUpgrade_ = function () {
        // tell this connection to consider itself open
        this.secondaryConn_.start();
        // send ack
        this.log_('sending client ack on secondary');
        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });
        // send end packet on primary transport, switch to sending on this one
        // can receive on this one, buffer responses until end received on primary transport
        this.log_('Ending transmission on primary');
        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });
        this.tx_ = this.secondaryConn_;
        this.tryCleanupConnection();
    };
    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {
        // Must refer to parsedData properties in quotes, so closure doesn't touch them.
        var layer = util_1.requireKey('t', parsedData);
        var data = util_1.requireKey('d', parsedData);
        if (layer == 'c') {
            this.onControl_(data);
        }
        else if (layer == 'd') {
            this.onDataMessage_(data);
        }
    };
    Connection.prototype.onDataMessage_ = function (message) {
        this.onPrimaryResponse_();
        // We don't do anything with data messages, just kick them up a level
        this.onMessage_(message);
    };
    Connection.prototype.onPrimaryResponse_ = function () {
        if (!this.isHealthy_) {
            this.primaryResponsesRequired_--;
            if (this.primaryResponsesRequired_ <= 0) {
                this.log_('Primary connection is healthy.');
                this.isHealthy_ = true;
                this.conn_.markConnectionHealthy();
            }
        }
    };
    Connection.prototype.onControl_ = function (controlData) {
        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);
        if (MESSAGE_DATA in controlData) {
            var payload = controlData[MESSAGE_DATA];
            if (cmd === SERVER_HELLO) {
                this.onHandshake_(payload);
            }
            else if (cmd === END_TRANSMISSION) {
                this.log_('recvd end transmission on primary');
                this.rx_ = this.secondaryConn_;
                for (var i = 0; i < this.pendingDataMessages.length; ++i) {
                    this.onDataMessage_(this.pendingDataMessages[i]);
                }
                this.pendingDataMessages = [];
                this.tryCleanupConnection();
            }
            else if (cmd === CONTROL_SHUTDOWN) {
                // This was previously the 'onKill' callback passed to the lower-level connection
                // payload in this case is the reason for the shutdown. Generally a human-readable error
                this.onConnectionShutdown_(payload);
            }
            else if (cmd === CONTROL_RESET) {
                // payload in this case is the host we should contact
                this.onReset_(payload);
            }
            else if (cmd === CONTROL_ERROR) {
                util_1.error('Server Error: ' + payload);
            }
            else if (cmd === CONTROL_PONG) {
                this.log_('got pong on primary.');
                this.onPrimaryResponse_();
                this.sendPingOnPrimaryIfNecessary_();
            }
            else {
                util_1.error('Unknown control packet command: ' + cmd);
            }
        }
    };
    /**
     *
     * @param {Object} handshake The handshake data returned from the server
     * @private
     */
    Connection.prototype.onHandshake_ = function (handshake) {
        var timestamp = handshake.ts;
        var version = handshake.v;
        var host = handshake.h;
        this.sessionId = handshake.s;
        this.repoInfo_.updateHost(host);
        // if we've already closed the connection, then don't bother trying to progress further
        if (this.state_ == 0 /* CONNECTING */) {
            this.conn_.start();
            this.onConnectionEstablished_(this.conn_, timestamp);
            if (Constants_1.PROTOCOL_VERSION !== version) {
                util_1.warn('Protocol version mismatch detected');
            }
            // TODO: do we want to upgrade? when? maybe a delay?
            this.tryStartUpgrade_();
        }
    };
    Connection.prototype.tryStartUpgrade_ = function () {
        var conn = this.transportManager_.upgradeTransport();
        if (conn) {
            this.startUpgrade_(conn);
        }
    };
    Connection.prototype.startUpgrade_ = function (conn) {
        var _this = this;
        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);
        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we
        // can consider the transport healthy.
        this.secondaryResponsesRequired_ =
            conn['responsesRequiredToBeHealthy'] || 0;
        var onMessage = this.connReceiver_(this.secondaryConn_);
        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);
        this.secondaryConn_.open(onMessage, onDisconnect);
        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.
        util_1.setTimeoutNonBlocking(function () {
            if (_this.secondaryConn_) {
                _this.log_('Timed out trying to upgrade.');
                _this.secondaryConn_.close();
            }
        }, Math.floor(UPGRADE_TIMEOUT));
    };
    Connection.prototype.onReset_ = function (host) {
        this.log_('Reset packet received.  New host: ' + host);
        this.repoInfo_.updateHost(host);
        // TODO: if we're already "connected", we need to trigger a disconnect at the next layer up.
        // We don't currently support resets after the connection has already been established
        if (this.state_ === 1 /* CONNECTED */) {
            this.close();
        }
        else {
            // Close whatever connections we have open and start again.
            this.closeConnections_();
            this.start_();
        }
    };
    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {
        var _this = this;
        this.log_('Realtime connection established.');
        this.conn_ = conn;
        this.state_ = 1 /* CONNECTED */;
        if (this.onReady_) {
            this.onReady_(timestamp, this.sessionId);
            this.onReady_ = null;
        }
        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,
        // send some pings.
        if (this.primaryResponsesRequired_ === 0) {
            this.log_('Primary connection is healthy.');
            this.isHealthy_ = true;
        }
        else {
            util_1.setTimeoutNonBlocking(function () {
                _this.sendPingOnPrimaryIfNecessary_();
            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));
        }
    };
    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {
        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.
        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {
            this.log_('sending ping on primary.');
            this.sendData_({ t: 'c', d: { t: PING, d: {} } });
        }
    };
    Connection.prototype.onSecondaryConnectionLost_ = function () {
        var conn = this.secondaryConn_;
        this.secondaryConn_ = null;
        if (this.tx_ === conn || this.rx_ === conn) {
            // we are relying on this connection already in some capacity. Therefore, a failure is real
            this.close();
        }
    };
    /**
     *
     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if
     * we should flush the host cache
     * @private
     */
    Connection.prototype.onConnectionLost_ = function (everConnected) {
        this.conn_ = null;
        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting
        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.
        if (!everConnected && this.state_ === 0 /* CONNECTING */) {
            this.log_('Realtime connection failed.');
            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away
            if (this.repoInfo_.isCacheableHost()) {
                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);
                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com
                this.repoInfo_.internalHost = this.repoInfo_.host;
            }
        }
        else if (this.state_ === 1 /* CONNECTED */) {
            this.log_('Realtime connection lost.');
        }
        this.close();
    };
    /**
     *
     * @param {string} reason
     * @private
     */
    Connection.prototype.onConnectionShutdown_ = function (reason) {
        this.log_('Connection shutdown command received. Shutting down...');
        if (this.onKill_) {
            this.onKill_(reason);
            this.onKill_ = null;
        }
        // We intentionally don't want to fire onDisconnect (kill is a different case),
        // so clear the callback.
        this.onDisconnect_ = null;
        this.close();
    };
    Connection.prototype.sendData_ = function (data) {
        if (this.state_ !== 1 /* CONNECTED */) {
            throw 'Connection is not connected';
        }
        else {
            this.tx_.send(data);
        }
    };
    /**
     * Cleans up this connection, calling the appropriate callbacks
     */
    Connection.prototype.close = function () {
        if (this.state_ !== 2 /* DISCONNECTED */) {
            this.log_('Closing realtime connection.');
            this.state_ = 2 /* DISCONNECTED */;
            this.closeConnections_();
            if (this.onDisconnect_) {
                this.onDisconnect_();
                this.onDisconnect_ = null;
            }
        }
    };
    /**
     *
     * @private
     */
    Connection.prototype.closeConnections_ = function () {
        this.log_('Shutting down all connections');
        if (this.conn_) {
            this.conn_.close();
            this.conn_ = null;
        }
        if (this.secondaryConn_) {
            this.secondaryConn_.close();
            this.secondaryConn_ = null;
        }
        if (this.healthyTimeout_) {
            clearTimeout(this.healthyTimeout_);
            this.healthyTimeout_ = null;
        }
    };
    return Connection;
}());
exports.Connection = Connection;

//# sourceMappingURL=Connection.js.map


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
var CountedSet_1 = __webpack_require__(45);
var StatsManager_1 = __webpack_require__(25);
var PacketReceiver_1 = __webpack_require__(105);
var Constants_1 = __webpack_require__(13);
var util_2 = __webpack_require__(0);
var util_3 = __webpack_require__(0);
// URL query parameters associated with longpolling
exports.FIREBASE_LONGPOLL_START_PARAM = 'start';
exports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';
exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';
exports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';
exports.FIREBASE_LONGPOLL_ID_PARAM = 'id';
exports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';
exports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';
exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';
exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';
exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';
exports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';
exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';
exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';
//Data size constants.
//TODO: Perf: the maximum length actually differs from browser to browser.
// We should check what browser we're on and set accordingly.
var MAX_URL_DATA_SIZE = 1870;
var SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=
var MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;
/**
 * Keepalive period
 * send a fresh request at minimum every 25 seconds. Opera has a maximum request
 * length of 30 seconds that we can't exceed.
 * @const
 * @type {number}
 */
var KEEPALIVE_REQUEST_INTERVAL = 25000;
/**
 * How long to wait before aborting a long-polling connection attempt.
 * @const
 * @type {number}
 */
var LP_CONNECT_TIMEOUT = 30000;
/**
 * This class manages a single long-polling connection.
 *
 * @constructor
 * @implements {Transport}
 */
var BrowserPollConnection = /** @class */ (function () {
    /**
     * @param {string} connId An identifier for this connection, used for logging
     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.
     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing
     *                                         transport session
     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a
     *                                     connection previously
     */
    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {
        this.connId = connId;
        this.repoInfo = repoInfo;
        this.transportSessionId = transportSessionId;
        this.lastSessionId = lastSessionId;
        this.bytesSent = 0;
        this.bytesReceived = 0;
        this.everConnected_ = false;
        this.log_ = util_1.logWrapper(connId);
        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);
        this.urlFn = function (params) {
            return repoInfo.connectionURL(Constants_1.LONG_POLLING, params);
        };
    }
    /**
     *
     * @param {function(Object)} onMessage Callback when messages arrive
     * @param {function()} onDisconnect Callback with connection lost.
     */
    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {
        var _this = this;
        this.curSegmentNum = 0;
        this.onDisconnect_ = onDisconnect;
        this.myPacketOrderer = new PacketReceiver_1.PacketReceiver(onMessage);
        this.isClosed_ = false;
        this.connectTimeoutTimer_ = setTimeout(function () {
            _this.log_('Timed out trying to connect.');
            // Make sure we clear the host cache
            _this.onClosed_();
            _this.connectTimeoutTimer_ = null;
        }, Math.floor(LP_CONNECT_TIMEOUT));
        // Ensure we delay the creation of the iframe until the DOM is loaded.
        util_1.executeWhenDOMReady(function () {
            if (_this.isClosed_)
                return;
            //Set up a callback that gets triggered once a connection is set up.
            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var command = args[0], arg1 = args[1], arg2 = args[2], arg3 = args[3], arg4 = args[4];
                _this.incrementIncomingBytes_(args);
                if (!_this.scriptTagHolder)
                    return; // we closed the connection.
                if (_this.connectTimeoutTimer_) {
                    clearTimeout(_this.connectTimeoutTimer_);
                    _this.connectTimeoutTimer_ = null;
                }
                _this.everConnected_ = true;
                if (command == exports.FIREBASE_LONGPOLL_START_PARAM) {
                    _this.id = arg1;
                    _this.password = arg2;
                }
                else if (command === exports.FIREBASE_LONGPOLL_CLOSE_COMMAND) {
                    // Don't clear the host cache. We got a response from the server, so we know it's reachable
                    if (arg1) {
                        // We aren't expecting any more data (other than what the server's already in the process of sending us
                        // through our already open polls), so don't send any more.
                        _this.scriptTagHolder.sendNewPolls = false;
                        // arg1 in this case is the last response number sent by the server. We should try to receive
                        // all of the responses up to this one before closing
                        _this.myPacketOrderer.closeAfter(arg1, function () {
                            _this.onClosed_();
                        });
                    }
                    else {
                        _this.onClosed_();
                    }
                }
                else {
                    throw new Error('Unrecognized command received: ' + command);
                }
            }, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var pN = args[0], data = args[1];
                _this.incrementIncomingBytes_(args);
                _this.myPacketOrderer.handleResponse(pN, data);
            }, function () {
                _this.onClosed_();
            }, _this.urlFn);
            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results
            //from cache.
            var urlParams = {};
            urlParams[exports.FIREBASE_LONGPOLL_START_PARAM] = 't';
            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);
            if (_this.scriptTagHolder.uniqueCallbackIdentifier)
                urlParams[exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;
            urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;
            if (_this.transportSessionId) {
                urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;
            }
            if (_this.lastSessionId) {
                urlParams[Constants_1.LAST_SESSION_PARAM] = _this.lastSessionId;
            }
            if (!util_3.isNodeSdk() &&
                typeof location !== 'undefined' &&
                location.href &&
                location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {
                urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;
            }
            var connectURL = _this.urlFn(urlParams);
            _this.log_('Connecting via long-poll to ' + connectURL);
            _this.scriptTagHolder.addTag(connectURL, function () {
                /* do nothing */
            });
        });
    };
    /**
     * Call this when a handshake has completed successfully and we want to consider the connection established
     */
    BrowserPollConnection.prototype.start = function () {
        this.scriptTagHolder.startLongPoll(this.id, this.password);
        this.addDisconnectPingFrame(this.id, this.password);
    };
    /**
     * Forces long polling to be considered as a potential transport
     */
    BrowserPollConnection.forceAllow = function () {
        BrowserPollConnection.forceAllow_ = true;
    };
    /**
     * Forces longpolling to not be considered as a potential transport
     */
    BrowserPollConnection.forceDisallow = function () {
        BrowserPollConnection.forceDisallow_ = true;
    };
    // Static method, use string literal so it can be accessed in a generic way
    BrowserPollConnection.isAvailable = function () {
        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in
        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).
        return (BrowserPollConnection.forceAllow_ ||
            (!BrowserPollConnection.forceDisallow_ &&
                typeof document !== 'undefined' &&
                document.createElement != null &&
                !util_1.isChromeExtensionContentScript() &&
                !util_1.isWindowsStoreApp() &&
                !util_3.isNodeSdk()));
    };
    /**
     * No-op for polling
     */
    BrowserPollConnection.prototype.markConnectionHealthy = function () { };
    /**
     * Stops polling and cleans up the iframe
     * @private
     */
    BrowserPollConnection.prototype.shutdown_ = function () {
        this.isClosed_ = true;
        if (this.scriptTagHolder) {
            this.scriptTagHolder.close();
            this.scriptTagHolder = null;
        }
        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.
        if (this.myDisconnFrame) {
            document.body.removeChild(this.myDisconnFrame);
            this.myDisconnFrame = null;
        }
        if (this.connectTimeoutTimer_) {
            clearTimeout(this.connectTimeoutTimer_);
            this.connectTimeoutTimer_ = null;
        }
    };
    /**
     * Triggered when this transport is closed
     * @private
     */
    BrowserPollConnection.prototype.onClosed_ = function () {
        if (!this.isClosed_) {
            this.log_('Longpoll is closing itself');
            this.shutdown_();
            if (this.onDisconnect_) {
                this.onDisconnect_(this.everConnected_);
                this.onDisconnect_ = null;
            }
        }
    };
    /**
     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server
     * that we've left.
     */
    BrowserPollConnection.prototype.close = function () {
        if (!this.isClosed_) {
            this.log_('Longpoll is being closed.');
            this.shutdown_();
        }
    };
    /**
     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then
     * broken into chunks (since URLs have a small maximum length).
     * @param {!Object} data The JSON data to transmit.
     */
    BrowserPollConnection.prototype.send = function (data) {
        var dataStr = util_2.stringify(data);
        this.bytesSent += dataStr.length;
        this.stats_.incrementCounter('bytes_sent', dataStr.length);
        //first, lets get the base64-encoded data
        var base64data = util_2.base64Encode(dataStr);
        //We can only fit a certain amount in each URL, so we need to split this request
        //up into multiple pieces if it doesn't fit in one request.
        var dataSegs = util_1.splitStringBySize(base64data, MAX_PAYLOAD_SIZE);
        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number
        //of segments so that we can reassemble the packet on the server.
        for (var i = 0; i < dataSegs.length; i++) {
            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);
            this.curSegmentNum++;
        }
    };
    /**
     * This is how we notify the server that we're leaving.
     * We aren't able to send requests with DHTML on a window close event, but we can
     * trigger XHR requests in some browsers (everything but Opera basically).
     * @param {!string} id
     * @param {!string} pw
     */
    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {
        if (util_3.isNodeSdk())
            return;
        this.myDisconnFrame = document.createElement('iframe');
        var urlParams = {};
        urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';
        urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = id;
        urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = pw;
        this.myDisconnFrame.src = this.urlFn(urlParams);
        this.myDisconnFrame.style.display = 'none';
        document.body.appendChild(this.myDisconnFrame);
    };
    /**
     * Used to track the bytes received by this client
     * @param {*} args
     * @private
     */
    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {
        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.
        var bytesReceived = util_2.stringify(args).length;
        this.bytesReceived += bytesReceived;
        this.stats_.incrementCounter('bytes_received', bytesReceived);
    };
    return BrowserPollConnection;
}());
exports.BrowserPollConnection = BrowserPollConnection;
/*********************************************************************************************
 * A wrapper around an iframe that is used as a long-polling script holder.
 * @constructor
 *********************************************************************************************/
var FirebaseIFrameScriptHolder = /** @class */ (function () {
    /**
     * @param commandCB - The callback to be called when control commands are recevied from the server.
     * @param onMessageCB - The callback to be triggered when responses arrive from the server.
     * @param onDisconnect - The callback to be triggered when this tag holder is closed
     * @param urlFn - A function that provides the URL of the endpoint to send data to.
     */
    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {
        this.onDisconnect = onDisconnect;
        this.urlFn = urlFn;
        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause
        //problems in some browsers.
        /**
         * @type {CountedSet.<number, number>}
         */
        this.outstandingRequests = new CountedSet_1.CountedSet();
        //A queue of the pending segments waiting for transmission to the server.
        this.pendingSegs = [];
        //A serial number. We use this for two things:
        // 1) A way to ensure the browser doesn't cache responses to polls
        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The
        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute
        //    JSONP code in the order it was added to the iframe.
        this.currentSerial = Math.floor(Math.random() * 100000000);
        // This gets set to false when we're "closing down" the connection (e.g. we're switching transports but there's still
        // incoming data from the server that we're waiting for).
        this.sendNewPolls = true;
        if (!util_3.isNodeSdk()) {
            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the
            //iframes where we put the long-polling script tags. We have two callbacks:
            //   1) Command Callback - Triggered for control issues, like starting a connection.
            //   2) Message Callback - Triggered when new data arrives.
            this.uniqueCallbackIdentifier = util_1.LUIDGenerator();
            window[exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;
            window[exports.FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;
            //Create an iframe for us to add script tags to.
            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();
            // Set the iframe's contents.
            var script = '';
            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient
            // for ie9, but ie8 needs to do it again in the document itself.
            if (this.myIFrame.src &&
                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {
                var currentDomain = document.domain;
                script = '<script>document.domain="' + currentDomain + '";</script>';
            }
            var iframeContents = '<html><body>' + script + '</body></html>';
            try {
                this.myIFrame.doc.open();
                this.myIFrame.doc.write(iframeContents);
                this.myIFrame.doc.close();
            }
            catch (e) {
                util_1.log('frame writing exception');
                if (e.stack) {
                    util_1.log(e.stack);
                }
                util_1.log(e);
            }
        }
        else {
            this.commandCB = commandCB;
            this.onMessageCB = onMessageCB;
        }
    }
    /**
     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can
     * actually use.
     * @private
     * @return {Element}
     */
    FirebaseIFrameScriptHolder.createIFrame_ = function () {
        var iframe = document.createElement('iframe');
        iframe.style.display = 'none';
        // This is necessary in order to initialize the document inside the iframe
        if (document.body) {
            document.body.appendChild(iframe);
            try {
                // If document.domain has been modified in IE, this will throw an error, and we need to set the
                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute
                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.
                var a = iframe.contentWindow.document;
                if (!a) {
                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.
                    util_1.log('No IE domain setting required');
                }
            }
            catch (e) {
                var domain = document.domain;
                iframe.src =
                    "javascript:void((function(){document.open();document.domain='" +
                        domain +
                        "';document.close();})())";
            }
        }
        else {
            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this
            // never gets hit.
            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';
        }
        // Get the document of the iframe in a browser-specific way.
        if (iframe.contentDocument) {
            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari
        }
        else if (iframe.contentWindow) {
            iframe.doc = iframe.contentWindow.document; // Internet Explorer
        }
        else if (iframe.document) {
            iframe.doc = iframe.document; //others?
        }
        return iframe;
    };
    /**
     * Cancel all outstanding queries and remove the frame.
     */
    FirebaseIFrameScriptHolder.prototype.close = function () {
        var _this = this;
        //Mark this iframe as dead, so no new requests are sent.
        this.alive = false;
        if (this.myIFrame) {
            //We have to actually remove all of the html inside this iframe before removing it from the
            //window, or IE will continue loading and executing the script tags we've already added, which
            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.
            this.myIFrame.doc.body.innerHTML = '';
            setTimeout(function () {
                if (_this.myIFrame !== null) {
                    document.body.removeChild(_this.myIFrame);
                    _this.myIFrame = null;
                }
            }, Math.floor(0));
        }
        if (util_3.isNodeSdk() && this.myID) {
            var urlParams = {};
            urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';
            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;
            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;
            var theURL = this.urlFn(urlParams);
            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);
        }
        // Protect from being called recursively.
        var onDisconnect = this.onDisconnect;
        if (onDisconnect) {
            this.onDisconnect = null;
            onDisconnect();
        }
    };
    /**
     * Actually start the long-polling session by adding the first script tag(s) to the iframe.
     * @param {!string} id - The ID of this connection
     * @param {!string} pw - The password for this connection
     */
    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {
        this.myID = id;
        this.myPW = pw;
        this.alive = true;
        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.
        while (this.newRequest_()) { }
    };
    /**
     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't
     * too many outstanding requests and we are still alive.
     *
     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if
     * needed.
     */
    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {
        // We keep one outstanding request open all the time to receive data, but if we need to send data
        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically
        // close the old request.
        if (this.alive &&
            this.sendNewPolls &&
            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {
            //construct our url
            this.currentSerial++;
            var urlParams = {};
            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;
            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;
            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;
            var theURL = this.urlFn(urlParams);
            //Now add as much data as we can.
            var curDataString = '';
            var i = 0;
            while (this.pendingSegs.length > 0) {
                //first, lets see if the next segment will fit.
                var nextSeg = this.pendingSegs[0];
                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=
                    MAX_URL_DATA_SIZE) {
                    //great, the segment will fit. Lets append it.
                    var theSeg = this.pendingSegs.shift();
                    curDataString =
                        curDataString +
                            '&' +
                            exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +
                            i +
                            '=' +
                            theSeg.seg +
                            '&' +
                            exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +
                            i +
                            '=' +
                            theSeg.ts +
                            '&' +
                            exports.FIREBASE_LONGPOLL_DATA_PARAM +
                            i +
                            '=' +
                            theSeg.d;
                    i++;
                }
                else {
                    break;
                }
            }
            theURL = theURL + curDataString;
            this.addLongPollTag_(theURL, this.currentSerial);
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Queue a packet for transmission to the server.
     * @param segnum - A sequential id for this packet segment used for reassembly
     * @param totalsegs - The total number of segments in this packet
     * @param data - The data for this segment.
     */
    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {
        //add this to the queue of segments to send.
        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });
        //send the data immediately if there isn't already data being transmitted, unless
        //startLongPoll hasn't been called yet.
        if (this.alive) {
            this.newRequest_();
        }
    };
    /**
     * Add a script tag for a regular long-poll request.
     * @param {!string} url - The URL of the script tag.
     * @param {!number} serial - The serial number of the request.
     * @private
     */
    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {
        var _this = this;
        //remember that we sent this request.
        this.outstandingRequests.add(serial, 1);
        var doNewRequest = function () {
            _this.outstandingRequests.remove(serial);
            _this.newRequest_();
        };
        // If this request doesn't return on its own accord (by the server sending us some data), we'll
        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.
        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));
        var readyStateCB = function () {
            // Request completed.  Cancel the keepalive.
            clearTimeout(keepaliveTimeout);
            // Trigger a new request so we can continue receiving data.
            doNewRequest();
        };
        this.addTag(url, readyStateCB);
    };
    /**
     * Add an arbitrary script tag to the iframe.
     * @param {!string} url - The URL for the script tag source.
     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.
     */
    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {
        var _this = this;
        if (util_3.isNodeSdk()) {
            this.doNodeLongPoll(url, loadCB);
        }
        else {
            setTimeout(function () {
                try {
                    // if we're already closed, don't add this poll
                    if (!_this.sendNewPolls)
                        return;
                    var newScript_1 = _this.myIFrame.doc.createElement('script');
                    newScript_1.type = 'text/javascript';
                    newScript_1.async = true;
                    newScript_1.src = url;
                    newScript_1.onload = newScript_1.onreadystatechange = function () {
                        var rstate = newScript_1.readyState;
                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {
                            newScript_1.onload = newScript_1.onreadystatechange = null;
                            if (newScript_1.parentNode) {
                                newScript_1.parentNode.removeChild(newScript_1);
                            }
                            loadCB();
                        }
                    };
                    newScript_1.onerror = function () {
                        util_1.log('Long-poll script failed to load: ' + url);
                        _this.sendNewPolls = false;
                        _this.close();
                    };
                    _this.myIFrame.doc.body.appendChild(newScript_1);
                }
                catch (e) {
                    // TODO: we should make this error visible somehow
                }
            }, Math.floor(1));
        }
    };
    return FirebaseIFrameScriptHolder;
}());
exports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;

//# sourceMappingURL=BrowserPollConnection.js.map


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var app_1 = __webpack_require__(6);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var StatsManager_1 = __webpack_require__(25);
var Constants_1 = __webpack_require__(13);
var util_3 = __webpack_require__(0);
var storage_1 = __webpack_require__(12);
var util_4 = __webpack_require__(0);
var util_5 = __webpack_require__(0);
var WEBSOCKET_MAX_FRAME_SIZE = 16384;
var WEBSOCKET_KEEPALIVE_INTERVAL = 45000;
var WebSocketImpl = null;
if (typeof MozWebSocket !== 'undefined') {
    WebSocketImpl = MozWebSocket;
}
else if (typeof WebSocket !== 'undefined') {
    WebSocketImpl = WebSocket;
}
function setWebSocketImpl(impl) {
    WebSocketImpl = impl;
}
exports.setWebSocketImpl = setWebSocketImpl;
/**
 * Create a new websocket connection with the given callbacks.
 * @constructor
 * @implements {Transport}
 */
var WebSocketConnection = /** @class */ (function () {
    /**
     * @param {string} connId identifier for this transport
     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
     *                                         session
     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
     */
    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {
        this.connId = connId;
        this.keepaliveTimer = null;
        this.frames = null;
        this.totalFrames = 0;
        this.bytesSent = 0;
        this.bytesReceived = 0;
        this.log_ = util_2.logWrapper(this.connId);
        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);
        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);
    }
    /**
     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
     *                                         session
     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
     * @return {string} connection url
     * @private
     */
    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {
        var urlParams = {};
        urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;
        if (!util_5.isNodeSdk() &&
            typeof location !== 'undefined' &&
            location.href &&
            location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {
            urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;
        }
        if (transportSessionId) {
            urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = transportSessionId;
        }
        if (lastSessionId) {
            urlParams[Constants_1.LAST_SESSION_PARAM] = lastSessionId;
        }
        return repoInfo.connectionURL(Constants_1.WEBSOCKET, urlParams);
    };
    /**
     *
     * @param onMessage Callback when messages arrive
     * @param onDisconnect Callback with connection lost.
     */
    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {
        var _this = this;
        this.onDisconnect = onDisconnect;
        this.onMessage = onMessage;
        this.log_('Websocket connecting to ' + this.connURL);
        this.everConnected_ = false;
        // Assume failure until proven otherwise.
        storage_1.PersistentStorage.set('previous_websocket_failure', true);
        try {
            if (util_5.isNodeSdk()) {
                var device = util_3.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';
                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>
                var options = {
                    headers: {
                        'User-Agent': "Firebase/" + Constants_1.PROTOCOL_VERSION + "/" + app_1.default.SDK_VERSION + "/" + process.platform + "/" + device
                    }
                };
                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.
                var env = process['env'];
                var proxy = this.connURL.indexOf('wss://') == 0
                    ? env['HTTPS_PROXY'] || env['https_proxy']
                    : env['HTTP_PROXY'] || env['http_proxy'];
                if (proxy) {
                    options['proxy'] = { origin: proxy };
                }
                this.mySock = new WebSocketImpl(this.connURL, [], options);
            }
            else {
                this.mySock = new WebSocketImpl(this.connURL);
            }
        }
        catch (e) {
            this.log_('Error instantiating WebSocket.');
            var error = e.message || e.data;
            if (error) {
                this.log_(error);
            }
            this.onClosed_();
            return;
        }
        this.mySock.onopen = function () {
            _this.log_('Websocket connected.');
            _this.everConnected_ = true;
        };
        this.mySock.onclose = function () {
            _this.log_('Websocket connection was disconnected.');
            _this.mySock = null;
            _this.onClosed_();
        };
        this.mySock.onmessage = function (m) {
            _this.handleIncomingFrame(m);
        };
        this.mySock.onerror = function (e) {
            _this.log_('WebSocket error.  Closing connection.');
            var error = e.message || e.data;
            if (error) {
                _this.log_(error);
            }
            _this.onClosed_();
        };
    };
    /**
     * No-op for websockets, we don't need to do anything once the connection is confirmed as open
     */
    WebSocketConnection.prototype.start = function () { };
    WebSocketConnection.forceDisallow = function () {
        WebSocketConnection.forceDisallow_ = true;
    };
    WebSocketConnection.isAvailable = function () {
        var isOldAndroid = false;
        if (typeof navigator !== 'undefined' && navigator.userAgent) {
            var oldAndroidRegex = /Android ([0-9]{0,}\.[0-9]{0,})/;
            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);
            if (oldAndroidMatch && oldAndroidMatch.length > 1) {
                if (parseFloat(oldAndroidMatch[1]) < 4.4) {
                    isOldAndroid = true;
                }
            }
        }
        return (!isOldAndroid &&
            WebSocketImpl !== null &&
            !WebSocketConnection.forceDisallow_);
    };
    /**
     * Returns true if we previously failed to connect with this transport.
     * @return {boolean}
     */
    WebSocketConnection.previouslyFailed = function () {
        // If our persistent storage is actually only in-memory storage,
        // we default to assuming that it previously failed to be safe.
        return (storage_1.PersistentStorage.isInMemoryStorage ||
            storage_1.PersistentStorage.get('previous_websocket_failure') === true);
    };
    WebSocketConnection.prototype.markConnectionHealthy = function () {
        storage_1.PersistentStorage.remove('previous_websocket_failure');
    };
    WebSocketConnection.prototype.appendFrame_ = function (data) {
        this.frames.push(data);
        if (this.frames.length == this.totalFrames) {
            var fullMess = this.frames.join('');
            this.frames = null;
            var jsonMess = util_4.jsonEval(fullMess);
            //handle the message
            this.onMessage(jsonMess);
        }
    };
    /**
     * @param {number} frameCount The number of frames we are expecting from the server
     * @private
     */
    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {
        this.totalFrames = frameCount;
        this.frames = [];
    };
    /**
     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1
     * @param {!String} data
     * @return {?String} Any remaining data to be process, or null if there is none
     * @private
     */
    WebSocketConnection.prototype.extractFrameCount_ = function (data) {
        util_1.assert(this.frames === null, 'We already have a frame buffer');
        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced
        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508
        if (data.length <= 6) {
            var frameCount = Number(data);
            if (!isNaN(frameCount)) {
                this.handleNewFrameCount_(frameCount);
                return null;
            }
        }
        this.handleNewFrameCount_(1);
        return data;
    };
    /**
     * Process a websocket frame that has arrived from the server.
     * @param mess The frame data
     */
    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {
        if (this.mySock === null)
            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.
        var data = mess['data'];
        this.bytesReceived += data.length;
        this.stats_.incrementCounter('bytes_received', data.length);
        this.resetKeepAlive();
        if (this.frames !== null) {
            // we're buffering
            this.appendFrame_(data);
        }
        else {
            // try to parse out a frame count, otherwise, assume 1 and process it
            var remainingData = this.extractFrameCount_(data);
            if (remainingData !== null) {
                this.appendFrame_(remainingData);
            }
        }
    };
    /**
     * Send a message to the server
     * @param {Object} data The JSON object to transmit
     */
    WebSocketConnection.prototype.send = function (data) {
        this.resetKeepAlive();
        var dataStr = util_4.stringify(data);
        this.bytesSent += dataStr.length;
        this.stats_.incrementCounter('bytes_sent', dataStr.length);
        //We can only fit a certain amount in each websocket frame, so we need to split this request
        //up into multiple pieces if it doesn't fit in one request.
        var dataSegs = util_2.splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);
        //Send the length header
        if (dataSegs.length > 1) {
            this.sendString_(String(dataSegs.length));
        }
        //Send the actual data in segments.
        for (var i = 0; i < dataSegs.length; i++) {
            this.sendString_(dataSegs[i]);
        }
    };
    WebSocketConnection.prototype.shutdown_ = function () {
        this.isClosed_ = true;
        if (this.keepaliveTimer) {
            clearInterval(this.keepaliveTimer);
            this.keepaliveTimer = null;
        }
        if (this.mySock) {
            this.mySock.close();
            this.mySock = null;
        }
    };
    WebSocketConnection.prototype.onClosed_ = function () {
        if (!this.isClosed_) {
            this.log_('WebSocket is closing itself');
            this.shutdown_();
            // since this is an internal close, trigger the close listener
            if (this.onDisconnect) {
                this.onDisconnect(this.everConnected_);
                this.onDisconnect = null;
            }
        }
    };
    /**
     * External-facing close handler.
     * Close the websocket and kill the connection.
     */
    WebSocketConnection.prototype.close = function () {
        if (!this.isClosed_) {
            this.log_('WebSocket is being closed');
            this.shutdown_();
        }
    };
    /**
     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after
     * the last activity.
     */
    WebSocketConnection.prototype.resetKeepAlive = function () {
        var _this = this;
        clearInterval(this.keepaliveTimer);
        this.keepaliveTimer = setInterval(function () {
            //If there has been no websocket activity for a while, send a no-op
            if (_this.mySock) {
                _this.sendString_('0');
            }
            _this.resetKeepAlive();
        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));
    };
    /**
     * Send a string over the websocket.
     *
     * @param {string} str String to send.
     * @private
     */
    WebSocketConnection.prototype.sendString_ = function (str) {
        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()
        // calls for some unknown reason.  We treat these as an error and disconnect.
        // See https://app.asana.com/0/58926111402292/68021340250410
        try {
            this.mySock.send(str);
        }
        catch (e) {
            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');
            setTimeout(this.onClosed_.bind(this), 0);
        }
    };
    /**
     * Number of response before we consider the connection "healthy."
     * @type {number}
     */
    WebSocketConnection.responsesRequiredToBeHealthy = 2;
    /**
     * Time to wait for the connection te become healthy before giving up.
     * @type {number}
     */
    WebSocketConnection.healthyTimeout = 30000;
    return WebSocketConnection;
}());
exports.WebSocketConnection = WebSocketConnection;

//# sourceMappingURL=WebSocketConnection.js.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Interface defining the set of actions that can be performed against the Firebase server
 * (basically corresponds to our wire protocol).
 *
 * @interface
 */
var ServerActions = /** @class */ (function () {
    function ServerActions() {
    }
    /**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     * @param {string=} hash
     */
    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };
    /**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, ?string)} onComplete
     * @param {string=} hash
     */
    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };
    /**
     * Refreshes the auth token for the current connection.
     * @param {string} token The authentication token
     */
    ServerActions.prototype.refreshAuthToken = function (token) { };
    /**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     */
    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };
    /**
     * @param {string} pathString
     * @param {*} data
     * @param {function(string, string)=} onComplete
     */
    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };
    /**
     * @param {string} pathString
     * @param {function(string, string)=} onComplete
     */
    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };
    /**
     * @param {Object.<string, *>} stats
     */
    ServerActions.prototype.reportStats = function (stats) { };
    return ServerActions;
}());
exports.ServerActions = ServerActions;

//# sourceMappingURL=ServerActions.js.map


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var IndexedFilter_1 = __webpack_require__(24);
var PriorityIndex_1 = __webpack_require__(3);
var Node_1 = __webpack_require__(5);
var ChildrenNode_1 = __webpack_require__(4);
/**
 * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node
 *
 * @constructor
 * @implements {NodeFilter}
 */
var RangedFilter = /** @class */ (function () {
    /**
     * @param {!QueryParams} params
     */
    function RangedFilter(params) {
        this.indexedFilter_ = new IndexedFilter_1.IndexedFilter(params.getIndex());
        this.index_ = params.getIndex();
        this.startPost_ = RangedFilter.getStartPost_(params);
        this.endPost_ = RangedFilter.getEndPost_(params);
    }
    /**
     * @return {!NamedNode}
     */
    RangedFilter.prototype.getStartPost = function () {
        return this.startPost_;
    };
    /**
     * @return {!NamedNode}
     */
    RangedFilter.prototype.getEndPost = function () {
        return this.endPost_;
    };
    /**
     * @param {!NamedNode} node
     * @return {boolean}
     */
    RangedFilter.prototype.matches = function (node) {
        return (this.index_.compare(this.getStartPost(), node) <= 0 &&
            this.index_.compare(node, this.getEndPost()) <= 0);
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
        if (!this.matches(new Node_1.NamedNode(key, newChild))) {
            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        }
        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
        if (newSnap.isLeafNode()) {
            // Make sure we have a children node with the correct index, not a leaf node;
            newSnap = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        }
        var filtered = newSnap.withIndex(this.index_);
        // Don't support priorities on queries
        filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);
        var self = this;
        newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
            if (!self.matches(new Node_1.NamedNode(key, childNode))) {
                filtered = filtered.updateImmediateChild(key, ChildrenNode_1.ChildrenNode.EMPTY_NODE);
            }
        });
        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
        // Don't support priorities on queries
        return oldSnap;
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.filtersNodes = function () {
        return true;
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.getIndexedFilter = function () {
        return this.indexedFilter_;
    };
    /**
     * @inheritDoc
     */
    RangedFilter.prototype.getIndex = function () {
        return this.index_;
    };
    /**
     * @param {!QueryParams} params
     * @return {!NamedNode}
     * @private
     */
    RangedFilter.getStartPost_ = function (params) {
        if (params.hasStart()) {
            var startName = params.getIndexStartName();
            return params.getIndex().makePost(params.getIndexStartValue(), startName);
        }
        else {
            return params.getIndex().minPost();
        }
    };
    /**
     * @param {!QueryParams} params
     * @return {!NamedNode}
     * @private
     */
    RangedFilter.getEndPost_ = function (params) {
        if (params.hasEnd()) {
            var endName = params.getIndexEndName();
            return params.getIndex().makePost(params.getIndexEndValue(), endName);
        }
        else {
            return params.getIndex().maxPost();
        }
    };
    return RangedFilter;
}());
exports.RangedFilter = RangedFilter;

//# sourceMappingURL=RangedFilter.js.map


/***/ }),
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module.exports = __webpack_require__(79);


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var app_1 = __webpack_require__(6);
var Database_1 = __webpack_require__(32);
exports.Database = Database_1.Database;
var Query_1 = __webpack_require__(36);
exports.Query = Query_1.Query;
var Reference_1 = __webpack_require__(21);
exports.Reference = Reference_1.Reference;
var util_1 = __webpack_require__(1);
exports.enableLogging = util_1.enableLogging;
var RepoManager_1 = __webpack_require__(26);
var INTERNAL = __webpack_require__(111);
var TEST_ACCESS = __webpack_require__(112);
var util_2 = __webpack_require__(0);
var ServerValue = Database_1.Database.ServerValue;
exports.ServerValue = ServerValue;
function registerDatabase(instance) {
    // Register the Database Service with the 'firebase' namespace.
    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager_1.RepoManager.getInstance().databaseFromApp(app, url); }, 
    // firebase.database namespace properties
    {
        Reference: Reference_1.Reference,
        Query: Query_1.Query,
        Database: Database_1.Database,
        enableLogging: util_1.enableLogging,
        INTERNAL: INTERNAL,
        ServerValue: ServerValue,
        TEST_ACCESS: TEST_ACCESS
    }, null, true);
    if (util_2.isNodeSdk()) {
        module.exports = namespace;
    }
}
exports.registerDatabase = registerDatabase;
registerDatabase(app_1.default);
var DataSnapshot_1 = __webpack_require__(22);
exports.DataSnapshot = DataSnapshot_1.DataSnapshot;
var onDisconnect_1 = __webpack_require__(35);
exports.OnDisconnect = onDisconnect_1.OnDisconnect;

//# sourceMappingURL=index.js.map


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Wraps a DOM Storage object and:
 * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.
 * - prefixes names with "firebase:" to avoid collisions with app data.
 *
 * We automatically (see storage.js) create two such wrappers, one for sessionStorage,
 * and one for localStorage.
 *
 * @constructor
 */
var DOMStorageWrapper = /** @class */ (function () {
    /**
     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)
     */
    function DOMStorageWrapper(domStorage_) {
        this.domStorage_ = domStorage_;
        // Use a prefix to avoid collisions with other stuff saved by the app.
        this.prefix_ = 'firebase:';
    }
    /**
     * @param {string} key The key to save the value under
     * @param {?Object} value The value being stored, or null to remove the key.
     */
    DOMStorageWrapper.prototype.set = function (key, value) {
        if (value == null) {
            this.domStorage_.removeItem(this.prefixedName_(key));
        }
        else {
            this.domStorage_.setItem(this.prefixedName_(key), util_1.stringify(value));
        }
    };
    /**
     * @param {string} key
     * @return {*} The value that was stored under this key, or null
     */
    DOMStorageWrapper.prototype.get = function (key) {
        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));
        if (storedVal == null) {
            return null;
        }
        else {
            return util_1.jsonEval(storedVal);
        }
    };
    /**
     * @param {string} key
     */
    DOMStorageWrapper.prototype.remove = function (key) {
        this.domStorage_.removeItem(this.prefixedName_(key));
    };
    /**
     * @param {string} name
     * @return {string}
     */
    DOMStorageWrapper.prototype.prefixedName_ = function (name) {
        return this.prefix_ + name;
    };
    DOMStorageWrapper.prototype.toString = function () {
        return this.domStorage_.toString();
    };
    return DOMStorageWrapper;
}());
exports.DOMStorageWrapper = DOMStorageWrapper;

//# sourceMappingURL=DOMStorageWrapper.js.map


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * An in-memory storage implementation that matches the API of DOMStorageWrapper
 * (TODO: create interface for both to implement).
 *
 * @constructor
 */
var MemoryStorage = /** @class */ (function () {
    function MemoryStorage() {
        this.cache_ = {};
        this.isInMemoryStorage = true;
    }
    MemoryStorage.prototype.set = function (key, value) {
        if (value == null) {
            delete this.cache_[key];
        }
        else {
            this.cache_[key] = value;
        }
    };
    MemoryStorage.prototype.get = function (key) {
        if (util_1.contains(this.cache_, key)) {
            return this.cache_[key];
        }
        return null;
    };
    MemoryStorage.prototype.remove = function (key) {
        delete this.cache_[key];
    };
    return MemoryStorage;
}());
exports.MemoryStorage = MemoryStorage;

//# sourceMappingURL=MemoryStorage.js.map


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var TransactionResult = /** @class */ (function () {
    /**
     * A type for the resolve value of Firebase.transaction.
     * @constructor
     * @dict
     * @param {boolean} committed
     * @param {DataSnapshot} snapshot
     */
    function TransactionResult(committed, snapshot) {
        this.committed = committed;
        this.snapshot = snapshot;
    }
    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
    // for end-users
    TransactionResult.prototype.toJSON = function () {
        util_1.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);
        return { committed: this.committed, snapshot: this.snapshot.toJSON() };
    };
    return TransactionResult;
}());
exports.TransactionResult = TransactionResult;

//# sourceMappingURL=TransactionResult.js.map


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Fancy ID generator that creates 20-character string identifiers with the
 * following properties:
 *
 * 1. They're based on timestamp so that they sort *after* any existing ids.
 * 2. They contain 72-bits of random data after the timestamp so that IDs won't
 *    collide with other clients' IDs.
 * 3. They sort *lexicographically* (so the timestamp is converted to characters
 *    that will sort properly).
 * 4. They're monotonically increasing. Even if you generate more than one in
 *    the same timestamp, the latter ones will sort after the former ones. We do
 *    this by using the previous random bits but "incrementing" them by 1 (only
 *    in the case of a timestamp collision).
 */
exports.nextPushId = (function () {
    // Modeled after base64 web-safe chars, but ordered by ASCII.
    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';
    // Timestamp of last push, used to prevent local collisions if you push twice
    // in one ms.
    var lastPushTime = 0;
    // We generate 72-bits of randomness which get turned into 12 characters and
    // appended to the timestamp to prevent collisions with other clients. We
    // store the last characters we generated because in the event of a collision,
    // we'll use those same characters except "incremented" by one.
    var lastRandChars = [];
    return function (now) {
        var duplicateTime = now === lastPushTime;
        lastPushTime = now;
        var i;
        var timeStampChars = new Array(8);
        for (i = 7; i >= 0; i--) {
            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);
            // NOTE: Can't use << here because javascript will convert to int and lose
            // the upper bits.
            now = Math.floor(now / 64);
        }
        util_1.assert(now === 0, 'Cannot push at time == 0');
        var id = timeStampChars.join('');
        if (!duplicateTime) {
            for (i = 0; i < 12; i++) {
                lastRandChars[i] = Math.floor(Math.random() * 64);
            }
        }
        else {
            // If the timestamp hasn't changed since last push, use the same random
            // number, except incremented by 1.
            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {
                lastRandChars[i] = 0;
            }
            lastRandChars[i]++;
        }
        for (i = 0; i < 12; i++) {
            id += PUSH_CHARS.charAt(lastRandChars[i]);
        }
        util_1.assert(id.length === 20, 'nextPushId: Length should be 20.');
        return id;
    };
})();

//# sourceMappingURL=NextPushId.js.map


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var DataSnapshot_1 = __webpack_require__(22);
var Event_1 = __webpack_require__(85);
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
/**
 * Represents registration for 'value' events.
 */
var ValueEventRegistration = /** @class */ (function () {
    /**
     * @param {?function(!DataSnapshot)} callback_
     * @param {?function(Error)} cancelCallback_
     * @param {?Object} context_
     */
    function ValueEventRegistration(callback_, cancelCallback_, context_) {
        this.callback_ = callback_;
        this.cancelCallback_ = cancelCallback_;
        this.context_ = context_;
    }
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.respondsTo = function (eventType) {
        return eventType === 'value';
    };
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.createEvent = function (change, query) {
        var index = query.getQueryParams().getIndex();
        return new Event_1.DataEvent('value', this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, query.getRef(), index));
    };
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.getEventRunner = function (eventData) {
        var ctx = this.context_;
        if (eventData.getEventType() === 'cancel') {
            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');
            var cancelCB_1 = this.cancelCallback_;
            return function () {
                // We know that error exists, we checked above that this is a cancel event
                cancelCB_1.call(ctx, eventData.error);
            };
        }
        else {
            var cb_1 = this.callback_;
            return function () {
                cb_1.call(ctx, eventData.snapshot);
            };
        }
    };
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {
        if (this.cancelCallback_) {
            return new Event_1.CancelEvent(this, error, path);
        }
        else {
            return null;
        }
    };
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.matches = function (other) {
        if (!(other instanceof ValueEventRegistration)) {
            return false;
        }
        else if (!other.callback_ || !this.callback_) {
            // If no callback specified, we consider it to match any callback.
            return true;
        }
        else {
            return (other.callback_ === this.callback_ && other.context_ === this.context_);
        }
    };
    /**
     * @inheritDoc
     */
    ValueEventRegistration.prototype.hasAnyCallback = function () {
        return this.callback_ !== null;
    };
    return ValueEventRegistration;
}());
exports.ValueEventRegistration = ValueEventRegistration;
/**
 * Represents the registration of 1 or more child_xxx events.
 *
 * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you
 * register a group of callbacks together in the future.
 *
 * @constructor
 * @implements {EventRegistration}
 */
var ChildEventRegistration = /** @class */ (function () {
    /**
     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_
     * @param {?function(Error)} cancelCallback_
     * @param {Object=} context_
     */
    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {
        this.callbacks_ = callbacks_;
        this.cancelCallback_ = cancelCallback_;
        this.context_ = context_;
    }
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.respondsTo = function (eventType) {
        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;
        eventToCheck =
            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;
        return util_1.contains(this.callbacks_, eventToCheck);
    };
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {
        if (this.cancelCallback_) {
            return new Event_1.CancelEvent(this, error, path);
        }
        else {
            return null;
        }
    };
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.createEvent = function (change, query) {
        util_2.assert(change.childName != null, 'Child events should have a childName.');
        var ref = query.getRef().child(/** @type {!string} */ (change.childName));
        var index = query.getQueryParams().getIndex();
        return new Event_1.DataEvent(change.type, this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, ref, index), change.prevName);
    };
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.getEventRunner = function (eventData) {
        var ctx = this.context_;
        if (eventData.getEventType() === 'cancel') {
            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');
            var cancelCB_2 = this.cancelCallback_;
            return function () {
                // We know that error exists, we checked above that this is a cancel event
                cancelCB_2.call(ctx, eventData.error);
            };
        }
        else {
            var cb_2 = this.callbacks_[eventData.eventType];
            return function () {
                cb_2.call(ctx, eventData.snapshot, eventData.prevName);
            };
        }
    };
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.matches = function (other) {
        if (other instanceof ChildEventRegistration) {
            if (!this.callbacks_ || !other.callbacks_) {
                return true;
            }
            else if (this.context_ === other.context_) {
                var otherCount = util_1.getCount(other.callbacks_);
                var thisCount = util_1.getCount(this.callbacks_);
                if (otherCount === thisCount) {
                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.
                    //  If event types don't match, not a match
                    // If count is not 1, exact match across all
                    if (otherCount === 1) {
                        var otherKey /** @type {!string} */ = util_1.getAnyKey(other.callbacks_);
                        var thisKey /** @type {!string} */ = util_1.getAnyKey(this.callbacks_);
                        return (thisKey === otherKey &&
                            (!other.callbacks_[otherKey] ||
                                !this.callbacks_[thisKey] ||
                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));
                    }
                    else {
                        // Exact match on each key.
                        return util_1.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });
                    }
                }
            }
        }
        return false;
    };
    /**
     * @inheritDoc
     */
    ChildEventRegistration.prototype.hasAnyCallback = function () {
        return this.callbacks_ !== null;
    };
    return ChildEventRegistration;
}());
exports.ChildEventRegistration = ChildEventRegistration;

//# sourceMappingURL=EventRegistration.js.map


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
/**
 * Encapsulates the data needed to raise an event
 * @implements {Event}
 */
var DataEvent = /** @class */ (function () {
    /**
     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed
     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided
     * @param {!DataSnapshot} snapshot The data backing the event
     * @param {?string=} prevName Optional, the name of the previous child for child_* events.
     */
    function DataEvent(eventType, eventRegistration, snapshot, prevName) {
        this.eventType = eventType;
        this.eventRegistration = eventRegistration;
        this.snapshot = snapshot;
        this.prevName = prevName;
    }
    /**
     * @inheritDoc
     */
    DataEvent.prototype.getPath = function () {
        var ref = this.snapshot.getRef();
        if (this.eventType === 'value') {
            return ref.path;
        }
        else {
            return ref.getParent().path;
        }
    };
    /**
     * @inheritDoc
     */
    DataEvent.prototype.getEventType = function () {
        return this.eventType;
    };
    /**
     * @inheritDoc
     */
    DataEvent.prototype.getEventRunner = function () {
        return this.eventRegistration.getEventRunner(this);
    };
    /**
     * @inheritDoc
     */
    DataEvent.prototype.toString = function () {
        return (this.getPath().toString() +
            ':' +
            this.eventType +
            ':' +
            util_1.stringify(this.snapshot.exportVal()));
    };
    return DataEvent;
}());
exports.DataEvent = DataEvent;
var CancelEvent = /** @class */ (function () {
    /**
     * @param {EventRegistration} eventRegistration
     * @param {Error} error
     * @param {!Path} path
     */
    function CancelEvent(eventRegistration, error, path) {
        this.eventRegistration = eventRegistration;
        this.error = error;
        this.path = path;
    }
    /**
     * @inheritDoc
     */
    CancelEvent.prototype.getPath = function () {
        return this.path;
    };
    /**
     * @inheritDoc
     */
    CancelEvent.prototype.getEventType = function () {
        return 'cancel';
    };
    /**
     * @inheritDoc
     */
    CancelEvent.prototype.getEventRunner = function () {
        return this.eventRegistration.getEventRunner(this);
    };
    /**
     * @inheritDoc
     */
    CancelEvent.prototype.toString = function () {
        return this.path.toString() + ':cancel';
    };
    return CancelEvent;
}());
exports.CancelEvent = CancelEvent;

//# sourceMappingURL=Event.js.map


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var AckUserWrite_1 = __webpack_require__(87);
var ChildrenNode_1 = __webpack_require__(4);
var util_3 = __webpack_require__(0);
var ImmutableTree_1 = __webpack_require__(23);
var ListenComplete_1 = __webpack_require__(88);
var Merge_1 = __webpack_require__(89);
var Operation_1 = __webpack_require__(8);
var Overwrite_1 = __webpack_require__(46);
var Path_1 = __webpack_require__(2);
var SyncPoint_1 = __webpack_require__(47);
var WriteTree_1 = __webpack_require__(95);
/**
 * SyncTree is the central class for managing event callback registration, data caching, views
 * (query processing), and event generation.  There are typically two SyncTree instances for
 * each Repo, one for the normal Firebase data, and one for the .info data.
 *
 * It has a number of responsibilities, including:
 *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).
 *  - Applying and caching data changes for user set(), transaction(), and update() calls
 *    (applyUserOverwrite(), applyUserMerge()).
 *  - Applying and caching data changes for server data changes (applyServerOverwrite(),
 *    applyServerMerge()).
 *  - Generating user-facing events for server and user changes (all of the apply* methods
 *    return the set of events that need to be raised as a result).
 *  - Maintaining the appropriate set of server listens to ensure we are always subscribed
 *    to the correct set of paths and queries to satisfy the current set of user event
 *    callbacks (listens are started/stopped using the provided listenProvider).
 *
 * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual
 * events are returned to the caller rather than raised synchronously.
 *
 * @constructor
 */
var SyncTree = /** @class */ (function () {
    /**
     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening
     *   to server data.
     */
    function SyncTree(listenProvider_) {
        this.listenProvider_ = listenProvider_;
        /**
         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.
         * @type {!ImmutableTree.<!SyncPoint>}
         * @private
         */
        this.syncPointTree_ = ImmutableTree_1.ImmutableTree.Empty;
        /**
         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).
         * @type {!WriteTree}
         * @private
         */
        this.pendingWriteTree_ = new WriteTree_1.WriteTree();
        this.tagToQueryMap_ = {};
        this.queryToTagMap_ = {};
    }
    /**
     * Apply the data changes for a user-generated set() or transaction() call.
     *
     * @param {!Path} path
     * @param {!Node} newData
     * @param {number} writeId
     * @param {boolean=} visible
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {
        // Record pending write.
        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);
        if (!visible) {
            return [];
        }
        else {
            return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.User, path, newData));
        }
    };
    /**
     * Apply the data from a user-generated update() call
     *
     * @param {!Path} path
     * @param {!Object.<string, !Node>} changedChildren
     * @param {!number} writeId
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {
        // Record pending merge.
        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);
        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);
        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.User, path, changeTree));
    };
    /**
     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().
     *
     * @param {!number} writeId
     * @param {boolean=} revert True if the given write failed and needs to be reverted
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.ackUserWrite = function (writeId, revert) {
        if (revert === void 0) { revert = false; }
        var write = this.pendingWriteTree_.getWrite(writeId);
        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);
        if (!needToReevaluate) {
            return [];
        }
        else {
            var affectedTree_1 = ImmutableTree_1.ImmutableTree.Empty;
            if (write.snap != null) {
                // overwrite
                affectedTree_1 = affectedTree_1.set(Path_1.Path.Empty, true);
            }
            else {
                util_3.forEach(write.children, function (pathString, node) {
                    affectedTree_1 = affectedTree_1.set(new Path_1.Path(pathString), node);
                });
            }
            return this.applyOperationToSyncPoints_(new AckUserWrite_1.AckUserWrite(write.path, affectedTree_1, revert));
        }
    };
    /**
     * Apply new server data for the specified path..
     *
     * @param {!Path} path
     * @param {!Node} newData
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyServerOverwrite = function (path, newData) {
        return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.Server, path, newData));
    };
    /**
     * Apply new server data to be merged in at the specified path.
     *
     * @param {!Path} path
     * @param {!Object.<string, !Node>} changedChildren
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {
        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);
        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.Server, path, changeTree));
    };
    /**
     * Apply a listen complete for a query
     *
     * @param {!Path} path
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyListenComplete = function (path) {
        return this.applyOperationToSyncPoints_(new ListenComplete_1.ListenComplete(Operation_1.OperationSource.Server, path));
    };
    /**
     * Apply new server data for the specified tagged query.
     *
     * @param {!Path} path
     * @param {!Node} snap
     * @param {!number} tag
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {
        var queryKey = this.queryKeyForTag_(tag);
        if (queryKey != null) {
            var r = SyncTree.parseQueryKey_(queryKey);
            var queryPath = r.path, queryId = r.queryId;
            var relativePath = Path_1.Path.relativePath(queryPath, path);
            var op = new Overwrite_1.Overwrite(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);
            return this.applyTaggedOperation_(queryPath, op);
        }
        else {
            // Query must have been removed already
            return [];
        }
    };
    /**
     * Apply server data to be merged in for the specified tagged query.
     *
     * @param {!Path} path
     * @param {!Object.<string, !Node>} changedChildren
     * @param {!number} tag
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {
        var queryKey = this.queryKeyForTag_(tag);
        if (queryKey) {
            var r = SyncTree.parseQueryKey_(queryKey);
            var queryPath = r.path, queryId = r.queryId;
            var relativePath = Path_1.Path.relativePath(queryPath, path);
            var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);
            var op = new Merge_1.Merge(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);
            return this.applyTaggedOperation_(queryPath, op);
        }
        else {
            // We've already removed the query. No big deal, ignore the update
            return [];
        }
    };
    /**
     * Apply a listen complete for a tagged query
     *
     * @param {!Path} path
     * @param {!number} tag
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {
        var queryKey = this.queryKeyForTag_(tag);
        if (queryKey) {
            var r = SyncTree.parseQueryKey_(queryKey);
            var queryPath = r.path, queryId = r.queryId;
            var relativePath = Path_1.Path.relativePath(queryPath, path);
            var op = new ListenComplete_1.ListenComplete(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath);
            return this.applyTaggedOperation_(queryPath, op);
        }
        else {
            // We've already removed the query. No big deal, ignore the update
            return [];
        }
    };
    /**
     * Add an event callback for the specified query.
     *
     * @param {!Query} query
     * @param {!EventRegistration} eventRegistration
     * @return {!Array.<!Event>} Events to raise.
     */
    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {
        var path = query.path;
        var serverCache = null;
        var foundAncestorDefaultView = false;
        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.
        // Consider optimizing this once there's a better understanding of what actual behavior will be.
        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {
            var relativePath = Path_1.Path.relativePath(pathToSyncPoint, path);
            serverCache = serverCache || sp.getCompleteServerCache(relativePath);
            foundAncestorDefaultView =
                foundAncestorDefaultView || sp.hasCompleteView();
        });
        var syncPoint = this.syncPointTree_.get(path);
        if (!syncPoint) {
            syncPoint = new SyncPoint_1.SyncPoint();
            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);
        }
        else {
            foundAncestorDefaultView =
                foundAncestorDefaultView || syncPoint.hasCompleteView();
            serverCache = serverCache || syncPoint.getCompleteServerCache(Path_1.Path.Empty);
        }
        var serverCacheComplete;
        if (serverCache != null) {
            serverCacheComplete = true;
        }
        else {
            serverCacheComplete = false;
            serverCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
            var subtree = this.syncPointTree_.subtree(path);
            subtree.foreachChild(function (childName, childSyncPoint) {
                var completeCache = childSyncPoint.getCompleteServerCache(Path_1.Path.Empty);
                if (completeCache) {
                    serverCache = serverCache.updateImmediateChild(childName, completeCache);
                }
            });
        }
        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);
        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {
            // We need to track a tag for this query
            var queryKey = SyncTree.makeQueryKey_(query);
            util_1.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');
            var tag = SyncTree.getNextQueryTag_();
            this.queryToTagMap_[queryKey] = tag;
            // Coerce to string to avoid sparse arrays.
            this.tagToQueryMap_['_' + tag] = queryKey;
        }
        var writesCache = this.pendingWriteTree_.childWrites(path);
        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);
        if (!viewAlreadyExists && !foundAncestorDefaultView) {
            var view /** @type !View */ = syncPoint.viewForQuery(query);
            events = events.concat(this.setupListener_(query, view));
        }
        return events;
    };
    /**
     * Remove event callback(s).
     *
     * If query is the default query, we'll check all queries for the specified eventRegistration.
     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.
     *
     * @param {!Query} query
     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.
     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.
     */
    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {
        var _this = this;
        // Find the syncPoint first. Then deal with whether or not it has matching listeners
        var path = query.path;
        var maybeSyncPoint = this.syncPointTree_.get(path);
        var cancelEvents = [];
        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without
        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and
        // not loadsAllData().
        if (maybeSyncPoint &&
            (query.queryIdentifier() === 'default' ||
                maybeSyncPoint.viewExistsForQuery(query))) {
            /**
             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}
             */
            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);
            if (maybeSyncPoint.isEmpty()) {
                this.syncPointTree_ = this.syncPointTree_.remove(path);
            }
            var removed = removedAndEvents.removed;
            cancelEvents = removedAndEvents.events;
            // We may have just removed one of many listeners and can short-circuit this whole process
            // We may also not have removed a default listener, in which case all of the descendant listeners should already be
            // properly set up.
            //
            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of
            // queryId === 'default'
            var removingDefault = -1 !==
                removed.findIndex(function (query) {
                    return query.getQueryParams().loadsAllData();
                });
            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {
                return parentSyncPoint.hasCompleteView();
            });
            if (removingDefault && !covered) {
                var subtree = this.syncPointTree_.subtree(path);
                // There are potentially child listeners. Determine what if any listens we need to send before executing the
                // removal
                if (!subtree.isEmpty()) {
                    // We need to fold over our subtree and collect the listeners to send
                    var newViews = this.collectDistinctViewsForSubTree_(subtree);
                    // Ok, we've collected all the listens we need. Set them up.
                    for (var i = 0; i < newViews.length; ++i) {
                        var view = newViews[i], newQuery = view.getQuery();
                        var listener = this.createListenerForView_(view);
                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);
                    }
                }
                else {
                    // There's nothing below us, so nothing we need to start listening on
                }
            }
            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query
            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.
            // Also, note that if we have a cancelError, it's already been removed at the provider level.
            if (!covered && removed.length > 0 && !cancelError) {
                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one
                // default. Otherwise, we need to iterate through and cancel each individual query
                if (removingDefault) {
                    // We don't tag default listeners
                    var defaultTag = null;
                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);
                }
                else {
                    removed.forEach(function (queryToRemove) {
                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];
                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);
                    });
                }
            }
            // Now, clear all of the tags we're tracking for the removed listens
            this.removeTags_(removed);
        }
        else {
            // No-op, this listener must've been already removed
        }
        return cancelEvents;
    };
    /**
     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above
     * it, but as this is only used by transaction code, that should always be the case anyways.
     *
     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.
     * @param {!Path} path The path to the data we want
     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded
     * @return {?Node}
     */
    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {
        var includeHiddenSets = true;
        var writeTree = this.pendingWriteTree_;
        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {
            var relativePath = Path_1.Path.relativePath(pathSoFar, path);
            var serverCache = syncPoint.getCompleteServerCache(relativePath);
            if (serverCache) {
                return serverCache;
            }
        });
        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);
    };
    /**
     * This collapses multiple unfiltered views into a single view, since we only need a single
     * listener for them.
     *
     * @param {!ImmutableTree.<!SyncPoint>} subtree
     * @return {!Array.<!View>}
     * @private
     */
    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {
        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {
            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {
                var completeView = maybeChildSyncPoint.getCompleteView();
                return [completeView];
            }
            else {
                // No complete view here, flatten any deeper listens into an array
                var views_1 = [];
                if (maybeChildSyncPoint) {
                    views_1 = maybeChildSyncPoint.getQueryViews();
                }
                util_3.forEach(childMap, function (key, childViews) {
                    views_1 = views_1.concat(childViews);
                });
                return views_1;
            }
        });
    };
    /**
     * @param {!Array.<!Query>} queries
     * @private
     */
    SyncTree.prototype.removeTags_ = function (queries) {
        for (var j = 0; j < queries.length; ++j) {
            var removedQuery = queries[j];
            if (!removedQuery.getQueryParams().loadsAllData()) {
                // We should have a tag for this
                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);
                var removedQueryTag = this.queryToTagMap_[removedQueryKey];
                delete this.queryToTagMap_[removedQueryKey];
                delete this.tagToQueryMap_['_' + removedQueryTag];
            }
        }
    };
    /**
     * Normalizes a query to a query we send the server for listening
     * @param {!Query} query
     * @return {!Query} The normalized query
     * @private
     */
    SyncTree.queryForListening_ = function (query) {
        if (query.getQueryParams().loadsAllData() &&
            !query.getQueryParams().isDefault()) {
            // We treat queries that load all data as default queries
            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits
            // from Query
            return /** @type {!Query} */ query.getRef();
        }
        else {
            return query;
        }
    };
    /**
     * For a given new listen, manage the de-duplication of outstanding subscriptions.
     *
     * @param {!Query} query
     * @param {!View} view
     * @return {!Array.<!Event>} This method can return events to support synchronous data sources
     * @private
     */
    SyncTree.prototype.setupListener_ = function (query, view) {
        var path = query.path;
        var tag = this.tagForQuery_(query);
        var listener = this.createListenerForView_(view);
        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);
        var subtree = this.syncPointTree_.subtree(path);
        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we
        // may need to shadow other listens as well.
        if (tag) {
            util_1.assert(!subtree.value.hasCompleteView(), "If we're adding a query, it shouldn't be shadowed");
        }
        else {
            // Shadow everything at or below this location, this is a default listener.
            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {
                if (!relativePath.isEmpty() &&
                    maybeChildSyncPoint &&
                    maybeChildSyncPoint.hasCompleteView()) {
                    return [maybeChildSyncPoint.getCompleteView().getQuery()];
                }
                else {
                    // No default listener here, flatten any deeper queries into an array
                    var queries_1 = [];
                    if (maybeChildSyncPoint) {
                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));
                    }
                    util_3.forEach(childMap, function (key, childQueries) {
                        queries_1 = queries_1.concat(childQueries);
                    });
                    return queries_1;
                }
            });
            for (var i = 0; i < queriesToStop.length; ++i) {
                var queryToStop = queriesToStop[i];
                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));
            }
        }
        return events;
    };
    /**
     *
     * @param {!View} view
     * @return {{hashFn: function(), onComplete: function(!string, *)}}
     * @private
     */
    SyncTree.prototype.createListenerForView_ = function (view) {
        var _this = this;
        var query = view.getQuery();
        var tag = this.tagForQuery_(query);
        return {
            hashFn: function () {
                var cache = view.getServerCache() || ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                return cache.hash();
            },
            onComplete: function (status) {
                if (status === 'ok') {
                    if (tag) {
                        return _this.applyTaggedListenComplete(query.path, tag);
                    }
                    else {
                        return _this.applyListenComplete(query.path);
                    }
                }
                else {
                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.
                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children
                    var error = util_2.errorForServerCode(status, query);
                    return _this.removeEventRegistration(query, 
                    /*eventRegistration*/ null, error);
                }
            }
        };
    };
    /**
     * Given a query, computes a "queryKey" suitable for use in our queryToTagMap_.
     * @private
     * @param {!Query} query
     * @return {string}
     */
    SyncTree.makeQueryKey_ = function (query) {
        return query.path.toString() + '$' + query.queryIdentifier();
    };
    /**
     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.
     * @private
     * @param {!string} queryKey
     * @return {{queryId: !string, path: !Path}}
     */
    SyncTree.parseQueryKey_ = function (queryKey) {
        var splitIndex = queryKey.indexOf('$');
        util_1.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');
        return {
            queryId: queryKey.substr(splitIndex + 1),
            path: new Path_1.Path(queryKey.substr(0, splitIndex))
        };
    };
    /**
     * Return the query associated with the given tag, if we have one
     * @param {!number} tag
     * @return {?string}
     * @private
     */
    SyncTree.prototype.queryKeyForTag_ = function (tag) {
        return this.tagToQueryMap_['_' + tag];
    };
    /**
     * Return the tag associated with the given query.
     * @param {!Query} query
     * @return {?number}
     * @private
     */
    SyncTree.prototype.tagForQuery_ = function (query) {
        var queryKey = SyncTree.makeQueryKey_(query);
        return util_3.safeGet(this.queryToTagMap_, queryKey);
    };
    /**
     * Static accessor for query tags.
     * @return {number}
     * @private
     */
    SyncTree.getNextQueryTag_ = function () {
        return SyncTree.nextQueryTag_++;
    };
    /**
     * A helper method to apply tagged operations
     *
     * @param {!Path} queryPath
     * @param {!Operation} operation
     * @return {!Array.<!Event>}
     * @private
     */
    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {
        var syncPoint = this.syncPointTree_.get(queryPath);
        util_1.assert(syncPoint, "Missing sync point for query tag that we're tracking");
        var writesCache = this.pendingWriteTree_.childWrites(queryPath);
        return syncPoint.applyOperation(operation, writesCache, 
        /*serverCache=*/ null);
    };
    /**
     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.
     *
     * NOTES:
     * - Descendant SyncPoints will be visited first (since we raise events depth-first).
  
     * - We call applyOperation() on each SyncPoint passing three things:
     *   1. A version of the Operation that has been made relative to the SyncPoint location.
     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.
     *   3. A snapshot Node with cached server data, if we have it.
  
     * - We concatenate all of the events returned by each SyncPoint and return the result.
     *
     * @param {!Operation} operation
     * @return {!Array.<!Event>}
     * @private
     */
    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {
        return this.applyOperationHelper_(operation, this.syncPointTree_, 
        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path_1.Path.Empty));
    };
    /**
     * Recursive helper for applyOperationToSyncPoints_
     *
     * @private
     * @param {!Operation} operation
     * @param {ImmutableTree.<!SyncPoint>} syncPointTree
     * @param {?Node} serverCache
     * @param {!WriteTreeRef} writesCache
     * @return {!Array.<!Event>}
     */
    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {
        if (operation.path.isEmpty()) {
            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);
        }
        else {
            var syncPoint = syncPointTree.get(Path_1.Path.Empty);
            // If we don't have cached server data, see if we can get it from this SyncPoint.
            if (serverCache == null && syncPoint != null) {
                serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);
            }
            var events = [];
            var childName = operation.path.getFront();
            var childOperation = operation.operationForChild(childName);
            var childTree = syncPointTree.children.get(childName);
            if (childTree && childOperation) {
                var childServerCache = serverCache
                    ? serverCache.getImmediateChild(childName)
                    : null;
                var childWritesCache = writesCache.child(childName);
                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));
            }
            if (syncPoint) {
                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));
            }
            return events;
        }
    };
    /**
     * Recursive helper for applyOperationToSyncPoints_
     *
     * @private
     * @param {!Operation} operation
     * @param {ImmutableTree.<!SyncPoint>} syncPointTree
     * @param {?Node} serverCache
     * @param {!WriteTreeRef} writesCache
     * @return {!Array.<!Event>}
     */
    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {
        var _this = this;
        var syncPoint = syncPointTree.get(Path_1.Path.Empty);
        // If we don't have cached server data, see if we can get it from this SyncPoint.
        if (serverCache == null && syncPoint != null) {
            serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);
        }
        var events = [];
        syncPointTree.children.inorderTraversal(function (childName, childTree) {
            var childServerCache = serverCache
                ? serverCache.getImmediateChild(childName)
                : null;
            var childWritesCache = writesCache.child(childName);
            var childOperation = operation.operationForChild(childName);
            if (childOperation) {
                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));
            }
        });
        if (syncPoint) {
            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));
        }
        return events;
    };
    /**
     * Static tracker for next query tag.
     * @type {number}
     * @private
     */
    SyncTree.nextQueryTag_ = 1;
    return SyncTree;
}());
exports.SyncTree = SyncTree;

//# sourceMappingURL=SyncTree.js.map


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Path_1 = __webpack_require__(2);
var Operation_1 = __webpack_require__(8);
var AckUserWrite = /** @class */ (function () {
    /**
     *
     * @param {!Path} path
     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.
     * @param {!boolean} revert
     */
    function AckUserWrite(
        /**@inheritDoc */ path, 
        /**@inheritDoc */ affectedTree, 
        /**@inheritDoc */ revert) {
        this.path = path;
        this.affectedTree = affectedTree;
        this.revert = revert;
        /** @inheritDoc */
        this.type = Operation_1.OperationType.ACK_USER_WRITE;
        /** @inheritDoc */
        this.source = Operation_1.OperationSource.User;
    }
    /**
     * @inheritDoc
     */
    AckUserWrite.prototype.operationForChild = function (childName) {
        if (!this.path.isEmpty()) {
            util_1.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');
            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);
        }
        else if (this.affectedTree.value != null) {
            util_1.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');
            // All child locations are affected as well; just return same operation.
            return this;
        }
        else {
            var childTree = this.affectedTree.subtree(new Path_1.Path(childName));
            return new AckUserWrite(Path_1.Path.Empty, childTree, this.revert);
        }
    };
    return AckUserWrite;
}());
exports.AckUserWrite = AckUserWrite;

//# sourceMappingURL=AckUserWrite.js.map


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Path_1 = __webpack_require__(2);
var Operation_1 = __webpack_require__(8);
/**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @constructor
 * @implements {Operation}
 */
var ListenComplete = /** @class */ (function () {
    function ListenComplete(source, path) {
        this.source = source;
        this.path = path;
        /** @inheritDoc */
        this.type = Operation_1.OperationType.LISTEN_COMPLETE;
    }
    ListenComplete.prototype.operationForChild = function (childName) {
        if (this.path.isEmpty()) {
            return new ListenComplete(this.source, Path_1.Path.Empty);
        }
        else {
            return new ListenComplete(this.source, this.path.popFront());
        }
    };
    return ListenComplete;
}());
exports.ListenComplete = ListenComplete;

//# sourceMappingURL=ListenComplete.js.map


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Operation_1 = __webpack_require__(8);
var Overwrite_1 = __webpack_require__(46);
var Path_1 = __webpack_require__(2);
var util_1 = __webpack_require__(0);
/**
 * @param {!OperationSource} source
 * @param {!Path} path
 * @param {!ImmutableTree.<!Node>} children
 * @constructor
 * @implements {Operation}
 */
var Merge = /** @class */ (function () {
    function Merge(
        /**@inheritDoc */ source, 
        /**@inheritDoc */ path, 
        /**@inheritDoc */ children) {
        this.source = source;
        this.path = path;
        this.children = children;
        /** @inheritDoc */
        this.type = Operation_1.OperationType.MERGE;
    }
    /**
     * @inheritDoc
     */
    Merge.prototype.operationForChild = function (childName) {
        if (this.path.isEmpty()) {
            var childTree = this.children.subtree(new Path_1.Path(childName));
            if (childTree.isEmpty()) {
                // This child is unaffected
                return null;
            }
            else if (childTree.value) {
                // We have a snapshot for the child in question.  This becomes an overwrite of the child.
                return new Overwrite_1.Overwrite(this.source, Path_1.Path.Empty, childTree.value);
            }
            else {
                // This is a merge at a deeper level
                return new Merge(this.source, Path_1.Path.Empty, childTree);
            }
        }
        else {
            util_1.assert(this.path.getFront() === childName, "Can't get a merge for a child not on the path of the operation");
            return new Merge(this.source, this.path.popFront(), this.children);
        }
    };
    /**
     * @inheritDoc
     */
    Merge.prototype.toString = function () {
        return ('Operation(' +
            this.path +
            ': ' +
            this.source.toString() +
            ' merge: ' +
            this.children.toString() +
            ')');
    };
    return Merge;
}());
exports.Merge = Merge;

//# sourceMappingURL=Merge.js.map


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var IndexedFilter_1 = __webpack_require__(24);
var ViewProcessor_1 = __webpack_require__(91);
var ChildrenNode_1 = __webpack_require__(4);
var CacheNode_1 = __webpack_require__(18);
var ViewCache_1 = __webpack_require__(48);
var EventGenerator_1 = __webpack_require__(94);
var util_1 = __webpack_require__(0);
var Operation_1 = __webpack_require__(8);
var Change_1 = __webpack_require__(9);
var PriorityIndex_1 = __webpack_require__(3);
/**
 * A view represents a specific location and query that has 1 or more event registrations.
 *
 * It does several things:
 *  - Maintains the list of event registrations for this location/query.
 *  - Maintains a cache of the data visible for this location/query.
 *  - Applies new operations (via applyOperation), updates the cache, and based on the event
 *    registrations returns the set of events to be raised.
 * @constructor
 */
var View = /** @class */ (function () {
    /**
     *
     * @param {!Query} query_
     * @param {!ViewCache} initialViewCache
     */
    function View(query_, initialViewCache) {
        this.query_ = query_;
        this.eventRegistrations_ = [];
        var params = this.query_.getQueryParams();
        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());
        var filter = params.getNodeFilter();
        /**
         * @type {ViewProcessor}
         * @private
         */
        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);
        var initialServerCache = initialViewCache.getServerCache();
        var initialEventCache = initialViewCache.getEventCache();
        // Don't filter server node with other filter than index, wait for tagged listen
        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);
        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);
        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());
        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());
        /**
         * @type {!ViewCache}
         * @private
         */
        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);
        /**
         * @type {!EventGenerator}
         * @private
         */
        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);
    }
    /**
     * @return {!Query}
     */
    View.prototype.getQuery = function () {
        return this.query_;
    };
    /**
     * @return {?Node}
     */
    View.prototype.getServerCache = function () {
        return this.viewCache_.getServerCache().getNode();
    };
    /**
     * @param {!Path} path
     * @return {?Node}
     */
    View.prototype.getCompleteServerCache = function (path) {
        var cache = this.viewCache_.getCompleteServerSnap();
        if (cache) {
            // If this isn't a "loadsAllData" view, then cache isn't actually a complete cache and
            // we need to see if it contains the child we're interested in.
            if (this.query_.getQueryParams().loadsAllData() ||
                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {
                return cache.getChild(path);
            }
        }
        return null;
    };
    /**
     * @return {boolean}
     */
    View.prototype.isEmpty = function () {
        return this.eventRegistrations_.length === 0;
    };
    /**
     * @param {!EventRegistration} eventRegistration
     */
    View.prototype.addEventRegistration = function (eventRegistration) {
        this.eventRegistrations_.push(eventRegistration);
    };
    /**
     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.
     */
    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {
        var cancelEvents = [];
        if (cancelError) {
            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');
            var path_1 = this.query_.path;
            this.eventRegistrations_.forEach(function (registration) {
                cancelError /** @type {!Error} */ = cancelError;
                var maybeEvent = registration.createCancelEvent(cancelError, path_1);
                if (maybeEvent) {
                    cancelEvents.push(maybeEvent);
                }
            });
        }
        if (eventRegistration) {
            var remaining = [];
            for (var i = 0; i < this.eventRegistrations_.length; ++i) {
                var existing = this.eventRegistrations_[i];
                if (!existing.matches(eventRegistration)) {
                    remaining.push(existing);
                }
                else if (eventRegistration.hasAnyCallback()) {
                    // We're removing just this one
                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));
                    break;
                }
            }
            this.eventRegistrations_ = remaining;
        }
        else {
            this.eventRegistrations_ = [];
        }
        return cancelEvents;
    };
    /**
     * Applies the given Operation, updates our cache, and returns the appropriate events.
     *
     * @param {!Operation} operation
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeServerCache
     * @return {!Array.<!Event>}
     */
    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {
        if (operation.type === Operation_1.OperationType.MERGE &&
            operation.source.queryId !== null) {
            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');
            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');
        }
        var oldViewCache = this.viewCache_;
        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);
        this.processor_.assertIndexed(result.viewCache);
        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||
            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');
        this.viewCache_ = result.viewCache;
        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);
    };
    /**
     * @param {!EventRegistration} registration
     * @return {!Array.<!Event>}
     */
    View.prototype.getInitialEvents = function (registration) {
        var eventSnap = this.viewCache_.getEventCache();
        var initialChanges = [];
        if (!eventSnap.getNode().isLeafNode()) {
            var eventNode = eventSnap.getNode();
            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {
                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));
            });
        }
        if (eventSnap.isFullyInitialized()) {
            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));
        }
        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);
    };
    /**
     * @private
     * @param {!Array.<!Change>} changes
     * @param {!Node} eventCache
     * @param {EventRegistration=} eventRegistration
     * @return {!Array.<!Event>}
     */
    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {
        var registrations = eventRegistration
            ? [eventRegistration]
            : this.eventRegistrations_;
        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);
    };
    return View;
}());
exports.View = View;

//# sourceMappingURL=View.js.map


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Operation_1 = __webpack_require__(8);
var util_1 = __webpack_require__(0);
var ChildChangeAccumulator_1 = __webpack_require__(92);
var Change_1 = __webpack_require__(9);
var ChildrenNode_1 = __webpack_require__(4);
var KeyIndex_1 = __webpack_require__(10);
var ImmutableTree_1 = __webpack_require__(23);
var Path_1 = __webpack_require__(2);
var CompleteChildSource_1 = __webpack_require__(93);
/**
 * @constructor
 * @struct
 */
var ProcessorResult = /** @class */ (function () {
    /**
     * @param {!ViewCache} viewCache
     * @param {!Array.<!Change>} changes
     */
    function ProcessorResult(viewCache, changes) {
        this.viewCache = viewCache;
        this.changes = changes;
    }
    return ProcessorResult;
}());
exports.ProcessorResult = ProcessorResult;
/**
 * @constructor
 */
var ViewProcessor = /** @class */ (function () {
    /**
     * @param {!NodeFilter} filter_
     */
    function ViewProcessor(filter_) {
        this.filter_ = filter_;
    }
    /**
     * @param {!ViewCache} viewCache
     */
    ViewProcessor.prototype.assertIndexed = function (viewCache) {
        util_1.assert(viewCache
            .getEventCache()
            .getNode()
            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');
        util_1.assert(viewCache
            .getServerCache()
            .getNode()
            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');
    };
    /**
     * @param {!ViewCache} oldViewCache
     * @param {!Operation} operation
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @return {!ProcessorResult}
     */
    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {
        var accumulator = new ChildChangeAccumulator_1.ChildChangeAccumulator();
        var newViewCache, filterServerNode;
        if (operation.type === Operation_1.OperationType.OVERWRITE) {
            var overwrite = operation;
            if (overwrite.source.fromUser) {
                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);
            }
            else {
                util_1.assert(overwrite.source.fromServer, 'Unknown source.');
                // We filter the node if it's a tagged update or the node has been previously filtered  and the
                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered
                // again
                filterServerNode =
                    overwrite.source.tagged ||
                        (oldViewCache.getServerCache().isFiltered() &&
                            !overwrite.path.isEmpty());
                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);
            }
        }
        else if (operation.type === Operation_1.OperationType.MERGE) {
            var merge = operation;
            if (merge.source.fromUser) {
                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);
            }
            else {
                util_1.assert(merge.source.fromServer, 'Unknown source.');
                // We filter the node if it's a tagged update or the node has been previously filtered
                filterServerNode =
                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();
                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);
            }
        }
        else if (operation.type === Operation_1.OperationType.ACK_USER_WRITE) {
            var ackUserWrite = operation;
            if (!ackUserWrite.revert) {
                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);
            }
            else {
                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);
            }
        }
        else if (operation.type === Operation_1.OperationType.LISTEN_COMPLETE) {
            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);
        }
        else {
            throw util_1.assertionError('Unknown operation type: ' + operation.type);
        }
        var changes = accumulator.getChanges();
        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);
        return new ProcessorResult(newViewCache, changes);
    };
    /**
     * @param {!ViewCache} oldViewCache
     * @param {!ViewCache} newViewCache
     * @param {!Array.<!Change>} accumulator
     * @private
     */
    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {
        var eventSnap = newViewCache.getEventCache();
        if (eventSnap.isFullyInitialized()) {
            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();
            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();
            if (accumulator.length > 0 ||
                !oldViewCache.getEventCache().isFullyInitialized() ||
                (isLeafOrEmpty &&
                    !eventSnap
                        .getNode()
                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||
                !eventSnap
                    .getNode()
                    .getPriority()
                    .equals(oldCompleteSnap.getPriority())) {
                accumulator.push(Change_1.Change.valueChange(
                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));
            }
        }
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} changePath
     * @param {!WriteTreeRef} writesCache
     * @param {!CompleteChildSource} source
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {
        var oldEventSnap = viewCache.getEventCache();
        if (writesCache.shadowingWrite(changePath) != null) {
            // we have a shadowing write, ignore changes
            return viewCache;
        }
        else {
            var newEventCache = void 0, serverNode = void 0;
            if (changePath.isEmpty()) {
                // TODO: figure out how this plays with "sliding ack windows"
                util_1.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');
                if (viewCache.getServerCache().isFiltered()) {
                    // We need to special case this, because we need to only apply writes to complete children, or
                    // we might end up raising events for incomplete children. If the server data is filtered deep
                    // writes cannot be guaranteed to be complete
                    var serverCache = viewCache.getCompleteServerSnap();
                    var completeChildren = serverCache instanceof ChildrenNode_1.ChildrenNode
                        ? serverCache
                        : ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);
                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);
                }
                else {
                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);
                }
            }
            else {
                var childKey = changePath.getFront();
                if (childKey == '.priority') {
                    util_1.assert(changePath.getLength() == 1, "Can't have a priority with additional path components");
                    var oldEventNode = oldEventSnap.getNode();
                    serverNode = viewCache.getServerCache().getNode();
                    // we might have overwrites for this priority
                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);
                    if (updatedPriority != null) {
                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);
                    }
                    else {
                        // priority didn't change, keep old node
                        newEventCache = oldEventSnap.getNode();
                    }
                }
                else {
                    var childChangePath = changePath.popFront();
                    // update child
                    var newEventChild = void 0;
                    if (oldEventSnap.isCompleteForChild(childKey)) {
                        serverNode = viewCache.getServerCache().getNode();
                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);
                        if (eventChildUpdate != null) {
                            newEventChild = oldEventSnap
                                .getNode()
                                .getImmediateChild(childKey)
                                .updateChild(childChangePath, eventChildUpdate);
                        }
                        else {
                            // Nothing changed, just keep the old child
                            newEventChild = oldEventSnap
                                .getNode()
                                .getImmediateChild(childKey);
                        }
                    }
                    else {
                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());
                    }
                    if (newEventChild != null) {
                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);
                    }
                    else {
                        // no complete child available or no change
                        newEventCache = oldEventSnap.getNode();
                    }
                }
            }
            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());
        }
    };
    /**
     * @param {!ViewCache} oldViewCache
     * @param {!Path} changePath
     * @param {!Node} changedSnap
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {boolean} filterServerNode
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {
        var oldServerSnap = oldViewCache.getServerCache();
        var newServerCache;
        var serverFilter = filterServerNode
            ? this.filter_
            : this.filter_.getIndexedFilter();
        if (changePath.isEmpty()) {
            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);
        }
        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {
            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update
            var newServerNode = oldServerSnap
                .getNode()
                .updateChild(changePath, changedSnap);
            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);
        }
        else {
            var childKey = changePath.getFront();
            if (!oldServerSnap.isCompleteForPath(changePath) &&
                changePath.getLength() > 1) {
                // We don't update incomplete nodes with updates intended for other listeners
                return oldViewCache;
            }
            var childChangePath = changePath.popFront();
            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);
            var newChildNode = childNode.updateChild(childChangePath, changedSnap);
            if (childKey == '.priority') {
                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);
            }
            else {
                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, null);
            }
        }
        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());
        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);
        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);
    };
    /**
     * @param {!ViewCache} oldViewCache
     * @param {!Path} changePath
     * @param {!Node} changedSnap
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {
        var oldEventSnap = oldViewCache.getEventCache();
        var newViewCache, newEventCache;
        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);
        if (changePath.isEmpty()) {
            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);
            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());
        }
        else {
            var childKey = changePath.getFront();
            if (childKey === '.priority') {
                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);
                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());
            }
            else {
                var childChangePath = changePath.popFront();
                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);
                var newChild = void 0;
                if (childChangePath.isEmpty()) {
                    // Child overwrite, we can replace the child
                    newChild = changedSnap;
                }
                else {
                    var childNode = source.getCompleteChild(childKey);
                    if (childNode != null) {
                        if (childChangePath.getBack() === '.priority' &&
                            childNode.getChild(childChangePath.parent()).isEmpty()) {
                            // This is a priority update on an empty node. If this node exists on the server, the
                            // server will send down the priority in the update, so ignore for now
                            newChild = childNode;
                        }
                        else {
                            newChild = childNode.updateChild(childChangePath, changedSnap);
                        }
                    }
                    else {
                        // There is no complete child node available
                        newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                    }
                }
                if (!oldChild.equals(newChild)) {
                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);
                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());
                }
                else {
                    newViewCache = oldViewCache;
                }
            }
        }
        return newViewCache;
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {string} childKey
     * @return {boolean}
     * @private
     */
    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {
        return viewCache.getEventCache().isCompleteForChild(childKey);
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {ImmutableTree.<!Node>} changedChildren
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {
        var _this = this;
        // HACK: In the case of a limit query, there may be some changes that bump things out of the
        // window leaving room for new items.  It's important we process these changes first, so we
        // iterate the changes twice, first processing any that affect items currently in view.
        // TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but
        // not the other.
        var curViewCache = viewCache;
        changedChildren.foreach(function (relativePath, childNode) {
            var writePath = path.child(relativePath);
            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {
                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);
            }
        });
        changedChildren.foreach(function (relativePath, childNode) {
            var writePath = path.child(relativePath);
            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {
                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);
            }
        });
        return curViewCache;
    };
    /**
     * @param {!Node} node
     * @param {ImmutableTree.<!Node>} merge
     * @return {!Node}
     * @private
     */
    ViewProcessor.prototype.applyMerge_ = function (node, merge) {
        merge.foreach(function (relativePath, childNode) {
            node = node.updateChild(relativePath, childNode);
        });
        return node;
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!ImmutableTree.<!Node>} changedChildren
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} serverCache
     * @param {boolean} filterServerNode
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {
        var _this = this;
        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and
        // wait for the complete data update coming soon.
        if (viewCache
            .getServerCache()
            .getNode()
            .isEmpty() &&
            !viewCache.getServerCache().isFullyInitialized()) {
            return viewCache;
        }
        // HACK: In the case of a limit query, there may be some changes that bump things out of the
        // window leaving room for new items.  It's important we process these changes first, so we
        // iterate the changes twice, first processing any that affect items currently in view.
        // TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but
        // not the other.
        var curViewCache = viewCache;
        var viewMergeTree;
        if (path.isEmpty()) {
            viewMergeTree = changedChildren;
        }
        else {
            viewMergeTree = ImmutableTree_1.ImmutableTree.Empty.setTree(path, changedChildren);
        }
        var serverNode = viewCache.getServerCache().getNode();
        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {
            if (serverNode.hasChild(childKey)) {
                var serverChild = viewCache
                    .getServerCache()
                    .getNode()
                    .getImmediateChild(childKey);
                var newChild = _this.applyMerge_(serverChild, childTree);
                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);
            }
        });
        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {
            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&
                childMergeTree.value == null;
            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {
                var serverChild = viewCache
                    .getServerCache()
                    .getNode()
                    .getImmediateChild(childKey);
                var newChild = _this.applyMerge_(serverChild, childMergeTree);
                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);
            }
        });
        return curViewCache;
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} ackPath
     * @param {!ImmutableTree<!boolean>} affectedTree
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {
        if (writesCache.shadowingWrite(ackPath) != null) {
            return viewCache;
        }
        // Only filter server node if it is currently filtered
        var filterServerNode = viewCache.getServerCache().isFiltered();
        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update
        // now that it won't be shadowed.
        var serverCache = viewCache.getServerCache();
        if (affectedTree.value != null) {
            // This is an overwrite.
            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||
                serverCache.isCompleteForPath(ackPath)) {
                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);
            }
            else if (ackPath.isEmpty()) {
                // This is a goofy edge case where we are acking data at this location but don't have full data.  We
                // should just re-apply whatever we have in our cache as a merge.
                var changedChildren_1 = ImmutableTree_1.ImmutableTree.Empty;
                serverCache.getNode().forEachChild(KeyIndex_1.KEY_INDEX, function (name, node) {
                    changedChildren_1 = changedChildren_1.set(new Path_1.Path(name), node);
                });
                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);
            }
            else {
                return viewCache;
            }
        }
        else {
            // This is a merge.
            var changedChildren_2 = ImmutableTree_1.ImmutableTree.Empty;
            affectedTree.foreach(function (mergePath, value) {
                var serverCachePath = ackPath.child(mergePath);
                if (serverCache.isCompleteForPath(serverCachePath)) {
                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));
                }
            });
            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);
        }
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!WriteTreeRef} writesCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {
        var oldServerNode = viewCache.getServerCache();
        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());
        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, accumulator);
    };
    /**
     * @param {!ViewCache} viewCache
     * @param {!Path} path
     * @param {!WriteTreeRef} writesCache
     * @param {?Node} completeServerCache
     * @param {!ChildChangeAccumulator} accumulator
     * @return {!ViewCache}
     * @private
     */
    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {
        var complete;
        if (writesCache.shadowingWrite(path) != null) {
            return viewCache;
        }
        else {
            var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);
            var oldEventCache = viewCache.getEventCache().getNode();
            var newEventCache = void 0;
            if (path.isEmpty() || path.getFront() === '.priority') {
                var newNode = void 0;
                if (viewCache.getServerCache().isFullyInitialized()) {
                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
                }
                else {
                    var serverChildren = viewCache.getServerCache().getNode();
                    util_1.assert(serverChildren instanceof ChildrenNode_1.ChildrenNode, 'serverChildren would be complete if leaf node');
                    newNode = writesCache.calcCompleteEventChildren(serverChildren);
                }
                newNode = newNode;
                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);
            }
            else {
                var childKey = path.getFront();
                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());
                if (newChild == null &&
                    viewCache.getServerCache().isCompleteForChild(childKey)) {
                    newChild = oldEventCache.getImmediateChild(childKey);
                }
                if (newChild != null) {
                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);
                }
                else if (viewCache
                    .getEventCache()
                    .getNode()
                    .hasChild(childKey)) {
                    // No complete child available, delete the existing one, if any
                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);
                }
                else {
                    newEventCache = oldEventCache;
                }
                if (newEventCache.isEmpty() &&
                    viewCache.getServerCache().isFullyInitialized()) {
                    // We might have reverted all child writes. Maybe the old event was a leaf node
                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
                    if (complete.isLeafNode()) {
                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);
                    }
                }
            }
            complete =
                viewCache.getServerCache().isFullyInitialized() ||
                    writesCache.shadowingWrite(Path_1.Path.Empty) != null;
            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());
        }
    };
    return ViewProcessor;
}());
exports.ViewProcessor = ViewProcessor;

//# sourceMappingURL=ViewProcessor.js.map


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Change_1 = __webpack_require__(9);
var util_2 = __webpack_require__(0);
/**
 * @constructor
 */
var ChildChangeAccumulator = /** @class */ (function () {
    function ChildChangeAccumulator() {
        this.changeMap_ = {};
    }
    /**
     * @param {!Change} change
     */
    ChildChangeAccumulator.prototype.trackChildChange = function (change) {
        var type = change.type;
        var childKey /** @type {!string} */ = change.childName;
        util_2.assert(type == Change_1.Change.CHILD_ADDED ||
            type == Change_1.Change.CHILD_CHANGED ||
            type == Change_1.Change.CHILD_REMOVED, 'Only child changes supported for tracking');
        util_2.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');
        var oldChange = util_1.safeGet(this.changeMap_, childKey);
        if (oldChange) {
            var oldType = oldChange.type;
            if (type == Change_1.Change.CHILD_ADDED && oldType == Change_1.Change.CHILD_REMOVED) {
                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);
            }
            else if (type == Change_1.Change.CHILD_REMOVED &&
                oldType == Change_1.Change.CHILD_ADDED) {
                delete this.changeMap_[childKey];
            }
            else if (type == Change_1.Change.CHILD_REMOVED &&
                oldType == Change_1.Change.CHILD_CHANGED) {
                this.changeMap_[childKey] = Change_1.Change.childRemovedChange(childKey, oldChange.oldSnap);
            }
            else if (type == Change_1.Change.CHILD_CHANGED &&
                oldType == Change_1.Change.CHILD_ADDED) {
                this.changeMap_[childKey] = Change_1.Change.childAddedChange(childKey, change.snapshotNode);
            }
            else if (type == Change_1.Change.CHILD_CHANGED &&
                oldType == Change_1.Change.CHILD_CHANGED) {
                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);
            }
            else {
                throw util_2.assertionError('Illegal combination of changes: ' +
                    change +
                    ' occurred after ' +
                    oldChange);
            }
        }
        else {
            this.changeMap_[childKey] = change;
        }
    };
    /**
     * @return {!Array.<!Change>}
     */
    ChildChangeAccumulator.prototype.getChanges = function () {
        return util_1.getValues(this.changeMap_);
    };
    return ChildChangeAccumulator;
}());
exports.ChildChangeAccumulator = ChildChangeAccumulator;

//# sourceMappingURL=ChildChangeAccumulator.js.map


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var CacheNode_1 = __webpack_require__(18);
/**
 * An implementation of CompleteChildSource that never returns any additional children
 *
 * @private
 * @constructor
 * @implements CompleteChildSource
 */
var NoCompleteChildSource_ = /** @class */ (function () {
    function NoCompleteChildSource_() {
    }
    /**
     * @inheritDoc
     */
    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {
        return null;
    };
    /**
     * @inheritDoc
     */
    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {
        return null;
    };
    return NoCompleteChildSource_;
}());
exports.NoCompleteChildSource_ = NoCompleteChildSource_;
/**
 * Singleton instance.
 * @const
 * @type {!CompleteChildSource}
 */
exports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();
/**
 * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or
 * old event caches available to calculate complete children.
 *
 *
 * @implements CompleteChildSource
 */
var WriteTreeCompleteChildSource = /** @class */ (function () {
    /**
     * @param {!WriteTreeRef} writes_
     * @param {!ViewCache} viewCache_
     * @param {?Node} optCompleteServerCache_
     */
    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {
        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }
        this.writes_ = writes_;
        this.viewCache_ = viewCache_;
        this.optCompleteServerCache_ = optCompleteServerCache_;
    }
    /**
     * @inheritDoc
     */
    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {
        var node = this.viewCache_.getEventCache();
        if (node.isCompleteForChild(childKey)) {
            return node.getNode().getImmediateChild(childKey);
        }
        else {
            var serverNode = this.optCompleteServerCache_ != null
                ? new CacheNode_1.CacheNode(this.optCompleteServerCache_, true, false)
                : this.viewCache_.getServerCache();
            return this.writes_.calcCompleteChild(childKey, serverNode);
        }
    };
    /**
     * @inheritDoc
     */
    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {
        var completeServerData = this.optCompleteServerCache_ != null
            ? this.optCompleteServerCache_
            : this.viewCache_.getCompleteServerSnap();
        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);
        if (nodes.length === 0) {
            return null;
        }
        else {
            return nodes[0];
        }
    };
    return WriteTreeCompleteChildSource;
}());
exports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;

//# sourceMappingURL=CompleteChildSource.js.map


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Node_1 = __webpack_require__(5);
var Change_1 = __webpack_require__(9);
var util_1 = __webpack_require__(0);
/**
 * An EventGenerator is used to convert "raw" changes (Change) as computed by the
 * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()
 * for details.
 *
 * @constructor
 */
var EventGenerator = /** @class */ (function () {
    /**
     *
     * @param {!Query} query_
     */
    function EventGenerator(query_) {
        this.query_ = query_;
        /**
         * @private
         * @type {!Index}
         */
        this.index_ = this.query_.getQueryParams().getIndex();
    }
    /**
     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of
     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.
     *
     * Notes:
     *  - child_moved events will be synthesized at this time for any child_changed events that affect
     *    our index.
     *  - prevName will be calculated based on the index ordering.
     *
     * @param {!Array.<!Change>} changes
     * @param {!Node} eventCache
     * @param {!Array.<!EventRegistration>} eventRegistrations
     * @return {!Array.<!Event>}
     */
    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {
        var _this = this;
        var events = [];
        var moves = [];
        changes.forEach(function (change) {
            if (change.type === Change_1.Change.CHILD_CHANGED &&
                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {
                moves.push(Change_1.Change.childMovedChange(change.childName, change.snapshotNode));
            }
        });
        this.generateEventsForType_(events, Change_1.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);
        this.generateEventsForType_(events, Change_1.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);
        this.generateEventsForType_(events, Change_1.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);
        this.generateEventsForType_(events, Change_1.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);
        this.generateEventsForType_(events, Change_1.Change.VALUE, changes, eventRegistrations, eventCache);
        return events;
    };
    /**
     * Given changes of a single change type, generate the corresponding events.
     *
     * @param {!Array.<!Event>} events
     * @param {!string} eventType
     * @param {!Array.<!Change>} changes
     * @param {!Array.<!EventRegistration>} registrations
     * @param {!Node} eventCache
     * @private
     */
    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {
        var _this = this;
        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });
        filteredChanges.sort(this.compareChanges_.bind(this));
        filteredChanges.forEach(function (change) {
            var materializedChange = _this.materializeSingleChange_(change, eventCache);
            registrations.forEach(function (registration) {
                if (registration.respondsTo(change.type)) {
                    events.push(registration.createEvent(materializedChange, _this.query_));
                }
            });
        });
    };
    /**
     * @param {!Change} change
     * @param {!Node} eventCache
     * @return {!Change}
     * @private
     */
    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {
        if (change.type === 'value' || change.type === 'child_removed') {
            return change;
        }
        else {
            change.prevName = eventCache.getPredecessorChildName(
            /** @type {!string} */
            change.childName, change.snapshotNode, this.index_);
            return change;
        }
    };
    /**
     * @param {!Change} a
     * @param {!Change} b
     * @return {number}
     * @private
     */
    EventGenerator.prototype.compareChanges_ = function (a, b) {
        if (a.childName == null || b.childName == null) {
            throw util_1.assertionError('Should only compare child_ events.');
        }
        var aWrapped = new Node_1.NamedNode(a.childName, a.snapshotNode);
        var bWrapped = new Node_1.NamedNode(b.childName, b.snapshotNode);
        return this.index_.compare(aWrapped, bWrapped);
    };
    return EventGenerator;
}());
exports.EventGenerator = EventGenerator;

//# sourceMappingURL=EventGenerator.js.map


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
var Path_1 = __webpack_require__(2);
var CompoundWrite_1 = __webpack_require__(96);
var PriorityIndex_1 = __webpack_require__(3);
var ChildrenNode_1 = __webpack_require__(4);
/**
 * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them
 * with underlying server data (to create "event cache" data).  Pending writes are added with addOverwrite()
 * and addMerge(), and removed with removeWrite().
 *
 * @constructor
 */
var WriteTree = /** @class */ (function () {
    function WriteTree() {
        /**
         * A tree tracking the result of applying all visible writes.  This does not include transactions with
         * applyLocally=false or writes that are completely shadowed by other writes.
         *
         * @type {!CompoundWrite}
         * @private
         */
        this.visibleWrites_ = CompoundWrite_1.CompoundWrite.Empty;
        /**
         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary
         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also
         * used by transactions).
         *
         * @type {!Array.<!WriteRecord>}
         * @private
         */
        this.allWrites_ = [];
        this.lastWriteId_ = -1;
    }
    /**
     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.
     *
     * @param {!Path} path
     * @return {!WriteTreeRef}
     */
    WriteTree.prototype.childWrites = function (path) {
        return new WriteTreeRef(path, this);
    };
    /**
     * Record a new overwrite from user code.
     *
     * @param {!Path} path
     * @param {!Node} snap
     * @param {!number} writeId
     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches
     */
    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {
        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');
        if (visible === undefined) {
            visible = true;
        }
        this.allWrites_.push({
            path: path,
            snap: snap,
            writeId: writeId,
            visible: visible
        });
        if (visible) {
            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);
        }
        this.lastWriteId_ = writeId;
    };
    /**
     * Record a new merge from user code.
     *
     * @param {!Path} path
     * @param {!Object.<string, !Node>} changedChildren
     * @param {!number} writeId
     */
    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {
        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');
        this.allWrites_.push({
            path: path,
            children: changedChildren,
            writeId: writeId,
            visible: true
        });
        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);
        this.lastWriteId_ = writeId;
    };
    /**
     * @param {!number} writeId
     * @return {?WriteRecord}
     */
    WriteTree.prototype.getWrite = function (writeId) {
        for (var i = 0; i < this.allWrites_.length; i++) {
            var record = this.allWrites_[i];
            if (record.writeId === writeId) {
                return record;
            }
        }
        return null;
    };
    /**
     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates
     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.
     *
     * @param {!number} writeId
     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise
     * events as a result).
     */
    WriteTree.prototype.removeWrite = function (writeId) {
        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied
        // out of order.
        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;
        //assert(validClear, "Either we don't have this write, or it's the first one in the queue");
        var _this = this;
        var idx = this.allWrites_.findIndex(function (s) {
            return s.writeId === writeId;
        });
        util_2.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');
        var writeToRemove = this.allWrites_[idx];
        this.allWrites_.splice(idx, 1);
        var removedWriteWasVisible = writeToRemove.visible;
        var removedWriteOverlapsWithOtherWrites = false;
        var i = this.allWrites_.length - 1;
        while (removedWriteWasVisible && i >= 0) {
            var currentWrite = this.allWrites_[i];
            if (currentWrite.visible) {
                if (i >= idx &&
                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {
                    // The removed write was completely shadowed by a subsequent write.
                    removedWriteWasVisible = false;
                }
                else if (writeToRemove.path.contains(currentWrite.path)) {
                    // Either we're covering some writes or they're covering part of us (depending on which came first).
                    removedWriteOverlapsWithOtherWrites = true;
                }
            }
            i--;
        }
        if (!removedWriteWasVisible) {
            return false;
        }
        else if (removedWriteOverlapsWithOtherWrites) {
            // There's some shadowing going on. Just rebuild the visible writes from scratch.
            this.resetTree_();
            return true;
        }
        else {
            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.
            if (writeToRemove.snap) {
                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);
            }
            else {
                var children = writeToRemove.children;
                util_1.forEach(children, function (childName) {
                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));
                });
            }
            return true;
        }
    };
    /**
     * Return a complete snapshot for the given path if there's visible write data at that path, else null.
     * No server data is considered.
     *
     * @param {!Path} path
     * @return {?Node}
     */
    WriteTree.prototype.getCompleteWriteData = function (path) {
        return this.visibleWrites_.getCompleteNode(path);
    };
    /**
     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden
     * writes), attempt to calculate a complete snapshot for the given path
     *
     * @param {!Path} treePath
     * @param {?Node} completeServerCache
     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded
     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
     * @return {?Node}
     */
    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {
        if (!writeIdsToExclude && !includeHiddenWrites) {
            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);
            if (shadowingNode != null) {
                return shadowingNode;
            }
            else {
                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);
                if (subMerge.isEmpty()) {
                    return completeServerCache;
                }
                else if (completeServerCache == null &&
                    !subMerge.hasCompleteWrite(Path_1.Path.Empty)) {
                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow
                    return null;
                }
                else {
                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                    return subMerge.apply(layeredCache);
                }
            }
        }
        else {
            var merge = this.visibleWrites_.childCompoundWrite(treePath);
            if (!includeHiddenWrites && merge.isEmpty()) {
                return completeServerCache;
            }
            else {
                // If the server cache is null, and we don't have a complete cache, we need to return null
                if (!includeHiddenWrites &&
                    completeServerCache == null &&
                    !merge.hasCompleteWrite(Path_1.Path.Empty)) {
                    return null;
                }
                else {
                    var filter = function (write) {
                        return ((write.visible || includeHiddenWrites) &&
                            (!writeIdsToExclude ||
                                !~writeIdsToExclude.indexOf(write.writeId)) &&
                            (write.path.contains(treePath) || treePath.contains(write.path)));
                    };
                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);
                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;
                    return mergeAtPath.apply(layeredCache);
                }
            }
        }
    };
    /**
     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.
     * Used when creating new views, to pre-fill their complete event children snapshot.
     *
     * @param {!Path} treePath
     * @param {?ChildrenNode} completeServerChildren
     * @return {!ChildrenNode}
     */
    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {
        var completeChildren = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);
        if (topLevelSet) {
            if (!topLevelSet.isLeafNode()) {
                // we're shadowing everything. Return the children.
                topLevelSet.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childSnap) {
                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);
                });
            }
            return completeChildren;
        }
        else if (completeServerChildren) {
            // Layer any children we have on top of this
            // We know we don't have a top-level set, so just enumerate existing children
            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);
            completeServerChildren.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {
                var node = merge_1
                    .childCompoundWrite(new Path_1.Path(childName))
                    .apply(childNode);
                completeChildren = completeChildren.updateImmediateChild(childName, node);
            });
            // Add any complete children we have from the set
            merge_1.getCompleteChildren().forEach(function (namedNode) {
                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);
            });
            return completeChildren;
        }
        else {
            // We don't have anything to layer on top of. Layer on any children we have
            // Note that we can return an empty snap if we have a defined delete
            var merge = this.visibleWrites_.childCompoundWrite(treePath);
            merge.getCompleteChildren().forEach(function (namedNode) {
                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);
            });
            return completeChildren;
        }
    };
    /**
     * Given that the underlying server data has updated, determine what, if anything, needs to be
     * applied to the event cache.
     *
     * Possibilities:
     *
     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
     *
     * 2. Some write is completely shadowing. No events to be raised
     *
     * 3. Is partially shadowed. Events
     *
     * Either existingEventSnap or existingServerSnap must exist
     *
     * @param {!Path} treePath
     * @param {!Path} childPath
     * @param {?Node} existingEventSnap
     * @param {?Node} existingServerSnap
     * @return {?Node}
     */
    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {
        util_2.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');
        var path = treePath.child(childPath);
        if (this.visibleWrites_.hasCompleteWrite(path)) {
            // At this point we can probably guarantee that we're in case 2, meaning no events
            // May need to check visibility while doing the findRootMostValueAndPath call
            return null;
        }
        else {
            // No complete shadowing. We're either partially shadowing or not shadowing at all.
            var childMerge = this.visibleWrites_.childCompoundWrite(path);
            if (childMerge.isEmpty()) {
                // We're not shadowing at all. Case 1
                return existingServerSnap.getChild(childPath);
            }
            else {
                // This could be more efficient if the serverNode + updates doesn't change the eventSnap
                // However this is tricky to find out, since user updates don't necessary change the server
                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server
                // adds nodes, but doesn't change any existing writes. It is therefore not enough to
                // only check if the updates change the serverNode.
                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?
                return childMerge.apply(existingServerSnap.getChild(childPath));
            }
        }
    };
    /**
     * Returns a complete child for a given server snap after applying all user writes or null if there is no
     * complete child for this ChildKey.
     *
     * @param {!Path} treePath
     * @param {!string} childKey
     * @param {!CacheNode} existingServerSnap
     * @return {?Node}
     */
    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {
        var path = treePath.child(childKey);
        var shadowingNode = this.visibleWrites_.getCompleteNode(path);
        if (shadowingNode != null) {
            return shadowingNode;
        }
        else {
            if (existingServerSnap.isCompleteForChild(childKey)) {
                var childMerge = this.visibleWrites_.childCompoundWrite(path);
                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));
            }
            else {
                return null;
            }
        }
    };
    /**
     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
     * a higher path, this will return the child of that write relative to the write and this path.
     * Returns null if there is no write at this path.
     *
     * @param {!Path} path
     * @return {?Node}
     */
    WriteTree.prototype.shadowingWrite = function (path) {
        return this.visibleWrites_.getCompleteNode(path);
    };
    /**
     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
     * the window, but may now be in the window.
     *
     * @param {!Path} treePath
     * @param {?Node} completeServerData
     * @param {!NamedNode} startPost
     * @param {!number} count
     * @param {boolean} reverse
     * @param {!Index} index
     * @return {!Array.<!NamedNode>}
     */
    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {
        var toIterate;
        var merge = this.visibleWrites_.childCompoundWrite(treePath);
        var shadowingNode = merge.getCompleteNode(Path_1.Path.Empty);
        if (shadowingNode != null) {
            toIterate = shadowingNode;
        }
        else if (completeServerData != null) {
            toIterate = merge.apply(completeServerData);
        }
        else {
            // no children to iterate on
            return [];
        }
        toIterate = toIterate.withIndex(index);
        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {
            var nodes = [];
            var cmp = index.getCompare();
            var iter = reverse
                ? toIterate.getReverseIteratorFrom(startPost, index)
                : toIterate.getIteratorFrom(startPost, index);
            var next = iter.getNext();
            while (next && nodes.length < count) {
                if (cmp(next, startPost) !== 0) {
                    nodes.push(next);
                }
                next = iter.getNext();
            }
            return nodes;
        }
        else {
            return [];
        }
    };
    /**
     * @param {!WriteRecord} writeRecord
     * @param {!Path} path
     * @return {boolean}
     * @private
     */
    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {
        if (writeRecord.snap) {
            return writeRecord.path.contains(path);
        }
        else {
            // findKey can return undefined, so use !! to coerce to boolean
            return !!util_1.findKey(writeRecord.children, function (childSnap, childName) {
                return writeRecord.path.child(childName).contains(path);
            });
        }
    };
    /**
     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots
     * @private
     */
    WriteTree.prototype.resetTree_ = function () {
        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path_1.Path.Empty);
        if (this.allWrites_.length > 0) {
            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;
        }
        else {
            this.lastWriteId_ = -1;
        }
    };
    /**
     * The default filter used when constructing the tree. Keep everything that's visible.
     *
     * @param {!WriteRecord} write
     * @return {boolean}
     * @private
     */
    WriteTree.DefaultFilter_ = function (write) {
        return write.visible;
    };
    /**
     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of
     * event data at that path.
     *
     * @param {!Array.<!WriteRecord>} writes
     * @param {!function(!WriteRecord):boolean} filter
     * @param {!Path} treeRoot
     * @return {!CompoundWrite}
     * @private
     */
    WriteTree.layerTree_ = function (writes, filter, treeRoot) {
        var compoundWrite = CompoundWrite_1.CompoundWrite.Empty;
        for (var i = 0; i < writes.length; ++i) {
            var write = writes[i];
            // Theory, a later set will either:
            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction
            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction
            if (filter(write)) {
                var writePath = write.path;
                var relativePath = void 0;
                if (write.snap) {
                    if (treeRoot.contains(writePath)) {
                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);
                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);
                    }
                    else if (writePath.contains(treeRoot)) {
                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);
                        compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, write.snap.getChild(relativePath));
                    }
                    else {
                        // There is no overlap between root path and write path, ignore write
                    }
                }
                else if (write.children) {
                    if (treeRoot.contains(writePath)) {
                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);
                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);
                    }
                    else if (writePath.contains(treeRoot)) {
                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);
                        if (relativePath.isEmpty()) {
                            compoundWrite = compoundWrite.addWrites(Path_1.Path.Empty, write.children);
                        }
                        else {
                            var child = util_1.safeGet(write.children, relativePath.getFront());
                            if (child) {
                                // There exists a child in this node that matches the root path
                                var deepNode = child.getChild(relativePath.popFront());
                                compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, deepNode);
                            }
                        }
                    }
                    else {
                        // There is no overlap between root path and write path, ignore write
                    }
                }
                else {
                    throw util_2.assertionError('WriteRecord should have .snap or .children');
                }
            }
        }
        return compoundWrite;
    };
    return WriteTree;
}());
exports.WriteTree = WriteTree;
/**
 * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods
 * just proxy to the underlying WriteTree.
 *
 * @constructor
 */
var WriteTreeRef = /** @class */ (function () {
    /**
     * @param {!Path} path
     * @param {!WriteTree} writeTree
     */
    function WriteTreeRef(path, writeTree) {
        this.treePath_ = path;
        this.writeTree_ = writeTree;
    }
    /**
     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used
     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node
     * can lead to a more expensive calculation.
     *
     * @param {?Node} completeServerCache
     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.
     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
     * @return {?Node}
     */
    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {
        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);
    };
    /**
     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a
     * mix of the given server data and write data.
     *
     * @param {?ChildrenNode} completeServerChildren
     * @return {!ChildrenNode}
     */
    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {
        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);
    };
    /**
     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,
     * if anything, needs to be applied to the event cache.
     *
     * Possibilities:
     *
     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
     *
     * 2. Some write is completely shadowing. No events to be raised
     *
     * 3. Is partially shadowed. Events should be raised
     *
     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert
     *
     * @param {!Path} path
     * @param {?Node} existingEventSnap
     * @param {?Node} existingServerSnap
     * @return {?Node}
     */
    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {
        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);
    };
    /**
     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
     * a higher path, this will return the child of that write relative to the write and this path.
     * Returns null if there is no write at this path.
     *
     * @param {!Path} path
     * @return {?Node}
     */
    WriteTreeRef.prototype.shadowingWrite = function (path) {
        return this.writeTree_.shadowingWrite(this.treePath_.child(path));
    };
    /**
     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
     * the window, but may now be in the window
     *
     * @param {?Node} completeServerData
     * @param {!NamedNode} startPost
     * @param {!number} count
     * @param {boolean} reverse
     * @param {!Index} index
     * @return {!Array.<!NamedNode>}
     */
    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {
        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);
    };
    /**
     * Returns a complete child for a given server snap after applying all user writes or null if there is no
     * complete child for this ChildKey.
     *
     * @param {!string} childKey
     * @param {!CacheNode} existingServerCache
     * @return {?Node}
     */
    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {
        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);
    };
    /**
     * Return a WriteTreeRef for a child.
     *
     * @param {string} childName
     * @return {!WriteTreeRef}
     */
    WriteTreeRef.prototype.child = function (childName) {
        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);
    };
    return WriteTreeRef;
}());
exports.WriteTreeRef = WriteTreeRef;

//# sourceMappingURL=WriteTree.js.map


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ImmutableTree_1 = __webpack_require__(23);
var Path_1 = __webpack_require__(2);
var util_1 = __webpack_require__(0);
var Node_1 = __webpack_require__(5);
var PriorityIndex_1 = __webpack_require__(3);
var util_2 = __webpack_require__(0);
/**
 * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with
 * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write
 * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write
 * to reflect the write added.
 *
 * @constructor
 * @param {!ImmutableTree.<!Node>} writeTree
 */
var CompoundWrite = /** @class */ (function () {
    function CompoundWrite(writeTree_) {
        this.writeTree_ = writeTree_;
    }
    /**
     * @param {!Path} path
     * @param {!Node} node
     * @return {!CompoundWrite}
     */
    CompoundWrite.prototype.addWrite = function (path, node) {
        if (path.isEmpty()) {
            return new CompoundWrite(new ImmutableTree_1.ImmutableTree(node));
        }
        else {
            var rootmost = this.writeTree_.findRootMostValueAndPath(path);
            if (rootmost != null) {
                var rootMostPath = rootmost.path;
                var value = rootmost.value;
                var relativePath = Path_1.Path.relativePath(rootMostPath, path);
                value = value.updateChild(relativePath, node);
                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));
            }
            else {
                var subtree = new ImmutableTree_1.ImmutableTree(node);
                var newWriteTree = this.writeTree_.setTree(path, subtree);
                return new CompoundWrite(newWriteTree);
            }
        }
    };
    /**
     * @param {!Path} path
     * @param {!Object.<string, !Node>} updates
     * @return {!CompoundWrite}
     */
    CompoundWrite.prototype.addWrites = function (path, updates) {
        var newWrite = this;
        util_1.forEach(updates, function (childKey, node) {
            newWrite = newWrite.addWrite(path.child(childKey), node);
        });
        return newWrite;
    };
    /**
     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher
     * location, which must be removed by calling this method with that path.
     *
     * @param {!Path} path The path at which a write and all deeper writes should be removed
     * @return {!CompoundWrite} The new CompoundWrite with the removed path
     */
    CompoundWrite.prototype.removeWrite = function (path) {
        if (path.isEmpty()) {
            return CompoundWrite.Empty;
        }
        else {
            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree_1.ImmutableTree.Empty);
            return new CompoundWrite(newWriteTree);
        }
    };
    /**
     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be
     * considered "complete".
     *
     * @param {!Path} path The path to check for
     * @return {boolean} Whether there is a complete write at that path
     */
    CompoundWrite.prototype.hasCompleteWrite = function (path) {
        return this.getCompleteNode(path) != null;
    };
    /**
     * Returns a node for a path if and only if the node is a "complete" overwrite at that path. This will not aggregate
     * writes from deeper paths, but will return child nodes from a more shallow path.
     *
     * @param {!Path} path The path to get a complete write
     * @return {?Node} The node if complete at that path, or null otherwise.
     */
    CompoundWrite.prototype.getCompleteNode = function (path) {
        var rootmost = this.writeTree_.findRootMostValueAndPath(path);
        if (rootmost != null) {
            return this.writeTree_
                .get(rootmost.path)
                .getChild(Path_1.Path.relativePath(rootmost.path, path));
        }
        else {
            return null;
        }
    };
    /**
     * Returns all children that are guaranteed to be a complete overwrite.
     *
     * @return {!Array.<NamedNode>} A list of all complete children.
     */
    CompoundWrite.prototype.getCompleteChildren = function () {
        var children = [];
        var node = this.writeTree_.value;
        if (node != null) {
            // If it's a leaf node, it has no children; so nothing to do.
            if (!node.isLeafNode()) {
                node.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {
                    children.push(new Node_1.NamedNode(childName, childNode));
                });
            }
        }
        else {
            this.writeTree_.children.inorderTraversal(function (childName, childTree) {
                if (childTree.value != null) {
                    children.push(new Node_1.NamedNode(childName, childTree.value));
                }
            });
        }
        return children;
    };
    /**
     * @param {!Path} path
     * @return {!CompoundWrite}
     */
    CompoundWrite.prototype.childCompoundWrite = function (path) {
        if (path.isEmpty()) {
            return this;
        }
        else {
            var shadowingNode = this.getCompleteNode(path);
            if (shadowingNode != null) {
                return new CompoundWrite(new ImmutableTree_1.ImmutableTree(shadowingNode));
            }
            else {
                return new CompoundWrite(this.writeTree_.subtree(path));
            }
        }
    };
    /**
     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.
     * @return {boolean} Whether this CompoundWrite is empty
     */
    CompoundWrite.prototype.isEmpty = function () {
        return this.writeTree_.isEmpty();
    };
    /**
     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the
     * node
     * @param {!Node} node The node to apply this CompoundWrite to
     * @return {!Node} The node with all writes applied
     */
    CompoundWrite.prototype.apply = function (node) {
        return CompoundWrite.applySubtreeWrite_(Path_1.Path.Empty, this.writeTree_, node);
    };
    /**
     * @type {!CompoundWrite}
     */
    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree_1.ImmutableTree(null));
    /**
     * @param {!Path} relativePath
     * @param {!ImmutableTree.<!Node>} writeTree
     * @param {!Node} node
     * @return {!Node}
     * @private
     */
    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {
        if (writeTree.value != null) {
            // Since there a write is always a leaf, we're done here
            return node.updateChild(relativePath, writeTree.value);
        }
        else {
            var priorityWrite_1 = null;
            writeTree.children.inorderTraversal(function (childKey, childTree) {
                if (childKey === '.priority') {
                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget
                    // to apply priorities to empty nodes that are later filled
                    util_2.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');
                    priorityWrite_1 = childTree.value;
                }
                else {
                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);
                }
            });
            // If there was a priority write, we only apply it if the node is not empty
            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {
                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);
            }
            return node;
        }
    };
    return CompoundWrite;
}());
exports.CompoundWrite = CompoundWrite;

//# sourceMappingURL=CompoundWrite.js.map


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ChildrenNode_1 = __webpack_require__(4);
/**
 * Mutable object which basically just stores a reference to the "latest" immutable snapshot.
 *
 * @constructor
 */
var SnapshotHolder = /** @class */ (function () {
    function SnapshotHolder() {
        this.rootNode_ = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
    }
    SnapshotHolder.prototype.getNode = function (path) {
        return this.rootNode_.getChild(path);
    };
    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {
        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);
    };
    return SnapshotHolder;
}());
exports.SnapshotHolder = SnapshotHolder;

//# sourceMappingURL=SnapshotHolder.js.map


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
/**
 * Abstraction around FirebaseApp's token fetching capabilities.
 */
var AuthTokenProvider = /** @class */ (function () {
    /**
     * @param {!FirebaseApp} app_
     */
    function AuthTokenProvider(app_) {
        this.app_ = app_;
    }
    /**
     * @param {boolean} forceRefresh
     * @return {!Promise<FirebaseAuthTokenData>}
     */
    AuthTokenProvider.prototype.getToken = function (forceRefresh) {
        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, 
        // .catch
        function (error) {
            // TODO: Need to figure out all the cases this is raised and whether
            // this makes sense.
            if (error && error.code === 'auth/token-not-initialized') {
                util_1.log('Got auth/token-not-initialized error.  Treating as null token.');
                return null;
            }
            else {
                return Promise.reject(error);
            }
        });
    };
    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {
        // TODO: We might want to wrap the listener and call it with no args to
        // avoid a leaky abstraction, but that makes removing the listener harder.
        this.app_['INTERNAL']['addAuthTokenListener'](listener);
    };
    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {
        this.app_['INTERNAL']['removeAuthTokenListener'](listener);
    };
    AuthTokenProvider.prototype.notifyForInvalidToken = function () {
        var errorMessage = 'Provided authentication credentials for the app named "' +
            this.app_.name +
            '" are invalid. This usually indicates your app was not ' +
            'initialized correctly. ';
        if ('credential' in this.app_.options) {
            errorMessage +=
                'Make sure the "credential" property provided to initializeApp() ' +
                    'is authorized to access the specified "databaseURL" and is from the correct ' +
                    'project.';
        }
        else if ('serviceAccount' in this.app_.options) {
            errorMessage +=
                'Make sure the "serviceAccount" property provided to initializeApp() ' +
                    'is authorized to access the specified "databaseURL" and is from the correct ' +
                    'project.';
        }
        else {
            errorMessage +=
                'Make sure the "apiKey" and "databaseURL" properties provided to ' +
                    'initializeApp() match the values provided for your app at ' +
                    'https://console.firebase.google.com/.';
        }
        util_1.warn(errorMessage);
    };
    return AuthTokenProvider;
}());
exports.AuthTokenProvider = AuthTokenProvider;

//# sourceMappingURL=AuthTokenProvider.js.map


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(0);
/**
 * Tracks a collection of stats.
 *
 * @constructor
 */
var StatsCollection = /** @class */ (function () {
    function StatsCollection() {
        this.counters_ = {};
    }
    StatsCollection.prototype.incrementCounter = function (name, amount) {
        if (amount === void 0) { amount = 1; }
        if (!util_2.contains(this.counters_, name))
            this.counters_[name] = 0;
        this.counters_[name] += amount;
    };
    StatsCollection.prototype.get = function () {
        return util_1.deepCopy(this.counters_);
    };
    return StatsCollection;
}());
exports.StatsCollection = StatsCollection;

//# sourceMappingURL=StatsCollection.js.map


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var StatsListener_1 = __webpack_require__(49);
// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably
// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10
// seconds to try to ensure the Firebase connection is established / settled.
var FIRST_STATS_MIN_TIME = 10 * 1000;
var FIRST_STATS_MAX_TIME = 30 * 1000;
// We'll continue to report stats on average every 5 minutes.
var REPORT_STATS_INTERVAL = 5 * 60 * 1000;
/**
 * @constructor
 */
var StatsReporter = /** @class */ (function () {
    /**
     * @param collection
     * @param server_
     */
    function StatsReporter(collection, server_) {
        this.server_ = server_;
        this.statsToReport_ = {};
        this.statsListener_ = new StatsListener_1.StatsListener(collection);
        var timeout = FIRST_STATS_MIN_TIME +
            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();
        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));
    }
    StatsReporter.prototype.includeStat = function (stat) {
        this.statsToReport_[stat] = true;
    };
    StatsReporter.prototype.reportStats_ = function () {
        var _this = this;
        var stats = this.statsListener_.get();
        var reportedStats = {};
        var haveStatsToReport = false;
        util_1.forEach(stats, function (stat, value) {
            if (value > 0 && util_1.contains(_this.statsToReport_, stat)) {
                reportedStats[stat] = value;
                haveStatsToReport = true;
            }
        });
        if (haveStatsToReport) {
            this.server_.reportStats(reportedStats);
        }
        // queue our next run.
        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));
    };
    return StatsReporter;
}());
exports.StatsReporter = StatsReporter;

//# sourceMappingURL=StatsReporter.js.map


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
/**
 * The event queue serves a few purposes:
 * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more
 *    events being queued.
 * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,
 *    raiseQueuedEvents() is called again, the "inner" call will pick up raising events where the "outer" call
 *    left off, ensuring that the events are still raised synchronously and in order.
 * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued
 *    events are raised synchronously.
 *
 * NOTE: This can all go away if/when we move to async events.
 *
 * @constructor
 */
var EventQueue = /** @class */ (function () {
    function EventQueue() {
        /**
         * @private
         * @type {!Array.<EventList>}
         */
        this.eventLists_ = [];
        /**
         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.
         * @private
         * @type {!number}
         */
        this.recursionDepth_ = 0;
    }
    /**
     * @param {!Array.<Event>} eventDataList The new events to queue.
     */
    EventQueue.prototype.queueEvents = function (eventDataList) {
        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.
        var currList = null;
        for (var i = 0; i < eventDataList.length; i++) {
            var eventData = eventDataList[i];
            var eventPath = eventData.getPath();
            if (currList !== null && !eventPath.equals(currList.getPath())) {
                this.eventLists_.push(currList);
                currList = null;
            }
            if (currList === null) {
                currList = new EventList(eventPath);
            }
            currList.add(eventData);
        }
        if (currList) {
            this.eventLists_.push(currList);
        }
    };
    /**
     * Queues the specified events and synchronously raises all events (including previously queued ones)
     * for the specified path.
     *
     * It is assumed that the new events are all for the specified path.
     *
     * @param {!Path} path The path to raise events for.
     * @param {!Array.<Event>} eventDataList The new events to raise.
     */
    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {
        this.queueEvents(eventDataList);
        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {
            return eventPath.equals(path);
        });
    };
    /**
     * Queues the specified events and synchronously raises all events (including previously queued ones) for
     * locations related to the specified change path (i.e. all ancestors and descendants).
     *
     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.
     *
     * @param {!Path} changedPath The path to raise events for.
     * @param {!Array.<!Event>} eventDataList The events to raise
     */
    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {
        this.queueEvents(eventDataList);
        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {
            return eventPath.contains(changedPath) || changedPath.contains(eventPath);
        });
    };
    /**
     * @param {!function(!Path):boolean} predicate
     * @private
     */
    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {
        this.recursionDepth_++;
        var sentAll = true;
        for (var i = 0; i < this.eventLists_.length; i++) {
            var eventList = this.eventLists_[i];
            if (eventList) {
                var eventPath = eventList.getPath();
                if (predicate(eventPath)) {
                    this.eventLists_[i].raise();
                    this.eventLists_[i] = null;
                }
                else {
                    sentAll = false;
                }
            }
        }
        if (sentAll) {
            this.eventLists_ = [];
        }
        this.recursionDepth_--;
    };
    return EventQueue;
}());
exports.EventQueue = EventQueue;
/**
 * @param {!Path} path
 * @constructor
 */
var EventList = /** @class */ (function () {
    function EventList(path_) {
        this.path_ = path_;
        /**
         * @type {!Array.<Event>}
         * @private
         */
        this.events_ = [];
    }
    /**
     * @param {!Event} eventData
     */
    EventList.prototype.add = function (eventData) {
        this.events_.push(eventData);
    };
    /**
     * Iterates through the list and raises each event
     */
    EventList.prototype.raise = function () {
        for (var i = 0; i < this.events_.length; i++) {
            var eventData = this.events_[i];
            if (eventData !== null) {
                this.events_[i] = null;
                var eventFn = eventData.getEventRunner();
                if (util_1.logger) {
                    util_1.log('event: ' + eventData.toString());
                }
                util_1.exceptionGuard(eventFn);
            }
        }
    };
    /**
     * @return {!Path}
     */
    EventList.prototype.getPath = function () {
        return this.path_;
    };
    return EventList;
}());
exports.EventList = EventList;

//# sourceMappingURL=EventQueue.js.map


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventEmitter_1 = __webpack_require__(51);
var util_1 = __webpack_require__(0);
/**
 * @extends {EventEmitter}
 */
var VisibilityMonitor = /** @class */ (function (_super) {
    __extends(VisibilityMonitor, _super);
    function VisibilityMonitor() {
        var _this = _super.call(this, ['visible']) || this;
        var hidden;
        var visibilityChange;
        if (typeof document !== 'undefined' &&
            typeof document.addEventListener !== 'undefined') {
            if (typeof document['hidden'] !== 'undefined') {
                // Opera 12.10 and Firefox 18 and later support
                visibilityChange = 'visibilitychange';
                hidden = 'hidden';
            }
            else if (typeof document['mozHidden'] !== 'undefined') {
                visibilityChange = 'mozvisibilitychange';
                hidden = 'mozHidden';
            }
            else if (typeof document['msHidden'] !== 'undefined') {
                visibilityChange = 'msvisibilitychange';
                hidden = 'msHidden';
            }
            else if (typeof document['webkitHidden'] !== 'undefined') {
                visibilityChange = 'webkitvisibilitychange';
                hidden = 'webkitHidden';
            }
        }
        // Initially, we always assume we are visible. This ensures that in browsers
        // without page visibility support or in cases where we are never visible
        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay
        // reconnects
        _this.visible_ = true;
        if (visibilityChange) {
            document.addEventListener(visibilityChange, function () {
                var visible = !document[hidden];
                if (visible !== _this.visible_) {
                    _this.visible_ = visible;
                    _this.trigger('visible', visible);
                }
            }, false);
        }
        return _this;
    }
    VisibilityMonitor.getInstance = function () {
        return new VisibilityMonitor();
    };
    /**
     * @param {!string} eventType
     * @return {Array.<boolean>}
     */
    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {
        util_1.assert(eventType === 'visible', 'Unknown event type: ' + eventType);
        return [this.visible_];
    };
    return VisibilityMonitor;
}(EventEmitter_1.EventEmitter));
exports.VisibilityMonitor = VisibilityMonitor;

//# sourceMappingURL=VisibilityMonitor.js.map


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var EventEmitter_1 = __webpack_require__(51);
var util_2 = __webpack_require__(0);
/**
 * Monitors online state (as reported by window.online/offline events).
 *
 * The expectation is that this could have many false positives (thinks we are online
 * when we're not), but no false negatives.  So we can safely use it to determine when
 * we definitely cannot reach the internet.
 *
 * @extends {EventEmitter}
 */
var OnlineMonitor = /** @class */ (function (_super) {
    __extends(OnlineMonitor, _super);
    function OnlineMonitor() {
        var _this = _super.call(this, ['online']) || this;
        _this.online_ = true;
        // We've had repeated complaints that Cordova apps can get stuck "offline", e.g.
        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810
        // It would seem that the 'online' event does not always fire consistently. So we disable it
        // for Cordova.
        if (typeof window !== 'undefined' &&
            typeof window.addEventListener !== 'undefined' &&
            !util_2.isMobileCordova()) {
            window.addEventListener('online', function () {
                if (!_this.online_) {
                    _this.online_ = true;
                    _this.trigger('online', true);
                }
            }, false);
            window.addEventListener('offline', function () {
                if (_this.online_) {
                    _this.online_ = false;
                    _this.trigger('online', false);
                }
            }, false);
        }
        return _this;
    }
    OnlineMonitor.getInstance = function () {
        return new OnlineMonitor();
    };
    /**
     * @param {!string} eventType
     * @return {Array.<boolean>}
     */
    OnlineMonitor.prototype.getInitialEvent = function (eventType) {
        util_1.assert(eventType === 'online', 'Unknown event type: ' + eventType);
        return [this.online_];
    };
    /**
     * @return {boolean}
     */
    OnlineMonitor.prototype.currentlyOnline = function () {
        return this.online_;
    };
    return OnlineMonitor;
}(EventEmitter_1.EventEmitter));
exports.OnlineMonitor = OnlineMonitor;

//# sourceMappingURL=OnlineMonitor.js.map


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var BrowserPollConnection_1 = __webpack_require__(53);
var WebSocketConnection_1 = __webpack_require__(54);
var util_1 = __webpack_require__(1);
/**
 * Currently simplistic, this class manages what transport a Connection should use at various stages of its
 * lifecycle.
 *
 * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if
 * they are available.
 * @constructor
 */
var TransportManager = /** @class */ (function () {
    /**
     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to
     */
    function TransportManager(repoInfo) {
        this.initTransports_(repoInfo);
    }
    Object.defineProperty(TransportManager, "ALL_TRANSPORTS", {
        /**
         * @const
         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}
         */
        get: function () {
            return [BrowserPollConnection_1.BrowserPollConnection, WebSocketConnection_1.WebSocketConnection];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {!RepoInfo} repoInfo
     * @private
     */
    TransportManager.prototype.initTransports_ = function (repoInfo) {
        var isWebSocketsAvailable = WebSocketConnection_1.WebSocketConnection && WebSocketConnection_1.WebSocketConnection['isAvailable']();
        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection_1.WebSocketConnection.previouslyFailed();
        if (repoInfo.webSocketOnly) {
            if (!isWebSocketsAvailable)
                util_1.warn("wss:// URL used, but browser isn't known to support websockets.  Trying anyway.");
            isSkipPollConnection = true;
        }
        if (isSkipPollConnection) {
            this.transports_ = [WebSocketConnection_1.WebSocketConnection];
        }
        else {
            var transports_1 = (this.transports_ = []);
            util_1.each(TransportManager.ALL_TRANSPORTS, function (i, transport) {
                if (transport && transport['isAvailable']()) {
                    transports_1.push(transport);
                }
            });
        }
    };
    /**
     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the
     * initial transport to use
     */
    TransportManager.prototype.initialTransport = function () {
        if (this.transports_.length > 0) {
            return this.transports_[0];
        }
        else {
            throw new Error('No transports available');
        }
    };
    /**
     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next
     * transport, or null
     */
    TransportManager.prototype.upgradeTransport = function () {
        if (this.transports_.length > 1) {
            return this.transports_[1];
        }
        else {
            return null;
        }
    };
    return TransportManager;
}());
exports.TransportManager = TransportManager;

//# sourceMappingURL=TransportManager.js.map


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(1);
/**
 * This class ensures the packets from the server arrive in order
 * This class takes data from the server and ensures it gets passed into the callbacks in order.
 * @constructor
 */
var PacketReceiver = /** @class */ (function () {
    /**
     * @param onMessage_
     */
    function PacketReceiver(onMessage_) {
        this.onMessage_ = onMessage_;
        this.pendingResponses = [];
        this.currentResponseNum = 0;
        this.closeAfterResponse = -1;
        this.onClose = null;
    }
    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {
        this.closeAfterResponse = responseNum;
        this.onClose = callback;
        if (this.closeAfterResponse < this.currentResponseNum) {
            this.onClose();
            this.onClose = null;
        }
    };
    /**
     * Each message from the server comes with a response number, and an array of data. The responseNumber
     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all
     * browsers will respond in the same order as the requests we sent
     * @param {number} requestNum
     * @param {Array} data
     */
    PacketReceiver.prototype.handleResponse = function (requestNum, data) {
        var _this = this;
        this.pendingResponses[requestNum] = data;
        var _loop_1 = function () {
            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];
            delete this_1.pendingResponses[this_1.currentResponseNum];
            var _loop_2 = function (i) {
                if (toProcess[i]) {
                    util_1.exceptionGuard(function () {
                        _this.onMessage_(toProcess[i]);
                    });
                }
            };
            for (var i = 0; i < toProcess.length; ++i) {
                _loop_2(i);
            }
            if (this_1.currentResponseNum === this_1.closeAfterResponse) {
                if (this_1.onClose) {
                    this_1.onClose();
                    this_1.onClose = null;
                }
                return "break";
            }
            this_1.currentResponseNum++;
        };
        var this_1 = this;
        while (this.pendingResponses[this.currentResponseNum]) {
            var state_1 = _loop_1();
            if (state_1 === "break")
                break;
        }
    };
    return PacketReceiver;
}());
exports.PacketReceiver = PacketReceiver;

//# sourceMappingURL=PacketReceiver.js.map


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var util_3 = __webpack_require__(0);
var util_4 = __webpack_require__(0);
var util_5 = __webpack_require__(0);
var ServerActions_1 = __webpack_require__(55);
/**
 * An implementation of ServerActions that communicates with the server via REST requests.
 * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full
 * persistent connection (using WebSockets or long-polling)
 */
var ReadonlyRestClient = /** @class */ (function (_super) {
    __extends(ReadonlyRestClient, _super);
    /**
     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to
     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server
     * @param {AuthTokenProvider} authTokenProvider_
     * @implements {ServerActions}
     */
    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {
        var _this = _super.call(this) || this;
        _this.repoInfo_ = repoInfo_;
        _this.onDataUpdate_ = onDataUpdate_;
        _this.authTokenProvider_ = authTokenProvider_;
        /** @private {function(...[*])} */
        _this.log_ = util_2.logWrapper('p:rest:');
        /**
         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen
         * that's been removed. :-/
         *
         * @private {!Object.<string, !Object>}
         */
        _this.listens_ = {};
        return _this;
    }
    ReadonlyRestClient.prototype.reportStats = function (stats) {
        throw new Error('Method not implemented.');
    };
    /**
     * @param {!Query} query
     * @param {?number=} tag
     * @return {string}
     * @private
     */
    ReadonlyRestClient.getListenId_ = function (query, tag) {
        if (tag !== undefined) {
            return 'tag$' + tag;
        }
        else {
            util_1.assert(query.getQueryParams().isDefault(), "should have a tag if it's not a default query.");
            return query.path.toString();
        }
    };
    /** @inheritDoc */
    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {
        var _this = this;
        var pathString = query.path.toString();
        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());
        // Mark this listener so we can tell if it's removed.
        var listenId = ReadonlyRestClient.getListenId_(query, tag);
        var thisListen = {};
        this.listens_[listenId] = thisListen;
        var queryStringParamaters = query
            .getQueryParams()
            .toRestQueryStringParameters();
        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {
            var data = result;
            if (error === 404) {
                data = null;
                error = null;
            }
            if (error === null) {
                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);
            }
            if (util_4.safeGet(_this.listens_, listenId) === thisListen) {
                var status_1;
                if (!error) {
                    status_1 = 'ok';
                }
                else if (error == 401) {
                    status_1 = 'permission_denied';
                }
                else {
                    status_1 = 'rest_error:' + error;
                }
                onComplete(status_1, null);
            }
        });
    };
    /** @inheritDoc */
    ReadonlyRestClient.prototype.unlisten = function (query, tag) {
        var listenId = ReadonlyRestClient.getListenId_(query, tag);
        delete this.listens_[listenId];
    };
    /** @inheritDoc */
    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {
        // no-op since we just always call getToken.
    };
    /**
     * Performs a REST request to the given path, with the provided query string parameters,
     * and any auth credentials we have.
     *
     * @param {!string} pathString
     * @param {!Object.<string, *>} queryStringParameters
     * @param {?function(?number, *=)} callback
     * @private
     */
    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {
        var _this = this;
        if (queryStringParameters === void 0) { queryStringParameters = {}; }
        queryStringParameters['format'] = 'export';
        this.authTokenProvider_
            .getToken(/*forceRefresh=*/ false)
            .then(function (authTokenData) {
            var authToken = authTokenData && authTokenData.accessToken;
            if (authToken) {
                queryStringParameters['auth'] = authToken;
            }
            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +
                _this.repoInfo_.host +
                pathString +
                '?' +
                util_5.querystring(queryStringParameters);
            _this.log_('Sending REST request for ' + url);
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (callback && xhr.readyState === 4) {
                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);
                    var res = null;
                    if (xhr.status >= 200 && xhr.status < 300) {
                        try {
                            res = util_3.jsonEval(xhr.responseText);
                        }
                        catch (e) {
                            util_2.warn('Failed to parse JSON response for ' +
                                url +
                                ': ' +
                                xhr.responseText);
                        }
                        callback(null, res);
                    }
                    else {
                        // 401 and 404 are expected.
                        if (xhr.status !== 401 && xhr.status !== 404) {
                            util_2.warn('Got unsuccessful REST response for ' +
                                url +
                                ' Status: ' +
                                xhr.status);
                        }
                        callback(xhr.status);
                    }
                    callback = null;
                }
            };
            xhr.open('GET', url, /*asynchronous=*/ true);
            xhr.send();
        });
    };
    return ReadonlyRestClient;
}(ServerActions_1.ServerActions));
exports.ReadonlyRestClient = ReadonlyRestClient;

//# sourceMappingURL=ReadonlyRestClient.js.map


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var util_2 = __webpack_require__(1);
var KeyIndex_1 = __webpack_require__(10);
var PriorityIndex_1 = __webpack_require__(3);
var ValueIndex_1 = __webpack_require__(38);
var PathIndex_1 = __webpack_require__(42);
var IndexedFilter_1 = __webpack_require__(24);
var LimitedFilter_1 = __webpack_require__(108);
var RangedFilter_1 = __webpack_require__(56);
var util_3 = __webpack_require__(0);
/**
 * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a
 * range to be returned for a particular location. It is assumed that validation of parameters is done at the
 * user-facing API level, so it is not done here.
 * @constructor
 */
var QueryParams = /** @class */ (function () {
    function QueryParams() {
        this.limitSet_ = false;
        this.startSet_ = false;
        this.startNameSet_ = false;
        this.endSet_ = false;
        this.endNameSet_ = false;
        this.limit_ = 0;
        this.viewFrom_ = '';
        this.indexStartValue_ = null;
        this.indexStartName_ = '';
        this.indexEndValue_ = null;
        this.indexEndName_ = '';
        this.index_ = PriorityIndex_1.PRIORITY_INDEX;
    }
    /**
     * @return {boolean}
     */
    QueryParams.prototype.hasStart = function () {
        return this.startSet_;
    };
    /**
     * @return {boolean} True if it would return from left.
     */
    QueryParams.prototype.isViewFromLeft = function () {
        if (this.viewFrom_ === '') {
            // limit(), rather than limitToFirst or limitToLast was called.
            // This means that only one of startSet_ and endSet_ is true. Use them
            // to calculate which side of the view to anchor to. If neither is set,
            // anchor to the end.
            return this.startSet_;
        }
        else {
            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);
        }
    };
    /**
     * Only valid to call if hasStart() returns true
     * @return {*}
     */
    QueryParams.prototype.getIndexStartValue = function () {
        util_1.assert(this.startSet_, 'Only valid if start has been set');
        return this.indexStartValue_;
    };
    /**
     * Only valid to call if hasStart() returns true.
     * Returns the starting key name for the range defined by these query parameters
     * @return {!string}
     */
    QueryParams.prototype.getIndexStartName = function () {
        util_1.assert(this.startSet_, 'Only valid if start has been set');
        if (this.startNameSet_) {
            return this.indexStartName_;
        }
        else {
            return util_2.MIN_NAME;
        }
    };
    /**
     * @return {boolean}
     */
    QueryParams.prototype.hasEnd = function () {
        return this.endSet_;
    };
    /**
     * Only valid to call if hasEnd() returns true.
     * @return {*}
     */
    QueryParams.prototype.getIndexEndValue = function () {
        util_1.assert(this.endSet_, 'Only valid if end has been set');
        return this.indexEndValue_;
    };
    /**
     * Only valid to call if hasEnd() returns true.
     * Returns the end key name for the range defined by these query parameters
     * @return {!string}
     */
    QueryParams.prototype.getIndexEndName = function () {
        util_1.assert(this.endSet_, 'Only valid if end has been set');
        if (this.endNameSet_) {
            return this.indexEndName_;
        }
        else {
            return util_2.MAX_NAME;
        }
    };
    /**
     * @return {boolean}
     */
    QueryParams.prototype.hasLimit = function () {
        return this.limitSet_;
    };
    /**
     * @return {boolean} True if a limit has been set and it has been explicitly anchored
     */
    QueryParams.prototype.hasAnchoredLimit = function () {
        return this.limitSet_ && this.viewFrom_ !== '';
    };
    /**
     * Only valid to call if hasLimit() returns true
     * @return {!number}
     */
    QueryParams.prototype.getLimit = function () {
        util_1.assert(this.limitSet_, 'Only valid if limit has been set');
        return this.limit_;
    };
    /**
     * @return {!Index}
     */
    QueryParams.prototype.getIndex = function () {
        return this.index_;
    };
    /**
     * @return {!QueryParams}
     * @private
     */
    QueryParams.prototype.copy_ = function () {
        var copy = new QueryParams();
        copy.limitSet_ = this.limitSet_;
        copy.limit_ = this.limit_;
        copy.startSet_ = this.startSet_;
        copy.indexStartValue_ = this.indexStartValue_;
        copy.startNameSet_ = this.startNameSet_;
        copy.indexStartName_ = this.indexStartName_;
        copy.endSet_ = this.endSet_;
        copy.indexEndValue_ = this.indexEndValue_;
        copy.endNameSet_ = this.endNameSet_;
        copy.indexEndName_ = this.indexEndName_;
        copy.index_ = this.index_;
        copy.viewFrom_ = this.viewFrom_;
        return copy;
    };
    /**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */
    QueryParams.prototype.limit = function (newLimit) {
        var newParams = this.copy_();
        newParams.limitSet_ = true;
        newParams.limit_ = newLimit;
        newParams.viewFrom_ = '';
        return newParams;
    };
    /**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */
    QueryParams.prototype.limitToFirst = function (newLimit) {
        var newParams = this.copy_();
        newParams.limitSet_ = true;
        newParams.limit_ = newLimit;
        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;
        return newParams;
    };
    /**
     * @param {!number} newLimit
     * @return {!QueryParams}
     */
    QueryParams.prototype.limitToLast = function (newLimit) {
        var newParams = this.copy_();
        newParams.limitSet_ = true;
        newParams.limit_ = newLimit;
        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;
        return newParams;
    };
    /**
     * @param {*} indexValue
     * @param {?string=} key
     * @return {!QueryParams}
     */
    QueryParams.prototype.startAt = function (indexValue, key) {
        var newParams = this.copy_();
        newParams.startSet_ = true;
        if (!(indexValue !== undefined)) {
            indexValue = null;
        }
        newParams.indexStartValue_ = indexValue;
        if (key != null) {
            newParams.startNameSet_ = true;
            newParams.indexStartName_ = key;
        }
        else {
            newParams.startNameSet_ = false;
            newParams.indexStartName_ = '';
        }
        return newParams;
    };
    /**
     * @param {*} indexValue
     * @param {?string=} key
     * @return {!QueryParams}
     */
    QueryParams.prototype.endAt = function (indexValue, key) {
        var newParams = this.copy_();
        newParams.endSet_ = true;
        if (!(indexValue !== undefined)) {
            indexValue = null;
        }
        newParams.indexEndValue_ = indexValue;
        if (key !== undefined) {
            newParams.endNameSet_ = true;
            newParams.indexEndName_ = key;
        }
        else {
            newParams.endNameSet_ = false;
            newParams.indexEndName_ = '';
        }
        return newParams;
    };
    /**
     * @param {!Index} index
     * @return {!QueryParams}
     */
    QueryParams.prototype.orderBy = function (index) {
        var newParams = this.copy_();
        newParams.index_ = index;
        return newParams;
    };
    /**
     * @return {!Object}
     */
    QueryParams.prototype.getQueryObject = function () {
        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;
        var obj = {};
        if (this.startSet_) {
            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;
            if (this.startNameSet_) {
                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;
            }
        }
        if (this.endSet_) {
            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;
            if (this.endNameSet_) {
                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;
            }
        }
        if (this.limitSet_) {
            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;
            var viewFrom = this.viewFrom_;
            if (viewFrom === '') {
                if (this.isViewFromLeft()) {
                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;
                }
                else {
                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;
                }
            }
            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;
        }
        // For now, priority index is the default, so we only specify if it's some other index
        if (this.index_ !== PriorityIndex_1.PRIORITY_INDEX) {
            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();
        }
        return obj;
    };
    /**
     * @return {boolean}
     */
    QueryParams.prototype.loadsAllData = function () {
        return !(this.startSet_ || this.endSet_ || this.limitSet_);
    };
    /**
     * @return {boolean}
     */
    QueryParams.prototype.isDefault = function () {
        return this.loadsAllData() && this.index_ == PriorityIndex_1.PRIORITY_INDEX;
    };
    /**
     * @return {!NodeFilter}
     */
    QueryParams.prototype.getNodeFilter = function () {
        if (this.loadsAllData()) {
            return new IndexedFilter_1.IndexedFilter(this.getIndex());
        }
        else if (this.hasLimit()) {
            return new LimitedFilter_1.LimitedFilter(this);
        }
        else {
            return new RangedFilter_1.RangedFilter(this);
        }
    };
    /**
     * Returns a set of REST query string parameters representing this query.
     *
     * @return {!Object.<string,*>} query string parameters
     */
    QueryParams.prototype.toRestQueryStringParameters = function () {
        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;
        var qs = {};
        if (this.isDefault()) {
            return qs;
        }
        var orderBy;
        if (this.index_ === PriorityIndex_1.PRIORITY_INDEX) {
            orderBy = REST_CONSTANTS.PRIORITY_INDEX;
        }
        else if (this.index_ === ValueIndex_1.VALUE_INDEX) {
            orderBy = REST_CONSTANTS.VALUE_INDEX;
        }
        else if (this.index_ === KeyIndex_1.KEY_INDEX) {
            orderBy = REST_CONSTANTS.KEY_INDEX;
        }
        else {
            util_1.assert(this.index_ instanceof PathIndex_1.PathIndex, 'Unrecognized index type!');
            orderBy = this.index_.toString();
        }
        qs[REST_CONSTANTS.ORDER_BY] = util_3.stringify(orderBy);
        if (this.startSet_) {
            qs[REST_CONSTANTS.START_AT] = util_3.stringify(this.indexStartValue_);
            if (this.startNameSet_) {
                qs[REST_CONSTANTS.START_AT] += ',' + util_3.stringify(this.indexStartName_);
            }
        }
        if (this.endSet_) {
            qs[REST_CONSTANTS.END_AT] = util_3.stringify(this.indexEndValue_);
            if (this.endNameSet_) {
                qs[REST_CONSTANTS.END_AT] += ',' + util_3.stringify(this.indexEndName_);
            }
        }
        if (this.limitSet_) {
            if (this.isViewFromLeft()) {
                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;
            }
            else {
                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;
            }
        }
        return qs;
    };
    /**
     * Wire Protocol Constants
     * @const
     * @enum {string}
     * @private
     */
    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {
        INDEX_START_VALUE: 'sp',
        INDEX_START_NAME: 'sn',
        INDEX_END_VALUE: 'ep',
        INDEX_END_NAME: 'en',
        LIMIT: 'l',
        VIEW_FROM: 'vf',
        VIEW_FROM_LEFT: 'l',
        VIEW_FROM_RIGHT: 'r',
        INDEX: 'i'
    };
    /**
     * REST Query Constants
     * @const
     * @enum {string}
     * @private
     */
    QueryParams.REST_QUERY_CONSTANTS_ = {
        ORDER_BY: 'orderBy',
        PRIORITY_INDEX: '$priority',
        VALUE_INDEX: '$value',
        KEY_INDEX: '$key',
        START_AT: 'startAt',
        END_AT: 'endAt',
        LIMIT_TO_FIRST: 'limitToFirst',
        LIMIT_TO_LAST: 'limitToLast'
    };
    /**
     * Default, empty query parameters
     * @type {!QueryParams}
     * @const
     */
    QueryParams.DEFAULT = new QueryParams();
    return QueryParams;
}());
exports.QueryParams = QueryParams;

//# sourceMappingURL=QueryParams.js.map


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var RangedFilter_1 = __webpack_require__(56);
var ChildrenNode_1 = __webpack_require__(4);
var Node_1 = __webpack_require__(5);
var util_1 = __webpack_require__(0);
var Change_1 = __webpack_require__(9);
/**
 * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible
 *
 * @constructor
 * @implements {NodeFilter}
 */
var LimitedFilter = /** @class */ (function () {
    /**
     * @param {!QueryParams} params
     */
    function LimitedFilter(params) {
        this.rangedFilter_ = new RangedFilter_1.RangedFilter(params);
        this.index_ = params.getIndex();
        this.limit_ = params.getLimit();
        this.reverse_ = !params.isViewFromLeft();
    }
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
        if (!this.rangedFilter_.matches(new Node_1.NamedNode(key, newChild))) {
            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;
        }
        if (snap.getImmediateChild(key).equals(newChild)) {
            // No change
            return snap;
        }
        else if (snap.numChildren() < this.limit_) {
            return this.rangedFilter_
                .getIndexedFilter()
                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);
        }
        else {
            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);
        }
    };
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
        var filtered;
        if (newSnap.isLeafNode() || newSnap.isEmpty()) {
            // Make sure we have a children node with the correct index, not a leaf node;
            filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);
        }
        else {
            if (this.limit_ * 2 < newSnap.numChildren() &&
                newSnap.isIndexed(this.index_)) {
                // Easier to build up a snapshot, since what we're given has more than twice the elements we want
                filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);
                // anchor to the startPost, endPost, or last element as appropriate
                var iterator = void 0;
                if (this.reverse_) {
                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);
                }
                else {
                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);
                }
                var count = 0;
                while (iterator.hasNext() && count < this.limit_) {
                    var next = iterator.getNext();
                    var inRange = void 0;
                    if (this.reverse_) {
                        inRange =
                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;
                    }
                    else {
                        inRange =
                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;
                    }
                    if (inRange) {
                        filtered = filtered.updateImmediateChild(next.name, next.node);
                        count++;
                    }
                    else {
                        // if we have reached the end post, we cannot keep adding elemments
                        break;
                    }
                }
            }
            else {
                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one
                filtered = newSnap.withIndex(this.index_);
                // Don't support priorities on queries
                filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);
                var startPost = void 0;
                var endPost = void 0;
                var cmp = void 0;
                var iterator = void 0;
                if (this.reverse_) {
                    iterator = filtered.getReverseIterator(this.index_);
                    startPost = this.rangedFilter_.getEndPost();
                    endPost = this.rangedFilter_.getStartPost();
                    var indexCompare_1 = this.index_.getCompare();
                    cmp = function (a, b) { return indexCompare_1(b, a); };
                }
                else {
                    iterator = filtered.getIterator(this.index_);
                    startPost = this.rangedFilter_.getStartPost();
                    endPost = this.rangedFilter_.getEndPost();
                    cmp = this.index_.getCompare();
                }
                var count = 0;
                var foundStartPost = false;
                while (iterator.hasNext()) {
                    var next = iterator.getNext();
                    if (!foundStartPost && cmp(startPost, next) <= 0) {
                        // start adding
                        foundStartPost = true;
                    }
                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;
                    if (inRange) {
                        count++;
                    }
                    else {
                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);
                    }
                }
            }
        }
        return this.rangedFilter_
            .getIndexedFilter()
            .updateFullNode(oldSnap, filtered, optChangeAccumulator);
    };
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
        // Don't support priorities on queries
        return oldSnap;
    };
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.filtersNodes = function () {
        return true;
    };
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.getIndexedFilter = function () {
        return this.rangedFilter_.getIndexedFilter();
    };
    /**
     * @inheritDoc
     */
    LimitedFilter.prototype.getIndex = function () {
        return this.index_;
    };
    /**
     * @param {!Node} snap
     * @param {string} childKey
     * @param {!Node} childSnap
     * @param {!CompleteChildSource} source
     * @param {?ChildChangeAccumulator} changeAccumulator
     * @return {!Node}
     * @private
     */
    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {
        // TODO: rename all cache stuff etc to general snap terminology
        var cmp;
        if (this.reverse_) {
            var indexCmp_1 = this.index_.getCompare();
            cmp = function (a, b) { return indexCmp_1(b, a); };
        }
        else {
            cmp = this.index_.getCompare();
        }
        var oldEventCache = snap;
        util_1.assert(oldEventCache.numChildren() == this.limit_, '');
        var newChildNamedNode = new Node_1.NamedNode(childKey, childSnap);
        var windowBoundary = this.reverse_
            ? oldEventCache.getFirstChild(this.index_)
            : oldEventCache.getLastChild(this.index_);
        var inRange = this.rangedFilter_.matches(newChildNamedNode);
        if (oldEventCache.hasChild(childKey)) {
            var oldChildSnap = oldEventCache.getImmediateChild(childKey);
            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);
            while (nextChild != null &&
                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {
                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't
                // been applied to the limited filter yet. Ignore this next child which will be updated later in
                // the limited filter...
                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);
            }
            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);
            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;
            if (remainsInWindow) {
                if (changeAccumulator != null) {
                    changeAccumulator.trackChildChange(Change_1.Change.childChangedChange(childKey, childSnap, oldChildSnap));
                }
                return oldEventCache.updateImmediateChild(childKey, childSnap);
            }
            else {
                if (changeAccumulator != null) {
                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(childKey, oldChildSnap));
                }
                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE);
                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);
                if (nextChildInRange) {
                    if (changeAccumulator != null) {
                        changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(nextChild.name, nextChild.node));
                    }
                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);
                }
                else {
                    return newEventCache;
                }
            }
        }
        else if (childSnap.isEmpty()) {
            // we're deleting a node, but it was not in the window, so ignore it
            return snap;
        }
        else if (inRange) {
            if (cmp(windowBoundary, newChildNamedNode) >= 0) {
                if (changeAccumulator != null) {
                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));
                    changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(childKey, childSnap));
                }
                return oldEventCache
                    .updateImmediateChild(childKey, childSnap)
                    .updateImmediateChild(windowBoundary.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);
            }
            else {
                return snap;
            }
        }
        else {
            return snap;
        }
    };
    return LimitedFilter;
}());
exports.LimitedFilter = LimitedFilter;

//# sourceMappingURL=LimitedFilter.js.map


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Reference_1 = __webpack_require__(21);
var DataSnapshot_1 = __webpack_require__(22);
var Path_1 = __webpack_require__(2);
var Tree_1 = __webpack_require__(110);
var PriorityIndex_1 = __webpack_require__(3);
var util_2 = __webpack_require__(1);
var ServerValues_1 = __webpack_require__(43);
var validation_1 = __webpack_require__(7);
var util_3 = __webpack_require__(0);
var nodeFromJSON_1 = __webpack_require__(11);
var ChildrenNode_1 = __webpack_require__(4);
var Repo_1 = __webpack_require__(17);
// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific
// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well
// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.
// For now it's part of Repo, but in its own file.
/**
 * @enum {number}
 */
var TransactionStatus;
(function (TransactionStatus) {
    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the
    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to
    // mismatched hash.
    TransactionStatus[TransactionStatus["RUN"] = 0] = "RUN";
    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted
    // or rejected yet).
    TransactionStatus[TransactionStatus["SENT"] = 1] = "SENT";
    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be
    // removed when we get a chance to prune completed ones.
    TransactionStatus[TransactionStatus["COMPLETED"] = 2] = "COMPLETED";
    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).
    // If it comes back as unsuccessful, we'll abort it.
    TransactionStatus[TransactionStatus["SENT_NEEDS_ABORT"] = 3] = "SENT_NEEDS_ABORT";
    // Temporary state used to mark transactions that need to be aborted.
    TransactionStatus[TransactionStatus["NEEDS_ABORT"] = 4] = "NEEDS_ABORT";
})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));
/**
 * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's
 * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.
 * @type {number}
 * @const
 * @private
 */
Repo_1.Repo.MAX_TRANSACTION_RETRIES_ = 25;
/**
 * Setup the transaction data structures
 * @private
 */
Repo_1.Repo.prototype.transactions_init_ = function () {
    /**
     * Stores queues of outstanding transactions for Firebase locations.
     *
     * @type {!Tree.<Array.<!Transaction>>}
     * @private
     */
    this.transactionQueueTree_ = new Tree_1.Tree();
};
/**
 * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.
 *
 * @param {!Path} path Path at which to do transaction.
 * @param {function(*):*} transactionUpdate Update callback.
 * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.
 * @param {boolean} applyLocally Whether or not to make intermediate results visible
 */
Repo_1.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {
    this.log_('transaction on ' + path);
    // Add a watch to make sure we get server updates.
    var valueCallback = function () { };
    var watchRef = new Reference_1.Reference(this, path);
    watchRef.on('value', valueCallback);
    var unwatcher = function () {
        watchRef.off('value', valueCallback);
    };
    // Initialize transaction.
    var transaction = {
        path: path,
        update: transactionUpdate,
        onComplete: onComplete,
        // One of TransactionStatus enums.
        status: null,
        // Used when combining transactions at different locations to figure out which one goes first.
        order: util_2.LUIDGenerator(),
        // Whether to raise local events for this transaction.
        applyLocally: applyLocally,
        // Count of how many times we've retried the transaction.
        retryCount: 0,
        // Function to call to clean up our .on() listener.
        unwatcher: unwatcher,
        // Stores why a transaction was aborted.
        abortReason: null,
        currentWriteId: null,
        currentInputSnapshot: null,
        currentOutputSnapshotRaw: null,
        currentOutputSnapshotResolved: null
    };
    // Run transaction initially.
    var currentState = this.getLatestState_(path);
    transaction.currentInputSnapshot = currentState;
    var newVal = transaction.update(currentState.val());
    if (newVal === undefined) {
        // Abort transaction.
        transaction.unwatcher();
        transaction.currentOutputSnapshotRaw = null;
        transaction.currentOutputSnapshotResolved = null;
        if (transaction.onComplete) {
            // We just set the input snapshot, so this cast should be safe
            var snapshot = new DataSnapshot_1.DataSnapshot(transaction.currentInputSnapshot, new Reference_1.Reference(this, transaction.path), PriorityIndex_1.PRIORITY_INDEX);
            transaction.onComplete(null, false, snapshot);
        }
    }
    else {
        validation_1.validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);
        // Mark as run and add to our queue.
        transaction.status = TransactionStatus.RUN;
        var queueNode = this.transactionQueueTree_.subTree(path);
        var nodeQueue = queueNode.getValue() || [];
        nodeQueue.push(transaction);
        queueNode.setValue(nodeQueue);
        // Update visibleData and raise events
        // Note: We intentionally raise events after updating all of our transaction state, since the user could
        // start new transactions from the event callbacks.
        var priorityForNode = void 0;
        if (typeof newVal === 'object' &&
            newVal !== null &&
            util_3.contains(newVal, '.priority')) {
            priorityForNode = util_3.safeGet(newVal, '.priority');
            util_1.assert(validation_1.isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +
                'Priority must be a valid string, finite number, server value, or null.');
        }
        else {
            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||
                ChildrenNode_1.ChildrenNode.EMPTY_NODE;
            priorityForNode = currentNode.getPriority().val();
        }
        priorityForNode /** @type {null|number|string} */ = priorityForNode;
        var serverValues = this.generateServerValues();
        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, priorityForNode);
        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);
        transaction.currentOutputSnapshotRaw = newNodeUnresolved;
        transaction.currentOutputSnapshotResolved = newNode;
        transaction.currentWriteId = this.getNextWriteId_();
        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);
        this.eventQueue_.raiseEventsForChangedPath(path, events);
        this.sendReadyTransactions_();
    }
};
/**
 * @param {!Path} path
 * @param {Array.<number>=} excludeSets A specific set to exclude
 * @return {Node}
 * @private
 */
Repo_1.Repo.prototype.getLatestState_ = function (path, excludeSets) {
    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||
        ChildrenNode_1.ChildrenNode.EMPTY_NODE);
};
/**
 * Sends any already-run transactions that aren't waiting for outstanding transactions to
 * complete.
 *
 * Externally it's called with no arguments, but it calls itself recursively with a particular
 * transactionQueueTree node to recurse through the tree.
 *
 * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.
 * @private
 */
Repo_1.Repo.prototype.sendReadyTransactions_ = function (node) {
    var _this = this;
    if (node === void 0) { node = this.transactionQueueTree_; }
    // Before recursing, make sure any completed transactions are removed.
    if (!node) {
        this.pruneCompletedTransactionsBelowNode_(node);
    }
    if (node.getValue() !== null) {
        var queue = this.buildTransactionQueue_(node);
        util_1.assert(queue.length > 0, 'Sending zero length transaction queue');
        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });
        // If they're all run (and not sent), we can send them.  Else, we must wait.
        if (allRun) {
            this.sendTransactionQueue_(node.path(), queue);
        }
    }
    else if (node.hasChildren()) {
        node.forEachChild(function (childNode) {
            _this.sendReadyTransactions_(childNode);
        });
    }
};
/**
 * Given a list of run transactions, send them to the server and then handle the result (success or failure).
 *
 * @param {!Path} path The location of the queue.
 * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.
 * @private
 */
Repo_1.Repo.prototype.sendTransactionQueue_ = function (path, queue) {
    var _this = this;
    // Mark transactions as sent and increment retry count!
    var setsToIgnore = queue.map(function (txn) {
        return txn.currentWriteId;
    });
    var latestState = this.getLatestState_(path, setsToIgnore);
    var snapToSend = latestState;
    var latestHash = latestState.hash();
    for (var i = 0; i < queue.length; i++) {
        var txn = queue[i];
        util_1.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');
        txn.status = TransactionStatus.SENT;
        txn.retryCount++;
        var relativePath = Path_1.Path.relativePath(path, txn.path);
        // If we've gotten to this point, the output snapshot must be defined.
        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);
    }
    var dataToSend = snapToSend.val(true);
    var pathToSend = path;
    // Send the put.
    this.server_.put(pathToSend.toString(), dataToSend, function (status) {
        _this.log_('transaction put response', {
            path: pathToSend.toString(),
            status: status
        });
        var events = [];
        if (status === 'ok') {
            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
            // the callback could trigger more transactions or sets.
            var callbacks = [];
            for (var i = 0; i < queue.length; i++) {
                queue[i].status = TransactionStatus.COMPLETED;
                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));
                if (queue[i].onComplete) {
                    // We never unset the output snapshot, and given that this transaction is complete, it should be set
                    var node = queue[i].currentOutputSnapshotResolved;
                    var ref = new Reference_1.Reference(_this, queue[i].path);
                    var snapshot = new DataSnapshot_1.DataSnapshot(node, ref, PriorityIndex_1.PRIORITY_INDEX);
                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));
                }
                queue[i].unwatcher();
            }
            // Now remove the completed transactions.
            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));
            // There may be pending transactions that we can now send.
            _this.sendReadyTransactions_();
            _this.eventQueue_.raiseEventsForChangedPath(path, events);
            // Finally, trigger onComplete callbacks.
            for (var i = 0; i < callbacks.length; i++) {
                util_2.exceptionGuard(callbacks[i]);
            }
        }
        else {
            // transactions are no longer sent.  Update their status appropriately.
            if (status === 'datastale') {
                for (var i = 0; i < queue.length; i++) {
                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)
                        queue[i].status = TransactionStatus.NEEDS_ABORT;
                    else
                        queue[i].status = TransactionStatus.RUN;
                }
            }
            else {
                util_2.warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);
                for (var i = 0; i < queue.length; i++) {
                    queue[i].status = TransactionStatus.NEEDS_ABORT;
                    queue[i].abortReason = status;
                }
            }
            _this.rerunTransactions_(path);
        }
    }, latestHash);
};
/**
 * Finds all transactions dependent on the data at changedPath and reruns them.
 *
 * Should be called any time cached data changes.
 *
 * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to
 * be raised for.
 *
 * @param {!Path} changedPath The path in mergedData that changed.
 * @return {!Path} The rootmost path that was affected by rerunning transactions.
 * @private
 */
Repo_1.Repo.prototype.rerunTransactions_ = function (changedPath) {
    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);
    var path = rootMostTransactionNode.path();
    var queue = this.buildTransactionQueue_(rootMostTransactionNode);
    this.rerunTransactionQueue_(queue, path);
    return path;
};
/**
 * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).
 *
 * @param {Array.<Transaction>} queue The queue of transactions to run.
 * @param {!Path} path The path the queue is for.
 * @private
 */
Repo_1.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {
    if (queue.length === 0) {
        return; // Nothing to do!
    }
    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
    // the callback could trigger more transactions or sets.
    var callbacks = [];
    var events = [];
    // Ignore all of the sets we're going to re-run.
    var txnsToRerun = queue.filter(function (q) {
        return q.status === TransactionStatus.RUN;
    });
    var setsToIgnore = txnsToRerun.map(function (q) {
        return q.currentWriteId;
    });
    for (var i = 0; i < queue.length; i++) {
        var transaction = queue[i];
        var relativePath = Path_1.Path.relativePath(path, transaction.path);
        var abortTransaction = false, abortReason = void 0;
        util_1.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');
        if (transaction.status === TransactionStatus.NEEDS_ABORT) {
            abortTransaction = true;
            abortReason = transaction.abortReason;
            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
        }
        else if (transaction.status === TransactionStatus.RUN) {
            if (transaction.retryCount >= Repo_1.Repo.MAX_TRANSACTION_RETRIES_) {
                abortTransaction = true;
                abortReason = 'maxretry';
                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
            }
            else {
                // This code reruns a transaction
                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);
                transaction.currentInputSnapshot = currentNode;
                var newData = queue[i].update(currentNode.val());
                if (newData !== undefined) {
                    validation_1.validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);
                    var newDataNode = nodeFromJSON_1.nodeFromJSON(newData);
                    var hasExplicitPriority = typeof newData === 'object' &&
                        newData != null &&
                        util_3.contains(newData, '.priority');
                    if (!hasExplicitPriority) {
                        // Keep the old priority if there wasn't a priority explicitly specified.
                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());
                    }
                    var oldWriteId = transaction.currentWriteId;
                    var serverValues = this.generateServerValues();
                    var newNodeResolved = ServerValues_1.resolveDeferredValueSnapshot(newDataNode, serverValues);
                    transaction.currentOutputSnapshotRaw = newDataNode;
                    transaction.currentOutputSnapshotResolved = newNodeResolved;
                    transaction.currentWriteId = this.getNextWriteId_();
                    // Mutates setsToIgnore in place
                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);
                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));
                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));
                }
                else {
                    abortTransaction = true;
                    abortReason = 'nodata';
                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
                }
            }
        }
        this.eventQueue_.raiseEventsForChangedPath(path, events);
        events = [];
        if (abortTransaction) {
            // Abort.
            queue[i].status = TransactionStatus.COMPLETED;
            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).
            // So defer the unwatcher until we're done.
            (function (unwatcher) {
                setTimeout(unwatcher, Math.floor(0));
            })(queue[i].unwatcher);
            if (queue[i].onComplete) {
                if (abortReason === 'nodata') {
                    var ref = new Reference_1.Reference(this, queue[i].path);
                    // We set this field immediately, so it's safe to cast to an actual snapshot
                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;
                    var snapshot = new DataSnapshot_1.DataSnapshot(lastInput, ref, PriorityIndex_1.PRIORITY_INDEX);
                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));
                }
                else {
                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));
                }
            }
        }
    }
    // Clean up completed transactions.
    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);
    // Now fire callbacks, now that we're in a good, known state.
    for (var i = 0; i < callbacks.length; i++) {
        util_2.exceptionGuard(callbacks[i]);
    }
    // Try to send the transaction result to the server.
    this.sendReadyTransactions_();
};
/**
 * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns
 * the node for the given path if there are no pending transactions on any ancestor.
 *
 * @param {!Path} path The location to start at.
 * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.
 * @private
 */
Repo_1.Repo.prototype.getAncestorTransactionNode_ = function (path) {
    var front;
    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.
    var transactionNode = this.transactionQueueTree_;
    while ((front = path.getFront()) !== null &&
        transactionNode.getValue() === null) {
        transactionNode = transactionNode.subTree(front);
        path = path.popFront();
    }
    return transactionNode;
};
/**
 * Builds the queue of all transactions at or below the specified transactionNode.
 *
 * @param {!Tree.<Array.<Transaction>>} transactionNode
 * @return {Array.<Transaction>} The generated queue.
 * @private
 */
Repo_1.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {
    // Walk any child transaction queues and aggregate them into a single queue.
    var transactionQueue = [];
    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);
    // Sort them by the order the transactions were created.
    transactionQueue.sort(function (a, b) {
        return a.order - b.order;
    });
    return transactionQueue;
};
/**
 * @param {!Tree.<Array.<Transaction>>} node
 * @param {Array.<Transaction>} queue
 * @private
 */
Repo_1.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {
    var _this = this;
    var nodeQueue = node.getValue();
    if (nodeQueue !== null) {
        for (var i = 0; i < nodeQueue.length; i++) {
            queue.push(nodeQueue[i]);
        }
    }
    node.forEachChild(function (child) {
        _this.aggregateTransactionQueuesForNode_(child, queue);
    });
};
/**
 * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.
 *
 * @param {!Tree.<Array.<!Transaction>>} node
 * @private
 */
Repo_1.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {
    var _this = this;
    var queue = node.getValue();
    if (queue) {
        var to = 0;
        for (var from = 0; from < queue.length; from++) {
            if (queue[from].status !== TransactionStatus.COMPLETED) {
                queue[to] = queue[from];
                to++;
            }
        }
        queue.length = to;
        node.setValue(queue.length > 0 ? queue : null);
    }
    node.forEachChild(function (childNode) {
        _this.pruneCompletedTransactionsBelowNode_(childNode);
    });
};
/**
 * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()
 * since we consider them incompatible with transactions.
 *
 * @param {!Path} path Path for which we want to abort related transactions.
 * @return {!Path}
 * @private
 */
Repo_1.Repo.prototype.abortTransactions_ = function (path) {
    var _this = this;
    var affectedPath = this.getAncestorTransactionNode_(path).path();
    var transactionNode = this.transactionQueueTree_.subTree(path);
    transactionNode.forEachAncestor(function (node) {
        _this.abortTransactionsOnNode_(node);
    });
    this.abortTransactionsOnNode_(transactionNode);
    transactionNode.forEachDescendant(function (node) {
        _this.abortTransactionsOnNode_(node);
    });
    return affectedPath;
};
/**
 * Abort transactions stored in this transaction queue node.
 *
 * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.
 * @private
 */
Repo_1.Repo.prototype.abortTransactionsOnNode_ = function (node) {
    var queue = node.getValue();
    if (queue !== null) {
        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
        // the callback could trigger more transactions or sets.
        var callbacks = [];
        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones
        // can be immediately aborted and removed.
        var events = [];
        var lastSent = -1;
        for (var i = 0; i < queue.length; i++) {
            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {
                // Already marked.  No action needed.
            }
            else if (queue[i].status === TransactionStatus.SENT) {
                util_1.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');
                lastSent = i;
                // Mark transaction for abort when it comes back.
                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;
                queue[i].abortReason = 'set';
            }
            else {
                util_1.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');
                // We can abort it immediately.
                queue[i].unwatcher();
                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));
                if (queue[i].onComplete) {
                    var snapshot = null;
                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));
                }
            }
        }
        if (lastSent === -1) {
            // We're not waiting for any sent transactions.  We can clear the queue.
            node.setValue(null);
        }
        else {
            // Remove the transactions we aborted.
            queue.length = lastSent + 1;
        }
        // Now fire the callbacks.
        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);
        for (var i = 0; i < callbacks.length; i++) {
            util_2.exceptionGuard(callbacks[i]);
        }
    }
};

//# sourceMappingURL=Repo_transaction.js.map


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(0);
var Path_1 = __webpack_require__(2);
var util_2 = __webpack_require__(0);
/**
 * Node in a Tree.
 */
var TreeNode = /** @class */ (function () {
    function TreeNode() {
        // TODO: Consider making accessors that create children and value lazily or
        // separate Internal / Leaf 'types'.
        this.children = {};
        this.childCount = 0;
        this.value = null;
    }
    return TreeNode;
}());
exports.TreeNode = TreeNode;
/**
 * A light-weight tree, traversable by path.  Nodes can have both values and children.
 * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty
 * children.
 */
var Tree = /** @class */ (function () {
    /**
     * @template T
     * @param {string=} name_ Optional name of the node.
     * @param {Tree=} parent_ Optional parent node.
     * @param {TreeNode=} node_ Optional node to wrap.
     */
    function Tree(name_, parent_, node_) {
        if (name_ === void 0) { name_ = ''; }
        if (parent_ === void 0) { parent_ = null; }
        if (node_ === void 0) { node_ = new TreeNode(); }
        this.name_ = name_;
        this.parent_ = parent_;
        this.node_ = node_;
    }
    /**
     * Returns a sub-Tree for the given path.
     *
     * @param {!(string|Path)} pathObj Path to look up.
     * @return {!Tree.<T>} Tree for path.
     */
    Tree.prototype.subTree = function (pathObj) {
        // TODO: Require pathObj to be Path?
        var path = pathObj instanceof Path_1.Path ? pathObj : new Path_1.Path(pathObj);
        var child = this, next;
        while ((next = path.getFront()) !== null) {
            var childNode = util_2.safeGet(child.node_.children, next) || new TreeNode();
            child = new Tree(next, child, childNode);
            path = path.popFront();
        }
        return child;
    };
    /**
     * Returns the data associated with this tree node.
     *
     * @return {?T} The data or null if no data exists.
     */
    Tree.prototype.getValue = function () {
        return this.node_.value;
    };
    /**
     * Sets data to this tree node.
     *
     * @param {!T} value Value to set.
     */
    Tree.prototype.setValue = function (value) {
        util_1.assert(typeof value !== 'undefined', 'Cannot set value to undefined');
        this.node_.value = value;
        this.updateParents_();
    };
    /**
     * Clears the contents of the tree node (its value and all children).
     */
    Tree.prototype.clear = function () {
        this.node_.value = null;
        this.node_.children = {};
        this.node_.childCount = 0;
        this.updateParents_();
    };
    /**
     * @return {boolean} Whether the tree has any children.
     */
    Tree.prototype.hasChildren = function () {
        return this.node_.childCount > 0;
    };
    /**
     * @return {boolean} Whether the tree is empty (no value or children).
     */
    Tree.prototype.isEmpty = function () {
        return this.getValue() === null && !this.hasChildren();
    };
    /**
     * Calls action for each child of this tree node.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     */
    Tree.prototype.forEachChild = function (action) {
        var _this = this;
        util_2.forEach(this.node_.children, function (child, childTree) {
            action(new Tree(child, _this, childTree));
        });
    };
    /**
     * Does a depth-first traversal of this node's descendants, calling action for each one.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to
     *   false.
     * @param {boolean=} childrenFirst Whether to call action on children before calling it on
     *   parent.
     */
    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {
        if (includeSelf && !childrenFirst)
            action(this);
        this.forEachChild(function (child) {
            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);
        });
        if (includeSelf && childrenFirst)
            action(this);
    };
    /**
     * Calls action on each ancestor node.
     *
     * @param {function(!Tree.<T>)} action Action to be called on each parent; return
     *   true to abort.
     * @param {boolean=} includeSelf Whether to call action on this node as well.
     * @return {boolean} true if the action callback returned true.
     */
    Tree.prototype.forEachAncestor = function (action, includeSelf) {
        var node = includeSelf ? this : this.parent();
        while (node !== null) {
            if (action(node)) {
                return true;
            }
            node = node.parent();
        }
        return false;
    };
    /**
     * Does a depth-first traversal of this node's descendants.  When a descendant with a value
     * is found, action is called on it and traversal does not continue inside the node.
     * Action is *not* called on this node.
     *
     * @param {function(!Tree.<T>)} action Action to be called for each child.
     */
    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {
        this.forEachChild(function (child) {
            if (child.getValue() !== null)
                action(child);
            else
                child.forEachImmediateDescendantWithValue(action);
        });
    };
    /**
     * @return {!Path} The path of this tree node, as a Path.
     */
    Tree.prototype.path = function () {
        return new Path_1.Path(this.parent_ === null
            ? this.name_
            : this.parent_.path() + '/' + this.name_);
    };
    /**
     * @return {string} The name of the tree node.
     */
    Tree.prototype.name = function () {
        return this.name_;
    };
    /**
     * @return {?Tree} The parent tree node, or null if this is the root of the tree.
     */
    Tree.prototype.parent = function () {
        return this.parent_;
    };
    /**
     * Adds or removes this child from its parent based on whether it's empty or not.
     *
     * @private
     */
    Tree.prototype.updateParents_ = function () {
        if (this.parent_ !== null)
            this.parent_.updateChild_(this.name_, this);
    };
    /**
     * Adds or removes the passed child to this tree node, depending on whether it's empty.
     *
     * @param {string} childName The name of the child to update.
     * @param {!Tree.<T>} child The child to update.
     * @private
     */
    Tree.prototype.updateChild_ = function (childName, child) {
        var childEmpty = child.isEmpty();
        var childExists = util_2.contains(this.node_.children, childName);
        if (childEmpty && childExists) {
            delete this.node_.children[childName];
            this.node_.childCount--;
            this.updateParents_();
        }
        else if (!childEmpty && !childExists) {
            this.node_.children[childName] = child.node_;
            this.node_.childCount++;
            this.updateParents_();
        }
    };
    return Tree;
}());
exports.Tree = Tree;

//# sourceMappingURL=Tree.js.map


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var WebSocketConnection_1 = __webpack_require__(54);
var BrowserPollConnection_1 = __webpack_require__(53);
/**
 * INTERNAL methods for internal-use only (tests, etc.).
 *
 * Customers shouldn't use these or else should be aware that they could break at any time.
 *
 * @const
 */
exports.forceLongPolling = function () {
    WebSocketConnection_1.WebSocketConnection.forceDisallow();
    BrowserPollConnection_1.BrowserPollConnection.forceAllow();
};
exports.forceWebSockets = function () {
    BrowserPollConnection_1.BrowserPollConnection.forceDisallow();
};
/* Used by App Manager */
exports.isWebSocketsAvailable = function () {
    return WebSocketConnection_1.WebSocketConnection['isAvailable']();
};
exports.setSecurityDebugCallback = function (ref, callback) {
    ref.repo.persistentConnection_.securityDebugCallback_ = callback;
};
exports.stats = function (ref, showDelta) {
    ref.repo.stats(showDelta);
};
exports.statsIncrementCounter = function (ref, metric) {
    ref.repo.statsIncrementCounter(metric);
};
exports.dataUpdateCount = function (ref) {
    return ref.repo.dataUpdateCount;
};
exports.interceptServerData = function (ref, callback) {
    return ref.repo.interceptServerData_(callback);
};

//# sourceMappingURL=internal.js.map


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var RepoInfo_1 = __webpack_require__(34);
var PersistentConnection_1 = __webpack_require__(50);
var RepoManager_1 = __webpack_require__(26);
var Connection_1 = __webpack_require__(52);
exports.DataConnection = PersistentConnection_1.PersistentConnection;
/**
 * @param {!string} pathString
 * @param {function(*)} onComplete
 */
PersistentConnection_1.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {
    this.sendRequest('q', { p: pathString }, onComplete);
};
/**
 * @param {*} data
 * @param {function(*)} onEcho
 */
PersistentConnection_1.PersistentConnection.prototype.echo = function (data, onEcho) {
    this.sendRequest('echo', { d: data }, onEcho);
};
// RealTimeConnection properties that we use in tests.
exports.RealTimeConnection = Connection_1.Connection;
/**
 * @param {function(): string} newHash
 * @return {function()}
 */
exports.hijackHash = function (newHash) {
    var oldPut = PersistentConnection_1.PersistentConnection.prototype.put;
    PersistentConnection_1.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {
        if (opt_hash !== undefined) {
            opt_hash = newHash();
        }
        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);
    };
    return function () {
        PersistentConnection_1.PersistentConnection.prototype.put = oldPut;
    };
};
/**
 * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}
 */
exports.ConnectionTarget = RepoInfo_1.RepoInfo;
/**
 * @param {!Query} query
 * @return {!string}
 */
exports.queryIdentifier = function (query) {
    return query.queryIdentifier();
};
/**
 * @param {!Query} firebaseRef
 * @return {!Object}
 */
exports.listens = function (firebaseRef) {
    return firebaseRef.repo.persistentConnection_.listens_;
};
/**
 * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.
 *
 * @param {boolean} forceRestClient
 */
exports.forceRestClient = function (forceRestClient) {
    RepoManager_1.RepoManager.getInstance().forceRestClient(forceRestClient);
};

//# sourceMappingURL=test_access.js.map


/***/ })
],[78]);
        } catch(error) {
          throw new Error(
            'Cannot instantiate firebase-database.js - ' +
            'be sure to load firebase-app.js first.'
          )
        }
//# sourceMappingURL=firebase-database.js.map
/*!
 * @license Firebase v4.6.2
 * Build: rev-61e817a
 * Terms: https://firebase.google.com/terms/
 */
try {
        webpackJsonpFirebase([3],{

/***/ 116:
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

__webpack_require__(117);


/***/ }),

/***/ 117:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ../util/dist/cjs/index.js
var cjs = __webpack_require__(0);
var cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/errors.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var CODES = {
    AVAILABLE_IN_WINDOW: 'only-available-in-window',
    AVAILABLE_IN_SW: 'only-available-in-sw',
    SHOULD_BE_INHERITED: 'should-be-overriden',
    BAD_SENDER_ID: 'bad-sender-id',
    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',
    PERMISSION_DEFAULT: 'permission-default',
    PERMISSION_BLOCKED: 'permission-blocked',
    UNSUPPORTED_BROWSER: 'unsupported-browser',
    NOTIFICATIONS_BLOCKED: 'notifications-blocked',
    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',
    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',
    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',
    INVALID_SAVED_TOKEN: 'invalid-saved-token',
    SW_REG_REDUNDANT: 'sw-reg-redundant',
    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',
    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',
    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',
    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',
    INVALID_DELETE_TOKEN: 'invalid-delete-token',
    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',
    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',
    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',
    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',
    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',
    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',
    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',
    NO_SW_IN_REG: 'no-sw-in-reg',
    BAD_SCOPE: 'bad-scope',
    BAD_VAPID_KEY: 'bad-vapid-key',
    BAD_SUBSCRIPTION: 'bad-subscription',
    BAD_TOKEN: 'bad-token',
    BAD_PUSH_SET: 'bad-push-set',
    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key'
};
var ERROR_MAP = (_a = {},
    _a[CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.',
    _a[CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.',
    _a[CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.',
    _a[CODES.BAD_SENDER_ID] = "Please ensure that 'messagingSenderId' is set " +
        'correctly in the options passed into firebase.initializeApp().',
    _a[CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.',
    _a[CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.',
    _a[CODES.UNSUPPORTED_BROWSER] = "This browser doesn't support the API's " +
        'required to use the firebase SDK.',
    _a[CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.',
    _a[CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' +
        'default service worker. {$browserErrorMessage}',
    _a[CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.',
    _a[CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' +
        'any existing Push Subscriptions.',
    _a[CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.',
    _a[CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.',
    _a[CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}',
    _a[CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.',
    _a[CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.',
    _a[CODES.USE_SW_BEFORE_GET_TOKEN] = 'You must call useServiceWorker() before ' +
        'calling getToken() to ensure your service worker is used.',
    _a[CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' +
        'deleteToken(), i.e. the token from getToken().',
    _a[CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' +
        'be performed as the token was not found.',
    _a[CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' +
        'scope could not be performed as the scope was not found.',
    _a[CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.',
    _a[CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.',
    _a[CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' +
        'the FCM token for push messaging. Will have to resubscribe the ' +
        'user on next visit. {$message}',
    _a[CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' +
        'and as a result, unable to resubscribe. Will have to resubscribe the ' +
        'user on next visit.',
    _a[CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.',
    _a[CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' +
        'successful, there was a problem accessing the service worker itself.',
    _a[CODES.INCORRECT_GCM_SENDER_ID] = "Please change your web app manifest's " +
        "'gcm_sender_id' value to '103953800507' to use Firebase messaging.",
    _a[CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' +
        'least one character.',
    _a[CODES.BAD_VAPID_KEY] = 'The public VAPID key must be a string with at ' + 'least one character.',
    _a[CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.',
    _a[CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' +
        'a valid token string.',
    _a[CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' +
        'not a valid push set string.',
    _a[CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.',
    _a);
/* harmony default export */ var errors = ({
    codes: CODES,
    map: ERROR_MAP
});
var _a;

//# sourceMappingURL=errors.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/helpers/array-buffer-to-base64.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function toBase64(arrayBuffer) {
    var uint8Version = new Uint8Array(arrayBuffer);
    return window.btoa(String.fromCharCode.apply(null, uint8Version));
}
/* harmony default export */ var array_buffer_to_base64 = (function (arrayBuffer) {
    var base64String = toBase64(arrayBuffer);
    return base64String
        .replace(/=/g, '')
        .replace(/\+/g, '-')
        .replace(/\//g, '_');
});;

//# sourceMappingURL=array-buffer-to-base64.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/fcm-details.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var FCM_APPLICATION_SERVER_KEY = [
    0x04,
    0x33,
    0x94,
    0xf7,
    0xdf,
    0xa1,
    0xeb,
    0xb1,
    0xdc,
    0x03,
    0xa2,
    0x5e,
    0x15,
    0x71,
    0xdb,
    0x48,
    0xd3,
    0x2e,
    0xed,
    0xed,
    0xb2,
    0x34,
    0xdb,
    0xb7,
    0x47,
    0x3a,
    0x0c,
    0x8f,
    0xc4,
    0xcc,
    0xe1,
    0x6f,
    0x3c,
    0x8c,
    0x84,
    0xdf,
    0xab,
    0xb6,
    0x66,
    0x3e,
    0xf2,
    0x0c,
    0xd4,
    0x8b,
    0xfe,
    0xe3,
    0xf9,
    0x76,
    0x2f,
    0x14,
    0x1c,
    0x63,
    0x08,
    0x6a,
    0x6f,
    0x2d,
    0xb1,
    0x1a,
    0x95,
    0xb0,
    0xce,
    0x37,
    0xc0,
    0x9c,
    0x6e
];
var SUBSCRIPTION_DETAILS = {
    userVisibleOnly: true,
    applicationServerKey: new Uint8Array(FCM_APPLICATION_SERVER_KEY)
};
/* harmony default export */ var fcm_details = ({
    ENDPOINT: 'https://fcm.googleapis.com',
    APPLICATION_SERVER_KEY: FCM_APPLICATION_SERVER_KEY,
    SUBSCRIPTION_OPTIONS: SUBSCRIPTION_DETAILS
});

//# sourceMappingURL=fcm-details.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/token-manager.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





var FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';
var FCM_TOKEN_DETAILS_DB_VERSION = 1;
var token_manager_TokenManager = /** @class */ (function () {
    function TokenManager() {
        this.errorFactory_ = new cjs["ErrorFactory"]('messaging', 'Messaging', errors.map);
        this.openDbPromise_ = null;
    }
    /**
     * Get the indexedDB as a promsie.
     * @private
     * @return {Promise<IDBDatabase>} The IndexedDB database
     */
    TokenManager.prototype.openDatabase_ = function () {
        if (this.openDbPromise_) {
            return this.openDbPromise_;
        }
        this.openDbPromise_ = new Promise(function (resolve, reject) {
            var request = indexedDB.open(TokenManager.DB_NAME, FCM_TOKEN_DETAILS_DB_VERSION);
            request.onerror = function (event) {
                reject(event.target.error);
            };
            request.onsuccess = function (event) {
                resolve(event.target.result);
            };
            request.onupgradeneeded = function (event) {
                var db = event.target.result;
                var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {
                    keyPath: 'swScope'
                });
                // Make sure the sender ID can be searched
                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {
                    unique: false
                });
                objectStore.createIndex('fcmToken', 'fcmToken', {
                    unique: true
                });
            };
        });
        return this.openDbPromise_;
    };
    /**
     * Close the currently open database.
     * @return {Promise<?>} Returns the result of the promise chain.
     */
    TokenManager.prototype.closeDatabase = function () {
        var _this = this;
        if (this.openDbPromise_) {
            return this.openDbPromise_.then(function (db) {
                db.close();
                _this.openDbPromise_ = null;
            });
        }
        return Promise.resolve();
    };
    /**
     * Given a token, this method will look up the details in indexedDB.
     * @public
     * @param {string} fcmToken
     * @return {Promise<Object>} The details associated with that token.
     */
    TokenManager.prototype.getTokenDetailsFromToken = function (fcmToken) {
        return this.openDatabase_().then(function (db) {
            return new Promise(function (resolve, reject) {
                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
                var index = objectStore.index('fcmToken');
                var request = index.get(fcmToken);
                request.onerror = function (event) {
                    reject(event.target.error);
                };
                request.onsuccess = function (event) {
                    resolve(event.target.result);
                };
            });
        });
    };
    TokenManager.prototype.getTokenDetailsFromSWScope_ = function (swScope) {
        return this.openDatabase_().then(function (db) {
            return new Promise(function (resolve, reject) {
                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
                var scopeRequest = objectStore.get(swScope);
                scopeRequest.onerror = function (event) {
                    reject(event.target.error);
                };
                scopeRequest.onsuccess = function (event) {
                    resolve(event.target.result);
                };
            });
        });
    };
    TokenManager.prototype.getAllTokenDetailsForSenderId_ = function (senderId) {
        return this.openDatabase_().then(function (db) {
            return new Promise(function (resolve, reject) {
                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
                var senderIdTokens = [];
                var cursorRequest = objectStore.openCursor();
                cursorRequest.onerror = function (event) {
                    reject(event.target.error);
                };
                cursorRequest.onsuccess = function (event) {
                    var cursor = event.target.result;
                    if (cursor) {
                        if (cursor.value['fcmSenderId'] === senderId) {
                            senderIdTokens.push(cursor.value);
                        }
                        cursor.continue();
                    }
                    else {
                        resolve(senderIdTokens);
                    }
                };
            });
        });
    };
    /**
     * Given a PushSubscription and messagingSenderId, get an FCM token.
     * @public
     * @param  {string} senderId The 'messagingSenderId' to tie the token to.
     * @param  {PushSubscription} subscription The PushSusbcription to "federate".
     * @param  {string=} pushSet If defined this will swap the subscription for
     * matching FCM token.
     * @return {Promise<!Object>} Returns the FCM token to be used in place
     * of the PushSubscription.
     */
    TokenManager.prototype.subscribeToFCM = function (senderId, subscription, pushSet) {
        var _this = this;
        var p256dh = array_buffer_to_base64(subscription['getKey']('p256dh'));
        var auth = array_buffer_to_base64(subscription['getKey']('auth'));
        var fcmSubscribeBody = "authorized_entity=" + senderId + "&" +
            ("endpoint=" + subscription.endpoint + "&") +
            ("encryption_key=" + p256dh + "&") +
            ("encryption_auth=" + auth);
        if (pushSet) {
            fcmSubscribeBody += "&pushSet=" + pushSet;
        }
        var headers = new Headers();
        headers.append('Content-Type', 'application/x-www-form-urlencoded');
        var subscribeOptions = {
            method: 'POST',
            headers: headers,
            body: fcmSubscribeBody
        };
        return fetch(fcm_details.ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)
            .then(function (response) { return response.json(); })
            .then(function (response) {
            var fcmTokenResponse = response;
            if (fcmTokenResponse['error']) {
                var message = fcmTokenResponse['error']['message'];
                throw _this.errorFactory_.create(errors.codes.TOKEN_SUBSCRIBE_FAILED, {
                    message: message
                });
            }
            if (!fcmTokenResponse['token']) {
                throw _this.errorFactory_.create(errors.codes.TOKEN_SUBSCRIBE_NO_TOKEN);
            }
            if (!fcmTokenResponse['pushSet']) {
                throw _this.errorFactory_.create(errors.codes.TOKEN_SUBSCRIBE_NO_PUSH_SET);
            }
            return {
                token: fcmTokenResponse['token'],
                pushSet: fcmTokenResponse['pushSet']
            };
        });
    };
    /**
     * Checks the that fields in the PushSubscription are equivalent to the
     * details stores in the masterTokenDetails.
     * @private
     * @param  {PushSubscription} subscription The push subscription we expect
     * the master token to match.
     * @param  {Object}  masterTokenDetails The saved details we wish to compare
     * with the PushSubscription
     * @return {boolean} true if the subscription and token details are
     * equivalent.
     */
    TokenManager.prototype.isSameSubscription_ = function (subscription, masterTokenDetails) {
        // getKey() isn't defined in the PushSubscription externs file, hence
        // subscription['getKey']('<key name>').
        return (subscription.endpoint === masterTokenDetails['endpoint'] &&
            array_buffer_to_base64(subscription['getKey']('auth')) ===
                masterTokenDetails['auth'] &&
            array_buffer_to_base64(subscription['getKey']('p256dh')) ===
                masterTokenDetails['p256dh']);
    };
    /**
     * Save the details for the fcm token for re-use at a later date.
     * @private
     * @param  {string} senderId The 'messagingSenderId' used for this project
     * @param  {ServiceWorkerRegistration} swRegistration The service worker
     * used to subscribe the user for web push
     * @param  {PushSubscription} subscription The push subscription passed to
     * FCM for the current token.
     * @param  {string} fcmToken The FCM token currently used on this
     * device.
     * @param  {string} fcmPushSet The FCM push tied to the fcm token.
     * @return {Promise<void>}
     */
    TokenManager.prototype.saveTokenDetails_ = function (senderId, swRegistration, subscription, fcmToken, fcmPushSet) {
        var details = {
            swScope: swRegistration.scope,
            endpoint: subscription.endpoint,
            auth: array_buffer_to_base64(subscription['getKey']('auth')),
            p256dh: array_buffer_to_base64(subscription['getKey']('p256dh')),
            fcmToken: fcmToken,
            fcmPushSet: fcmPushSet,
            fcmSenderId: senderId
        };
        return this.openDatabase_().then(function (db) {
            return new Promise(function (resolve, reject) {
                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');
                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
                var request = objectStore.put(details);
                request.onerror = function (event) {
                    reject(event.target.error);
                };
                request.onsuccess = function (event) {
                    resolve();
                };
            });
        });
    };
    /**
     * Returns the saved FCM Token if one is available and still valid,
     * otherwise `null` is returned.
     * @param {string} senderId This should be the sender ID associated with the
     * FCM Token being retrieved.
     * @param {ServiceWorkerRegistration} swRegistration Registration to be used
     * to subscribe the user to push.
     * @return {Promise<string> | Promise} Returns the saved FCM Token if
     * avilable and valid.
     * @export
     */
    TokenManager.prototype.getSavedToken = function (senderId, swRegistration) {
        var _this = this;
        if (!(swRegistration instanceof ServiceWorkerRegistration)) {
            return Promise.reject(this.errorFactory_.create(errors.codes.SW_REGISTRATION_EXPECTED));
        }
        if (typeof senderId !== 'string' || senderId.length === 0) {
            return Promise.reject(this.errorFactory_.create(errors.codes.BAD_SENDER_ID));
        }
        return this.getAllTokenDetailsForSenderId_(senderId)
            .then(function (allTokenDetails) {
            if (allTokenDetails.length === 0) {
                return;
            }
            var index = allTokenDetails.findIndex(function (tokenDetails) {
                return (swRegistration.scope === tokenDetails['swScope'] &&
                    senderId === tokenDetails['fcmSenderId']);
            });
            if (index === -1) {
                return;
            }
            return allTokenDetails[index];
        })
            .then(function (tokenDetails) {
            if (!tokenDetails) {
                return;
            }
            return swRegistration.pushManager
                .getSubscription()
                .catch(function (err) {
                throw _this.errorFactory_.create(errors.codes.GET_SUBSCRIPTION_FAILED);
            })
                .then(function (subscription) {
                if (subscription &&
                    _this.isSameSubscription_(subscription, tokenDetails)) {
                    return tokenDetails['fcmToken'];
                }
            });
        });
    };
    /**
     * Creates a new FCM token.
     */
    TokenManager.prototype.createToken = function (senderId, swRegistration) {
        var _this = this;
        if (typeof senderId !== 'string' || senderId.length === 0) {
            return Promise.reject(this.errorFactory_.create(errors.codes.BAD_SENDER_ID));
        }
        if (!(swRegistration instanceof ServiceWorkerRegistration)) {
            return Promise.reject(this.errorFactory_.create(errors.codes.SW_REGISTRATION_EXPECTED));
        }
        // Check for existing subscription first
        var subscription;
        var fcmTokenDetails;
        return swRegistration.pushManager
            .getSubscription()
            .then(function (subscription) {
            if (subscription) {
                return subscription;
            }
            return swRegistration.pushManager.subscribe(fcm_details.SUBSCRIPTION_OPTIONS);
        })
            .then(function (sub) {
            subscription = sub;
            return _this.subscribeToFCM(senderId, subscription);
        })
            .then(function (tokenDetails) {
            fcmTokenDetails = tokenDetails;
            return _this.saveTokenDetails_(senderId, swRegistration, subscription, fcmTokenDetails['token'], fcmTokenDetails['pushSet']);
        })
            .then(function () { return fcmTokenDetails['token']; });
    };
    /**
     * This method deletes details of the current FCM token.
     * It's returning a promise in case we need to move to an async
     * method for deleting at a later date.
     * @param {string} token Token to be deleted
     * @return {Promise<Object>} Resolves once the FCM token details have been
     * deleted and returns the deleted details.
     */
    TokenManager.prototype.deleteToken = function (token) {
        var _this = this;
        if (typeof token !== 'string' || token.length === 0) {
            return Promise.reject(this.errorFactory_.create(errors.codes.INVALID_DELETE_TOKEN));
        }
        return this.getTokenDetailsFromToken(token).then(function (details) {
            if (!details) {
                throw _this.errorFactory_.create(errors.codes.DELETE_TOKEN_NOT_FOUND);
            }
            return _this.openDatabase_().then(function (db) {
                return new Promise(function (resolve, reject) {
                    var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');
                    var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
                    var request = objectStore.delete(details['swScope']);
                    request.onerror = function (event) {
                        reject(event.target.error);
                    };
                    request.onsuccess = function (event) {
                        if (event.target.result === 0) {
                            reject(_this.errorFactory_.create(errors.codes.FAILED_TO_DELETE_TOKEN));
                            return;
                        }
                        resolve(details);
                    };
                });
            });
        });
    };
    return TokenManager;
}());
/* harmony default export */ var token_manager = (token_manager_TokenManager);

//# sourceMappingURL=token-manager.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/notification-permission.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* harmony default export */ var notification_permission = ({
    granted: 'granted',
    default: 'default',
    denied: 'denied'
});

//# sourceMappingURL=notification-permission.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/controllers/controller-interface.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





var SENDER_ID_OPTION_NAME = 'messagingSenderId';
var controller_interface_ControllerInterface = /** @class */ (function () {
    /**
     * An interface of the Messaging Service API
     * @param {!firebase.app.App} app
     */
    function ControllerInterface(app) {
        var _this = this;
        this.errorFactory_ = new cjs["ErrorFactory"]('messaging', 'Messaging', errors.map);
        if (!app.options[SENDER_ID_OPTION_NAME] ||
            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {
            throw this.errorFactory_.create(errors.codes.BAD_SENDER_ID);
        }
        this.messagingSenderId_ = app.options[SENDER_ID_OPTION_NAME];
        this.tokenManager_ = new token_manager();
        this.app = app;
        this.INTERNAL = {};
        this.INTERNAL.delete = function () { return _this.delete; };
    }
    /**
     * @export
     * @return {Promise<string> | Promise<null>} Returns a promise that
     * resolves to an FCM token.
     */
    ControllerInterface.prototype.getToken = function () {
        var _this = this;
        // Check with permissions
        var currentPermission = this.getNotificationPermission_();
        if (currentPermission !== notification_permission.granted) {
            if (currentPermission === notification_permission.denied) {
                return Promise.reject(this.errorFactory_.create(errors.codes.NOTIFICATIONS_BLOCKED));
            }
            // We must wait for permission to be granted
            return Promise.resolve(null);
        }
        return this.getSWRegistration_().then(function (registration) {
            return _this.tokenManager_
                .getSavedToken(_this.messagingSenderId_, registration)
                .then(function (token) {
                if (token) {
                    return token;
                }
                return _this.tokenManager_.createToken(_this.messagingSenderId_, registration);
            });
        });
    };
    /**
     * This method deletes tokens that the token manager looks after and then
     * unregisters the push subscription if it exists.
     * @export
     * @param {string} token
     * @return {Promise<void>}
     */
    ControllerInterface.prototype.deleteToken = function (token) {
        var _this = this;
        return this.tokenManager_.deleteToken(token).then(function () {
            return _this.getSWRegistration_()
                .then(function (registration) {
                if (registration) {
                    return registration.pushManager.getSubscription();
                }
            })
                .then(function (subscription) {
                if (subscription) {
                    return subscription.unsubscribe();
                }
            });
        });
    };
    ControllerInterface.prototype.getSWRegistration_ = function () {
        throw this.errorFactory_.create(errors.codes.SHOULD_BE_INHERITED);
    };
    //
    // The following methods should only be available in the window.
    //
    ControllerInterface.prototype.requestPermission = function () {
        throw this.errorFactory_.create(errors.codes.AVAILABLE_IN_WINDOW);
    };
    /**
     * @export
     * @param {!ServiceWorkerRegistration} registration
     */
    ControllerInterface.prototype.useServiceWorker = function (registration) {
        throw this.errorFactory_.create(errors.codes.AVAILABLE_IN_WINDOW);
    };
    /**
     * @export
     * @param {!firebase.Observer|function(*)} nextOrObserver
     * @param {function(!Error)=} optError
     * @param {function()=} optCompleted
     * @return {!function()}
     */
    ControllerInterface.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {
        throw this.errorFactory_.create(errors.codes.AVAILABLE_IN_WINDOW);
    };
    /**
     * @export
     * @param {!firebase.Observer|function()} nextOrObserver An observer object
     * or a function triggered on token refresh.
     * @param {function(!Error)=} optError Optional A function
     * triggered on token refresh error.
     * @param {function()=} optCompleted Optional function triggered when the
     * observer is removed.
     * @return {!function()} The unsubscribe function for the observer.
     */
    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {
        throw this.errorFactory_.create(errors.codes.AVAILABLE_IN_WINDOW);
    };
    //
    // The following methods are used by the service worker only.
    //
    /**
     * @export
     * @param {function(Object)} callback
     */
    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {
        throw this.errorFactory_.create(errors.codes.AVAILABLE_IN_SW);
    };
    //
    // The following methods are used by the service themselves and not exposed
    // publicly or not expected to be used by developers.
    //
    /**
     * This method is required to adhere to the Firebase interface.
     * It closes any currently open indexdb database connections.
     */
    ControllerInterface.prototype.delete = function () {
        return this.tokenManager_.closeDatabase();
    };
    /**
     * Returns the current Notification Permission state.
     * @private
     * @return {string} The currenct permission state.
     */
    ControllerInterface.prototype.getNotificationPermission_ = function () {
        return Notification.permission;
    };
    /**
     * @protected
     * @returns {TokenManager}
     */
    ControllerInterface.prototype.getTokenManager = function () {
        return this.tokenManager_;
    };
    return ControllerInterface;
}());
/* harmony default export */ var controller_interface = (controller_interface_ControllerInterface);

//# sourceMappingURL=controller-interface.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/worker-page-message.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// These fields are strings to prevent closure from thinking goog.getMsg
// should be used to initialise the values
var PARAMS = {
    TYPE_OF_MSG: 'firebase-messaging-msg-type',
    DATA: 'firebase-messaging-msg-data'
};
// This value isn't using the TYPE_OF_MSG short hand as closure
// expects the variable to be defined via goog.getMsg
var msgType = {
    PUSH_MSG_RECEIVED: 'push-msg-received',
    NOTIFICATION_CLICKED: 'notification-clicked'
};
var createNewMsg = function (msgType, msgData) {
    var message = (_a = {},
        _a[PARAMS.TYPE_OF_MSG] = msgType,
        _a[PARAMS.DATA] = msgData,
        _a);
    return message;
    var _a;
};
/* harmony default export */ var worker_page_message = ({
    PARAMS: PARAMS,
    TYPES_OF_MSG: msgType,
    createNewMsg: createNewMsg
});

//# sourceMappingURL=worker-page-message.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/models/default-sw.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* harmony default export */ var default_sw = ({
    path: '/firebase-messaging-sw.js',
    scope: '/firebase-cloud-messaging-push-scope'
});

//# sourceMappingURL=default-sw.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/controllers/window-controller.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var window_controller_WindowController = /** @class */ (function (_super) {
    __extends(WindowController, _super);
    /**
     * A service that provides a MessagingService instance.
     * @param {!firebase.app.App} app
     */
    function WindowController(app) {
        var _this = _super.call(this, app) || this;
        /**
         * @private
         * @type {ServiceWorkerRegistration}
         */
        _this.registrationToUse_;
        /**
         * @private
         * @type {Promise}
         */
        _this.manifestCheckPromise_;
        /**
         * @private
         * @type {firebase.Observer}
         */
        _this.messageObserver_ = null;
        /**
         * @private {!firebase.Subscribe} The subscribe function to the onMessage
         * observer.
         */
        _this.onMessage_ = Object(cjs["createSubscribe"])(function (observer) {
            _this.messageObserver_ = observer;
        });
        /**
         * @private
         * @type {firebase.Observer}
         */
        _this.tokenRefreshObserver_ = null;
        _this.onTokenRefresh_ = Object(cjs["createSubscribe"])(function (observer) {
            _this.tokenRefreshObserver_ = observer;
        });
        _this.setupSWMessageListener_();
        return _this;
    }
    /**
     * This method returns an FCM token if it can be generated.
     * The return promise will reject if the browser doesn't support
     * FCM, if permission is denied for notifications or it's not
     * possible to generate a token.
     * @export
     * @return {Promise<string> | Promise<null>} Returns a promise the
     * resolves to an FCM token or null if permission isn't granted.
     */
    WindowController.prototype.getToken = function () {
        var _this = this;
        // Check that the required API's are available
        if (!this.isSupported_()) {
            return Promise.reject(this.errorFactory_.create(errors.codes.UNSUPPORTED_BROWSER));
        }
        return this.manifestCheck_().then(function () {
            return _super.prototype.getToken.call(_this);
        });
    };
    /**
     * The method checks that a manifest is defined and has the correct GCM
     * sender ID.
     * @private
     * @return {Promise} Returns a promise that resolves if the manifest matches
     * our required sender ID
     */
    WindowController.prototype.manifestCheck_ = function () {
        var _this = this;
        if (this.manifestCheckPromise_) {
            return this.manifestCheckPromise_;
        }
        var manifestTag = document.querySelector('link[rel="manifest"]');
        if (!manifestTag) {
            this.manifestCheckPromise_ = Promise.resolve();
        }
        else {
            this.manifestCheckPromise_ = fetch(manifestTag.href)
                .then(function (response) {
                return response.json();
            })
                .catch(function () {
                // If the download or parsing fails allow check.
                // We only want to error if we KNOW that the gcm_sender_id is incorrect.
                return Promise.resolve();
            })
                .then(function (manifestContent) {
                if (!manifestContent) {
                    return;
                }
                if (!manifestContent['gcm_sender_id']) {
                    return;
                }
                if (manifestContent['gcm_sender_id'] !== '103953800507') {
                    throw _this.errorFactory_.create(errors.codes.INCORRECT_GCM_SENDER_ID);
                }
            });
        }
        return this.manifestCheckPromise_;
    };
    /**
     * Request permission if it is not currently granted
     * @export
     * @returns {Promise} Resolves if the permission was granted, otherwise
     * rejects
     */
    WindowController.prototype.requestPermission = function () {
        var _this = this;
        if (Notification.permission === notification_permission.granted) {
            return Promise.resolve();
        }
        return new Promise(function (resolve, reject) {
            var managePermissionResult = function (result) {
                if (result === notification_permission.granted) {
                    return resolve();
                }
                else if (result === notification_permission.denied) {
                    return reject(_this.errorFactory_.create(errors.codes.PERMISSION_BLOCKED));
                }
                else {
                    return reject(_this.errorFactory_.create(errors.codes.PERMISSION_DEFAULT));
                }
            };
            // The Notification.requestPermission API was changed to
            // return a promise so now have to handle both in case
            // browsers stop support callbacks for promised version
            var permissionPromise = Notification.requestPermission(function (result) {
                if (permissionPromise) {
                    // Let the promise manage this
                    return;
                }
                managePermissionResult(result);
            });
            if (permissionPromise) {
                // Prefer the promise version as it's the future API.
                permissionPromise.then(managePermissionResult);
            }
        });
    };
    /**
     * This method allows a developer to override the default service worker and
     * instead use a custom service worker.
     * @export
     * @param {!ServiceWorkerRegistration} registration The service worker
     * registration that should be used to receive the push messages.
     */
    WindowController.prototype.useServiceWorker = function (registration) {
        if (!(registration instanceof ServiceWorkerRegistration)) {
            throw this.errorFactory_.create(errors.codes.SW_REGISTRATION_EXPECTED);
        }
        if (typeof this.registrationToUse_ !== 'undefined') {
            throw this.errorFactory_.create(errors.codes.USE_SW_BEFORE_GET_TOKEN);
        }
        this.registrationToUse_ = registration;
    };
    /**
     * @export
     * @param {!firebase.Observer|function(*)} nextOrObserver An observer object
     * or a function triggered on message.
     * @param {function(!Error)=} optError Optional A function triggered on
     * message error.
     * @param {function()=} optCompleted Optional function triggered when the
     * observer is removed.
     * @return {!function()} The unsubscribe function for the observer.
     */
    WindowController.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {
        return this.onMessage_(nextOrObserver, optError, optCompleted);
    };
    /**
     * @export
     * @param {!firebase.Observer|function()} nextOrObserver An observer object
     * or a function triggered on token refresh.
     * @param {function(!Error)=} optError Optional A function
     * triggered on token refresh error.
     * @param {function()=} optCompleted Optional function triggered when the
     * observer is removed.
     * @return {!function()} The unsubscribe function for the observer.
     */
    WindowController.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {
        return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);
    };
    /**
     * Given a registration, wait for the service worker it relates to
     * become activer
     * @private
     * @param  {ServiceWorkerRegistration} registration Registration to wait
     * for service worker to become active
     * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker
     * registration to become active
     */
    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {
        var _this = this;
        var serviceWorker = registration.installing || registration.waiting || registration.active;
        return new Promise(function (resolve, reject) {
            if (!serviceWorker) {
                // This is a rare scenario but has occured in firefox
                reject(_this.errorFactory_.create(errors.codes.NO_SW_IN_REG));
                return;
            }
            // Because the Promise function is called on next tick there is a
            // small chance that the worker became active or redundant already.
            if (serviceWorker.state === 'activated') {
                resolve(registration);
                return;
            }
            if (serviceWorker.state === 'redundant') {
                reject(_this.errorFactory_.create(errors.codes.SW_REG_REDUNDANT));
                return;
            }
            var stateChangeListener = function () {
                if (serviceWorker.state === 'activated') {
                    resolve(registration);
                }
                else if (serviceWorker.state === 'redundant') {
                    reject(_this.errorFactory_.create(errors.codes.SW_REG_REDUNDANT));
                }
                else {
                    // Return early and wait to next state change
                    return;
                }
                serviceWorker.removeEventListener('statechange', stateChangeListener);
            };
            serviceWorker.addEventListener('statechange', stateChangeListener);
        });
    };
    /**
     * This will regiater the default service worker and return the registration
     * @private
     * @return {Promise<!ServiceWorkerRegistration>} The service worker
     * registration to be used for the push service.
     */
    WindowController.prototype.getSWRegistration_ = function () {
        var _this = this;
        if (this.registrationToUse_) {
            return this.waitForRegistrationToActivate_(this.registrationToUse_);
        }
        // Make the registration null so we know useServiceWorker will not
        // use a new service worker as registrationToUse_ is no longer undefined
        this.registrationToUse_ = null;
        return navigator.serviceWorker
            .register(default_sw.path, {
            scope: default_sw.scope
        })
            .catch(function (err) {
            throw _this.errorFactory_.create(errors.codes.FAILED_DEFAULT_REGISTRATION, {
                browserErrorMessage: err.message
            });
        })
            .then(function (registration) {
            return _this.waitForRegistrationToActivate_(registration).then(function () {
                _this.registrationToUse_ = registration;
                // We update after activation due to an issue with Firefox v49 where
                // a race condition occassionally causes the service work to not
                // install
                registration.update();
                return registration;
            });
        });
    };
    /**
     * This method will set up a message listener to handle
     * events from the service worker that should trigger
     * events in the page.
     *
     * @private
     */
    WindowController.prototype.setupSWMessageListener_ = function () {
        var _this = this;
        if (!('serviceWorker' in navigator)) {
            return;
        }
        navigator.serviceWorker.addEventListener('message', function (event) {
            if (!event.data || !event.data[worker_page_message.PARAMS.TYPE_OF_MSG]) {
                // Not a message from FCM
                return;
            }
            var workerPageMessage = event.data;
            switch (workerPageMessage[worker_page_message.PARAMS.TYPE_OF_MSG]) {
                case worker_page_message.TYPES_OF_MSG.PUSH_MSG_RECEIVED:
                case worker_page_message.TYPES_OF_MSG.NOTIFICATION_CLICKED:
                    var pushMessage = workerPageMessage[worker_page_message.PARAMS.DATA];
                    _this.messageObserver_.next(pushMessage);
                    break;
                default:
                    // Noop.
                    break;
            }
        }, false);
    };
    /**
     * Checks to see if the required API's are valid or not.
     * @private
     * @return {boolean} Returns true if the desired APIs are available.
     */
    WindowController.prototype.isSupported_ = function () {
        return ('serviceWorker' in navigator &&
            'PushManager' in window &&
            'Notification' in window &&
            'fetch' in window &&
            ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&
            PushSubscription.prototype.hasOwnProperty('getKey'));
    };
    return WindowController;
}(controller_interface));
/* harmony default export */ var window_controller = (window_controller_WindowController);

//# sourceMappingURL=window-controller.js.map

// CONCATENATED MODULE: ../messaging/dist/esm/src/controllers/sw-controller.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var sw_controller___extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var FCM_MSG = 'FCM_MSG';
var sw_controller_SWController = /** @class */ (function (_super) {
    sw_controller___extends(SWController, _super);
    function SWController(app) {
        var _this = _super.call(this, app) || this;
        self.addEventListener('push', function (e) { return _this.onPush_(e); }, false);
        self.addEventListener('pushsubscriptionchange', function (e) { return _this.onSubChange_(e); }, false);
        self.addEventListener('notificationclick', function (e) { return _this.onNotificationClick_(e); }, false);
        /**
         * @private
         * @type {function(Object)|null}
         */
        _this.bgMessageHandler_ = null;
        return _this;
    }
    /**
     * A handler for push events that shows notifications based on the content of
     * the payload.
     *
     * The payload must be a JSON-encoded Object with a `notification` key. The
     * value of the `notification` property will be used as the NotificationOptions
     * object passed to showNotification. Additionally, the `title` property of the
     * notification object will be used as the title.
     *
     * If there is no notification data in the payload then no notification will be
     * shown.
     * @private
     */
    SWController.prototype.onPush_ = function (event) {
        var _this = this;
        var msgPayload;
        try {
            msgPayload = event.data.json();
        }
        catch (err) {
            // Not JSON so not an FCM message
            return;
        }
        var handleMsgPromise = this.hasVisibleClients_().then(function (hasVisibleClients) {
            if (hasVisibleClients) {
                // Do not need to show a notification.
                if (msgPayload.notification || _this.bgMessageHandler_) {
                    // Send to page
                    return _this.sendMessageToWindowClients_(msgPayload);
                }
                return;
            }
            var notificationDetails = _this.getNotificationData_(msgPayload);
            if (notificationDetails) {
                var notificationTitle = notificationDetails.title || '';
                return self.registration.showNotification(notificationTitle, notificationDetails);
            }
            else if (_this.bgMessageHandler_) {
                return _this.bgMessageHandler_(msgPayload);
            }
        });
        event.waitUntil(handleMsgPromise);
    };
    /**
     * @private
     */
    SWController.prototype.onSubChange_ = function (event) {
        var _this = this;
        var promiseChain = this.getToken().then(function (token) {
            if (!token) {
                // We can't resubscribe if we don't have an FCM token for this scope.
                throw _this.errorFactory_.create(errors.codes.NO_FCM_TOKEN_FOR_RESUBSCRIBE);
            }
            var tokenDetails = null;
            var tokenManager = _this.getTokenManager();
            return tokenManager
                .getTokenDetailsFromToken(token)
                .then(function (details) {
                tokenDetails = details;
                if (!tokenDetails) {
                    throw _this.errorFactory_.create(errors.codes.INVALID_SAVED_TOKEN);
                }
                // Attempt to get a new subscription
                return self.registration.pushManager.subscribe(fcm_details.SUBSCRIPTION_OPTIONS);
            })
                .then(function (newSubscription) {
                // Send new subscription to FCM.
                return tokenManager.subscribeToFCM(tokenDetails.fcmSenderId, newSubscription, tokenDetails.fcmPushSet);
            })
                .catch(function (err) {
                // The best thing we can do is log this to the terminal so
                // developers might notice the error.
                return tokenManager.deleteToken(tokenDetails.fcmToken).then(function () {
                    throw _this.errorFactory_.create(errors.codes.UNABLE_TO_RESUBSCRIBE, {
                        message: err
                    });
                });
            });
        });
        event.waitUntil(promiseChain);
    };
    /**
     * @private
     */
    SWController.prototype.onNotificationClick_ = function (event) {
        var _this = this;
        if (!(event.notification &&
            event.notification.data &&
            event.notification.data[FCM_MSG])) {
            // Not an FCM notification, do nothing.
            return;
        }
        // Prevent other listeners from receiving the event
        event.stopImmediatePropagation();
        event.notification.close();
        var msgPayload = event.notification.data[FCM_MSG];
        var clickAction = msgPayload['notification']['click_action'];
        if (!clickAction) {
            // Nothing to do.
            return;
        }
        var promiseChain = this.getWindowClient_(clickAction)
            .then(function (windowClient) {
            if (!windowClient) {
                // Unable to find window client so need to open one.
                return self.clients.openWindow(clickAction);
            }
            return windowClient;
        })
            .then(function (windowClient) {
            if (!windowClient) {
                // Window Client will not be returned if it's for a third party origin.
                return;
            }
            // Delete notification data from payload before sending to the page.
            var notificationData = msgPayload['notification'];
            delete msgPayload['notification'];
            var internalMsg = worker_page_message.createNewMsg(worker_page_message.TYPES_OF_MSG.NOTIFICATION_CLICKED, msgPayload);
            // Attempt to send a message to the client to handle the data
            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728
            return _this.attemptToMessageClient_(windowClient, internalMsg);
        });
        event.waitUntil(promiseChain);
    };
    /**
     * @private
     * @param {Object} msgPayload
     * @return {NotificationOptions|undefined}
     */
    SWController.prototype.getNotificationData_ = function (msgPayload) {
        if (!msgPayload) {
            return;
        }
        if (typeof msgPayload.notification !== 'object') {
            return;
        }
        var notificationInformation = Object.assign({}, msgPayload.notification);
        // Put the message payload under FCM_MSG name so we can identify the
        // notification as being an FCM notification vs a notification from
        // somewhere else (i.e. normal web push or developer generated
        // notification).
        notificationInformation['data'] = (_a = {},
            _a[FCM_MSG] = msgPayload,
            _a);
        return notificationInformation;
        var _a;
    };
    /**
     * Calling setBackgroundMessageHandler will opt in to some specific
     * behaviours.
     * 1.) If a notification doesn't need to be shown due to a window already
     * being visible, then push messages will be sent to the page.
     * 2.) If a notification needs to be shown, and the message contains no
     * notification data this method will be called
     * and the promise it returns will be passed to event.waitUntil.
     * If you do not set this callback then all push messages will let and the
     * developer can handle them in a their own 'push' event callback
     * @export
     * @param {function(Object)} callback The callback to be called when a push
     * message is received and a notification must be shown. The callback will
     * be given the data from the push message.
     */
    SWController.prototype.setBackgroundMessageHandler = function (callback) {
        if (callback && typeof callback !== 'function') {
            throw this.errorFactory_.create(errors.codes.BG_HANDLER_FUNCTION_EXPECTED);
        }
        this.bgMessageHandler_ = callback;
    };
    /**
     * @private
     * @param {string} url The URL to look for when focusing a client.
     * @return {Object} Returns an existing window client or a newly opened
     * WindowClient.
     */
    SWController.prototype.getWindowClient_ = function (url) {
        // Use URL to normalize the URL when comparing to windowClients.
        // This at least handles whether to include trailing slashes or not
        var parsedURL = new URL(url).href;
        return self.clients
            .matchAll({
            type: 'window',
            includeUncontrolled: true
        })
            .then(function (clientList) {
            var suitableClient = null;
            for (var i = 0; i < clientList.length; i++) {
                var parsedClientUrl = new URL(clientList[i].url).href;
                if (parsedClientUrl === parsedURL) {
                    suitableClient = clientList[i];
                    break;
                }
            }
            if (suitableClient) {
                suitableClient.focus();
                return suitableClient;
            }
        });
    };
    /**
     * This message will attempt to send the message to a window client.
     * @private
     * @param {Object} client The WindowClient to send the message to.
     * @param {Object} message The message to send to the client.
     * @returns {Promise} Returns a promise that resolves after sending the
     * message. This does not guarantee that the message was successfully
     * received.
     */
    SWController.prototype.attemptToMessageClient_ = function (client, message) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (!client) {
                return reject(_this.errorFactory_.create(errors.codes.NO_WINDOW_CLIENT_TO_MSG));
            }
            client.postMessage(message);
            resolve();
        });
    };
    /**
     * @private
     * @returns {Promise<boolean>} If there is currently a visible WindowClient,
     * this method will resolve to true, otherwise false.
     */
    SWController.prototype.hasVisibleClients_ = function () {
        return self.clients
            .matchAll({
            type: 'window',
            includeUncontrolled: true
        })
            .then(function (clientList) {
            return clientList.some(function (client) { return client.visibilityState === 'visible'; });
        });
    };
    /**
     * @private
     * @param {Object} msgPayload The data from the push event that should be sent
     * to all available pages.
     * @returns {Promise} Returns a promise that resolves once the message
     * has been sent to all WindowClients.
     */
    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {
        var _this = this;
        return self.clients
            .matchAll({
            type: 'window',
            includeUncontrolled: true
        })
            .then(function (clientList) {
            var internalMsg = worker_page_message.createNewMsg(worker_page_message.TYPES_OF_MSG.PUSH_MSG_RECEIVED, msgPayload);
            return Promise.all(clientList.map(function (client) {
                return _this.attemptToMessageClient_(client, internalMsg);
            }));
        });
    };
    /**
     * This will register the default service worker and return the registration.
     * @private
     * @return {Promise<!ServiceWorkerRegistration>} The service worker
     * registration to be used for the push service.
     */
    SWController.prototype.getSWRegistration_ = function () {
        return Promise.resolve(self.registration);
    };
    return SWController;
}(controller_interface));
/* harmony default export */ var sw_controller = (sw_controller_SWController);

//# sourceMappingURL=sw-controller.js.map

// EXTERNAL MODULE: ../app/dist/esm/index.js + 1 modules
var esm = __webpack_require__(6);

// CONCATENATED MODULE: ../messaging/dist/esm/index.js
/* harmony export (immutable) */ __webpack_exports__["registerMessaging"] = registerMessaging;
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




function registerMessaging(instance) {
    var messagingName = 'messaging';
    var factoryMethod = function (app) {
        if (self && 'ServiceWorkerGlobalScope' in self) {
            return new sw_controller(app);
        }
        // Assume we are in the window context.
        return new window_controller(app);
    };
    var namespaceExports = {
        // no-inline
        Messaging: window_controller
    };
    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);
}
registerMessaging(esm["default"]);

//# sourceMappingURL=index.js.map


/***/ })

},[116]);
        } catch(error) {
          throw new Error(
            'Cannot instantiate firebase-messaging.js - ' +
            'be sure to load firebase-app.js first.'
          )
        }
//# sourceMappingURL=firebase-messaging.js.map
/*!
 * @license Firebase v4.6.2
 * Build: rev-61e817a
 * Terms: https://firebase.google.com/terms/
 */
try {
        webpackJsonpFirebase([2],{

/***/ 118:
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

__webpack_require__(119);


/***/ }),

/***/ 119:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ../app/dist/esm/index.js + 1 modules
var esm = __webpack_require__(6);

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/constants.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Constants used in the Firebase Storage library.
 */
/**
 * Domain and scheme for API calls.
 */
var domainBase = 'https://firebasestorage.googleapis.com';
/**
 * Domain and scheme for object downloads.
 */
var downloadBase = 'https://firebasestorage.googleapis.com';
/**
 * Base URL for non-upload calls to the API.
 */
var apiBaseUrl = '/v0';
/**
 * Base URL for upload calls to the API.
 */
var apiUploadBaseUrl = '/v0';
function setDomainBase(domainBase) {
    domainBase = domainBase;
}
var configOption = 'storageBucket';
/**
 * 1 minute
 */
var shortMaxOperationRetryTime = 1 * 60 * 1000;
/**
 * 2 minutes
 */
var defaultMaxOperationRetryTime = 2 * 60 * 1000;
/**
 * 10 minutes
 */
var defaultMaxUploadRetryTime = 10 * 60 * 100;
/**
 * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported
 * enough for us to use it directly.
 */
var minSafeInteger = -9007199254740991;

//# sourceMappingURL=constants.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/error.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var FirebaseStorageError = /** @class */ (function () {
    function FirebaseStorageError(code, message) {
        this.code_ = prependCode(code);
        this.message_ = 'Firebase Storage: ' + message;
        this.serverResponse_ = null;
        this.name_ = 'FirebaseError';
    }
    FirebaseStorageError.prototype.codeProp = function () {
        return this.code;
    };
    FirebaseStorageError.prototype.codeEquals = function (code) {
        return prependCode(code) === this.codeProp();
    };
    FirebaseStorageError.prototype.serverResponseProp = function () {
        return this.serverResponse_;
    };
    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {
        this.serverResponse_ = serverResponse;
    };
    Object.defineProperty(FirebaseStorageError.prototype, "name", {
        get: function () {
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "code", {
        get: function () {
            return this.code_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "message", {
        get: function () {
            return this.message_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseStorageError.prototype, "serverResponse", {
        get: function () {
            return this.serverResponse_;
        },
        enumerable: true,
        configurable: true
    });
    return FirebaseStorageError;
}());

var errors = {};
var Code = {
    // Shared between all platforms
    UNKNOWN: 'unknown',
    OBJECT_NOT_FOUND: 'object-not-found',
    BUCKET_NOT_FOUND: 'bucket-not-found',
    PROJECT_NOT_FOUND: 'project-not-found',
    QUOTA_EXCEEDED: 'quota-exceeded',
    UNAUTHENTICATED: 'unauthenticated',
    UNAUTHORIZED: 'unauthorized',
    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
    INVALID_CHECKSUM: 'invalid-checksum',
    CANCELED: 'canceled',
    // JS specific
    INVALID_EVENT_NAME: 'invalid-event-name',
    INVALID_URL: 'invalid-url',
    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
    NO_DEFAULT_BUCKET: 'no-default-bucket',
    CANNOT_SLICE_BLOB: 'cannot-slice-blob',
    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
    NO_DOWNLOAD_URL: 'no-download-url',
    INVALID_ARGUMENT: 'invalid-argument',
    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
    APP_DELETED: 'app-deleted',
    INVALID_ROOT_OPERATION: 'invalid-root-operation',
    INVALID_FORMAT: 'invalid-format',
    INTERNAL_ERROR: 'internal-error'
};
function prependCode(code) {
    return 'storage/' + code;
}
function unknown() {
    var message = 'An unknown error occurred, please check the error payload for ' +
        'server response.';
    return new FirebaseStorageError(Code.UNKNOWN, message);
}
function objectNotFound(path) {
    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, "Object '" + path + "' does not exist.");
}
function bucketNotFound(bucket) {
    return new FirebaseStorageError(Code.BUCKET_NOT_FOUND, "Bucket '" + bucket + "' does not exist.");
}
function projectNotFound(project) {
    return new FirebaseStorageError(Code.PROJECT_NOT_FOUND, "Project '" + project + "' does not exist.");
}
function quotaExceeded(bucket) {
    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, "Quota for bucket '" +
        bucket +
        "' exceeded, please view quota on " +
        'https://firebase.google.com/pricing/.');
}
function unauthenticated() {
    var message = 'User is not authenticated, please authenticate using Firebase ' +
        'Authentication and try again.';
    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);
}
function unauthorized(path) {
    return new FirebaseStorageError(Code.UNAUTHORIZED, "User does not have permission to access '" + path + "'.");
}
function retryLimitExceeded() {
    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
}
function invalidChecksum(path, checksum, calculated) {
    return new FirebaseStorageError(Code.INVALID_CHECKSUM, "Uploaded/downloaded object '" +
        path +
        "' has checksum '" +
        checksum +
        "' which does not match '" +
        calculated +
        "'. Please retry the upload/download.");
}
function error_canceled() {
    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
}
function invalidEventName(name) {
    return new FirebaseStorageError(Code.INVALID_EVENT_NAME, "Invalid event name '" + name + "'.");
}
function invalidUrl(url) {
    return new FirebaseStorageError(Code.INVALID_URL, "Invalid URL '" + url + "'.");
}
function invalidDefaultBucket(bucket) {
    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, "Invalid default bucket '" + bucket + "'.");
}
function noDefaultBucket() {
    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +
        "found. Did you set the '" +
        configOption +
        "' property when initializing the app?");
}
function cannotSliceBlob() {
    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
}
function serverFileWrongSize() {
    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
}
function noDownloadURL() {
    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
}
function invalidArgument(index, fnName, message) {
    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);
}
function invalidArgumentCount(argMin, argMax, fnName, real) {
    var countPart;
    var plural;
    if (argMin === argMax) {
        countPart = argMin;
        plural = argMin === 1 ? 'argument' : 'arguments';
    }
    else {
        countPart = 'between ' + argMin + ' and ' + argMax;
        plural = 'arguments';
    }
    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +
        fnName +
        '`: Expected ' +
        countPart +
        ' ' +
        plural +
        ', received ' +
        real +
        '.');
}
function appDeleted() {
    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
}
/**
 * @param name The name of the operation that was invalid.
 */
function invalidRootOperation(name) {
    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, "The operation '" +
        name +
        "' cannot be performed on a root reference, create a non-root " +
        "reference using child, such as .child('file.png').");
}
/**
 * @param format The format that was not valid.
 * @param message A message describing the format violation.
 */
function invalidFormat(format, message) {
    return new FirebaseStorageError(Code.INVALID_FORMAT, "String does not match format '" + format + "': " + message);
}
/**
 * @param message A message describing the internal error.
 */
function internalError(message) {
    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
}

//# sourceMappingURL=error.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/string.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var StringFormat = {
    RAW: 'raw',
    BASE64: 'base64',
    BASE64URL: 'base64url',
    DATA_URL: 'data_url'
};
function formatValidator(stringFormat) {
    switch (stringFormat) {
        case StringFormat.RAW:
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
        case StringFormat.DATA_URL:
            return;
        default:
            throw 'Expected one of the event types: [' +
                StringFormat.RAW +
                ', ' +
                StringFormat.BASE64 +
                ', ' +
                StringFormat.BASE64URL +
                ', ' +
                StringFormat.DATA_URL +
                '].';
    }
}
/**
 * @struct
 */
var StringData = /** @class */ (function () {
    function StringData(data, opt_contentType) {
        this.data = data;
        this.contentType = opt_contentType || null;
    }
    return StringData;
}());

function dataFromString(format, string) {
    switch (format) {
        case StringFormat.RAW:
            return new StringData(utf8Bytes_(string));
        case StringFormat.BASE64:
        case StringFormat.BASE64URL:
            return new StringData(base64Bytes_(format, string));
        case StringFormat.DATA_URL:
            return new StringData(dataURLBytes_(string), dataURLContentType_(string));
    }
    // assert(false);
    throw unknown();
}
function utf8Bytes_(string) {
    var b = [];
    for (var i = 0; i < string.length; i++) {
        var c = string.charCodeAt(i);
        if (c <= 127) {
            b.push(c);
        }
        else {
            if (c <= 2047) {
                b.push(192 | (c >> 6), 128 | (c & 63));
            }
            else {
                if ((c & 64512) == 55296) {
                    // The start of a surrogate pair.
                    var valid = i < string.length - 1 &&
                        (string.charCodeAt(i + 1) & 64512) == 56320;
                    if (!valid) {
                        // The second surrogate wasn't there.
                        b.push(239, 191, 189);
                    }
                    else {
                        var hi = c;
                        var lo = string.charCodeAt(++i);
                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);
                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
                else {
                    if ((c & 64512) == 56320) {
                        // Invalid low surrogate.
                        b.push(239, 191, 189);
                    }
                    else {
                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));
                    }
                }
            }
        }
    }
    return new Uint8Array(b);
}
function percentEncodedBytes_(string) {
    var decoded;
    try {
        decoded = decodeURIComponent(string);
    }
    catch (e) {
        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
    }
    return utf8Bytes_(decoded);
}
function base64Bytes_(format, string) {
    switch (format) {
        case StringFormat.BASE64: {
            var hasMinus = string.indexOf('-') !== -1;
            var hasUnder = string.indexOf('_') !== -1;
            if (hasMinus || hasUnder) {
                var invalidChar = hasMinus ? '-' : '_';
                throw invalidFormat(format, "Invalid character '" +
                    invalidChar +
                    "' found: is it base64url encoded?");
            }
            break;
        }
        case StringFormat.BASE64URL: {
            var hasPlus = string.indexOf('+') !== -1;
            var hasSlash = string.indexOf('/') !== -1;
            if (hasPlus || hasSlash) {
                var invalidChar = hasPlus ? '+' : '/';
                throw invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64 encoded?");
            }
            string = string.replace(/-/g, '+').replace(/_/g, '/');
            break;
        }
    }
    var bytes;
    try {
        bytes = atob(string);
    }
    catch (e) {
        throw invalidFormat(format, 'Invalid character found');
    }
    var array = new Uint8Array(bytes.length);
    for (var i = 0; i < bytes.length; i++) {
        array[i] = bytes.charCodeAt(i);
    }
    return array;
}
/**
 * @struct
 */
var string_DataURLParts = /** @class */ (function () {
    function DataURLParts(dataURL) {
        this.base64 = false;
        this.contentType = null;
        var matches = dataURL.match(/^data:([^,]+)?,/);
        if (matches === null) {
            throw invalidFormat(StringFormat.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
        }
        var middle = matches[1] || null;
        if (middle != null) {
            this.base64 = endsWith(middle, ';base64');
            this.contentType = this.base64
                ? middle.substring(0, middle.length - ';base64'.length)
                : middle;
        }
        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
    }
    return DataURLParts;
}());
function dataURLBytes_(string) {
    var parts = new string_DataURLParts(string);
    if (parts.base64) {
        return base64Bytes_(StringFormat.BASE64, parts.rest);
    }
    else {
        return percentEncodedBytes_(parts.rest);
    }
}
function dataURLContentType_(string) {
    var parts = new string_DataURLParts(string);
    return parts.contentType;
}
function endsWith(s, end) {
    var longEnough = s.length >= end.length;
    if (!longEnough) {
        return false;
    }
    return s.substring(s.length - end.length) === end;
}

//# sourceMappingURL=string.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/taskenums.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var TaskEvent = {
    /** Triggered whenever the task changes or progress is updated. */
    STATE_CHANGED: 'state_changed'
};
var InternalTaskState = {
    RUNNING: 'running',
    PAUSING: 'pausing',
    PAUSED: 'paused',
    SUCCESS: 'success',
    CANCELING: 'canceling',
    CANCELED: 'canceled',
    ERROR: 'error'
};
var TaskState = {
    /** The task is currently transferring data. */
    RUNNING: 'running',
    /** The task was paused by the user. */
    PAUSED: 'paused',
    /** The task completed successfully. */
    SUCCESS: 'success',
    /** The task was canceled. */
    CANCELED: 'canceled',
    /** The task failed with an error. */
    ERROR: 'error'
};
function taskStateFromInternalTaskState(state) {
    switch (state) {
        case InternalTaskState.RUNNING:
        case InternalTaskState.PAUSING:
        case InternalTaskState.CANCELING:
            return TaskState.RUNNING;
        case InternalTaskState.PAUSED:
            return TaskState.PAUSED;
        case InternalTaskState.SUCCESS:
            return TaskState.SUCCESS;
        case InternalTaskState.CANCELED:
            return TaskState.CANCELED;
        case InternalTaskState.ERROR:
            return TaskState.ERROR;
        default:
            // TODO(andysoto): assert(false);
            return TaskState.ERROR;
    }
}

//# sourceMappingURL=taskenums.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/object.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Contains methods for working with objects.
 */
function contains(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}
function forEach(obj, f) {
    for (var key in obj) {
        if (contains(obj, key)) {
            f(key, obj[key]);
        }
    }
}
function clone(obj) {
    if (obj == null) {
        return {};
    }
    var c = {};
    forEach(obj, function (key, val) {
        c[key] = val;
    });
    return c;
}

//# sourceMappingURL=object.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/promise_external.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Implements the promise abstraction interface for external
 * (public SDK) packaging, which just passes through to the firebase-app impl.
 */
/**
 * @template T
 * @param {function((function(T): void),
 *                  (function(!Error): void))} resolver
 */
function make(resolver) {
    return new Promise(resolver);
}
/**
 * @template T
 */
function promise_external_resolve(value) {
    return Promise.resolve(value);
}
function promise_external_reject(error) {
    return Promise.reject(error);
}

//# sourceMappingURL=promise_external.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/type.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @return False if the object is undefined or null, true otherwise.
 */
function isDef(p) {
    return p != null;
}
function isJustDef(p) {
    return p !== void 0;
}
function isFunction(p) {
    return typeof p === 'function';
}
function isObject(p) {
    return typeof p === 'object';
}
function isNonNullObject(p) {
    return isObject(p) && p !== null;
}
function isNonArrayObject(p) {
    return isObject(p) && !Array.isArray(p);
}
function isString(p) {
    return typeof p === 'string' || p instanceof String;
}
function isNumber(p) {
    return typeof p === 'number' || p instanceof Number;
}
function isNativeBlob(p) {
    return isNativeBlobDefined() && p instanceof Blob;
}
function isNativeBlobDefined() {
    return typeof Blob !== 'undefined';
}

//# sourceMappingURL=type.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/xhrio.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @enum{number}
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
    ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
    ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
})(ErrorCode || (ErrorCode = {}));

//# sourceMappingURL=xhrio.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/xhrio_network.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





/**
 * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and
 * doesn't work in React Native on Android.
 */
var xhrio_network_NetworkXhrIo = /** @class */ (function () {
    function NetworkXhrIo() {
        var _this = this;
        this.sent_ = false;
        this.xhr_ = new XMLHttpRequest();
        this.errorCode_ = ErrorCode.NO_ERROR;
        this.sendPromise_ = make(function (resolve, reject) {
            _this.xhr_.addEventListener('abort', function (event) {
                _this.errorCode_ = ErrorCode.ABORT;
                resolve(_this);
            });
            _this.xhr_.addEventListener('error', function (event) {
                _this.errorCode_ = ErrorCode.NETWORK_ERROR;
                resolve(_this);
            });
            _this.xhr_.addEventListener('load', function (event) {
                resolve(_this);
            });
        });
    }
    /**
     * @override
     */
    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {
        var _this = this;
        if (this.sent_) {
            throw internalError('cannot .send() more than once');
        }
        this.sent_ = true;
        this.xhr_.open(method, url, true);
        if (isDef(opt_headers)) {
            var headers = opt_headers;
            forEach(headers, function (key, val) {
                _this.xhr_.setRequestHeader(key, val.toString());
            });
        }
        if (isDef(opt_body)) {
            this.xhr_.send(opt_body);
        }
        else {
            this.xhr_.send();
        }
        return this.sendPromise_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getErrorCode = function () {
        if (!this.sent_) {
            throw internalError('cannot .getErrorCode() before sending');
        }
        return this.errorCode_;
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getStatus = function () {
        if (!this.sent_) {
            throw internalError('cannot .getStatus() before sending');
        }
        try {
            return this.xhr_.status;
        }
        catch (e) {
            return -1;
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseText = function () {
        if (!this.sent_) {
            throw internalError('cannot .getResponseText() before sending');
        }
        return this.xhr_.responseText;
    };
    /**
     * Aborts the request.
     * @override
     */
    NetworkXhrIo.prototype.abort = function () {
        this.xhr_.abort();
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.getResponseHeader = function (header) {
        return this.xhr_.getResponseHeader(header);
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {
        if (isDef(this.xhr_.upload)) {
            this.xhr_.upload.addEventListener('progress', listener);
        }
    };
    /**
     * @override
     */
    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {
        if (isDef(this.xhr_.upload)) {
            this.xhr_.upload.removeEventListener('progress', listener);
        }
    };
    return NetworkXhrIo;
}());


//# sourceMappingURL=xhrio_network.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/xhriopool.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Factory-like class for creating XhrIo instances.
 */
var xhriopool_XhrIoPool = /** @class */ (function () {
    function XhrIoPool() {
    }
    XhrIoPool.prototype.createXhrIo = function () {
        return new xhrio_network_NetworkXhrIo();
    };
    return XhrIoPool;
}());


//# sourceMappingURL=xhriopool.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/json.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns the Object resulting from parsing the given JSON, or null if the
 * given string does not represent a JSON object.
 */
function jsonObjectOrNull(s) {
    var obj;
    try {
        obj = JSON.parse(s);
    }
    catch (e) {
        return null;
    }
    if (isNonArrayObject(obj)) {
        return obj;
    }
    else {
        return null;
    }
}

//# sourceMappingURL=json.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/location.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Functionality related to the parsing/composition of bucket/
 * object location.
 */

/**
 * @struct
 */
var location_Location = /** @class */ (function () {
    function Location(bucket, path) {
        this.bucket = bucket;
        this.path_ = path;
    }
    Object.defineProperty(Location.prototype, "path", {
        get: function () {
            return this.path_;
        },
        enumerable: true,
        configurable: true
    });
    Location.prototype.fullServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
    };
    Location.prototype.bucketOnlyServerUrl = function () {
        var encode = encodeURIComponent;
        return '/b/' + encode(this.bucket) + '/o';
    };
    Location.makeFromBucketSpec = function (bucketString) {
        var bucketLocation;
        try {
            bucketLocation = Location.makeFromUrl(bucketString);
        }
        catch (e) {
            // Not valid URL, use as-is. This lets you put bare bucket names in
            // config.
            return new Location(bucketString, '');
        }
        if (bucketLocation.path === '') {
            return bucketLocation;
        }
        else {
            throw invalidDefaultBucket(bucketString);
        }
    };
    Location.makeFromUrl = function (url) {
        var location = null;
        var bucketDomain = '([A-Za-z0-9.\\-]+)';
        function gsModify(loc) {
            if (loc.path.charAt(loc.path.length - 1) === '/') {
                loc.path_ = loc.path_.slice(0, -1);
            }
        }
        var gsPath = '(/(.*))?$';
        var path = '(/([^?#]*).*)?$';
        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');
        var gsIndices = { bucket: 1, path: 3 };
        function httpModify(loc) {
            loc.path_ = decodeURIComponent(loc.path);
        }
        var version = 'v[A-Za-z0-9_]+';
        var httpRegex = new RegExp('^https?://firebasestorage\\.googleapis\\.com/' +
            version +
            '/b/' +
            bucketDomain +
            '/o' +
            path, 'i');
        var httpIndices = { bucket: 1, path: 3 };
        var groups = [
            { regex: gsRegex, indices: gsIndices, postModify: gsModify },
            { regex: httpRegex, indices: httpIndices, postModify: httpModify }
        ];
        for (var i = 0; i < groups.length; i++) {
            var group = groups[i];
            var captures = group.regex.exec(url);
            if (captures) {
                var bucketValue = captures[group.indices.bucket];
                var pathValue = captures[group.indices.path];
                if (!pathValue) {
                    pathValue = '';
                }
                location = new Location(bucketValue, pathValue);
                group.postModify(location);
                break;
            }
        }
        if (location == null) {
            throw invalidUrl(url);
        }
        return location;
    };
    return Location;
}());


//# sourceMappingURL=location.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/path.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Contains helper methods for manipulating paths.
 */
/**
 * @return Null if the path is already at the root.
 */
function path_parent(path) {
    if (path.length == 0) {
        return null;
    }
    var index = path.lastIndexOf('/');
    if (index === -1) {
        return '';
    }
    var newPath = path.slice(0, index);
    return newPath;
}
function child(path, childPath) {
    var canonicalChildPath = childPath
        .split('/')
        .filter(function (component) {
        return component.length > 0;
    })
        .join('/');
    if (path.length === 0) {
        return canonicalChildPath;
    }
    else {
        return path + '/' + canonicalChildPath;
    }
}
/**
 * Returns the last component of a path.
 * '/foo/bar' -> 'bar'
 * '/foo/bar/baz/' -> 'baz/'
 * '/a' -> 'a'
 */
function lastComponent(path) {
    var index = path.lastIndexOf('/', path.length - 2);
    if (index === -1) {
        return path;
    }
    else {
        return path.slice(index + 1);
    }
}

//# sourceMappingURL=path.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/url.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Functions to create and manipulate URLs for the server API.
 */


function makeNormalUrl(urlPart) {
    return domainBase + apiBaseUrl + urlPart;
}
function makeDownloadUrl(urlPart) {
    return downloadBase + apiBaseUrl + urlPart;
}
function makeUploadUrl(urlPart) {
    return domainBase + apiUploadBaseUrl + urlPart;
}
function makeQueryString(params) {
    var encode = encodeURIComponent;
    var queryPart = '?';
    forEach(params, function (key, val) {
        var nextPart = encode(key) + '=' + encode(val);
        queryPart = queryPart + nextPart + '&';
    });
    // Chop off the extra '&' or '?' on the end
    queryPart = queryPart.slice(0, -1);
    return queryPart;
}

//# sourceMappingURL=url.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/metadata.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





function noXform_(metadata, value) {
    return value;
}
/**
 * @struct
 */
var Mapping = /** @class */ (function () {
    function Mapping(server, opt_local, opt_writable, opt_xform) {
        this.server = server;
        this.local = opt_local || server;
        this.writable = !!opt_writable;
        this.xform = opt_xform || noXform_;
    }
    return Mapping;
}());

var mappings_ = null;
function xformPath(fullPath) {
    var valid = isString(fullPath);
    if (!valid || fullPath.length < 2) {
        return fullPath;
    }
    else {
        fullPath = fullPath;
        return lastComponent(fullPath);
    }
}
function getMappings() {
    if (mappings_) {
        return mappings_;
    }
    var mappings = [];
    mappings.push(new Mapping('bucket'));
    mappings.push(new Mapping('generation'));
    mappings.push(new Mapping('metageneration'));
    mappings.push(new Mapping('name', 'fullPath', true));
    function mappingsXformPath(metadata, fullPath) {
        return xformPath(fullPath);
    }
    var nameMapping = new Mapping('name');
    nameMapping.xform = mappingsXformPath;
    mappings.push(nameMapping);
    /**
     * Coerces the second param to a number, if it is defined.
     */
    function xformSize(metadata, size) {
        if (isDef(size)) {
            return +size;
        }
        else {
            return size;
        }
    }
    var sizeMapping = new Mapping('size');
    sizeMapping.xform = xformSize;
    mappings.push(sizeMapping);
    mappings.push(new Mapping('timeCreated'));
    mappings.push(new Mapping('updated'));
    mappings.push(new Mapping('md5Hash', null, true));
    mappings.push(new Mapping('cacheControl', null, true));
    mappings.push(new Mapping('contentDisposition', null, true));
    mappings.push(new Mapping('contentEncoding', null, true));
    mappings.push(new Mapping('contentLanguage', null, true));
    mappings.push(new Mapping('contentType', null, true));
    mappings.push(new Mapping('metadata', 'customMetadata', true));
    /**
     * Transforms a comma-separated string of tokens into a list of download
     * URLs.
     */
    function xformTokens(metadata, tokens) {
        var valid = isString(tokens) && tokens.length > 0;
        if (!valid) {
            // This can happen if objects are uploaded through GCS and retrieved
            // through list, so we don't want to throw an Error.
            return [];
        }
        var encode = encodeURIComponent;
        var tokensList = tokens.split(',');
        var urls = tokensList.map(function (token) {
            var bucket = metadata['bucket'];
            var path = metadata['fullPath'];
            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
            var base = makeDownloadUrl(urlPart);
            var queryString = makeQueryString({
                alt: 'media',
                token: token
            });
            return base + queryString;
        });
        return urls;
    }
    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));
    mappings_ = mappings;
    return mappings_;
}
function addRef(metadata, authWrapper) {
    function generateRef() {
        var bucket = metadata['bucket'];
        var path = metadata['fullPath'];
        var loc = new location_Location(bucket, path);
        return authWrapper.makeStorageReference(loc);
    }
    Object.defineProperty(metadata, 'ref', { get: generateRef });
}
function fromResource(authWrapper, resource, mappings) {
    var metadata = {};
    metadata['type'] = 'file';
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
    }
    addRef(metadata, authWrapper);
    return metadata;
}
function fromResourceString(authWrapper, resourceString, mappings) {
    var obj = jsonObjectOrNull(resourceString);
    if (obj === null) {
        return null;
    }
    var resource = obj;
    return fromResource(authWrapper, resource, mappings);
}
function toResourceString(metadata, mappings) {
    var resource = {};
    var len = mappings.length;
    for (var i = 0; i < len; i++) {
        var mapping = mappings[i];
        if (mapping.writable) {
            resource[mapping.server] = metadata[mapping.local];
        }
    }
    return JSON.stringify(resource);
}
function metadataValidator(p) {
    var validType = p && isObject(p);
    if (!validType) {
        throw 'Expected Metadata object.';
    }
    for (var key in p) {
        var val = p[key];
        if (key === 'customMetadata') {
            if (!isObject(val)) {
                throw 'Expected object for \'customMetadata\' mapping.';
            }
        }
        else {
            if (isNonNullObject(val)) {
                throw "Mapping for '" + key + "' cannot be an object.";
            }
        }
    }
}

//# sourceMappingURL=metadata.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/args.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * @param name Name of the function.
 * @param specs Argument specs.
 * @param passed The actual arguments passed to the function.
 * @throws {fbs.Error} If the arguments are invalid.
 */
function validate(name, specs, passed) {
    var minArgs = specs.length;
    var maxArgs = specs.length;
    for (var i = 0; i < specs.length; i++) {
        if (specs[i].optional) {
            minArgs = i;
            break;
        }
    }
    var validLength = minArgs <= passed.length && passed.length <= maxArgs;
    if (!validLength) {
        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);
    }
    for (var i = 0; i < passed.length; i++) {
        try {
            specs[i].validator(passed[i]);
        }
        catch (e) {
            if (e instanceof Error) {
                throw invalidArgument(i, name, e.message);
            }
            else {
                throw invalidArgument(i, name, e);
            }
        }
    }
}
/**
 * @struct
 */
var args_ArgSpec = /** @class */ (function () {
    function ArgSpec(validator, opt_optional) {
        var self = this;
        this.validator = function (p) {
            if (self.optional && !isJustDef(p)) {
                return;
            }
            validator(p);
        };
        this.optional = !!opt_optional;
    }
    return ArgSpec;
}());

function and_(v1, v2) {
    return function (p) {
        v1(p);
        v2(p);
    };
}
function stringSpec(opt_validator, opt_optional) {
    function stringValidator(p) {
        if (!isString(p)) {
            throw 'Expected string.';
        }
    }
    var validator;
    if (opt_validator) {
        validator = and_(stringValidator, opt_validator);
    }
    else {
        validator = stringValidator;
    }
    return new args_ArgSpec(validator, opt_optional);
}
function uploadDataSpec() {
    function validator(p) {
        var valid = p instanceof Uint8Array ||
            p instanceof ArrayBuffer ||
            (isNativeBlobDefined() && p instanceof Blob);
        if (!valid) {
            throw 'Expected Blob or File.';
        }
    }
    return new args_ArgSpec(validator);
}
function metadataSpec(opt_optional) {
    return new args_ArgSpec(metadataValidator, opt_optional);
}
function nonNegativeNumberSpec() {
    function validator(p) {
        var valid = isNumber(p) && p >= 0;
        if (!valid) {
            throw 'Expected a number 0 or greater.';
        }
    }
    return new args_ArgSpec(validator);
}
function looseObjectSpec(opt_validator, opt_optional) {
    function validator(p) {
        var isLooseObject = p === null || (isDef(p) && p instanceof Object);
        if (!isLooseObject) {
            throw 'Expected an Object.';
        }
        if (opt_validator !== undefined && opt_validator !== null) {
            opt_validator(p);
        }
    }
    return new args_ArgSpec(validator, opt_optional);
}
function nullFunctionSpec(opt_optional) {
    function validator(p) {
        var valid = p === null || isFunction(p);
        if (!valid) {
            throw 'Expected a Function.';
        }
    }
    return new args_ArgSpec(validator, opt_optional);
}

//# sourceMappingURL=args.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/fs.js

function getBlobBuilder() {
    if (typeof BlobBuilder !== 'undefined') {
        return BlobBuilder;
    }
    else if (typeof WebKitBlobBuilder !== 'undefined') {
        return WebKitBlobBuilder;
    }
    else {
        return undefined;
    }
}
/**
 * Concatenates one or more values together and converts them to a Blob.
 *
 * @param var_args The values that will make up the resulting blob.
 * @return The blob.
 */
function getBlob() {
    var var_args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        var_args[_i] = arguments[_i];
    }
    var BlobBuilder = getBlobBuilder();
    if (BlobBuilder !== undefined) {
        var bb = new BlobBuilder();
        for (var i = 0; i < var_args.length; i++) {
            bb.append(var_args[i]);
        }
        return bb.getBlob();
    }
    else {
        if (isNativeBlobDefined()) {
            return new Blob(var_args);
        }
        else {
            throw Error("This browser doesn't seem to support creating Blobs");
        }
    }
}
/**
 * Slices the blob. The returned blob contains data from the start byte
 * (inclusive) till the end byte (exclusive). Negative indices cannot be used.
 *
 * @param blob The blob to be sliced.
 * @param start Index of the starting byte.
 * @param end Index of the ending byte.
 * @return The blob slice or null if not supported.
 */
function sliceBlob(blob, start, end) {
    if (blob.webkitSlice) {
        return blob.webkitSlice(start, end);
    }
    else if (blob.mozSlice) {
        return blob.mozSlice(start, end);
    }
    else if (blob.slice) {
        return blob.slice(start, end);
    }
    return null;
}

//# sourceMappingURL=fs.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/blob.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @file Provides a Blob-like wrapper for various binary types (including the
 * native Blob type). This makes it possible to upload types like ArrayBuffers,
 * making uploads possible in environments without the native Blob type.
 */




/**
 * @param opt_elideCopy If true, doesn't copy mutable input data
 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
 *     modified after this blob's construction.
 */
var blob_FbsBlob = /** @class */ (function () {
    function FbsBlob(data, opt_elideCopy) {
        var size = 0;
        var blobType = '';
        if (isNativeBlob(data)) {
            this.data_ = data;
            size = data.size;
            blobType = data.type;
        }
        else if (data instanceof ArrayBuffer) {
            if (opt_elideCopy) {
                this.data_ = new Uint8Array(data);
            }
            else {
                this.data_ = new Uint8Array(data.byteLength);
                this.data_.set(new Uint8Array(data));
            }
            size = this.data_.length;
        }
        else if (data instanceof Uint8Array) {
            if (opt_elideCopy) {
                this.data_ = data;
            }
            else {
                this.data_ = new Uint8Array(data.length);
                this.data_.set(data);
            }
            size = data.length;
        }
        this.size_ = size;
        this.type_ = blobType;
    }
    FbsBlob.prototype.size = function () {
        return this.size_;
    };
    FbsBlob.prototype.type = function () {
        return this.type_;
    };
    FbsBlob.prototype.slice = function (startByte, endByte) {
        if (isNativeBlob(this.data_)) {
            var realBlob = this.data_;
            var sliced = sliceBlob(realBlob, startByte, endByte);
            if (sliced === null) {
                return null;
            }
            return new FbsBlob(sliced);
        }
        else {
            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
            return new FbsBlob(slice, true);
        }
    };
    FbsBlob.getBlob = function () {
        var var_args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            var_args[_i] = arguments[_i];
        }
        if (isNativeBlobDefined()) {
            var blobby = var_args.map(function (val) {
                if (val instanceof FbsBlob) {
                    return val.data_;
                }
                else {
                    return val;
                }
            });
            return new FbsBlob(getBlob.apply(null, blobby));
        }
        else {
            var uint8Arrays = var_args.map(function (val) {
                if (isString(val)) {
                    return dataFromString(StringFormat.RAW, val).data;
                }
                else {
                    // Blobs don't exist, so this has to be a Uint8Array.
                    return val.data_;
                }
            });
            var finalLength_1 = 0;
            uint8Arrays.forEach(function (array) {
                finalLength_1 += array.byteLength;
            });
            var merged_1 = new Uint8Array(finalLength_1);
            var index_1 = 0;
            uint8Arrays.forEach(function (array) {
                for (var i = 0; i < array.length; i++) {
                    merged_1[index_1++] = array[i];
                }
            });
            return new FbsBlob(merged_1, true);
        }
    };
    FbsBlob.prototype.uploadData = function () {
        return this.data_;
    };
    return FbsBlob;
}());


//# sourceMappingURL=blob.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/array.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns true if the object is contained in the array (compared with ===).
 * @template T
 */
function array_contains(array, elem) {
    return array.indexOf(elem) !== -1;
}
/**
 * Returns a shallow copy of the array or array-like object (e.g. arguments).
 * @template T
 */
function array_clone(arraylike) {
    return Array.prototype.slice.call(arraylike);
}
/**
 * Removes the given element from the given array, if it is contained.
 * Directly modifies the passed-in array.
 * @template T
 */
function remove(array, elem) {
    var i = array.indexOf(elem);
    if (i !== -1) {
        array.splice(i, 1);
    }
}

//# sourceMappingURL=array.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/requestinfo.js
var RequestInfo = /** @class */ (function () {
    function RequestInfo(url, method, 
        /**
         * Returns the value with which to resolve the request's promise. Only called
         * if the request is successful. Throw from this function to reject the
         * returned Request's promise with the thrown error.
         * Note: The XhrIo passed to this function may be reused after this callback
         * returns. Do not keep a reference to it in any way.
         */
        handler, timeout) {
        this.url = url;
        this.method = method;
        this.handler = handler;
        this.timeout = timeout;
        this.urlParams = {};
        this.headers = {};
        this.body = null;
        this.errorHandler = null;
        /**
         * Called with the current number of bytes uploaded and total size (-1 if not
         * computable) of the request body (i.e. used to report upload progress).
         */
        this.progressCallback = null;
        this.successCodes = [200];
        this.additionalRetryCodes = [];
    }
    return RequestInfo;
}());


//# sourceMappingURL=requestinfo.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/requests.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








/**
 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
 */
function handlerCheck(cndn) {
    if (!cndn) {
        throw unknown();
    }
}
function metadataHandler(authWrapper, mappings) {
    function handler(xhr, text) {
        var metadata = fromResourceString(authWrapper, text, mappings);
        handlerCheck(metadata !== null);
        return metadata;
    }
    return handler;
}
function sharedErrorHandler(location) {
    function errorHandler(xhr, err) {
        var newErr;
        if (xhr.getStatus() === 401) {
            newErr = unauthenticated();
        }
        else {
            if (xhr.getStatus() === 402) {
                newErr = quotaExceeded(location.bucket);
            }
            else {
                if (xhr.getStatus() === 403) {
                    newErr = unauthorized(location.path);
                }
                else {
                    newErr = err;
                }
            }
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    }
    return errorHandler;
}
function objectErrorHandler(location) {
    var shared = sharedErrorHandler(location);
    function errorHandler(xhr, err) {
        var newErr = shared(xhr, err);
        if (xhr.getStatus() === 404) {
            newErr = objectNotFound(location.path);
        }
        newErr.setServerResponseProp(err.serverResponseProp());
        return newErr;
    }
    return errorHandler;
}
function getMetadata(authWrapper, location, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeNormalUrl(urlPart);
    var method = 'GET';
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function updateMetadata(authWrapper, location, metadata, mappings) {
    var urlPart = location.fullServerUrl();
    var url = makeNormalUrl(urlPart);
    var method = 'PATCH';
    var body = toResourceString(metadata, mappings);
    var headers = { 'Content-Type': 'application/json; charset=utf-8' };
    var timeout = authWrapper.maxOperationRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function deleteObject(authWrapper, location) {
    var urlPart = location.fullServerUrl();
    var url = makeNormalUrl(urlPart);
    var method = 'DELETE';
    var timeout = authWrapper.maxOperationRetryTime();
    function handler(xhr, text) { }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.successCodes = [200, 204];
    requestInfo.errorHandler = objectErrorHandler(location);
    return requestInfo;
}
function determineContentType_(metadata, blob) {
    return ((metadata && metadata['contentType']) ||
        (blob && blob.type()) ||
        'application/octet-stream');
}
function metadataForUpload_(location, blob, opt_metadata) {
    var metadata = clone(opt_metadata);
    metadata['fullPath'] = location.path;
    metadata['size'] = blob.size();
    if (!metadata['contentType']) {
        metadata['contentType'] = determineContentType_(null, blob);
    }
    return metadata;
}
function multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var headers = {
        'X-Goog-Upload-Protocol': 'multipart'
    };
    function genBoundary() {
        var str = '';
        for (var i = 0; i < 2; i++) {
            str =
                str +
                    Math.random()
                        .toString()
                        .slice(2);
        }
        return str;
    }
    var boundary = genBoundary();
    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
    var metadata = metadataForUpload_(location, blob, opt_metadata);
    var metadataString = toResourceString(metadata, mappings);
    var preBlobPart = '--' +
        boundary +
        '\r\n' +
        'Content-Type: application/json; charset=utf-8\r\n\r\n' +
        metadataString +
        '\r\n--' +
        boundary +
        '\r\n' +
        'Content-Type: ' +
        metadata['contentType'] +
        '\r\n\r\n';
    var postBlobPart = '\r\n--' + boundary + '--';
    var body = blob_FbsBlob.getBlob(preBlobPart, blob, postBlobPart);
    if (body === null) {
        throw cannotSliceBlob();
    }
    var urlParams = { name: metadata['fullPath'] };
    var url = makeUploadUrl(urlPart);
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param current The number of bytes that have been uploaded so far.
 * @param total The total number of bytes in the upload.
 * @param opt_finalized True if the server has finished the upload.
 * @param opt_metadata The upload metadata, should
 *     only be passed if opt_finalized is true.
 * @struct
 */
var ResumableUploadStatus = /** @class */ (function () {
    function ResumableUploadStatus(current, total, finalized, metadata) {
        this.current = current;
        this.total = total;
        this.finalized = !!finalized;
        this.metadata = metadata || null;
    }
    return ResumableUploadStatus;
}());

function checkResumeHeader_(xhr, opt_allowed) {
    var status;
    try {
        status = xhr.getResponseHeader('X-Goog-Upload-Status');
    }
    catch (e) {
        handlerCheck(false);
    }
    var allowed = opt_allowed || ['active'];
    handlerCheck(array_contains(allowed, status));
    return status;
}
function createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {
    var urlPart = location.bucketOnlyServerUrl();
    var metadata = metadataForUpload_(location, blob, opt_metadata);
    var urlParams = { name: metadata['fullPath'] };
    var url = makeUploadUrl(urlPart);
    var method = 'POST';
    var headers = {
        'X-Goog-Upload-Protocol': 'resumable',
        'X-Goog-Upload-Command': 'start',
        'X-Goog-Upload-Header-Content-Length': blob.size(),
        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],
        'Content-Type': 'application/json; charset=utf-8'
    };
    var body = toResourceString(metadata, mappings);
    var timeout = authWrapper.maxUploadRetryTime();
    function handler(xhr, text) {
        checkResumeHeader_(xhr);
        var url;
        try {
            url = xhr.getResponseHeader('X-Goog-Upload-URL');
        }
        catch (e) {
            handlerCheck(false);
        }
        handlerCheck(isString(url));
        return url;
    }
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.urlParams = urlParams;
    requestInfo.headers = headers;
    requestInfo.body = body;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 */
function getResumableUploadStatus(authWrapper, location, url, blob) {
    var headers = { 'X-Goog-Upload-Command': 'query' };
    function handler(xhr, text) {
        var status = checkResumeHeader_(xhr, ['active', 'final']);
        var sizeString;
        try {
            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
        }
        catch (e) {
            handlerCheck(false);
        }
        var size = parseInt(sizeString, 10);
        handlerCheck(!isNaN(size));
        return new ResumableUploadStatus(size, blob.size(), status === 'final');
    }
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}
/**
 * Any uploads via the resumable upload API must transfer a number of bytes
 * that is a multiple of this number.
 */
var resumableUploadChunkSize = 256 * 1024;
/**
 * @param url From a call to fbs.requests.createResumableUpload.
 * @param chunkSize Number of bytes to upload.
 * @param opt_status The previous status.
 *     If not passed or null, we start from the beginning.
 * @throws fbs.Error If the upload is already complete, the passed in status
 *     has a final size inconsistent with the blob, or the blob cannot be sliced
 *     for upload.
 */
function continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {
    // TODO(andysoto): standardize on internal asserts
    // assert(!(opt_status && opt_status.finalized));
    var status = new ResumableUploadStatus(0, 0);
    if (opt_status) {
        status.current = opt_status.current;
        status.total = opt_status.total;
    }
    else {
        status.current = 0;
        status.total = blob.size();
    }
    if (blob.size() !== status.total) {
        throw serverFileWrongSize();
    }
    var bytesLeft = status.total - status.current;
    var bytesToUpload = bytesLeft;
    if (chunkSize > 0) {
        bytesToUpload = Math.min(bytesToUpload, chunkSize);
    }
    var startByte = status.current;
    var endByte = startByte + bytesToUpload;
    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
    var headers = {
        'X-Goog-Upload-Command': uploadCommand,
        'X-Goog-Upload-Offset': status.current
    };
    var body = blob.slice(startByte, endByte);
    if (body === null) {
        throw cannotSliceBlob();
    }
    function handler(xhr, text) {
        // TODO(andysoto): Verify the MD5 of each uploaded range:
        // the 'x-range-md5' header comes back with status code 308 responses.
        // We'll only be able to bail out though, because you can't re-upload a
        // range that you previously uploaded.
        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
        var newCurrent = status.current + bytesToUpload;
        var size = blob.size();
        var metadata;
        if (uploadStatus === 'final') {
            metadata = metadataHandler(authWrapper, mappings)(xhr, text);
        }
        else {
            metadata = null;
        }
        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
    }
    var method = 'POST';
    var timeout = authWrapper.maxUploadRetryTime();
    var requestInfo = new RequestInfo(url, method, handler, timeout);
    requestInfo.headers = headers;
    requestInfo.body = body.uploadData();
    requestInfo.progressCallback = opt_progressCallback || null;
    requestInfo.errorHandler = sharedErrorHandler(location);
    return requestInfo;
}

//# sourceMappingURL=requests.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/observer.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @struct
 */
var observer_Observer = /** @class */ (function () {
    function Observer(nextOrObserver, opt_error, opt_complete) {
        var asFunctions = isFunction(nextOrObserver) ||
            isDef(opt_error) ||
            isDef(opt_complete);
        if (asFunctions) {
            this.next = nextOrObserver;
            this.error = opt_error || null;
            this.complete = opt_complete || null;
        }
        else {
            var observer = nextOrObserver;
            this.next = observer.next || null;
            this.error = observer.error || null;
            this.complete = observer.complete || null;
        }
    }
    return Observer;
}());


//# sourceMappingURL=observer.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/tasksnapshot.js
var UploadTaskSnapshot = /** @class */ (function () {
    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
        this.bytesTransferred = bytesTransferred;
        this.totalBytes = totalBytes;
        this.state = state;
        this.metadata = metadata;
        this.task = task;
        this.ref = ref;
    }
    Object.defineProperty(UploadTaskSnapshot.prototype, "downloadURL", {
        get: function () {
            if (this.metadata !== null) {
                var urls = this.metadata['downloadURLs'];
                if (urls != null && urls[0] != null) {
                    return urls[0];
                }
                else {
                    return null;
                }
            }
            else {
                return null;
            }
        },
        enumerable: true,
        configurable: true
    });
    return UploadTaskSnapshot;
}());


//# sourceMappingURL=tasksnapshot.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/async.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Method for invoking a callback asynchronously.
 */

/**
 * Returns a function that invokes f with its arguments asynchronously as a
 * microtask, i.e. as soon as possible after the current script returns back
 * into browser code.
 */
function async_async(f) {
    return function () {
        var argsToForward = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            argsToForward[_i] = arguments[_i];
        }
        promise_external_resolve(true).then(function () {
            f.apply(null, argsToForward);
        });
    };
}

//# sourceMappingURL=async.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/task.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Defines types for interacting with blob transfer tasks.
 */












/**
 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
 * upload and manage callbacks for various events.
 */
var task_UploadTask = /** @class */ (function () {
    /**
     * @param ref The firebaseStorage.Reference object this task came
     *     from, untyped to avoid cyclic dependencies.
     * @param blob The blob to upload.
     */
    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {
        if (metadata === void 0) { metadata = null; }
        var _this = this;
        this.transferred_ = 0;
        this.needToFetchStatus_ = false;
        this.needToFetchMetadata_ = false;
        this.observers_ = [];
        this.error_ = null;
        this.uploadUrl_ = null;
        this.request_ = null;
        this.chunkMultiplier_ = 1;
        this.resolve_ = null;
        this.reject_ = null;
        this.ref_ = ref;
        this.authWrapper_ = authWrapper;
        this.location_ = location;
        this.blob_ = blob;
        this.metadata_ = metadata;
        this.mappings_ = mappings;
        this.resumable_ = this.shouldDoResumable_(this.blob_);
        this.state_ = InternalTaskState.RUNNING;
        this.errorHandler_ = function (error) {
            _this.request_ = null;
            _this.chunkMultiplier_ = 1;
            if (error.codeEquals(Code.CANCELED)) {
                _this.needToFetchStatus_ = true;
                _this.completeTransitions_();
            }
            else {
                _this.error_ = error;
                _this.transition_(InternalTaskState.ERROR);
            }
        };
        this.metadataErrorHandler_ = function (error) {
            _this.request_ = null;
            if (error.codeEquals(Code.CANCELED)) {
                _this.completeTransitions_();
            }
            else {
                _this.error_ = error;
                _this.transition_(InternalTaskState.ERROR);
            }
        };
        this.promise_ = make(function (resolve, reject) {
            _this.resolve_ = resolve;
            _this.reject_ = reject;
            _this.start_();
        });
        // Prevent uncaught rejections on the internal promise from bubbling out
        // to the top level with a dummy handler.
        this.promise_.then(null, function () { });
    }
    UploadTask.prototype.makeProgressCallback_ = function () {
        var _this = this;
        var sizeBefore = this.transferred_;
        return function (loaded, total) {
            _this.updateProgress_(sizeBefore + loaded);
        };
    };
    UploadTask.prototype.shouldDoResumable_ = function (blob) {
        return blob.size() > 256 * 1024;
    };
    UploadTask.prototype.start_ = function () {
        if (this.state_ !== InternalTaskState.RUNNING) {
            // This can happen if someone pauses us in a resume callback, for example.
            return;
        }
        if (this.request_ !== null) {
            return;
        }
        if (this.resumable_) {
            if (this.uploadUrl_ === null) {
                this.createResumable_();
            }
            else {
                if (this.needToFetchStatus_) {
                    this.fetchStatus_();
                }
                else {
                    if (this.needToFetchMetadata_) {
                        // Happens if we miss the metadata on upload completion.
                        this.fetchMetadata_();
                    }
                    else {
                        this.continueUpload_();
                    }
                }
            }
        }
        else {
            this.oneShotUpload_();
        }
    };
    UploadTask.prototype.resolveToken_ = function (callback) {
        var _this = this;
        this.authWrapper_.getAuthToken().then(function (authToken) {
            switch (_this.state_) {
                case InternalTaskState.RUNNING:
                    callback(authToken);
                    break;
                case InternalTaskState.CANCELING:
                    _this.transition_(InternalTaskState.CANCELED);
                    break;
                case InternalTaskState.PAUSING:
                    _this.transition_(InternalTaskState.PAUSED);
                    break;
                default:
            }
        });
    };
    // TODO(andysoto): assert false
    UploadTask.prototype.createResumable_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = createRequest;
            createRequest.getPromise().then(function (url) {
                _this.request_ = null;
                _this.uploadUrl_ = url;
                _this.needToFetchStatus_ = false;
                _this.completeTransitions_();
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.fetchStatus_ = function () {
        var _this = this;
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this.uploadUrl_;
        this.resolveToken_(function (authToken) {
            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);
            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = statusRequest;
            statusRequest.getPromise().then(function (status) {
                status = status;
                _this.request_ = null;
                _this.updateProgress_(status.current);
                _this.needToFetchStatus_ = false;
                if (status.finalized) {
                    _this.needToFetchMetadata_ = true;
                }
                _this.completeTransitions_();
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.continueUpload_ = function () {
        var _this = this;
        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;
        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());
        // TODO(andysoto): assert(this.uploadUrl_ !== null);
        var url = this.uploadUrl_;
        this.resolveToken_(function (authToken) {
            var requestInfo;
            try {
                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());
            }
            catch (e) {
                _this.error_ = e;
                _this.transition_(InternalTaskState.ERROR);
                return;
            }
            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = uploadRequest;
            uploadRequest
                .getPromise()
                .then(function (newStatus) {
                _this.increaseMultiplier_();
                _this.request_ = null;
                _this.updateProgress_(newStatus.current);
                if (newStatus.finalized) {
                    _this.metadata_ = newStatus.metadata;
                    _this.transition_(InternalTaskState.SUCCESS);
                }
                else {
                    _this.completeTransitions_();
                }
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.increaseMultiplier_ = function () {
        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;
        // Max chunk size is 32M.
        if (currentSize < 32 * 1024 * 1024) {
            this.chunkMultiplier_ *= 2;
        }
    };
    UploadTask.prototype.fetchMetadata_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);
            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = metadataRequest;
            metadataRequest.getPromise().then(function (metadata) {
                _this.request_ = null;
                _this.metadata_ = metadata;
                _this.transition_(InternalTaskState.SUCCESS);
            }, _this.metadataErrorHandler_);
        });
    };
    UploadTask.prototype.oneShotUpload_ = function () {
        var _this = this;
        this.resolveToken_(function (authToken) {
            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
            _this.request_ = multipartRequest;
            multipartRequest.getPromise().then(function (metadata) {
                _this.request_ = null;
                _this.metadata_ = metadata;
                _this.updateProgress_(_this.blob_.size());
                _this.transition_(InternalTaskState.SUCCESS);
            }, _this.errorHandler_);
        });
    };
    UploadTask.prototype.updateProgress_ = function (transferred) {
        var old = this.transferred_;
        this.transferred_ = transferred;
        // A progress update can make the "transferred" value smaller (e.g. a
        // partial upload not completed by server, after which the "transferred"
        // value may reset to the value at the beginning of the request).
        if (this.transferred_ !== old) {
            this.notifyObservers_();
        }
    };
    UploadTask.prototype.transition_ = function (state) {
        if (this.state_ === state) {
            return;
        }
        switch (state) {
            case InternalTaskState.CANCELING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING);
                this.state_ = state;
                if (this.request_ !== null) {
                    this.request_.cancel();
                }
                break;
            case InternalTaskState.PAUSING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING);
                this.state_ = state;
                if (this.request_ !== null) {
                    this.request_.cancel();
                }
                break;
            case InternalTaskState.RUNNING:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.PAUSING);
                var wasPaused = this.state_ === InternalTaskState.PAUSED;
                this.state_ = state;
                if (wasPaused) {
                    this.notifyObservers_();
                    this.start_();
                }
                break;
            case InternalTaskState.PAUSED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSING);
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.CANCELED:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.PAUSED ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.error_ = error_canceled();
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.ERROR:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.state_ = state;
                this.notifyObservers_();
                break;
            case InternalTaskState.SUCCESS:
                // TODO(andysoto):
                // assert(this.state_ === InternalTaskState.RUNNING ||
                //        this.state_ === InternalTaskState.PAUSING ||
                //        this.state_ === InternalTaskState.CANCELING);
                this.state_ = state;
                this.notifyObservers_();
                break;
        }
    };
    UploadTask.prototype.completeTransitions_ = function () {
        switch (this.state_) {
            case InternalTaskState.PAUSING:
                this.transition_(InternalTaskState.PAUSED);
                break;
            case InternalTaskState.CANCELING:
                this.transition_(InternalTaskState.CANCELED);
                break;
            case InternalTaskState.RUNNING:
                this.start_();
                break;
            default:
                // TODO(andysoto): assert(false);
                break;
        }
    };
    Object.defineProperty(UploadTask.prototype, "snapshot", {
        get: function () {
            var externalState = taskStateFromInternalTaskState(this.state_);
            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds a callback for an event.
     * @param type The type of event to listen for.
     */
    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {
        if (nextOrObserver === void 0) { nextOrObserver = undefined; }
        if (error === void 0) { error = undefined; }
        if (completed === void 0) { completed = undefined; }
        function typeValidator(_p) {
            if (type !== TaskEvent.STATE_CHANGED) {
                throw "Expected one of the event types: [" + TaskEvent.STATE_CHANGED + "].";
            }
        }
        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +
            '`next`, `error`, `complete` properties.';
        var nextValidator = nullFunctionSpec(true).validator;
        var observerValidator = looseObjectSpec(null, true).validator;
        function nextOrObserverValidator(p) {
            try {
                nextValidator(p);
                return;
            }
            catch (e) { }
            try {
                observerValidator(p);
                var anyDefined = isJustDef(p['next']) ||
                    isJustDef(p['error']) ||
                    isJustDef(p['complete']);
                if (!anyDefined) {
                    throw '';
                }
                return;
            }
            catch (e) {
                throw nextOrObserverMessage;
            }
        }
        var specs = [
            stringSpec(typeValidator),
            looseObjectSpec(nextOrObserverValidator, true),
            nullFunctionSpec(true),
            nullFunctionSpec(true)
        ];
        validate('on', specs, arguments);
        var self = this;
        function makeBinder(specs) {
            function binder(nextOrObserver, error, opt_complete) {
                if (specs !== null) {
                    validate('on', specs, arguments);
                }
                var observer = new observer_Observer(nextOrObserver, error, completed);
                self.addObserver_(observer);
                return function () {
                    self.removeObserver_(observer);
                };
            }
            return binder;
        }
        function binderNextOrObserverValidator(p) {
            if (p === null) {
                throw nextOrObserverMessage;
            }
            nextOrObserverValidator(p);
        }
        var binderSpecs = [
            looseObjectSpec(binderNextOrObserverValidator),
            nullFunctionSpec(true),
            nullFunctionSpec(true)
        ];
        var typeOnly = !(isJustDef(nextOrObserver) ||
            isJustDef(error) ||
            isJustDef(completed));
        if (typeOnly) {
            return makeBinder(binderSpecs);
        }
        else {
            return makeBinder(null)(nextOrObserver, error, completed);
        }
    };
    /**
     * This object behaves like a Promise, and resolves with its snapshot data
     * when the upload completes.
     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.
     * @param onRejected The rejection callback.
     */
    UploadTask.prototype.then = function (onFulfilled, onRejected) {
        // These casts are needed so that TypeScript can infer the types of the
        // resulting Promise.
        return this.promise_.then(onFulfilled, onRejected);
    };
    /**
     * Equivalent to calling `then(null, onRejected)`.
     */
    UploadTask.prototype.catch = function (onRejected) {
        return this.then(null, onRejected);
    };
    /**
     * Adds the given observer.
     */
    UploadTask.prototype.addObserver_ = function (observer) {
        this.observers_.push(observer);
        this.notifyObserver_(observer);
    };
    /**
     * Removes the given observer.
     */
    UploadTask.prototype.removeObserver_ = function (observer) {
        remove(this.observers_, observer);
    };
    UploadTask.prototype.notifyObservers_ = function () {
        var _this = this;
        this.finishPromise_();
        var observers = array_clone(this.observers_);
        observers.forEach(function (observer) {
            _this.notifyObserver_(observer);
        });
    };
    UploadTask.prototype.finishPromise_ = function () {
        if (this.resolve_ !== null) {
            var triggered = true;
            switch (taskStateFromInternalTaskState(this.state_)) {
                case TaskState.SUCCESS:
                    async_async(this.resolve_.bind(null, this.snapshot))();
                    break;
                case TaskState.CANCELED:
                case TaskState.ERROR:
                    var toCall = this.reject_;
                    async_async(toCall.bind(null, this.error_))();
                    break;
                default:
                    triggered = false;
                    break;
            }
            if (triggered) {
                this.resolve_ = null;
                this.reject_ = null;
            }
        }
    };
    UploadTask.prototype.notifyObserver_ = function (observer) {
        var externalState = taskStateFromInternalTaskState(this.state_);
        switch (externalState) {
            case TaskState.RUNNING:
            case TaskState.PAUSED:
                if (observer.next !== null) {
                    async_async(observer.next.bind(observer, this.snapshot))();
                }
                break;
            case TaskState.SUCCESS:
                if (observer.complete !== null) {
                    async_async(observer.complete.bind(observer))();
                }
                break;
            case TaskState.CANCELED:
            case TaskState.ERROR:
                if (observer.error !== null) {
                    async_async(observer.error.bind(observer, this.error_))();
                }
                break;
            default:
                // TODO(andysoto): assert(false);
                if (observer.error !== null) {
                    async_async(observer.error.bind(observer, this.error_))();
                }
        }
    };
    /**
     * Resumes a paused task. Has no effect on a currently running or failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.resume = function () {
        validate('resume', [], arguments);
        var valid = this.state_ === InternalTaskState.PAUSED ||
            this.state_ === InternalTaskState.PAUSING;
        if (valid) {
            this.transition_(InternalTaskState.RUNNING);
        }
        return valid;
    };
    /**
     * Pauses a currently running task. Has no effect on a paused or failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.pause = function () {
        validate('pause', [], arguments);
        var valid = this.state_ === InternalTaskState.RUNNING;
        if (valid) {
            this.transition_(InternalTaskState.PAUSING);
        }
        return valid;
    };
    /**
     * Cancels a currently running or paused task. Has no effect on a complete or
     * failed task.
     * @return True if the operation took effect, false if ignored.
     */
    UploadTask.prototype.cancel = function () {
        validate('cancel', [], arguments);
        var valid = this.state_ === InternalTaskState.RUNNING ||
            this.state_ === InternalTaskState.PAUSING;
        if (valid) {
            this.transition_(InternalTaskState.CANCELING);
        }
        return valid;
    };
    return UploadTask;
}());


//# sourceMappingURL=task.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/reference.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Defines the Firebase Storage Reference class.
 */












/**
 * Provides methods to interact with a bucket in the Firebase Storage service.
 * @param location An fbs.location, or the URL at
 *     which to base this object, in one of the following forms:
 *         gs://<bucket>/<object-path>
 *         http[s]://firebasestorage.googleapis.com/
 *                     <api-version>/b/<bucket>/o/<object-path>
 *     Any query or fragment strings will be ignored in the http[s]
 *     format. If no value is passed, the storage object will use a URL based on
 *     the project ID of the base firebase.App instance.
 */
var reference_Reference = /** @class */ (function () {
    function Reference(authWrapper, location) {
        this.authWrapper = authWrapper;
        if (location instanceof location_Location) {
            this.location = location;
        }
        else {
            this.location = location_Location.makeFromUrl(location);
        }
    }
    /**
     * @return The URL for the bucket and path this object references,
     *     in the form gs://<bucket>/<object-path>
     * @override
     */
    Reference.prototype.toString = function () {
        validate('toString', [], arguments);
        return 'gs://' + this.location.bucket + '/' + this.location.path;
    };
    Reference.prototype.newRef = function (authWrapper, location) {
        return new Reference(authWrapper, location);
    };
    Reference.prototype.mappings = function () {
        return getMappings();
    };
    /**
     * @return A reference to the object obtained by
     *     appending childPath, removing any duplicate, beginning, or trailing
     *     slashes.
     */
    Reference.prototype.child = function (childPath) {
        validate('child', [stringSpec()], arguments);
        var newPath = child(this.location.path, childPath);
        var location = new location_Location(this.location.bucket, newPath);
        return this.newRef(this.authWrapper, location);
    };
    Object.defineProperty(Reference.prototype, "parent", {
        /**
         * @return A reference to the parent of the
         *     current object, or null if the current object is the root.
         */
        get: function () {
            var newPath = path_parent(this.location.path);
            if (newPath === null) {
                return null;
            }
            var location = new location_Location(this.location.bucket, newPath);
            return this.newRef(this.authWrapper, location);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "root", {
        /**
         * @return An reference to the root of this
         *     object's bucket.
         */
        get: function () {
            var location = new location_Location(this.location.bucket, '');
            return this.newRef(this.authWrapper, location);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "bucket", {
        get: function () {
            return this.location.bucket;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "fullPath", {
        get: function () {
            return this.location.path;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "name", {
        get: function () {
            return lastComponent(this.location.path);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Reference.prototype, "storage", {
        get: function () {
            return this.authWrapper.service();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Uploads a blob to this object's location.
     * @param data The blob to upload.
     * @return An UploadTask that lets you control and
     *     observe the upload.
     */
    Reference.prototype.put = function (data, metadata) {
        if (metadata === void 0) { metadata = null; }
        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);
        this.throwIfRoot_('put');
        return new task_UploadTask(this, this.authWrapper, this.location, this.mappings(), new blob_FbsBlob(data), metadata);
    };
    /**
     * Uploads a string to this object's location.
     * @param string The string to upload.
     * @param opt_format The format of the string to upload.
     * @return An UploadTask that lets you control and
     *     observe the upload.
     */
    Reference.prototype.putString = function (string, format, opt_metadata) {
        if (format === void 0) { format = StringFormat.RAW; }
        validate('putString', [
            stringSpec(),
            stringSpec(formatValidator, true),
            metadataSpec(true)
        ], arguments);
        this.throwIfRoot_('putString');
        var data = dataFromString(format, string);
        var metadata = clone(opt_metadata);
        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {
            metadata['contentType'] = data.contentType;
        }
        return new task_UploadTask(this, this.authWrapper, this.location, this.mappings(), new blob_FbsBlob(data.data, true), metadata);
    };
    /**
     * Deletes the object at this location.
     * @return A promise that resolves if the deletion succeeds.
     */
    Reference.prototype.delete = function () {
        validate('delete', [], arguments);
        this.throwIfRoot_('delete');
        var self = this;
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = deleteObject(self.authWrapper, self.location);
            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     *     A promise that resolves with the metadata for this object. If this
     *     object doesn't exist or metadata cannot be retreived, the promise is
     *     rejected.
     */
    Reference.prototype.getMetadata = function () {
        validate('getMetadata', [], arguments);
        this.throwIfRoot_('getMetadata');
        var self = this;
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());
            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     * Updates the metadata for this object.
     * @param metadata The new metadata for the object.
     *     Only values that have been explicitly set will be changed. Explicitly
     *     setting a value to null will remove the metadata.
     * @return A promise that resolves
     *     with the new metadata for this object.
     *     @see firebaseStorage.Reference.prototype.getMetadata
     */
    Reference.prototype.updateMetadata = function (metadata) {
        validate('updateMetadata', [metadataSpec()], arguments);
        this.throwIfRoot_('updateMetadata');
        var self = this;
        return this.authWrapper.getAuthToken().then(function (authToken) {
            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());
            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
        });
    };
    /**
     * @return A promise that resolves with the download
     *     URL for this object.
     */
    Reference.prototype.getDownloadURL = function () {
        validate('getDownloadURL', [], arguments);
        this.throwIfRoot_('getDownloadURL');
        return this.getMetadata().then(function (metadata) {
            var url = metadata['downloadURLs'][0];
            if (isDef(url)) {
                return url;
            }
            else {
                throw noDownloadURL();
            }
        });
    };
    Reference.prototype.throwIfRoot_ = function (name) {
        if (this.location.path === '') {
            throw invalidRootOperation(name);
        }
    };
    return Reference;
}());


//# sourceMappingURL=reference.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/failrequest.js

/**
 * A request whose promise always fails.
 * @struct
 * @template T
 */
var failrequest_FailRequest = /** @class */ (function () {
    function FailRequest(error) {
        this.promise_ = promise_external_reject(error);
    }
    /** @inheritDoc */
    FailRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    FailRequest.prototype.cancel = function (appDelete) {
        if (appDelete === void 0) { appDelete = false; }
    };
    return FailRequest;
}());


//# sourceMappingURL=failrequest.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/requestmap.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @struct
 */
var requestmap_RequestMap = /** @class */ (function () {
    function RequestMap() {
        this.map_ = {};
        this.id_ = minSafeInteger;
    }
    /**
     * Registers the given request with this map.
     * The request is unregistered when it completes.
     * @param r The request to register.
     */
    RequestMap.prototype.addRequest = function (r) {
        var id = this.id_;
        this.id_++;
        this.map_[id] = r;
        var self = this;
        function unmap() {
            delete self.map_[id];
        }
        r.getPromise().then(unmap, unmap);
    };
    /**
     * Cancels all registered requests.
     */
    RequestMap.prototype.clear = function () {
        forEach(this.map_, function (key, val) {
            if (val) {
                val.cancel(true);
            }
        });
        this.map_ = {};
    };
    return RequestMap;
}());


//# sourceMappingURL=requestmap.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/authwrapper.js







/**
 * @param app If null, getAuthToken always resolves with null.
 * @param service The storage service associated with this auth wrapper.
 *     Untyped to avoid circular type dependencies.
 * @struct
 */
var authwrapper_AuthWrapper = /** @class */ (function () {
    function AuthWrapper(app, maker, requestMaker, service, pool) {
        this.bucket_ = null;
        this.deleted_ = false;
        this.app_ = app;
        if (this.app_ !== null) {
            var options = this.app_.options;
            if (isDef(options)) {
                this.bucket_ = AuthWrapper.extractBucket_(options);
            }
        }
        this.storageRefMaker_ = maker;
        this.requestMaker_ = requestMaker;
        this.pool_ = pool;
        this.service_ = service;
        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;
        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;
        this.requestMap_ = new requestmap_RequestMap();
    }
    AuthWrapper.extractBucket_ = function (config) {
        var bucketString = config[configOption] || null;
        if (bucketString == null) {
            return null;
        }
        var loc = location_Location.makeFromBucketSpec(bucketString);
        return loc.bucket;
    };
    AuthWrapper.prototype.getAuthToken = function () {
        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs
        // (b/28673818).
        if (this.app_ !== null &&
            isDef(this.app_.INTERNAL) &&
            isDef(this.app_.INTERNAL.getToken)) {
            return this.app_.INTERNAL.getToken().then(function (response) {
                if (response !== null) {
                    return response.accessToken;
                }
                else {
                    return null;
                }
            }, function (_error) {
                return null;
            });
        }
        else {
            return promise_external_resolve(null);
        }
    };
    AuthWrapper.prototype.bucket = function () {
        if (this.deleted_) {
            throw appDeleted();
        }
        else {
            return this.bucket_;
        }
    };
    /**
     * The service associated with this auth wrapper. Untyped to avoid circular
     * type dependencies.
     */
    AuthWrapper.prototype.service = function () {
        return this.service_;
    };
    /**
     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper
     * at the given Location.
     * @param loc The Location.
     * @return Actually a firebaseStorage.Reference, typing not allowed
     *     because of circular dependency problems.
     */
    AuthWrapper.prototype.makeStorageReference = function (loc) {
        return this.storageRefMaker_(this, loc);
    };
    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {
        if (!this.deleted_) {
            var request = this.requestMaker_(requestInfo, authToken, this.pool_);
            this.requestMap_.addRequest(request);
            return request;
        }
        else {
            return new failrequest_FailRequest(appDeleted());
        }
    };
    /**
     * Stop running requests and prevent more from being created.
     */
    AuthWrapper.prototype.deleteApp = function () {
        this.deleted_ = true;
        this.app_ = null;
        this.requestMap_.clear();
    };
    AuthWrapper.prototype.maxUploadRetryTime = function () {
        return this.maxUploadRetryTime_;
    };
    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {
        this.maxUploadRetryTime_ = time;
    };
    AuthWrapper.prototype.maxOperationRetryTime = function () {
        return this.maxOperationRetryTime_;
    };
    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {
        this.maxOperationRetryTime_ = time;
    };
    return AuthWrapper;
}());


//# sourceMappingURL=authwrapper.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/backoff.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @param f May be invoked
 *     before the function returns.
 * @param callback Get all the arguments passed to the function
 *     passed to f, including the initial boolean.
 */
function start(f, callback, timeout) {
    // TODO(andysoto): make this code cleaner (probably refactor into an actual
    // type instead of a bunch of functions with state shared in the closure)
    var waitSeconds = 1;
    // Would type this as "number" but that doesn't work for Node so ¯\_(ツ)_/¯
    var timeoutId = null;
    var hitTimeout = false;
    var cancelState = 0;
    function canceled() {
        return cancelState === 2;
    }
    var triggeredCallback = false;
    function triggerCallback() {
        if (!triggeredCallback) {
            triggeredCallback = true;
            callback.apply(null, arguments);
        }
    }
    function callWithDelay(millis) {
        timeoutId = setTimeout(function () {
            timeoutId = null;
            f(handler, canceled());
        }, millis);
    }
    function handler(success) {
        var var_args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            var_args[_i - 1] = arguments[_i];
        }
        if (triggeredCallback) {
            return;
        }
        if (success) {
            triggerCallback.apply(null, arguments);
            return;
        }
        var mustStop = canceled() || hitTimeout;
        if (mustStop) {
            triggerCallback.apply(null, arguments);
            return;
        }
        if (waitSeconds < 64) {
            /* TODO(andysoto): don't back off so quickly if we know we're offline. */
            waitSeconds *= 2;
        }
        var waitMillis;
        if (cancelState === 1) {
            cancelState = 2;
            waitMillis = 0;
        }
        else {
            waitMillis = (waitSeconds + Math.random()) * 1000;
        }
        callWithDelay(waitMillis);
    }
    var stopped = false;
    function stop(wasTimeout) {
        if (stopped) {
            return;
        }
        stopped = true;
        if (triggeredCallback) {
            return;
        }
        if (timeoutId !== null) {
            if (!wasTimeout) {
                cancelState = 2;
            }
            clearTimeout(timeoutId);
            callWithDelay(0);
        }
        else {
            if (!wasTimeout) {
                cancelState = 1;
            }
        }
    }
    callWithDelay(0);
    setTimeout(function () {
        hitTimeout = true;
        stop(true);
    }, timeout);
    return stop;
}
/**
 * Stops the retry loop from repeating.
 * If the function is currently "in between" retries, it is invoked immediately
 * with the second parameter as "true". Otherwise, it will be invoked once more
 * after the current invocation finishes iff the current invocation would have
 * triggered another retry.
 */
function stop(id) {
    id(false);
}

//# sourceMappingURL=backoff.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/implementation/request.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Defines methods used to actually send HTTP requests from
 * abstract representations.
 */









/**
 * @struct
 * @template T
 */
var request_NetworkRequest = /** @class */ (function () {
    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
        this.pendingXhr_ = null;
        this.backoffId_ = null;
        this.resolve_ = null;
        this.reject_ = null;
        this.canceled_ = false;
        this.appDelete_ = false;
        this.url_ = url;
        this.method_ = method;
        this.headers_ = headers;
        this.body_ = body;
        this.successCodes_ = successCodes.slice();
        this.additionalRetryCodes_ = additionalRetryCodes.slice();
        this.callback_ = callback;
        this.errorCallback_ = errorCallback;
        this.progressCallback_ = progressCallback;
        this.timeout_ = timeout;
        this.pool_ = pool;
        var self = this;
        this.promise_ = make(function (resolve, reject) {
            self.resolve_ = resolve;
            self.reject_ = reject;
            self.start_();
        });
    }
    /**
     * Actually starts the retry loop.
     */
    NetworkRequest.prototype.start_ = function () {
        var self = this;
        function doTheRequest(backoffCallback, canceled) {
            if (canceled) {
                backoffCallback(false, new RequestEndStatus(false, null, true));
                return;
            }
            var xhr = self.pool_.createXhrIo();
            self.pendingXhr_ = xhr;
            function progressListener(progressEvent) {
                var loaded = progressEvent.loaded;
                var total = progressEvent.lengthComputable ? progressEvent.total : -1;
                if (self.progressCallback_ !== null) {
                    self.progressCallback_(loaded, total);
                }
            }
            if (self.progressCallback_ !== null) {
                xhr.addUploadProgressListener(progressListener);
            }
            xhr
                .send(self.url_, self.method_, self.body_, self.headers_)
                .then(function (xhr) {
                if (self.progressCallback_ !== null) {
                    xhr.removeUploadProgressListener(progressListener);
                }
                self.pendingXhr_ = null;
                xhr = xhr;
                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;
                var status = xhr.getStatus();
                if (!hitServer || self.isRetryStatusCode_(status)) {
                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;
                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
                    return;
                }
                var successCode = array_contains(self.successCodes_, status);
                backoffCallback(true, new RequestEndStatus(successCode, xhr));
            });
        }
        /**
         * @param requestWentThrough True if the request eventually went
         *     through, false if it hit the retry limit or was canceled.
         */
        function backoffDone(requestWentThrough, status) {
            var resolve = self.resolve_;
            var reject = self.reject_;
            var xhr = status.xhr;
            if (status.wasSuccessCode) {
                try {
                    var result = self.callback_(xhr, xhr.getResponseText());
                    if (isJustDef(result)) {
                        resolve(result);
                    }
                    else {
                        resolve();
                    }
                }
                catch (e) {
                    reject(e);
                }
            }
            else {
                if (xhr !== null) {
                    var err = unknown();
                    err.setServerResponseProp(xhr.getResponseText());
                    if (self.errorCallback_) {
                        reject(self.errorCallback_(xhr, err));
                    }
                    else {
                        reject(err);
                    }
                }
                else {
                    if (status.canceled) {
                        var err = self.appDelete_
                            ? appDeleted()
                            : error_canceled();
                        reject(err);
                    }
                    else {
                        var err = retryLimitExceeded();
                        reject(err);
                    }
                }
            }
        }
        if (this.canceled_) {
            backoffDone(false, new RequestEndStatus(false, null, true));
        }
        else {
            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);
        }
    };
    /** @inheritDoc */
    NetworkRequest.prototype.getPromise = function () {
        return this.promise_;
    };
    /** @inheritDoc */
    NetworkRequest.prototype.cancel = function (appDelete) {
        this.canceled_ = true;
        this.appDelete_ = appDelete || false;
        if (this.backoffId_ !== null) {
            stop(this.backoffId_);
        }
        if (this.pendingXhr_ !== null) {
            this.pendingXhr_.abort();
        }
    };
    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {
        // The codes for which to retry came from this page:
        // https://cloud.google.com/storage/docs/exponential-backoff
        var isFiveHundredCode = status >= 500 && status < 600;
        var extraRetryCodes = [
            // Request Timeout: web server didn't receive full request in time.
            408,
            // Too Many Requests: you're getting rate-limited, basically.
            429
        ];
        var isExtraRetryCode = array_contains(extraRetryCodes, status);
        var isRequestSpecificRetryCode = array_contains(this.additionalRetryCodes_, status);
        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;
    };
    return NetworkRequest;
}());
/**
 * A collection of information about the result of a network request.
 * @param opt_canceled Defaults to false.
 * @struct
 */
var RequestEndStatus = /** @class */ (function () {
    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {
        this.wasSuccessCode = wasSuccessCode;
        this.xhr = xhr;
        this.canceled = !!opt_canceled;
    }
    return RequestEndStatus;
}());

function addAuthHeader_(headers, authToken) {
    if (authToken !== null && authToken.length > 0) {
        headers['Authorization'] = 'Firebase ' + authToken;
    }
}
function addVersionHeader_(headers) {
    var number = typeof esm["default"] !== 'undefined' ? esm["default"].SDK_VERSION : 'AppManager';
    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;
}
/**
 * @template T
 */
function makeRequest(requestInfo, authToken, pool) {
    var queryPart = makeQueryString(requestInfo.urlParams);
    var url = requestInfo.url + queryPart;
    var headers = clone(requestInfo.headers);
    addAuthHeader_(headers, authToken);
    addVersionHeader_(headers);
    return new request_NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
}

//# sourceMappingURL=request.js.map

// CONCATENATED MODULE: ../storage/dist/esm/src/service.js
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






/**
 * A service that provides firebaseStorage.Reference instances.
 * @param opt_url gs:// url to a custom Storage Bucket
 *
 * @struct
 */
var service_Service = /** @class */ (function () {
    function Service(app, pool, url) {
        this.bucket_ = null;
        function maker(authWrapper, loc) {
            return new reference_Reference(authWrapper, loc);
        }
        this.authWrapper_ = new authwrapper_AuthWrapper(app, maker, makeRequest, this, pool);
        this.app_ = app;
        if (url != null) {
            this.bucket_ = location_Location.makeFromBucketSpec(url);
        }
        else {
            var authWrapperBucket = this.authWrapper_.bucket();
            if (authWrapperBucket != null) {
                this.bucket_ = new location_Location(authWrapperBucket, '');
            }
        }
        this.internals_ = new service_ServiceInternals(this);
    }
    /**
     * Returns a firebaseStorage.Reference for the given path in the default
     * bucket.
     */
    Service.prototype.ref = function (path) {
        function validator(path) {
            if (/^[A-Za-z]+:\/\//.test(path)) {
                throw 'Expected child path but got a URL, use refFromURL instead.';
            }
        }
        validate('ref', [stringSpec(validator, true)], arguments);
        if (this.bucket_ == null) {
            throw new Error('No Storage Bucket defined in Firebase Options.');
        }
        var ref = new reference_Reference(this.authWrapper_, this.bucket_);
        if (path != null) {
            return ref.child(path);
        }
        else {
            return ref;
        }
    };
    /**
     * Returns a firebaseStorage.Reference object for the given absolute URL,
     * which must be a gs:// or http[s]:// URL.
     */
    Service.prototype.refFromURL = function (url) {
        function validator(p) {
            if (!/^[A-Za-z]+:\/\//.test(p)) {
                throw 'Expected full URL but got a child path, use ref instead.';
            }
            try {
                location_Location.makeFromUrl(p);
            }
            catch (e) {
                throw 'Expected valid full URL but got an invalid one.';
            }
        }
        validate('refFromURL', [stringSpec(validator, false)], arguments);
        return new reference_Reference(this.authWrapper_, url);
    };
    Object.defineProperty(Service.prototype, "maxUploadRetryTime", {
        get: function () {
            return this.authWrapper_.maxUploadRetryTime();
        },
        enumerable: true,
        configurable: true
    });
    Service.prototype.setMaxUploadRetryTime = function (time) {
        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);
        this.authWrapper_.setMaxUploadRetryTime(time);
    };
    Object.defineProperty(Service.prototype, "maxOperationRetryTime", {
        get: function () {
            return this.authWrapper_.maxOperationRetryTime();
        },
        enumerable: true,
        configurable: true
    });
    Service.prototype.setMaxOperationRetryTime = function (time) {
        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);
        this.authWrapper_.setMaxOperationRetryTime(time);
    };
    Object.defineProperty(Service.prototype, "app", {
        get: function () {
            return this.app_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Service.prototype, "INTERNAL", {
        get: function () {
            return this.internals_;
        },
        enumerable: true,
        configurable: true
    });
    return Service;
}());

/**
 * @struct
 */
var service_ServiceInternals = /** @class */ (function () {
    function ServiceInternals(service) {
        this.service_ = service;
    }
    /**
     * Called when the associated app is deleted.
     * @see {!fbs.AuthWrapper.prototype.deleteApp}
     */
    ServiceInternals.prototype.delete = function () {
        this.service_.authWrapper_.deleteApp();
        return promise_external_resolve(undefined);
    };
    return ServiceInternals;
}());


//# sourceMappingURL=service.js.map

// CONCATENATED MODULE: ../storage/dist/esm/index.js
/* harmony export (immutable) */ __webpack_exports__["registerStorage"] = registerStorage;
/**
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







/**
 * Type constant for Firebase Storage.
 */
var STORAGE_TYPE = 'storage';
function factory(app, unused, opt_url) {
    return new service_Service(app, new xhriopool_XhrIoPool(), opt_url);
}
function registerStorage(instance) {
    var namespaceExports = {
        // no-inline
        TaskState: TaskState,
        TaskEvent: TaskEvent,
        StringFormat: StringFormat,
        Storage: service_Service,
        Reference: reference_Reference
    };
    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, 
    // Allow multiple storage instances per app.
    true);
}
registerStorage(esm["default"]);

//# sourceMappingURL=index.js.map


/***/ })

},[118]);
        } catch(error) {
          throw new Error(
            'Cannot instantiate firebase-storage.js - ' +
            'be sure to load firebase-app.js first.'
          )
        }
//# sourceMappingURL=firebase-storage.js.map
//# sourceMappingURL=firebase.js.map
